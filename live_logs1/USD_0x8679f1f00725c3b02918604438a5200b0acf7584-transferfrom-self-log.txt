This is Ultimate 0.1.24-f1553f5-m
[2020-11-28 09:40:24,270 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-28 09:40:24,272 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-28 09:40:24,283 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-28 09:40:24,283 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-28 09:40:24,284 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-28 09:40:24,285 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-28 09:40:24,286 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-28 09:40:24,288 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-28 09:40:24,289 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-28 09:40:24,289 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-28 09:40:24,290 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-28 09:40:24,290 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-28 09:40:24,291 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-28 09:40:24,292 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-28 09:40:24,293 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-28 09:40:24,293 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-28 09:40:24,294 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-28 09:40:24,296 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-28 09:40:24,297 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-28 09:40:24,298 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-28 09:40:24,298 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-28 09:40:24,300 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-28 09:40:24,300 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-28 09:40:24,300 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-28 09:40:24,301 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-28 09:40:24,301 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-28 09:40:24,302 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-28 09:40:24,302 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-28 09:40:24,302 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-28 09:40:24,303 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-28 09:40:24,303 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-28 09:40:24,304 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-28 09:40:24,304 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-28 09:40:24,305 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-28 09:40:24,305 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-28 09:40:24,306 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-28 09:40:24,306 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-28 09:40:24,306 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-28 09:40:24,307 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-28 09:40:24,307 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-28 09:40:24,307 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-28 09:40:24,315 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-28 09:40:24,315 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-28 09:40:24,316 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-28 09:40:24,316 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-28 09:40:24,316 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-28 09:40:24,317 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-28 09:40:24,317 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-28 09:40:24,317 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-28 09:40:24,318 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-28 09:40:24,318 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-28 09:40:24,319 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-28 09:40:24,319 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-28 09:40:24,319 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-28 09:40:24,319 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-28 09:40:24,343 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-28 09:40:24,358 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-28 09:40:24,362 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-28 09:40:24,365 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-28 09:40:24,365 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-28 09:40:24,367 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl
[2020-11-28 09:40:24,367 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl'
[2020-11-28 09:40:24,446 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-28 09:40:24,447 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-28 09:40:24,447 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-28 09:40:24,447 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-28 09:40:24,447 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-28 09:40:24,464 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,466 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,497 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,498 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,515 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,525 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,531 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,539 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-28 09:40:24,540 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-28 09:40:24,540 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-28 09:40:24,542 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-28 09:40:24,547 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/1) ...
[2020-11-28 09:40:24,569 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(USD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_USD[this][from] && value <= _allowed_USD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][from] >= 0 &&  _balances_USD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_USD[this][from][msg.sender] >= 0 && _allowed_USD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transferFrom(from, to, value), return == true && _allowed_USD[this][from][msg.sender] == old(_allowed_USD[this][from][msg.sender]) - value && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:40:24,575 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(USD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_USD[this][from] && value <= _allowed_USD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][from] >= 0 &&  _balances_USD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_USD[this][from][msg.sender] >= 0 && _allowed_USD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transferFrom(from, to, value), return == true && _allowed_USD[this][from][msg.sender] == old(_allowed_USD[this][from][msg.sender]) - value && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:40:24,582 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(USD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_USD[this][from] && value <= _allowed_USD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][from] >= 0 &&  _balances_USD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_USD[this][from][msg.sender] >= 0 && _allowed_USD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transferFrom(from, to, value), return == true && _allowed_USD[this][from][msg.sender] == old(_allowed_USD[this][from][msg.sender]) - value && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:40:24,592 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s499 || p2!=msg.sender ) && _from_s499==_to_s499 ) && _value_s499<=_balances_USD[this][_from_s499] ) && _value_s499<=_allowed_USD[this][_from_s499][msg.sender] ) && _value_s499>=0 ) && _value_s499<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][_to_s499]>=0 ) && _balances_USD[this][_to_s499]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][_from_s499]>=0 ) && _balances_USD[this][_from_s499]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_USD[this][_from_s499][msg.sender]>=0 ) && _allowed_USD[this][_from_s499][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>],IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-28 09:40:24,596 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_USD[this][_from_s499][msg.sender]==( ( old(_allowed_USD[this][_from_s499][msg.sender]) ) - _value_s499 ) ) && totalSupply_USD[this]==( old(totalSupply_USD[this]) ) ) && _balances_USD[this]==( old(_balances_USD[this]) ) ) && _allowed_USD[this][p1][p2]==( old(_allowed_USD[this][p1][p2]) ) ) && name_USD[this]==( old(name_USD[this]) ) ) && symbol_USD[this]==( old(symbol_USD[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_USD>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]],IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_USD>]]]]]]
[2020-11-28 09:40:24,602 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(USD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_USD[this][from] && value <= _allowed_USD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][from] >= 0 &&  _balances_USD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_USD[this][from][msg.sender] >= 0 && _allowed_USD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transferFrom(from, to, value), return == true && _allowed_USD[this][from][msg.sender] == old(_allowed_USD[this][from][msg.sender]) - value && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:40:24,602 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_USD0) ==> ( <>AP(success_transferFrom_USD0) ) ) )
Executed UtopiaSpecLang
[2020-11-28 09:40:24,610 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:24 PropertyContainer
[2020-11-28 09:40:24,610 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-28 09:40:24,610 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-28 09:40:24,610 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-28 09:40:24,610 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-28 09:40:24,611 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/2) ...
[2020-11-28 09:40:24,612 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-28 09:40:24,612 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-28 09:40:24,624 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:24" (2/2) ...
[2020-11-28 09:40:24,624 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-28 09:40:24,624 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-28 09:40:24,624 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-28 09:40:24,624 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-28 09:40:24,625 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/2) ...
[2020-11-28 09:40:24,678 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-28 09:40:24,678 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-28 09:40:24,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-28 09:40:24,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-28 09:40:24,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-28 09:40:24,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-28 09:40:24,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-28 09:40:24,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-28 09:40:24,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD
[2020-11-28 09:40:24,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD
[2020-11-28 09:40:24,680 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD
[2020-11-28 09:40:24,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD
[2020-11-28 09:40:24,681 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD
[2020-11-28 09:40:24,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD
[2020-11-28 09:40:24,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD
[2020-11-28 09:40:24,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD
[2020-11-28 09:40:24,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD
[2020-11-28 09:40:24,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-28 09:40:24,682 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USD
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,683 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-28 09:40:24,684 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:40:24,685 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__success
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__fail
[2020-11-28 09:40:24,686 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__success
[2020-11-28 09:40:24,687 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__fail
[2020-11-28 09:40:24,687 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-28 09:40:24,687 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-28 09:40:24,687 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-28 09:40:24,687 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:40:24,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:40:24,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__success
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__fail
[2020-11-28 09:40:24,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-28 09:40:24,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USD
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-28 09:40:24,692 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-28 09:40:24,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-28 09:40:24,887 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:25,099 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:25,099 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:25,099 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:25,285 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-28 09:40:25,286 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-28 09:40:25,287 INFO  L202        PluginConnector]: Adding new model USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:25 BoogieIcfgContainer
[2020-11-28 09:40:25,287 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:24" (2/2) ...
[2020-11-28 09:40:25,287 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-28 09:40:25,288 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6caf2d7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:25, skipping insertion in model container
[2020-11-28 09:40:25,288 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-28 09:40:25,288 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-28 09:40:25,288 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-28 09:40:25,289 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-28 09:40:25,290 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/3) ...
[2020-11-28 09:40:25,290 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@31d1508b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:25, skipping insertion in model container
[2020-11-28 09:40:25,290 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:24" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-28 09:40:25,324 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:25 NWAContainer
[2020-11-28 09:40:25,324 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-28 09:40:25,324 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-28 09:40:25,324 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-28 09:40:25,325 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-28 09:40:25,326 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:25" (3/4) ...
[2020-11-28 09:40:25,326 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2c785456 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:25, skipping insertion in model container
[2020-11-28 09:40:25,327 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:25" (4/4) ...
[2020-11-28 09:40:25,329 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-28 09:40:25,332 INFO  L110   BuchiProductObserver]: Initial RCFG 1236 locations, 1608 edges
[2020-11-28 09:40:25,333 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-28 09:40:25,342 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-28 09:40:26,423 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-28 09:40:26,427 INFO  L110   BuchiProductObserver]: BuchiProgram size 2978 locations, 5225 edges
[2020-11-28 09:40:26,427 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:26 BoogieIcfgContainer
[2020-11-28 09:40:26,427 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-28 09:40:26,428 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-28 09:40:26,428 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-28 09:40:26,429 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-28 09:40:26,430 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:26" (1/1) ...
[2020-11-28 09:40:26,504 INFO  L313           BlockEncoder]: Initial Icfg 2978 locations, 5225 edges
[2020-11-28 09:40:26,505 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-28 09:40:26,505 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-28 09:40:26,505 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-28 09:40:26,506 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-28 09:40:26,515 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 9 locations because of local infeasibility
[2020-11-28 09:40:26,522 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-28 09:40:26,533 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-28 09:40:26,537 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-28 09:40:26,539 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-28 09:40:26,540 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-28 09:40:26,543 INFO  L313           BlockEncoder]: Encoded RCFG 2910 locations, 5035 edges
[2020-11-28 09:40:26,544 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:40:26 BasicIcfg
[2020-11-28 09:40:26,544 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-28 09:40:26,544 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-28 09:40:26,544 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-28 09:40:26,546 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-28 09:40:26,546 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,546 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:24" (1/6) ...
[2020-11-28 09:40:26,548 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2457dc38 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:26, skipping insertion in model container
[2020-11-28 09:40:26,548 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,548 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:24" (2/6) ...
[2020-11-28 09:40:26,548 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2457dc38 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:26, skipping insertion in model container
[2020-11-28 09:40:26,548 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,548 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:25" (3/6) ...
[2020-11-28 09:40:26,577 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2457dc38 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:40:26, skipping insertion in model container
[2020-11-28 09:40:26,578 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,578 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:25" (4/6) ...
[2020-11-28 09:40:26,578 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2457dc38 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:26, skipping insertion in model container
[2020-11-28 09:40:26,578 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,578 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:26" (5/6) ...
[2020-11-28 09:40:26,579 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2457dc38 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 28.11 09:40:26, skipping insertion in model container
[2020-11-28 09:40:26,579 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:26,579 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:40:26" (6/6) ...
[2020-11-28 09:40:26,581 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transferfrom-self.bpl_BEv2
[2020-11-28 09:40:26,640 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-28 09:40:26,640 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-28 09:40:26,640 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-28 09:40:26,640 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-28 09:40:26,640 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-28 09:40:26,641 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-28 09:40:26,641 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-28 09:40:26,641 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-28 09:40:26,641 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-28 09:40:26,666 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states.
[2020-11-28 09:40:26,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:26,711 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:26,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:26,717 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:26,718 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:26,718 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-28 09:40:26,718 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states.
[2020-11-28 09:40:26,730 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:26,730 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:26,730 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:26,732 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:26,732 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_USD0 := false;
[L3]                 call_transferFrom_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND TRUE   revert
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND TRUE   choice == 15
[L3115]              gas := gas - 21000;
[L3116]  COND FALSE  !(gas >= 0)
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:26,745 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:26,745 INFO  L82        PathProgramCache]: Analyzing trace with hash 1162636679, now seen corresponding path program 1 times
[2020-11-28 09:40:26,750 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:26,769 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:26,811 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:40:26,813 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:40:26,813 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:40:26,817 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:26,941 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:40:26,942 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:40:26,944 INFO  L87              Difference]: Start difference. First operand 2910 states. Second operand 4 states.
[2020-11-28 09:40:27,210 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:27,210 INFO  L93              Difference]: Finished difference Result 2152 states and 2407 transitions.
[2020-11-28 09:40:27,210 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:40:27,212 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2152 states and 2407 transitions.
[2020-11-28 09:40:27,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:27,235 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2152 states to 2152 states and 2407 transitions.
[2020-11-28 09:40:27,236 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-28 09:40:27,238 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 680
[2020-11-28 09:40:27,238 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2152 states and 2407 transitions.
[2020-11-28 09:40:27,244 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:27,244 INFO  L728         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:40:27,258 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2152 states and 2407 transitions.
[2020-11-28 09:40:27,298 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2152 to 2152.
[2020-11-28 09:40:27,298 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2152 states.
[2020-11-28 09:40:27,302 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2152 states to 2152 states and 2407 transitions.
[2020-11-28 09:40:27,303 INFO  L751         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:40:27,303 INFO  L631         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:40:27,303 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-28 09:40:27,303 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2152 states and 2407 transitions.
[2020-11-28 09:40:27,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:27,309 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:27,309 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:27,311 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:27,311 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_USD0 := false;
[L3]                 call_transferFrom_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND TRUE   revert
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND TRUE   choice == 3
[L3189]              gas := gas - 21000;
[L3190]  COND TRUE   gas >= 0
[L3191]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3192]              assume msgvalue_MSG == 0;
[L3193]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_USD0 := true;
[L3]                 call_transferFrom_USD0 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L691]   CALL        call __ret_0_ := transferFrom~address~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2147]              __var_9 := null;
[L2148]  COND TRUE   !(_to_s499 != null)
[L2149]              revert := true;
[L691]   RET         call __ret_0_ := transferFrom~address~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L692]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][_from_s499][msgsender_MSG] == old(_allowed_USD[this][_from_s499][msgsender_MSG]) - _value_s499) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3193]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3226]  RET         call CorralChoice_USD(this);

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND TRUE   choice == 3
[L3189]              gas := gas - 21000;
[L3190]  COND TRUE   gas >= 0
[L3191]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3192]              assume msgvalue_MSG == 0;
[L3193]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_USD0 := true;
[L3]                 call_transferFrom_USD0 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L691]   CALL        call __ret_0_ := transferFrom~address~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2147]              __var_9 := null;
[L2148]  COND TRUE   !(_to_s499 != null)
[L2149]              revert := true;
[L691]   RET         call __ret_0_ := transferFrom~address~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L692]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][_from_s499][msgsender_MSG] == old(_allowed_USD[this][_from_s499][msgsender_MSG]) - _value_s499) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3193]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:27,316 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:27,316 INFO  L82        PathProgramCache]: Analyzing trace with hash -1980802161, now seen corresponding path program 1 times
[2020-11-28 09:40:27,317 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:27,329 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:27,349 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:40:27,349 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:40:27,349 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:40:27,350 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:27,350 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:40:27,350 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:40:27,350 INFO  L87              Difference]: Start difference. First operand 2152 states and 2407 transitions. cyclomatic complexity: 257 Second operand 4 states.
[2020-11-28 09:40:27,830 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:27,830 INFO  L93              Difference]: Finished difference Result 3106 states and 3559 transitions.
[2020-11-28 09:40:27,830 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:40:27,831 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3106 states and 3559 transitions.
[2020-11-28 09:40:27,845 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-28 09:40:27,862 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3106 states to 2966 states and 3389 transitions.
[2020-11-28 09:40:27,862 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 926
[2020-11-28 09:40:27,864 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 949
[2020-11-28 09:40:27,864 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2966 states and 3389 transitions.
[2020-11-28 09:40:27,869 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:27,869 INFO  L728         BuchiCegarLoop]: Abstraction has 2966 states and 3389 transitions.
[2020-11-28 09:40:27,872 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2966 states and 3389 transitions.
[2020-11-28 09:40:27,899 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2966 to 2200.
[2020-11-28 09:40:27,899 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2200 states.
[2020-11-28 09:40:27,903 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2200 states to 2200 states and 2387 transitions.
[2020-11-28 09:40:27,903 INFO  L751         BuchiCegarLoop]: Abstraction has 2200 states and 2387 transitions.
[2020-11-28 09:40:27,903 INFO  L631         BuchiCegarLoop]: Abstraction has 2200 states and 2387 transitions.
[2020-11-28 09:40:27,903 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-28 09:40:27,903 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2200 states and 2387 transitions.
[2020-11-28 09:40:27,907 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:27,908 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:27,908 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:27,909 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:27,909 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_USD0 := false;
[L3]                 call_transferFrom_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND FALSE  !(revert)
[L1885]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1727]              assume msgsender_MSG != null;
[L1728]              Balance[this] := 0;
[L1729]              owner_Owned[this] := null;
[L1730]              newOwner_Owned[this] := null;
[L1732]              owner_Owned[this] := msgsender_MSG;
[L1745]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]  COND FALSE  !(revert)
[L1885]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1886]  COND FALSE  !(revert)
[L1889]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1843]              assume msgsender_MSG != null;
[L1844]              Balance[this] := 0;
[L1845]              name_USD[this] := -716642523;
[L1846]              symbol_USD[this] := -578635893;
[L1847]              decimals_USD[this] := 18;
[L1848]              _balances_USD[this] := zeroRefintArr();
[L1849]              sum__balances0[this] := 0;
[L1850]              _allowed_USD[this] := zeroRefRefintArr();
[L1851]              sum__allowed1[this] := 0;
[L1852]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1853]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1855]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1856]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1857]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1858]              assert { :EventEmitted "Transfer_USD" } true;
[L1889]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]  COND FALSE  !(revert)
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND TRUE   choice == 3
[L3189]              gas := gas - 21000;
[L3190]  COND TRUE   gas >= 0
[L3191]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3192]              assume msgvalue_MSG == 0;
[L3193]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_USD0 := true;
[L3]                 call_transferFrom_USD0 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND TRUE   __exception
[L669]               __tmp__Balance := Balance;
[L670]               __tmp__DType := DType;
[L671]               __tmp__Alloc := Alloc;
[L672]               __tmp__balance_ADDR := balance_ADDR;
[L673]               __tmp__M_Ref_int := M_Ref_int;
[L674]               __tmp__sum__balances0 := sum__balances0;
[L675]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L676]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]               __tmp__sum__allowed1 := sum__allowed1;
[L678]               __tmp__Length := Length;
[L679]               __tmp__now := now;
[L680]               __tmp__owner_Owned := owner_Owned;
[L681]               __tmp__newOwner_Owned := newOwner_Owned;
[L682]               __tmp__name_USD := name_USD;
[L683]               __tmp__symbol_USD := symbol_USD;
[L684]               __tmp__decimals_USD := decimals_USD;
[L685]               __tmp___balances_USD := _balances_USD;
[L686]               __tmp___allowed_USD := _allowed_USD;
[L687]               __tmp__totalSupply_USD := totalSupply_USD;
[L688]   CALL        call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2087]              __var_9 := null;
[L2088]  COND TRUE   !(_to_s499 != null)
[L2089]              revert := true;
[L688]   RET         call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L689]               assume revert || gas < 0;
[L3193]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3226]  RET         call CorralChoice_USD(this);

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND TRUE   choice == 3
[L3189]              gas := gas - 21000;
[L3190]  COND TRUE   gas >= 0
[L3191]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3192]              assume msgvalue_MSG == 0;
[L3193]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_USD0 := true;
[L3]                 call_transferFrom_USD0 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND TRUE   __exception
[L669]               __tmp__Balance := Balance;
[L670]               __tmp__DType := DType;
[L671]               __tmp__Alloc := Alloc;
[L672]               __tmp__balance_ADDR := balance_ADDR;
[L673]               __tmp__M_Ref_int := M_Ref_int;
[L674]               __tmp__sum__balances0 := sum__balances0;
[L675]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L676]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]               __tmp__sum__allowed1 := sum__allowed1;
[L678]               __tmp__Length := Length;
[L679]               __tmp__now := now;
[L680]               __tmp__owner_Owned := owner_Owned;
[L681]               __tmp__newOwner_Owned := newOwner_Owned;
[L682]               __tmp__name_USD := name_USD;
[L683]               __tmp__symbol_USD := symbol_USD;
[L684]               __tmp__decimals_USD := decimals_USD;
[L685]               __tmp___balances_USD := _balances_USD;
[L686]               __tmp___allowed_USD := _allowed_USD;
[L687]               __tmp__totalSupply_USD := totalSupply_USD;
[L688]   CALL        call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2087]              __var_9 := null;
[L2088]  COND TRUE   !(_to_s499 != null)
[L2089]              revert := true;
[L688]   RET         call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L689]               assume revert || gas < 0;
[L3193]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:27,913 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:27,913 INFO  L82        PathProgramCache]: Analyzing trace with hash -338842749, now seen corresponding path program 1 times
[2020-11-28 09:40:27,914 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:27,931 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:27,948 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:27,994 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:27,994 INFO  L82        PathProgramCache]: Analyzing trace with hash 1150315357, now seen corresponding path program 1 times
[2020-11-28 09:40:27,995 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:28,000 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:28,005 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:28,014 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:28,014 INFO  L82        PathProgramCache]: Analyzing trace with hash 1592732187, now seen corresponding path program 1 times
[2020-11-28 09:40:28,015 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:28,030 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:28,048 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-28 09:40:28,223 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 157 DAG size of output: 149
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-28 09:40:28,397 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 99
[2020-11-28 09:40:28,584 WARN  L188               SmtUtils]: Spent 185.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-28 09:40:29,088 WARN  L188               SmtUtils]: Spent 488.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-28 09:40:29,851 WARN  L188               SmtUtils]: Spent 760.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 239
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-28 09:40:30,000 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 137
[2020-11-28 09:40:30,140 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-28 09:40:30,453 WARN  L188               SmtUtils]: Spent 305.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 233
[2020-11-28 09:40:30,659 WARN  L188               SmtUtils]: Spent 204.00 ms on a formula simplification that was a NOOP. DAG size: 233
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-28 09:40:31,006 WARN  L188               SmtUtils]: Spent 328.00 ms on a formula simplification. DAG size of input: 161 DAG size of output: 144
[2020-11-28 09:40:31,013 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-28 09:40:31,437 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 230
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-28 09:40:32,152 WARN  L188               SmtUtils]: Spent 394.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-28 09:40:32,667 WARN  L188               SmtUtils]: Spent 512.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 239
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-28 09:40:32,813 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification. DAG size of input: 144 DAG size of output: 138
[2020-11-28 09:40:32,935 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 295
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-28 09:40:33,294 WARN  L188               SmtUtils]: Spent 353.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 234
[2020-11-28 09:40:34,361 WARN  L188               SmtUtils]: Spent 1.06 s on a formula simplification. DAG size of input: 424 DAG size of output: 414
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-28 09:40:34,681 WARN  L188               SmtUtils]: Spent 301.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 182
[2020-11-28 09:40:34,918 WARN  L188               SmtUtils]: Spent 223.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-28 09:40:35,188 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 182
[2020-11-28 09:40:35,600 WARN  L188               SmtUtils]: Spent 411.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 286
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-28 09:40:36,449 WARN  L188               SmtUtils]: Spent 840.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 281
[2020-11-28 09:40:36,461 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:36,476 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:40:36,482 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:40:36 BasicIcfg
[2020-11-28 09:40:36,482 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-28 09:40:36,482 INFO  L168              Benchmark]: Toolchain (without parser) took 12036.41 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 945.9 MB in the beginning and 1.2 GB in the end (delta: -222.9 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,483 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.35 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,483 INFO  L168              Benchmark]: Boogie Preprocessor took 92.55 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,483 INFO  L168              Benchmark]: UtopiaSpecLang took 70.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,484 INFO  L168              Benchmark]: Boogie Printer took 13.62 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,484 INFO  L168              Benchmark]: RCFGBuilder took 663.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 838.6 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,484 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.23 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 835.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,485 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1103.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 835.0 MB in the beginning and 742.6 MB in the end (delta: 92.3 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,485 INFO  L168              Benchmark]: BlockEncodingV2 took 116.08 ms. Allocated memory is still 1.1 GB. Free memory was 742.6 MB in the beginning and 697.4 MB in the end (delta: 45.2 MB). Peak memory consumption was 45.2 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,485 INFO  L168              Benchmark]: BuchiAutomizer took 9937.96 ms. Allocated memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 697.4 MB in the beginning and 1.2 GB in the end (delta: -471.5 MB). Peak memory consumption was 987.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:36,487 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2978 locations, 5225 edges
  - StatisticsResult: Encoded RCFG
    2910 locations, 5035 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.35 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.55 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.62 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 663.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 838.6 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.23 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 835.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1103.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 835.0 MB in the beginning and 742.6 MB in the end (delta: 92.3 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 116.08 ms. Allocated memory is still 1.1 GB. Free memory was 742.6 MB in the beginning and 697.4 MB in the end (delta: 45.2 MB). Peak memory consumption was 45.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9937.96 ms. Allocated memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 697.4 MB in the beginning and 1.2 GB in the end (delta: -471.5 MB). Peak memory consumption was 987.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1236 locations, 1608 edges
  - StatisticsResult: BuchiProgram size
    2978 locations, 5225 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 2200 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.8s and 3 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.6s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 2 MinimizatonAttempts, 766 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2200 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5362 SDtfs, 5387 SDslu, 4425 SDs, 0 SdLazy, 1375 SolverSat, 1298 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979014) = (new USD)({from : 3979003});
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND FALSE  !(revert)
[L1885]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1727]              assume msgsender_MSG != null;
[L1728]              Balance[this] := 0;
[L1729]              owner_Owned[this] := null;
[L1730]              newOwner_Owned[this] := null;
[L1732]              owner_Owned[this] := msgsender_MSG;
[L1745]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]  COND FALSE  !(revert)
[L1885]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1886]  COND FALSE  !(revert)
[L1889]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1843]              assume msgsender_MSG != null;
[L1844]              Balance[this] := 0;
[L1845]              name_USD[this] := -716642523;
[L1846]              symbol_USD[this] := -578635893;
[L1847]              decimals_USD[this] := 18;
[L1848]              _balances_USD[this] := zeroRefintArr();
[L1849]              sum__balances0[this] := 0;
[L1850]              _allowed_USD[this] := zeroRefRefintArr();
[L1851]              sum__allowed1[this] := 0;
[L1852]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1853]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1855]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1856]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1857]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1858]              assert { :EventEmitted "Transfer_USD" } true;
[L1889]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]  COND FALSE  !(revert)
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
USD(3979014).transferFrom~address~address~uint256.gas(3979002)({from : 3979016, _from : 0, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_USD0 := true;
[L3]                call_transferFrom_USD0 := false;
[L3]                revert := revert_hold;
[L666]              havoc __exception;
[L667]              revert := false;
[L668]   COND TRUE  __exception
[L669]              __tmp__Balance := Balance;
[L670]              __tmp__DType := DType;
[L671]              __tmp__Alloc := Alloc;
[L672]              __tmp__balance_ADDR := balance_ADDR;
[L673]              __tmp__M_Ref_int := M_Ref_int;
[L674]              __tmp__sum__balances0 := sum__balances0;
[L675]              __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L676]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]              __tmp__sum__allowed1 := sum__allowed1;
[L678]              __tmp__Length := Length;
[L679]              __tmp__now := now;
[L680]              __tmp__owner_Owned := owner_Owned;
[L681]              __tmp__newOwner_Owned := newOwner_Owned;
[L682]              __tmp__name_USD := name_USD;
[L683]              __tmp__symbol_USD := symbol_USD;
[L684]              __tmp__decimals_USD := decimals_USD;
[L685]              __tmp___balances_USD := _balances_USD;
[L686]              __tmp___allowed_USD := _allowed_USD;
[L687]              __tmp__totalSupply_USD := totalSupply_USD;
[L688]   CALL       call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2087]             __var_9 := null;
[L2088]  COND TRUE  !(_to_s499 != null)
[L2089]             revert := true;
[L688]   RET        call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L689]              assume revert || gas < 0;
[L3193]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);

Loop:
USD(3979014).transferFrom~address~address~uint256.gas(3979001)({from : 3979015, _from : 0, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != _from_s499 || p2 != msgsender_MSG) && _from_s499 == _to_s499) && _value_s499 <= _balances_USD[this][_from_s499]) && _value_s499 <= _allowed_USD[this][_from_s499][msgsender_MSG]) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s499] >= 0) && _balances_USD[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_from_s499] >= 0) && _balances_USD[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_USD[this][_from_s499][msgsender_MSG] >= 0) && _allowed_USD[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_USD0 := true;
[L3]                call_transferFrom_USD0 := false;
[L3]                revert := revert_hold;
[L666]              havoc __exception;
[L667]              revert := false;
[L668]   COND TRUE  __exception
[L669]              __tmp__Balance := Balance;
[L670]              __tmp__DType := DType;
[L671]              __tmp__Alloc := Alloc;
[L672]              __tmp__balance_ADDR := balance_ADDR;
[L673]              __tmp__M_Ref_int := M_Ref_int;
[L674]              __tmp__sum__balances0 := sum__balances0;
[L675]              __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L676]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]              __tmp__sum__allowed1 := sum__allowed1;
[L678]              __tmp__Length := Length;
[L679]              __tmp__now := now;
[L680]              __tmp__owner_Owned := owner_Owned;
[L681]              __tmp__newOwner_Owned := newOwner_Owned;
[L682]              __tmp__name_USD := name_USD;
[L683]              __tmp__symbol_USD := symbol_USD;
[L684]              __tmp__decimals_USD := decimals_USD;
[L685]              __tmp___balances_USD := _balances_USD;
[L686]              __tmp___allowed_USD := _allowed_USD;
[L687]              __tmp__totalSupply_USD := totalSupply_USD;
[L688]   CALL       call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2087]             __var_9 := null;
[L2088]  COND TRUE  !(_to_s499 != null)
[L2089]             revert := true;
[L688]   RET        call __ret_0_ := transferFrom~address~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L689]              assume revert || gas < 0;
[L3193]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
