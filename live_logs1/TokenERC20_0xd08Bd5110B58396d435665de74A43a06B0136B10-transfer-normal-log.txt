This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:18:12,520 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:18:12,521 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:18:12,529 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:18:12,529 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:18:12,529 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:18:12,530 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:18:12,531 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:18:12,532 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:18:12,532 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:18:12,533 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:18:12,533 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:18:12,533 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:18:12,534 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:18:12,534 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:18:12,535 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:18:12,535 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:18:12,536 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:18:12,537 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:18:12,538 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:18:12,538 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:18:12,539 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:18:12,541 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:18:12,541 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:18:12,541 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:18:12,541 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:18:12,541 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:18:12,542 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:18:12,542 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:18:12,542 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:18:12,542 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:18:12,543 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:18:12,543 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:18:12,543 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:18:12,544 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:18:12,544 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:18:12,544 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:18:12,544 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:18:12,544 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:18:12,545 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:18:12,545 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:18:12,545 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:18:12,552 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:18:12,552 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:18:12,553 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:18:12,553 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:18:12,553 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:18:12,553 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:18:12,553 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:18:12,553 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:18:12,554 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:18:12,554 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:18:12,554 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:18:12,555 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:18:12,555 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:18:12,556 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:18:12,556 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:18:12,587 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:18:12,600 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:18:12,602 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:18:12,603 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:18:12,604 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:18:12,604 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl
[2020-11-25 06:18:12,605 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl'
[2020-11-25 06:18:12,669 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:18:12,670 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:18:12,671 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:18:12,671 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:18:12,671 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:18:12,688 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,689 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,714 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,715 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,729 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,736 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,740 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,746 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:18:12,747 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:18:12,747 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:18:12,749 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:18:12,752 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/1) ...
[2020-11-25 06:18:12,766 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_TokenERC20[this][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balanceOf_TokenERC20[this][msg.sender] == old(balanceOf_TokenERC20[this][msg.sender]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:18:12,772 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_TokenERC20[this][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balanceOf_TokenERC20[this][msg.sender] == old(balanceOf_TokenERC20[this][msg.sender]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:18:12,780 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_TokenERC20[this][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balanceOf_TokenERC20[this][msg.sender] == old(balanceOf_TokenERC20[this][msg.sender]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:18:12,785 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s186 ) && msg.sender!=_to_s186 ) && _value_s186<=balanceOf_TokenERC20[this][msg.sender] ) && ( balanceOf_TokenERC20[this][_to_s186] + _value_s186 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s186>=0 ) && _value_s186<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s186]>=0 ) && balanceOf_TokenERC20[this][_to_s186]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][msg.sender]>=0 ) && balanceOf_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:18:12,788 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s186==true && balanceOf_TokenERC20[this][msg.sender]==( ( old(balanceOf_TokenERC20[this][msg.sender]) ) - _value_s186 ) ) && balanceOf_TokenERC20[this][_to_s186]==( ( old(balanceOf_TokenERC20[this][_to_s186]) ) + _value_s186 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && allowance_TokenERC20[this]==( old(allowance_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this][p1]==( old(balanceOf_TokenERC20[this][p1]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s186,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]]
[2020-11-25 06:18:12,792 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_TokenERC20[this][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balanceOf_TokenERC20[this][msg.sender] == old(balanceOf_TokenERC20[this][msg.sender]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:18:12,792 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(success_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:18:12,797 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:18:12 PropertyContainer
[2020-11-25 06:18:12,797 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:18:12,797 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:18:12,798 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:18:12,798 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:18:12,798 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/2) ...
[2020-11-25 06:18:12,799 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:18:12,799 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:18:12,812 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:18:12" (2/2) ...
[2020-11-25 06:18:12,812 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:18:12,813 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:18:12,813 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:18:12,813 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:18:12,814 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/2) ...
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:18:12,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 06:18:12,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,866 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:18:12,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:18:12,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:18:12,867 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 06:18:12,868 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 06:18:12,868 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 06:18:12,868 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 06:18:12,868 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 06:18:12,868 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 06:18:12,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:18:12,869 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,870 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:18:12,871 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:18:12,872 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:18:12,872 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:18:12,872 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:18:12,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:18:12,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:18:12,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 06:18:12,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:18:12,875 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:18:12,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:18:13,025 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:18:13,362 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:18:13,362 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:18:13,362 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:18:13,396 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:18:13,396 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 06:18:13,398 INFO  L202        PluginConnector]: Adding new model TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:18:13 BoogieIcfgContainer
[2020-11-25 06:18:13,398 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:18:12" (2/2) ...
[2020-11-25 06:18:13,398 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:18:13,398 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7c66d2ba and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:18:13, skipping insertion in model container
[2020-11-25 06:18:13,399 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:18:13,399 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:18:13,399 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:18:13,400 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:18:13,401 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/3) ...
[2020-11-25 06:18:13,401 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@40a9a8f6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:18:13, skipping insertion in model container
[2020-11-25 06:18:13,401 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:18:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:18:13,441 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:18:13 NWAContainer
[2020-11-25 06:18:13,441 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:18:13,441 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:18:13,442 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:18:13,443 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:18:13,445 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:18:13" (3/4) ...
[2020-11-25 06:18:13,446 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3a6640e2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:18:13, skipping insertion in model container
[2020-11-25 06:18:13,446 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:18:13" (4/4) ...
[2020-11-25 06:18:13,450 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:18:13,453 INFO  L110   BuchiProductObserver]: Initial RCFG 817 locations, 989 edges
[2020-11-25 06:18:13,453 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:18:13,463 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:18:14,492 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:18:14,494 INFO  L110   BuchiProductObserver]: BuchiProgram size 1900 locations, 3182 edges
[2020-11-25 06:18:14,495 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:18:14 BoogieIcfgContainer
[2020-11-25 06:18:14,495 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:18:14,495 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:18:14,495 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:18:14,496 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:18:14,497 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:18:14" (1/1) ...
[2020-11-25 06:18:14,539 INFO  L313           BlockEncoder]: Initial Icfg 1900 locations, 3182 edges
[2020-11-25 06:18:14,540 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:18:14,540 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:18:14,540 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:18:14,541 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:18:14,547 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 06:18:14,550 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 06:18:14,555 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:18:14,557 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:18:14,558 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:18:14,559 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:18:14,561 INFO  L313           BlockEncoder]: Encoded RCFG 1880 locations, 3133 edges
[2020-11-25 06:18:14,561 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:18:14 BasicIcfg
[2020-11-25 06:18:14,561 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:18:14,562 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:18:14,562 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:18:14,563 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:18:14,563 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,564 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:18:12" (1/6) ...
[2020-11-25 06:18:14,565 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@455cd56e and model type TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:18:14, skipping insertion in model container
[2020-11-25 06:18:14,565 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,565 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:18:12" (2/6) ...
[2020-11-25 06:18:14,565 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@455cd56e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:18:14, skipping insertion in model container
[2020-11-25 06:18:14,565 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,565 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:18:13" (3/6) ...
[2020-11-25 06:18:14,566 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@455cd56e and model type TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:18:14, skipping insertion in model container
[2020-11-25 06:18:14,566 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,566 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:18:13" (4/6) ...
[2020-11-25 06:18:14,566 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@455cd56e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:18:14, skipping insertion in model container
[2020-11-25 06:18:14,566 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,566 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:18:14" (5/6) ...
[2020-11-25 06:18:14,566 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@455cd56e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:18:14, skipping insertion in model container
[2020-11-25 06:18:14,566 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:18:14,566 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:18:14" (6/6) ...
[2020-11-25 06:18:14,567 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transfer-normal.bpl_BEv2
[2020-11-25 06:18:14,601 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:18:14,601 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:18:14,601 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:18:14,601 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:18:14,601 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:18:14,601 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:18:14,601 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:18:14,602 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:18:14,602 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:18:14,632 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1880 states.
[2020-11-25 06:18:14,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:18:14,679 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:18:14,679 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:18:14,687 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:14,687 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:14,688 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:18:14,688 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1880 states.
[2020-11-25 06:18:14,698 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:18:14,698 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:18:14,698 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:18:14,699 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:14,699 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND TRUE   choice == 12
[L2089]              gas := gas - 21000;
[L2090]  COND FALSE  !(gas >= 0)
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:18:14,712 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:14,712 INFO  L82        PathProgramCache]: Analyzing trace with hash 1421560645, now seen corresponding path program 1 times
[2020-11-25 06:18:14,717 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:14,737 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:18:14,769 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:18:14,771 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:18:14,771 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:18:14,774 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:18:14,887 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:18:14,887 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:18:14,889 INFO  L87              Difference]: Start difference. First operand 1880 states. Second operand 3 states.
[2020-11-25 06:18:15,016 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:18:15,016 INFO  L93              Difference]: Finished difference Result 1510 states and 1645 transitions.
[2020-11-25 06:18:15,016 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:18:15,018 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1510 states and 1645 transitions.
[2020-11-25 06:18:15,025 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:18:15,038 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1510 states to 1508 states and 1641 transitions.
[2020-11-25 06:18:15,039 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:18:15,041 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 702
[2020-11-25 06:18:15,042 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1508 states and 1641 transitions.
[2020-11-25 06:18:15,047 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:18:15,047 INFO  L728         BuchiCegarLoop]: Abstraction has 1508 states and 1641 transitions.
[2020-11-25 06:18:15,060 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1508 states and 1641 transitions.
[2020-11-25 06:18:15,091 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1508 to 1508.
[2020-11-25 06:18:15,091 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1508 states.
[2020-11-25 06:18:15,094 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1508 states to 1508 states and 1641 transitions.
[2020-11-25 06:18:15,095 INFO  L751         BuchiCegarLoop]: Abstraction has 1508 states and 1641 transitions.
[2020-11-25 06:18:15,095 INFO  L631         BuchiCegarLoop]: Abstraction has 1508 states and 1641 transitions.
[2020-11-25 06:18:15,095 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:18:15,095 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1508 states and 1641 transitions.
[2020-11-25 06:18:15,102 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:18:15,102 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:18:15,102 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:18:15,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:15,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1246]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1210]              __var_2 := null;
[L1211]  COND TRUE   !(_to_s167 != null)
[L1212]              revert := true;
[L1246]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1247]  COND TRUE   revert
[L219]   RET         call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s186 == true && balanceOf_TokenERC20[this][msgsender_MSG] == old(balanceOf_TokenERC20[this][msgsender_MSG]) - _value_s186) && balanceOf_TokenERC20[this][_to_s186] == old(balanceOf_TokenERC20[this][_to_s186]) + _value_s186) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1246]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1210]              __var_2 := null;
[L1211]  COND TRUE   !(_to_s167 != null)
[L1212]              revert := true;
[L1246]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1247]  COND TRUE   revert
[L219]   RET         call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s186 == true && balanceOf_TokenERC20[this][msgsender_MSG] == old(balanceOf_TokenERC20[this][msgsender_MSG]) - _value_s186) && balanceOf_TokenERC20[this][_to_s186] == old(balanceOf_TokenERC20[this][_to_s186]) + _value_s186) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:18:15,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:15,109 INFO  L82        PathProgramCache]: Analyzing trace with hash -942222144, now seen corresponding path program 1 times
[2020-11-25 06:18:15,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:15,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:18:15,148 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:18:15,148 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:18:15,148 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:18:15,150 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:18:15,150 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:18:15,151 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:18:15,151 INFO  L87              Difference]: Start difference. First operand 1508 states and 1641 transitions. cyclomatic complexity: 135 Second operand 3 states.
[2020-11-25 06:18:15,194 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:18:15,194 INFO  L93              Difference]: Finished difference Result 1956 states and 2173 transitions.
[2020-11-25 06:18:15,194 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:18:15,195 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1956 states and 2173 transitions.
[2020-11-25 06:18:15,203 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:18:15,212 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1956 states to 1878 states and 2083 transitions.
[2020-11-25 06:18:15,213 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 887
[2020-11-25 06:18:15,213 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 887
[2020-11-25 06:18:15,213 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1878 states and 2083 transitions.
[2020-11-25 06:18:15,216 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:18:15,216 INFO  L728         BuchiCegarLoop]: Abstraction has 1878 states and 2083 transitions.
[2020-11-25 06:18:15,218 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1878 states and 2083 transitions.
[2020-11-25 06:18:15,232 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1878 to 1506.
[2020-11-25 06:18:15,232 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1506 states.
[2020-11-25 06:18:15,235 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1506 states to 1506 states and 1619 transitions.
[2020-11-25 06:18:15,235 INFO  L751         BuchiCegarLoop]: Abstraction has 1506 states and 1619 transitions.
[2020-11-25 06:18:15,235 INFO  L631         BuchiCegarLoop]: Abstraction has 1506 states and 1619 transitions.
[2020-11-25 06:18:15,235 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:18:15,236 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1506 states and 1619 transitions.
[2020-11-25 06:18:15,239 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:18:15,239 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:18:15,239 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:18:15,240 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:15,240 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1246]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s167];
[L1225]              balanceOf_TokenERC20[this][_from_s167] := (balanceOf_TokenERC20[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s167];
[L1228]              balanceOf_TokenERC20[this][_to_s167] := (balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1231]              assert (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1246]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1247]  COND FALSE  !(revert)
[L1250]              success_s186 := true;
[L219]   RET         call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s186 == true && balanceOf_TokenERC20[this][msgsender_MSG] == old(balanceOf_TokenERC20[this][msgsender_MSG]) - _value_s186) && balanceOf_TokenERC20[this][_to_s186] == old(balanceOf_TokenERC20[this][_to_s186]) + _value_s186) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1246]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s167];
[L1225]              balanceOf_TokenERC20[this][_from_s167] := (balanceOf_TokenERC20[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s167];
[L1228]              balanceOf_TokenERC20[this][_to_s167] := (balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1231]              assert (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1246]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1247]  COND FALSE  !(revert)
[L1250]              success_s186 := true;
[L219]   RET         call success_s186 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s186 == true && balanceOf_TokenERC20[this][msgsender_MSG] == old(balanceOf_TokenERC20[this][msgsender_MSG]) - _value_s186) && balanceOf_TokenERC20[this][_to_s186] == old(balanceOf_TokenERC20[this][_to_s186]) + _value_s186) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:18:15,243 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:15,243 INFO  L82        PathProgramCache]: Analyzing trace with hash -420889620, now seen corresponding path program 1 times
[2020-11-25 06:18:15,244 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:15,294 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:18:15,747 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:18:15,747 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:18:15,747 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 06:18:15,748 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:18:15,748 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 06:18:15,748 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=36, Invalid=236, Unknown=0, NotChecked=0, Total=272
[2020-11-25 06:18:15,749 INFO  L87              Difference]: Start difference. First operand 1506 states and 1619 transitions. cyclomatic complexity: 115 Second operand 17 states.
[2020-11-25 06:18:18,072 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:18:18,072 INFO  L93              Difference]: Finished difference Result 1625 states and 1760 transitions.
[2020-11-25 06:18:18,072 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:18:18,072 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1625 states and 1760 transitions.
[2020-11-25 06:18:18,077 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:18:18,083 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1625 states to 1625 states and 1760 transitions.
[2020-11-25 06:18:18,083 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 757
[2020-11-25 06:18:18,084 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 757
[2020-11-25 06:18:18,084 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1625 states and 1760 transitions.
[2020-11-25 06:18:18,086 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:18:18,086 INFO  L728         BuchiCegarLoop]: Abstraction has 1625 states and 1760 transitions.
[2020-11-25 06:18:18,088 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1625 states and 1760 transitions.
[2020-11-25 06:18:18,102 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1625 to 1596.
[2020-11-25 06:18:18,102 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1596 states.
[2020-11-25 06:18:18,106 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1596 states to 1596 states and 1722 transitions.
[2020-11-25 06:18:18,106 INFO  L751         BuchiCegarLoop]: Abstraction has 1596 states and 1722 transitions.
[2020-11-25 06:18:18,106 INFO  L631         BuchiCegarLoop]: Abstraction has 1596 states and 1722 transitions.
[2020-11-25 06:18:18,106 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:18:18,106 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1596 states and 1722 transitions.
[2020-11-25 06:18:18,111 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:18:18,112 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:18:18,112 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:18:18,113 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:18:18,113 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum_allowance1 := sum_allowance1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp__name_TokenERC20 := name_TokenERC20;
[L211]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L212]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L213]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L214]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L215]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L216]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1236]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1236]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1237]  COND TRUE   revert
[L216]   RET         call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L217]               assume revert || gas < 0;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND TRUE   choice == 6
[L2125]              gas := gas - 21000;
[L2126]  COND TRUE   gas >= 0
[L2127]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2128]              assume msgvalue_MSG == 0;
[L2129]  CALL        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum_allowance1 := sum_allowance1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp__name_TokenERC20 := name_TokenERC20;
[L211]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L212]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L213]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L214]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L215]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L216]   CALL        call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1236]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1236]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1237]  COND TRUE   revert
[L216]   RET         call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L217]               assume revert || gas < 0;
[L2129]  RET         call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:18:18,116 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:18,116 INFO  L82        PathProgramCache]: Analyzing trace with hash 1993891703, now seen corresponding path program 1 times
[2020-11-25 06:18:18,116 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:18,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:18,131 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:18,170 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:18,170 INFO  L82        PathProgramCache]: Analyzing trace with hash -1464787461, now seen corresponding path program 1 times
[2020-11-25 06:18:18,171 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:18,175 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:18,179 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:18,187 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:18:18,187 INFO  L82        PathProgramCache]: Analyzing trace with hash -789505551, now seen corresponding path program 1 times
[2020-11-25 06:18:18,188 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:18:18,197 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:18,208 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 06:18:18,554 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 176
[2020-11-25 06:18:18,797 WARN  L188               SmtUtils]: Spent 240.00 ms on a formula simplification. DAG size of input: 229 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
[2020-11-25 06:18:18,917 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification. DAG size of input: 122 DAG size of output: 118
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
[2020-11-25 06:18:19,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 06:18:19,825 WARN  L188               SmtUtils]: Spent 194.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 06:18:20,487 WARN  L188               SmtUtils]: Spent 437.00 ms on a formula simplification. DAG size of input: 382 DAG size of output: 374
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 06:18:20,824 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 244
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 06:18:20,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:20,919 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:18:20,925 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:18:20 BasicIcfg
[2020-11-25 06:18:20,925 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:18:20,925 INFO  L168              Benchmark]: Toolchain (without parser) took 8255.52 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 664.3 MB). Free memory was 940.6 MB in the beginning and 948.3 MB in the end (delta: -7.7 MB). Peak memory consumption was 839.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,925 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,926 INFO  L168              Benchmark]: Boogie Preprocessor took 76.04 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,926 INFO  L168              Benchmark]: UtopiaSpecLang took 50.37 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,926 INFO  L168              Benchmark]: Boogie Printer took 15.14 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,926 INFO  L168              Benchmark]: RCFGBuilder took 585.61 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,927 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.52 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,927 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1053.31 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.3 MB). Free memory was 861.8 MB in the beginning and 879.5 MB in the end (delta: -17.7 MB). Peak memory consumption was 146.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,927 INFO  L168              Benchmark]: BlockEncodingV2 took 66.31 ms. Allocated memory is still 1.1 GB. Free memory was 879.5 MB in the beginning and 851.2 MB in the end (delta: 28.3 MB). Peak memory consumption was 28.3 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,927 INFO  L168              Benchmark]: BuchiAutomizer took 6363.18 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 602.9 MB). Free memory was 851.2 MB in the beginning and 948.3 MB in the end (delta: -97.1 MB). Peak memory consumption was 688.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:18:20,930 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1900 locations, 3182 edges
  - StatisticsResult: Encoded RCFG
    1880 locations, 3133 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 76.04 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 50.37 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.14 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 585.61 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.52 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1053.31 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.3 MB). Free memory was 861.8 MB in the beginning and 879.5 MB in the end (delta: -17.7 MB). Peak memory consumption was 146.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 66.31 ms. Allocated memory is still 1.1 GB. Free memory was 879.5 MB in the beginning and 851.2 MB in the end (delta: 28.3 MB). Peak memory consumption was 28.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6363.18 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 602.9 MB). Free memory was 851.2 MB in the beginning and 948.3 MB in the end (delta: -97.1 MB). Peak memory consumption was 688.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    817 locations, 989 edges
  - StatisticsResult: BuchiProgram size
    1900 locations, 3182 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 1596 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.3s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 3.4s. Construction of modules took 1.9s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 401 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1596 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5185 SDtfs, 3470 SDslu, 9479 SDs, 0 SdLazy, 12431 SolverSat, 908 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639954) = (new TokenERC20)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639946, initialSupply : 115792089237316195423570985008687907853269984665640564039457584007913129639950, tokenName : 115792089237316195423570985008687907853269984665640564039457584007913129639955, tokenSymbol : 115792089237316195423570985008687907853269984665640564039457584007913129639945});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
TokenERC20(115792089237316195423570985008687907853269984665640564039457584007913129639954).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639946, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_TokenERC200 := true;
[L3]                call_transfer_TokenERC200 := false;
[L3]                revert := revert_hold;
[L196]              havoc __exception;
[L197]              revert := false;
[L198]   COND TRUE  __exception
[L199]              __tmp__Balance := Balance;
[L200]              __tmp__DType := DType;
[L201]              __tmp__Alloc := Alloc;
[L202]              __tmp__balance_ADDR := balance_ADDR;
[L203]              __tmp__M_Ref_int := M_Ref_int;
[L204]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]              __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L206]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]              __tmp__sum_allowance1 := sum_allowance1;
[L208]              __tmp__Length := Length;
[L209]              __tmp__now := now;
[L210]              __tmp__name_TokenERC20 := name_TokenERC20;
[L211]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L212]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L213]              __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L214]              __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L215]              __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L216]   CALL       call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1236]  CALL       call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1184]             __var_2 := null;
[L1185]  COND TRUE  !(_to_s167 != null)
[L1186]             revert := true;
[L1236]  RET        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1237]  COND TRUE  revert
[L216]   RET        call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L217]              assume revert || gas < 0;
[L2129]  RET        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);

Loop:
TokenERC20(115792089237316195423570985008687907853269984665640564039457584007913129639954).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639957, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s186) && msgsender_MSG != _to_s186) && _value_s186 <= balanceOf_TokenERC20[this][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s186] + _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s186] >= 0) && balanceOf_TokenERC20[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_TokenERC200 := true;
[L3]                call_transfer_TokenERC200 := false;
[L3]                revert := revert_hold;
[L196]              havoc __exception;
[L197]              revert := false;
[L198]   COND TRUE  __exception
[L199]              __tmp__Balance := Balance;
[L200]              __tmp__DType := DType;
[L201]              __tmp__Alloc := Alloc;
[L202]              __tmp__balance_ADDR := balance_ADDR;
[L203]              __tmp__M_Ref_int := M_Ref_int;
[L204]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]              __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L206]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]              __tmp__sum_allowance1 := sum_allowance1;
[L208]              __tmp__Length := Length;
[L209]              __tmp__now := now;
[L210]              __tmp__name_TokenERC20 := name_TokenERC20;
[L211]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L212]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L213]              __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L214]              __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L215]              __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L216]   CALL       call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1236]  CALL       call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1184]             __var_2 := null;
[L1185]  COND TRUE  !(_to_s167 != null)
[L1186]             revert := true;
[L1236]  RET        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1237]  COND TRUE  revert
[L216]   RET        call success_s186 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L217]              assume revert || gas < 0;
[L2129]  RET        call success_s186 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
