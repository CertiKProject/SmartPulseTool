This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:53:00,762 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:53:00,763 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:53:00,774 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:53:00,774 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:53:00,774 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:53:00,775 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:53:00,777 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:53:00,778 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:53:00,779 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:53:00,780 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:53:00,780 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:53:00,781 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:53:00,781 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:53:00,782 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:53:00,783 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:53:00,783 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:53:00,784 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:53:00,786 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:53:00,787 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:53:00,788 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:53:00,788 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:53:00,790 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:53:00,790 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:53:00,790 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:53:00,791 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:53:00,791 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:53:00,792 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:53:00,792 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:53:00,792 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:53:00,793 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:53:00,793 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:53:00,794 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:53:00,794 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:53:00,795 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:53:00,795 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:53:00,795 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:53:00,795 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:53:00,796 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:53:00,796 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:53:00,797 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:53:00,797 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:53:00,805 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:53:00,805 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:53:00,806 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:53:00,806 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:53:00,806 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:53:00,806 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:53:00,807 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:53:00,807 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:53:00,808 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:53:00,808 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:53:00,808 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:53:00,808 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:53:00,808 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:53:00,828 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:53:00,839 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:53:00,842 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:53:00,843 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:53:00,843 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:53:00,844 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl
[2020-11-25 01:53:00,844 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl'
[2020-11-25 01:53:00,927 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:53:00,928 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:53:00,929 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:53:00,929 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:53:00,929 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:53:00,946 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:00,948 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:00,980 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:00,981 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:01,002 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:01,012 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:01,020 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:01,028 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:53:01,029 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:53:01,029 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:53:01,031 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:53:01,035 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/1) ...
[2020-11-25 01:53:01,054 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(MyToken.allowance(owner, spender), allowed_MyToken[this][owner][spender] >= 0 && allowed_MyToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.allowance(owner, spender), return == allowed_MyToken[this][owner][spender] &&  _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:53:01,062 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(MyToken.allowance(owner, spender), allowed_MyToken[this][owner][spender] >= 0 && allowed_MyToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.allowance(owner, spender), return == allowed_MyToken[this][owner][spender] &&  _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:53:01,071 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(MyToken.allowance(owner, spender), allowed_MyToken[this][owner][spender] >= 0 && allowed_MyToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.allowance(owner, spender), return == allowed_MyToken[this][owner][spender] &&  _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:53:01,078 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_MyToken[this][tokenOwner_s490][spender_s490]>=0 && allowed_MyToken[this][tokenOwner_s490][spender_s490]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[tokenOwner_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[spender_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[tokenOwner_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[spender_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:53:01,081 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( remaining_s490==allowed_MyToken[this][tokenOwner_s490][spender_s490] && _totalSupply_MyToken[this]==( old(_totalSupply_MyToken[this]) ) ) && balances_MyToken[this]==( old(balances_MyToken[this]) ) ) && allowed_MyToken[this]==( old(allowed_MyToken[this]) ) ) && symbol_MyToken[this]==( old(symbol_MyToken[this]) ) ) && name_MyToken[this]==( old(name_MyToken[this]) ) ) && decimals_MyToken[this]==( old(decimals_MyToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[remaining_s490,<IMPLEMENTATION_OUTPARAM,allowance~address~address_MyToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[tokenOwner_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],[IdentifierExpression[spender_s490,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_MyToken>]]]]]]
[2020-11-25 01:53:01,085 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(MyToken.allowance(owner, spender), allowed_MyToken[this][owner][spender] >= 0 && allowed_MyToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.allowance(owner, spender), return == allowed_MyToken[this][owner][spender] &&  _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:53:01,086 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_MyToken0) ==> ( <>AP(success_allowance_MyToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:53:01,095 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:53:01 PropertyContainer
[2020-11-25 01:53:01,095 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:53:01,095 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:53:01,096 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:53:01,096 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:53:01,096 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/2) ...
[2020-11-25 01:53:01,097 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:53:01,097 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:53:01,111 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:53:01" (2/2) ...
[2020-11-25 01:53:01,111 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:53:01,111 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:53:01,111 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:53:01,112 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:53:01,112 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/2) ...
[2020-11-25 01:53:01,164 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:53:01,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:53:01,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:53:01,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:53:01,166 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:53:01,166 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:53:01,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:53:01,166 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 01:53:01,166 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 01:53:01,166 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:53:01,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 01:53:01,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 01:53:01,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken
[2020-11-25 01:53:01,168 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken
[2020-11-25 01:53:01,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__success
[2020-11-25 01:53:01,169 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken
[2020-11-25 01:53:01,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken
[2020-11-25 01:53:01,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken
[2020-11-25 01:53:01,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken
[2020-11-25 01:53:01,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 01:53:01,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyToken
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:53:01,171 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:53:01,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:53:01,173 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__success
[2020-11-25 01:53:01,174 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__success
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__success
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__success
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__fail
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__success
[2020-11-25 01:53:01,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__fail
[2020-11-25 01:53:01,176 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:53:01,176 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:53:01,176 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:53:01,176 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:53:01,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 01:53:01,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__fail
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__success
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__fail
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__success
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__success
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:53:01,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__success
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__fail
[2020-11-25 01:53:01,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__fail
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__fail
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__fail
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:53:01,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 01:53:01,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyToken
[2020-11-25 01:53:01,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:53:01,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:53:01,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:53:01,770 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:53:01,770 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:53:01,771 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:53:01,888 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:53:01,888 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 01:53:01,890 INFO  L202        PluginConnector]: Adding new model MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:53:01 BoogieIcfgContainer
[2020-11-25 01:53:01,890 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:53:01" (2/2) ...
[2020-11-25 01:53:01,891 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:53:01,891 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4b626f94 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:53:01, skipping insertion in model container
[2020-11-25 01:53:01,891 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:53:01,891 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:53:01,891 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:53:01,893 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:53:01,893 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/3) ...
[2020-11-25 01:53:01,893 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2dadc398 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:53:01, skipping insertion in model container
[2020-11-25 01:53:01,894 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:53:01" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:53:01,934 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:53:01 NWAContainer
[2020-11-25 01:53:01,934 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:53:01,934 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:53:01,934 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:53:01,935 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:53:01,936 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:53:01" (3/4) ...
[2020-11-25 01:53:01,937 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4c74478 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:53:01, skipping insertion in model container
[2020-11-25 01:53:01,937 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:53:01" (4/4) ...
[2020-11-25 01:53:01,940 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:53:01,944 INFO  L110   BuchiProductObserver]: Initial RCFG 1504 locations, 1890 edges
[2020-11-25 01:53:01,944 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:53:01,955 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:53:03,219 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:53:03,223 INFO  L110   BuchiProductObserver]: BuchiProgram size 3568 locations, 6124 edges
[2020-11-25 01:53:03,224 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:53:03 BoogieIcfgContainer
[2020-11-25 01:53:03,224 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:53:03,224 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:53:03,224 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:53:03,225 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:53:03,226 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:53:03" (1/1) ...
[2020-11-25 01:53:03,303 INFO  L313           BlockEncoder]: Initial Icfg 3568 locations, 6124 edges
[2020-11-25 01:53:03,303 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:53:03,303 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:53:03,303 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:53:03,304 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:53:03,314 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 13 locations because of local infeasibility
[2020-11-25 01:53:03,322 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 01:53:03,334 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:53:03,338 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:53:03,341 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:53:03,341 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:53:03,345 INFO  L313           BlockEncoder]: Encoded RCFG 3512 locations, 5976 edges
[2020-11-25 01:53:03,345 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:53:03 BasicIcfg
[2020-11-25 01:53:03,345 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:53:03,346 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:53:03,346 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:53:03,348 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:53:03,348 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,348 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:53:00" (1/6) ...
[2020-11-25 01:53:03,350 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:53:03, skipping insertion in model container
[2020-11-25 01:53:03,350 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,350 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:53:01" (2/6) ...
[2020-11-25 01:53:03,351 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:53:03, skipping insertion in model container
[2020-11-25 01:53:03,351 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,351 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:53:01" (3/6) ...
[2020-11-25 01:53:03,351 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:53:03, skipping insertion in model container
[2020-11-25 01:53:03,351 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,351 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:53:01" (4/6) ...
[2020-11-25 01:53:03,351 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:53:03, skipping insertion in model container
[2020-11-25 01:53:03,351 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,351 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:53:03" (5/6) ...
[2020-11-25 01:53:03,351 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:53:03, skipping insertion in model container
[2020-11-25 01:53:03,352 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:53:03,352 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:53:03" (6/6) ...
[2020-11-25 01:53:03,353 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_allowance.bpl_BEv2
[2020-11-25 01:53:03,389 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:53:03,390 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:53:03,390 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:53:03,390 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:53:03,390 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:53:03,390 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:53:03,390 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:53:03,390 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:53:03,390 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:53:03,421 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:53:03,474 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:53:03,474 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:53:03,474 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:53:03,482 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:03,482 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:03,482 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:53:03,482 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:53:03,504 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:53:03,505 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:53:03,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:53:03,506 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:03,506 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_MyToken0 := false;
[L2]                 call_allowance_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND TRUE   choice == 19
[L3986]              gas := gas - 21000;
[L3987]  COND FALSE  !(gas >= 0)
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:53:03,519 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:53:03,519 INFO  L82        PathProgramCache]: Analyzing trace with hash -2099204302, now seen corresponding path program 1 times
[2020-11-25 01:53:03,523 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:53:03,545 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:53:03,580 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:53:03,581 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:53:03,581 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:53:03,584 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:53:03,766 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:53:03,766 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:53:03,767 INFO  L87              Difference]: Start difference. First operand 3512 states. Second operand 4 states.
[2020-11-25 01:53:04,038 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:53:04,038 INFO  L93              Difference]: Finished difference Result 2374 states and 2577 transitions.
[2020-11-25 01:53:04,038 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:53:04,040 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2374 states and 2577 transitions.
[2020-11-25 01:53:04,050 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:53:04,069 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:53:04,070 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:53:04,072 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 883
[2020-11-25 01:53:04,072 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2374 states and 2577 transitions.
[2020-11-25 01:53:04,077 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:53:04,078 INFO  L728         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:53:04,092 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2374 states and 2577 transitions.
[2020-11-25 01:53:04,129 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2374 to 2374.
[2020-11-25 01:53:04,129 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2374 states.
[2020-11-25 01:53:04,134 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:53:04,134 INFO  L751         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:53:04,134 INFO  L631         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:53:04,135 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:53:04,135 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2374 states and 2577 transitions.
[2020-11-25 01:53:04,141 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:53:04,141 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:53:04,141 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:53:04,143 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:04,143 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_MyToken0 := false;
[L2]                 call_allowance_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2436]              remaining_s490 := allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1125]  RET         call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s490 == allowed_MyToken[this][tokenOwner_s490][spender_s490] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2436]              remaining_s490 := allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1125]  RET         call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s490 == allowed_MyToken[this][tokenOwner_s490][spender_s490] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:53:04,148 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:53:04,149 INFO  L82        PathProgramCache]: Analyzing trace with hash -1882219427, now seen corresponding path program 1 times
[2020-11-25 01:53:04,151 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:53:04,164 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:53:04,187 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:53:04,187 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:53:04,188 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:53:04,189 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:53:04,189 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:53:04,189 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:53:04,190 INFO  L87              Difference]: Start difference. First operand 2374 states and 2577 transitions. cyclomatic complexity: 205 Second operand 4 states.
[2020-11-25 01:53:04,633 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:53:04,634 INFO  L93              Difference]: Finished difference Result 3524 states and 3979 transitions.
[2020-11-25 01:53:04,634 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:53:04,634 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3524 states and 3979 transitions.
[2020-11-25 01:53:04,649 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 01:53:04,663 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3524 states to 3420 states and 3869 transitions.
[2020-11-25 01:53:04,664 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1213
[2020-11-25 01:53:04,665 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1218
[2020-11-25 01:53:04,665 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3420 states and 3869 transitions.
[2020-11-25 01:53:04,671 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:53:04,671 INFO  L728         BuchiCegarLoop]: Abstraction has 3420 states and 3869 transitions.
[2020-11-25 01:53:04,674 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3420 states and 3869 transitions.
[2020-11-25 01:53:04,701 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3420 to 2571.
[2020-11-25 01:53:04,701 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2571 states.
[2020-11-25 01:53:04,704 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2571 states to 2571 states and 2774 transitions.
[2020-11-25 01:53:04,705 INFO  L751         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:53:04,705 INFO  L631         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:53:04,705 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:53:04,705 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2571 states and 2774 transitions.
[2020-11-25 01:53:04,710 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:53:04,710 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:53:04,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:53:04,712 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:04,712 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_MyToken0 := false;
[L2]                 call_allowance_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2436]              remaining_s490 := allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1125]  RET         call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s490 == allowed_MyToken[this][tokenOwner_s490][spender_s490] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2436]              remaining_s490 := allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1125]  RET         call remaining_s490 := allowance~address~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s490 == allowed_MyToken[this][tokenOwner_s490][spender_s490] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:53:04,716 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:53:04,716 INFO  L82        PathProgramCache]: Analyzing trace with hash 1850515182, now seen corresponding path program 1 times
[2020-11-25 01:53:04,716 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:53:04,727 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:53:04,772 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:53:04,773 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:53:04,773 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:53:04,773 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:53:04,773 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:53:04,773 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:53:04,774 INFO  L87              Difference]: Start difference. First operand 2571 states and 2774 transitions. cyclomatic complexity: 205 Second operand 4 states.
[2020-11-25 01:53:04,831 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:53:04,832 INFO  L93              Difference]: Finished difference Result 2572 states and 2773 transitions.
[2020-11-25 01:53:04,832 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:53:04,832 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2572 states and 2773 transitions.
[2020-11-25 01:53:04,841 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:53:04,849 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2572 states to 2562 states and 2763 transitions.
[2020-11-25 01:53:04,849 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 983
[2020-11-25 01:53:04,849 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 983
[2020-11-25 01:53:04,849 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2562 states and 2763 transitions.
[2020-11-25 01:53:04,851 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:53:04,851 INFO  L728         BuchiCegarLoop]: Abstraction has 2562 states and 2763 transitions.
[2020-11-25 01:53:04,854 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2562 states and 2763 transitions.
[2020-11-25 01:53:04,874 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2562 to 2560.
[2020-11-25 01:53:04,874 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2560 states.
[2020-11-25 01:53:04,876 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2560 states to 2560 states and 2761 transitions.
[2020-11-25 01:53:04,877 INFO  L751         BuchiCegarLoop]: Abstraction has 2560 states and 2761 transitions.
[2020-11-25 01:53:04,877 INFO  L631         BuchiCegarLoop]: Abstraction has 2560 states and 2761 transitions.
[2020-11-25 01:53:04,877 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:53:04,877 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2560 states and 2761 transitions.
[2020-11-25 01:53:04,890 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:53:04,891 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:53:04,891 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:53:04,893 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:53:04,893 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_MyToken0 := false;
[L2]                 call_allowance_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND TRUE   __exception
[L1103]              __tmp__Balance := Balance;
[L1104]              __tmp__DType := DType;
[L1105]              __tmp__Alloc := Alloc;
[L1106]              __tmp__balance_ADDR := balance_ADDR;
[L1107]              __tmp__M_Ref_int := M_Ref_int;
[L1108]              __tmp__sum_balances0 := sum_balances0;
[L1109]              __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L1110]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1111]              __tmp__sum_allowed1 := sum_allowed1;
[L1112]              __tmp__Length := Length;
[L1113]              __tmp__now := now;
[L1114]              __tmp__owner_Owned := owner_Owned;
[L1115]              __tmp__newOwner_Owned := newOwner_Owned;
[L1116]              __tmp__symbol_MyToken := symbol_MyToken;
[L1117]              __tmp__name_MyToken := name_MyToken;
[L1118]              __tmp__decimals_MyToken := decimals_MyToken;
[L1119]              __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L1120]              __tmp__balances_MyToken := balances_MyToken;
[L1121]              __tmp__allowed_MyToken := allowed_MyToken;
[L1122]  CALL        call remaining_s490 := allowance~address~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2430]              remaining_s490 := __tmp__allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1122]  RET         call remaining_s490 := allowance~address~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1123]              assume revert || gas < 0;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND TRUE   choice == 13
[L4030]              gas := gas - 21000;
[L4031]  COND TRUE   gas >= 0
[L4032]              assume msgvalue_MSG == 0;
[L4033]  CALL        call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_MyToken[this][tokenOwner_s490][spender_s490] >= 0 && allowed_MyToken[this][tokenOwner_s490][spender_s490] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_MyToken0 := true;
[L2]                 call_allowance_MyToken0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND TRUE   __exception
[L1103]              __tmp__Balance := Balance;
[L1104]              __tmp__DType := DType;
[L1105]              __tmp__Alloc := Alloc;
[L1106]              __tmp__balance_ADDR := balance_ADDR;
[L1107]              __tmp__M_Ref_int := M_Ref_int;
[L1108]              __tmp__sum_balances0 := sum_balances0;
[L1109]              __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L1110]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1111]              __tmp__sum_allowed1 := sum_allowed1;
[L1112]              __tmp__Length := Length;
[L1113]              __tmp__now := now;
[L1114]              __tmp__owner_Owned := owner_Owned;
[L1115]              __tmp__newOwner_Owned := newOwner_Owned;
[L1116]              __tmp__symbol_MyToken := symbol_MyToken;
[L1117]              __tmp__name_MyToken := name_MyToken;
[L1118]              __tmp__decimals_MyToken := decimals_MyToken;
[L1119]              __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L1120]              __tmp__balances_MyToken := balances_MyToken;
[L1121]              __tmp__allowed_MyToken := allowed_MyToken;
[L1122]  CALL        call remaining_s490 := allowance~address~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L2430]              remaining_s490 := __tmp__allowed_MyToken[this][tokenOwner_s490][spender_s490];
[L1122]  RET         call remaining_s490 := allowance~address~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L1123]              assume revert || gas < 0;
[L4033]  RET         call remaining_s490 := allowance~address~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s490, spender_s490);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:53:04,896 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:53:04,897 INFO  L82        PathProgramCache]: Analyzing trace with hash 1441628223, now seen corresponding path program 1 times
[2020-11-25 01:53:04,897 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:53:04,907 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:53:04,945 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:53:04,945 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:53:04,945 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:53:04,946 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:53:04,946 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:53:04,946 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:53:04,946 INFO  L87              Difference]: Start difference. First operand 2560 states and 2761 transitions. cyclomatic complexity: 203 Second operand 5 states.
[2020-11-25 01:53:05,261 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:53:05,261 INFO  L93              Difference]: Finished difference Result 1719 states and 1852 transitions.
[2020-11-25 01:53:05,262 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:53:05,262 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1719 states and 1852 transitions.
[2020-11-25 01:53:05,265 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:53:05,265 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1719 states to 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:53:05,265 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:53:05,265 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:53:05,265 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:53:05,265 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:53:05,265 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:53:05,265 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:53:05,268 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:53:05 BasicIcfg
[2020-11-25 01:53:05,268 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:53:05,269 INFO  L168              Benchmark]: Toolchain (without parser) took 4341.14 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 402.7 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -387.9 MB). Peak memory consumption was 14.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,269 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,270 INFO  L168              Benchmark]: Boogie Preprocessor took 100.04 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,270 INFO  L168              Benchmark]: UtopiaSpecLang took 66.18 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,270 INFO  L168              Benchmark]: Boogie Printer took 15.66 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,270 INFO  L168              Benchmark]: RCFGBuilder took 779.73 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.3 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,271 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.58 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,271 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1289.78 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -200.2 MB). Peak memory consumption was 173.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,271 INFO  L168              Benchmark]: BlockEncodingV2 took 121.49 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 944.5 MB in the end (delta: 58.5 MB). Peak memory consumption was 58.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,272 INFO  L168              Benchmark]: BuchiAutomizer took 1922.68 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 214.4 MB). Free memory was 944.5 MB in the beginning and 1.3 GB in the end (delta: -384.0 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:53:05,274 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3568 locations, 6124 edges
  - StatisticsResult: Encoded RCFG
    3512 locations, 5976 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 100.04 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 66.18 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.66 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 779.73 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.3 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.58 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1289.78 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -200.2 MB). Peak memory consumption was 173.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 121.49 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 944.5 MB in the end (delta: 58.5 MB). Peak memory consumption was 58.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1922.68 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 214.4 MB). Free memory was 944.5 MB in the beginning and 1.3 GB in the end (delta: -384.0 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1504 locations, 1890 edges
  - StatisticsResult: BuchiProgram size
    3568 locations, 6124 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.8s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 851 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2571 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10043 SDtfs, 8404 SDslu, 12266 SDs, 0 SdLazy, 1960 SolverSat, 1759 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_MyToken0) ==> ( <>(success_allowance_MyToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
