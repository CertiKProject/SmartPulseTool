This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:44:33,656 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:44:33,658 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:44:33,669 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:44:33,669 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:44:33,670 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:44:33,671 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:44:33,673 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:44:33,674 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:44:33,675 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:44:33,676 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:44:33,677 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:44:33,677 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:44:33,679 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:44:33,680 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:44:33,680 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:44:33,681 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:44:33,682 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:44:33,684 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:44:33,685 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:44:33,686 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:44:33,687 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:44:33,689 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:44:33,689 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:44:33,689 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:44:33,690 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:44:33,690 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:44:33,691 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:44:33,691 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:44:33,692 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:44:33,692 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:44:33,693 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:44:33,693 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:44:33,694 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:44:33,695 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:44:33,695 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:44:33,696 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:44:33,696 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:44:33,696 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:44:33,697 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:44:33,697 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:44:33,697 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:44:33,705 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:44:33,706 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:44:33,706 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:44:33,706 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:44:33,707 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:44:33,707 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:44:33,707 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:44:33,708 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:44:33,708 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:44:33,709 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:44:33,709 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:44:33,709 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:44:33,733 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:44:33,748 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:44:33,750 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:44:33,752 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:44:33,752 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:44:33,753 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl
[2020-11-25 18:44:33,753 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl'
[2020-11-25 18:44:33,837 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:44:33,838 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:44:33,838 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:44:33,838 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:44:33,838 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:44:33,858 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,861 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,901 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,902 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,924 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,935 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,945 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,956 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:44:33,956 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:44:33,956 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:44:33,959 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:44:33,962 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/1) ...
[2020-11-25 18:44:33,985 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:44:33,990 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:44:33,998 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:44:34,007 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s528 || p2!=msg.sender ) && _from_s528==_to_s528 ) && _value_s528<=balanceOf_TokenERC20[this][_from_s528] ) && _value_s528<=allowance_TokenERC20[this][_from_s528][msg.sender] ) && _value_s528>=0 ) && _value_s528<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s528]>=0 ) && balanceOf_TokenERC20[this][_to_s528]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s528]>=0 ) && balanceOf_TokenERC20[this][_from_s528]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s528][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s528][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 18:44:34,013 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s528==true && allowance_TokenERC20[this][_from_s528][msg.sender]==( ( old(allowance_TokenERC20[this][_from_s528][msg.sender]) ) - _value_s528 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && frozenAccount_ITEN[this]==( old(frozenAccount_ITEN[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && released_TokenERC20[this]==( old(released_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s528,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s528,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_ITEN,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_ITEN,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-25 18:44:34,021 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:44:34,021 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:44:34,032 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:44:34 PropertyContainer
[2020-11-25 18:44:34,032 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:44:34,033 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:44:34,033 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:44:34,033 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:44:34,034 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/2) ...
[2020-11-25 18:44:34,034 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:44:34,035 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:44:34,054 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:44:34" (2/2) ...
[2020-11-25 18:44:34,054 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:44:34,055 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:44:34,055 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:44:34,055 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:44:34,056 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/2) ...
[2020-11-25 18:44:34,115 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:44:34,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,116 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 18:44:34,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 18:44:34,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 18:44:34,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 18:44:34,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 18:44:34,117 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 18:44:34,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20
[2020-11-25 18:44:34,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 18:44:34,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 18:44:34,118 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 18:44:34,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 18:44:34,119 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 18:44:34,119 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 18:44:34,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 18:44:34,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 18:44:34,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 18:44:34,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20
[2020-11-25 18:44:34,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 18:44:34,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 18:44:34,120 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 18:44:34,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN_NoBaseCtor__success
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN
[2020-11-25 18:44:34,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ITEN__success
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN
[2020-11-25 18:44:34,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN
[2020-11-25 18:44:34,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN
[2020-11-25 18:44:34,121 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN
[2020-11-25 18:44:34,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__success
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 18:44:34,122 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ITEN
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:44:34,123 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 18:44:34,124 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__success
[2020-11-25 18:44:34,125 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__fail
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,126 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 18:44:34,127 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__success
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN_NoBaseCtor__fail
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN__success
[2020-11-25 18:44:34,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ITEN__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN__success
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN__success
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN__success
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:44:34,129 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:44:34,130 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:44:34,130 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:44:34,130 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__fail
[2020-11-25 18:44:34,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:44:34,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:44:34,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:44:34,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:44:34,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:44:34,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:44:34,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 18:44:34,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__success
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 18:44:34,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__fail
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 18:44:34,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN_NoBaseCtor__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN_NoBaseCtor__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ITEN__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ITEN__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN__fail
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN__success
[2020-11-25 18:44:34,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN__success
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__fail
[2020-11-25 18:44:34,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__success
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ITEN
[2020-11-25 18:44:34,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:44:34,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:44:34,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:44:34,542 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:44:34,542 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:44:34,542 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:44:34,612 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:44:34,879 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:44:34,879 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 18:44:34,882 INFO  L202        PluginConnector]: Adding new model ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:44:34 BoogieIcfgContainer
[2020-11-25 18:44:34,882 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:44:34" (2/2) ...
[2020-11-25 18:44:34,882 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:44:34,882 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@215f0eab and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:44:34, skipping insertion in model container
[2020-11-25 18:44:34,882 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:44:34,883 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:44:34,883 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:44:34,884 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:44:34,884 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/3) ...
[2020-11-25 18:44:34,885 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@18710cfa and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:44:34, skipping insertion in model container
[2020-11-25 18:44:34,885 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:44:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:44:34,926 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:44:34 NWAContainer
[2020-11-25 18:44:34,926 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:44:34,926 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:44:34,926 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:44:34,927 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:44:34,928 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:44:34" (3/4) ...
[2020-11-25 18:44:34,929 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@545c7d13 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:44:34, skipping insertion in model container
[2020-11-25 18:44:34,929 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:44:34" (4/4) ...
[2020-11-25 18:44:34,932 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:44:34,937 INFO  L110   BuchiProductObserver]: Initial RCFG 1829 locations, 2458 edges
[2020-11-25 18:44:34,937 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:44:34,951 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:44:36,420 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:44:36,426 INFO  L110   BuchiProductObserver]: BuchiProgram size 4504 locations, 8011 edges
[2020-11-25 18:44:36,426 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:44:36 BoogieIcfgContainer
[2020-11-25 18:44:36,426 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:44:36,426 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:44:36,426 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:44:36,428 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:44:36,429 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:44:36" (1/1) ...
[2020-11-25 18:44:36,531 INFO  L313           BlockEncoder]: Initial Icfg 4504 locations, 8011 edges
[2020-11-25 18:44:36,531 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:44:36,531 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:44:36,532 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:44:36,532 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:44:36,545 INFO  L70    emoveInfeasibleEdges]: Removed 78 edges and 13 locations because of local infeasibility
[2020-11-25 18:44:36,554 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 18:44:36,566 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:44:36,569 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:44:36,573 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:44:36,574 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:44:36,578 INFO  L313           BlockEncoder]: Encoded RCFG 4452 locations, 7875 edges
[2020-11-25 18:44:36,579 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:44:36 BasicIcfg
[2020-11-25 18:44:36,579 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:44:36,579 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:44:36,579 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:44:36,581 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:44:36,581 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,581 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:44:33" (1/6) ...
[2020-11-25 18:44:36,583 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51921736 and model type ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:44:36, skipping insertion in model container
[2020-11-25 18:44:36,583 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,583 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:44:34" (2/6) ...
[2020-11-25 18:44:36,584 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51921736 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:44:36, skipping insertion in model container
[2020-11-25 18:44:36,584 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,584 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:44:34" (3/6) ...
[2020-11-25 18:44:36,584 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51921736 and model type ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:44:36, skipping insertion in model container
[2020-11-25 18:44:36,584 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,584 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:44:34" (4/6) ...
[2020-11-25 18:44:36,585 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51921736 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:44:36, skipping insertion in model container
[2020-11-25 18:44:36,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:44:36" (5/6) ...
[2020-11-25 18:44:36,585 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51921736 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:44:36, skipping insertion in model container
[2020-11-25 18:44:36,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:44:36,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:44:36" (6/6) ...
[2020-11-25 18:44:36,586 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_transferfrom-self.bpl_BEv2
[2020-11-25 18:44:36,620 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:44:36,620 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:44:36,620 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:44:36,620 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:44:36,620 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:44:36,621 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:44:36,621 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:44:36,621 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:44:36,621 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:44:36,655 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 18:44:36,720 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:44:36,721 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:36,721 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:36,731 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:36,731 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:36,731 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:44:36,731 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 18:44:36,758 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:44:36,758 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:36,758 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:36,760 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:36,760 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND FALSE  !(gas >= 0)
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:36,778 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:36,779 INFO  L82        PathProgramCache]: Analyzing trace with hash 615047721, now seen corresponding path program 1 times
[2020-11-25 18:44:36,783 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:36,817 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:36,865 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:44:36,866 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:36,866 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:44:37,157 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:37,166 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:44:37,167 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:44:37,168 INFO  L87              Difference]: Start difference. First operand 4452 states. Second operand 4 states.
[2020-11-25 18:44:37,600 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:37,600 INFO  L93              Difference]: Finished difference Result 3104 states and 3565 transitions.
[2020-11-25 18:44:37,600 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:44:37,601 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3104 states and 3565 transitions.
[2020-11-25 18:44:37,618 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:44:37,640 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3104 states to 3102 states and 3561 transitions.
[2020-11-25 18:44:37,641 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 18:44:37,643 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 711
[2020-11-25 18:44:37,644 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3102 states and 3561 transitions.
[2020-11-25 18:44:37,657 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:37,657 INFO  L728         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:44:37,676 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3102 states and 3561 transitions.
[2020-11-25 18:44:37,732 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3102 to 3102.
[2020-11-25 18:44:37,733 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3102 states.
[2020-11-25 18:44:37,739 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3102 states to 3102 states and 3561 transitions.
[2020-11-25 18:44:37,740 INFO  L751         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:44:37,740 INFO  L631         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:44:37,740 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:44:37,740 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3102 states and 3561 transitions.
[2020-11-25 18:44:37,749 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:44:37,749 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:37,749 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:37,752 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:37,752 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L768]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2815]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2815]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND TRUE   revert
[L768]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L769]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s528 == true && allowance_TokenERC20[this][_from_s528][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s528][msgsender_MSG]) - _value_s528) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L768]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2815]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2815]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND TRUE   revert
[L768]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L769]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s528 == true && allowance_TokenERC20[this][_from_s528][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s528][msgsender_MSG]) - _value_s528) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:37,758 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:37,758 INFO  L82        PathProgramCache]: Analyzing trace with hash 749525583, now seen corresponding path program 1 times
[2020-11-25 18:44:37,759 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:37,769 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:37,797 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:44:37,798 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:37,798 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:44:37,799 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:37,799 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:44:37,799 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:44:37,800 INFO  L87              Difference]: Start difference. First operand 3102 states and 3561 transitions. cyclomatic complexity: 461 Second operand 4 states.
[2020-11-25 18:44:38,723 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:38,723 INFO  L93              Difference]: Finished difference Result 4524 states and 5227 transitions.
[2020-11-25 18:44:38,723 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:44:38,724 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4524 states and 5227 transitions.
[2020-11-25 18:44:38,742 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 18:44:38,764 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4524 states to 4254 states and 4887 transitions.
[2020-11-25 18:44:38,764 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 953
[2020-11-25 18:44:38,765 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 999
[2020-11-25 18:44:38,765 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4254 states and 4887 transitions.
[2020-11-25 18:44:38,772 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:38,772 INFO  L728         BuchiCegarLoop]: Abstraction has 4254 states and 4887 transitions.
[2020-11-25 18:44:38,775 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4254 states and 4887 transitions.
[2020-11-25 18:44:38,808 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4254 to 3220.
[2020-11-25 18:44:38,808 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3220 states.
[2020-11-25 18:44:38,812 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3220 states to 3220 states and 3553 transitions.
[2020-11-25 18:44:38,812 INFO  L751         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 18:44:38,812 INFO  L631         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 18:44:38,812 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:44:38,812 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3220 states and 3553 transitions.
[2020-11-25 18:44:38,819 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:44:38,819 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:38,819 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:38,821 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:38,822 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:38,825 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:38,825 INFO  L82        PathProgramCache]: Analyzing trace with hash -195348677, now seen corresponding path program 1 times
[2020-11-25 18:44:38,826 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:38,840 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:38,946 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 18:44:38,946 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:38,947 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 18:44:38,947 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:38,947 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 18:44:38,948 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-25 18:44:38,948 INFO  L87              Difference]: Start difference. First operand 3220 states and 3553 transitions. cyclomatic complexity: 335 Second operand 13 states.
[2020-11-25 18:44:41,207 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:41,208 INFO  L93              Difference]: Finished difference Result 5314 states and 5923 transitions.
[2020-11-25 18:44:41,208 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 18:44:41,208 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5314 states and 5923 transitions.
[2020-11-25 18:44:41,218 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 18:44:41,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5314 states to 5314 states and 5923 transitions.
[2020-11-25 18:44:41,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1291
[2020-11-25 18:44:41,234 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1291
[2020-11-25 18:44:41,234 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5314 states and 5923 transitions.
[2020-11-25 18:44:41,239 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:41,239 INFO  L728         BuchiCegarLoop]: Abstraction has 5314 states and 5923 transitions.
[2020-11-25 18:44:41,242 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5314 states and 5923 transitions.
[2020-11-25 18:44:41,271 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5314 to 3256.
[2020-11-25 18:44:41,271 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3256 states.
[2020-11-25 18:44:41,275 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3256 states to 3256 states and 3596 transitions.
[2020-11-25 18:44:41,275 INFO  L751         BuchiCegarLoop]: Abstraction has 3256 states and 3596 transitions.
[2020-11-25 18:44:41,275 INFO  L631         BuchiCegarLoop]: Abstraction has 3256 states and 3596 transitions.
[2020-11-25 18:44:41,275 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:44:41,275 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3256 states and 3596 transitions.
[2020-11-25 18:44:41,279 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 18:44:41,279 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:41,279 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:41,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:41,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND TRUE   !(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG])
[L2785]              revert := true;
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND TRUE   !(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG])
[L2785]              revert := true;
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:41,284 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:41,284 INFO  L82        PathProgramCache]: Analyzing trace with hash -1983540223, now seen corresponding path program 1 times
[2020-11-25 18:44:41,285 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:41,295 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:41,400 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 18:44:41,401 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:41,401 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 18:44:41,401 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:41,401 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 18:44:41,401 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=156, Unknown=0, NotChecked=0, Total=182
[2020-11-25 18:44:41,401 INFO  L87              Difference]: Start difference. First operand 3256 states and 3596 transitions. cyclomatic complexity: 344 Second operand 14 states.
[2020-11-25 18:44:43,423 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:43,423 INFO  L93              Difference]: Finished difference Result 3506 states and 3953 transitions.
[2020-11-25 18:44:43,423 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 18:44:43,424 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3506 states and 3953 transitions.
[2020-11-25 18:44:43,431 INFO  L131   ngComponentsAnalysis]: Automaton has 7 accepting balls. 14
[2020-11-25 18:44:43,443 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3506 states to 3506 states and 3953 transitions.
[2020-11-25 18:44:43,443 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 890
[2020-11-25 18:44:43,444 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 890
[2020-11-25 18:44:43,444 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3506 states and 3953 transitions.
[2020-11-25 18:44:43,448 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:43,448 INFO  L728         BuchiCegarLoop]: Abstraction has 3506 states and 3953 transitions.
[2020-11-25 18:44:43,451 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3506 states and 3953 transitions.
[2020-11-25 18:44:43,474 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3506 to 3416.
[2020-11-25 18:44:43,474 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3416 states.
[2020-11-25 18:44:43,477 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3416 states to 3416 states and 3796 transitions.
[2020-11-25 18:44:43,477 INFO  L751         BuchiCegarLoop]: Abstraction has 3416 states and 3796 transitions.
[2020-11-25 18:44:43,477 INFO  L631         BuchiCegarLoop]: Abstraction has 3416 states and 3796 transitions.
[2020-11-25 18:44:43,477 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:44:43,477 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3416 states and 3796 transitions.
[2020-11-25 18:44:43,481 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 18:44:43,481 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:43,481 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:43,482 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:43,482 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND TRUE   !(b_s82 <= a_s82)
[L2262]              revert := true;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND FALSE  !(gas >= 0)
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:43,486 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:43,486 INFO  L82        PathProgramCache]: Analyzing trace with hash 855932135, now seen corresponding path program 1 times
[2020-11-25 18:44:43,486 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:43,495 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:43,568 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 18:44:43,568 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:43,568 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 18:44:43,569 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:43,569 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 18:44:43,569 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=182, Unknown=0, NotChecked=0, Total=210
[2020-11-25 18:44:43,569 INFO  L87              Difference]: Start difference. First operand 3416 states and 3796 transitions. cyclomatic complexity: 388 Second operand 15 states.
[2020-11-25 18:44:45,272 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:45,273 INFO  L93              Difference]: Finished difference Result 3512 states and 3972 transitions.
[2020-11-25 18:44:45,273 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 18:44:45,273 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3512 states and 3972 transitions.
[2020-11-25 18:44:45,280 INFO  L131   ngComponentsAnalysis]: Automaton has 7 accepting balls. 14
[2020-11-25 18:44:45,289 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3512 states to 3512 states and 3972 transitions.
[2020-11-25 18:44:45,289 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 893
[2020-11-25 18:44:45,290 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 893
[2020-11-25 18:44:45,290 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3512 states and 3972 transitions.
[2020-11-25 18:44:45,293 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:45,293 INFO  L728         BuchiCegarLoop]: Abstraction has 3512 states and 3972 transitions.
[2020-11-25 18:44:45,295 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3512 states and 3972 transitions.
[2020-11-25 18:44:45,318 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3512 to 3416.
[2020-11-25 18:44:45,318 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3416 states.
[2020-11-25 18:44:45,321 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3416 states to 3416 states and 3796 transitions.
[2020-11-25 18:44:45,322 INFO  L751         BuchiCegarLoop]: Abstraction has 3416 states and 3796 transitions.
[2020-11-25 18:44:45,322 INFO  L631         BuchiCegarLoop]: Abstraction has 3416 states and 3796 transitions.
[2020-11-25 18:44:45,322 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:44:45,322 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3416 states and 3796 transitions.
[2020-11-25 18:44:45,325 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 18:44:45,325 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:45,325 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:45,327 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:45,327 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND FALSE  !(!(b_s82 <= a_s82))
[L2265]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2266]              __ret_0_ := c_s82;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND FALSE  !(revert)
[L2792]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] - __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2793]              __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG] := __var_10;
[L2794]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] + __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2795]  COND FALSE  !(__tmp__DType[this] == ITEN)
[L2800]  COND TRUE   __tmp__DType[this] == TokenERC20
[L2801]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2533]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2533]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2534]  COND FALSE  !(revert)
[L2537]              __var_2 := null;
[L2538]  COND TRUE   !(_to_s379 != null)
[L2539]              revert := true;
[L2801]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2802]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND FALSE  !(!(b_s82 <= a_s82))
[L2265]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2266]              __ret_0_ := c_s82;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND FALSE  !(revert)
[L2792]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] - __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2793]              __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG] := __var_10;
[L2794]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] + __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2795]  COND FALSE  !(__tmp__DType[this] == ITEN)
[L2800]  COND TRUE   __tmp__DType[this] == TokenERC20
[L2801]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2533]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2533]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2534]  COND FALSE  !(revert)
[L2537]              __var_2 := null;
[L2538]  COND TRUE   !(_to_s379 != null)
[L2539]              revert := true;
[L2801]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2802]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:45,330 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:45,330 INFO  L82        PathProgramCache]: Analyzing trace with hash -802952165, now seen corresponding path program 1 times
[2020-11-25 18:44:45,331 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:45,339 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:45,369 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:44:45,370 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:45,370 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 18:44:45,370 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:44:45,370 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 18:44:45,370 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 18:44:45,370 INFO  L87              Difference]: Start difference. First operand 3416 states and 3796 transitions. cyclomatic complexity: 388 Second operand 7 states.
[2020-11-25 18:44:45,882 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:45,882 INFO  L93              Difference]: Finished difference Result 4868 states and 5518 transitions.
[2020-11-25 18:44:45,882 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 18:44:45,882 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4868 states and 5518 transitions.
[2020-11-25 18:44:45,891 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 12
[2020-11-25 18:44:45,902 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4868 states to 4830 states and 5469 transitions.
[2020-11-25 18:44:45,902 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1215
[2020-11-25 18:44:45,903 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1215
[2020-11-25 18:44:45,903 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4830 states and 5469 transitions.
[2020-11-25 18:44:45,906 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:45,906 INFO  L728         BuchiCegarLoop]: Abstraction has 4830 states and 5469 transitions.
[2020-11-25 18:44:45,909 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4830 states and 5469 transitions.
[2020-11-25 18:44:45,939 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4830 to 4750.
[2020-11-25 18:44:45,939 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4750 states.
[2020-11-25 18:44:45,944 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4750 states to 4750 states and 5389 transitions.
[2020-11-25 18:44:45,944 INFO  L751         BuchiCegarLoop]: Abstraction has 4750 states and 5389 transitions.
[2020-11-25 18:44:45,944 INFO  L631         BuchiCegarLoop]: Abstraction has 4750 states and 5389 transitions.
[2020-11-25 18:44:45,944 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 18:44:45,944 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4750 states and 5389 transitions.
[2020-11-25 18:44:45,949 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 12
[2020-11-25 18:44:45,949 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:45,949 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:45,950 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:45,950 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND FALSE  !(!(b_s82 <= a_s82))
[L2265]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2266]              __ret_0_ := c_s82;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND FALSE  !(revert)
[L2792]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] - __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2793]              __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG] := __var_10;
[L2794]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] + __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2795]  COND TRUE   __tmp__DType[this] == ITEN
[L2796]  CALL        call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3124]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L3124]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3125]  COND FALSE  !(revert)
[L3128]              __var_16 := null;
[L3129]  COND TRUE   !(_to_s760 != null)
[L3130]              revert := true;
[L2796]  RET         call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2797]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND FALSE  !(gas >= 0)
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:45,953 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:45,953 INFO  L82        PathProgramCache]: Analyzing trace with hash -607898211, now seen corresponding path program 1 times
[2020-11-25 18:44:45,954 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:45,967 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:45,979 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,039 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:46,039 INFO  L82        PathProgramCache]: Analyzing trace with hash 1050005831, now seen corresponding path program 1 times
[2020-11-25 18:44:46,039 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:46,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:44:46,046 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:44:46,046 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:44:46,046 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:44:46,047 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 18:44:46,047 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:44:46,047 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:44:46,047 INFO  L87              Difference]: Start difference. First operand 4750 states and 5389 transitions. cyclomatic complexity: 653 Second operand 4 states.
[2020-11-25 18:44:46,254 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:44:46,254 INFO  L93              Difference]: Finished difference Result 5082 states and 5777 transitions.
[2020-11-25 18:44:46,254 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:44:46,254 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5082 states and 5777 transitions.
[2020-11-25 18:44:46,271 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 24
[2020-11-25 18:44:46,286 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5082 states to 5082 states and 5777 transitions.
[2020-11-25 18:44:46,286 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1213
[2020-11-25 18:44:46,287 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1213
[2020-11-25 18:44:46,287 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5082 states and 5777 transitions.
[2020-11-25 18:44:46,290 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:44:46,290 INFO  L728         BuchiCegarLoop]: Abstraction has 5082 states and 5777 transitions.
[2020-11-25 18:44:46,293 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5082 states and 5777 transitions.
[2020-11-25 18:44:46,330 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5082 to 4752.
[2020-11-25 18:44:46,330 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4752 states.
[2020-11-25 18:44:46,335 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4752 states to 4752 states and 5318 transitions.
[2020-11-25 18:44:46,336 INFO  L751         BuchiCegarLoop]: Abstraction has 4752 states and 5318 transitions.
[2020-11-25 18:44:46,336 INFO  L631         BuchiCegarLoop]: Abstraction has 4752 states and 5318 transitions.
[2020-11-25 18:44:46,336 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 18:44:46,336 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4752 states and 5318 transitions.
[2020-11-25 18:44:46,343 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 12
[2020-11-25 18:44:46,343 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:44:46,343 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:44:46,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:44:46,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND FALSE  !(choice == 9)
[L4867]  COND FALSE  !(choice == 8)
[L4874]  COND FALSE  !(choice == 7)
[L4881]  COND TRUE   choice == 6
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume _value_s528 >= 0 && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND FALSE  !(!(b_s82 <= a_s82))
[L2265]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2266]              __ret_0_ := c_s82;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND FALSE  !(revert)
[L2792]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] - __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2793]              __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG] := __var_10;
[L2794]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] + __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2795]  COND TRUE   __tmp__DType[this] == ITEN
[L2796]  CALL        call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3124]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L3124]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3125]  COND FALSE  !(revert)
[L3128]              __var_16 := null;
[L3129]  COND TRUE   !(_to_s760 != null)
[L3130]              revert := true;
[L2796]  RET         call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2797]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume msgvalue_MSG == 0;
[L4804]  CALL        call __ret_0_owner := owner_owned(this, msgsender_MSG, msgvalue_MSG);
[L272]               havoc __exception;
[L273]               revert := false;
[L274]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := owner_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2388]              __ret_0_ := owner_owned[this];
[L300]   RET         call __ret_0_ := owner_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L4804]  RET         call __ret_0_owner := owner_owned(this, msgsender_MSG, msgvalue_MSG);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:44:46,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:46,347 INFO  L82        PathProgramCache]: Analyzing trace with hash -607898211, now seen corresponding path program 2 times
[2020-11-25 18:44:46,347 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:46,358 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,370 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,393 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:46,393 INFO  L82        PathProgramCache]: Analyzing trace with hash -1714762706, now seen corresponding path program 1 times
[2020-11-25 18:44:46,394 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:46,397 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,399 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,404 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:44:46,405 INFO  L82        PathProgramCache]: Analyzing trace with hash -575801070, now seen corresponding path program 1 times
[2020-11-25 18:44:46,405 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:44:46,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:44:46,431 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 18:44:46,802 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
[2020-11-25 18:44:47,147 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification. DAG size of input: 156 DAG size of output: 152
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 18:44:47,744 WARN  L188               SmtUtils]: Spent 188.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 180
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 18:44:47,930 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification. DAG size of input: 133 DAG size of output: 127
[2020-11-25 18:44:48,129 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 18:44:49,003 WARN  L188               SmtUtils]: Spent 864.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 242
[2020-11-25 18:44:50,306 WARN  L188               SmtUtils]: Spent 1.30 s on a formula simplification. DAG size of input: 323 DAG size of output: 281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 18:44:51,617 WARN  L188               SmtUtils]: Spent 1.28 s on a formula simplification. DAG size of input: 225 DAG size of output: 190
[2020-11-25 18:44:52,390 WARN  L188               SmtUtils]: Spent 772.00 ms on a formula simplification that was a NOOP. DAG size: 366
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 18:44:54,159 WARN  L188               SmtUtils]: Spent 1.75 s on a formula simplification. DAG size of input: 314 DAG size of output: 298
[2020-11-25 18:44:56,572 WARN  L188               SmtUtils]: Spent 2.41 s on a formula simplification. DAG size of input: 512 DAG size of output: 500
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 12073 to 24137
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 18:44:57,542 WARN  L188               SmtUtils]: Spent 930.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 221
[2020-11-25 18:44:58,177 WARN  L188               SmtUtils]: Spent 617.00 ms on a formula simplification that was a NOOP. DAG size: 335
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 18:44:59,369 WARN  L188               SmtUtils]: Spent 1.18 s on a formula simplification. DAG size of input: 288 DAG size of output: 228
[2020-11-25 18:45:00,203 WARN  L188               SmtUtils]: Spent 832.00 ms on a formula simplification. DAG size of input: 344 DAG size of output: 343
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 14051 to 28099
Garbage collection #9: 28099 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 28099 to 56197
[2020-11-25 18:45:01,928 WARN  L188               SmtUtils]: Spent 1.71 s on a formula simplification. DAG size of input: 349 DAG size of output: 338
[2020-11-25 18:45:01,939 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:45:01,954 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:45:01,961 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:45:01 BasicIcfg
[2020-11-25 18:45:01,961 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:45:01,961 INFO  L168              Benchmark]: Toolchain (without parser) took 28124.40 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.4 GB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -166.4 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,962 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,962 INFO  L168              Benchmark]: Boogie Preprocessor took 117.86 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,962 INFO  L168              Benchmark]: UtopiaSpecLang took 76.05 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 903.0 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,962 INFO  L168              Benchmark]: Boogie Printer took 21.97 ms. Allocated memory is still 1.0 GB. Free memory is still 903.0 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,963 INFO  L168              Benchmark]: RCFGBuilder took 827.40 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 774.1 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,963 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.40 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,964 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1499.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 770.5 MB in the beginning and 913.4 MB in the end (delta: -142.8 MB). Peak memory consumption was 170.0 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,964 INFO  L168              Benchmark]: BlockEncodingV2 took 152.48 ms. Allocated memory is still 1.2 GB. Free memory was 913.4 MB in the beginning and 832.7 MB in the end (delta: 80.6 MB). Peak memory consumption was 80.6 MB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,964 INFO  L168              Benchmark]: BuchiAutomizer took 25382.11 ms. Allocated memory was 1.2 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 832.7 MB in the beginning and 1.1 GB in the end (delta: -274.3 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 18:45:01,967 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4504 locations, 8011 edges
  - StatisticsResult: Encoded RCFG
    4452 locations, 7875 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 117.86 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 76.05 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 903.0 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.97 ms. Allocated memory is still 1.0 GB. Free memory is still 903.0 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 827.40 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 774.1 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.40 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1499.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 770.5 MB in the beginning and 913.4 MB in the end (delta: -142.8 MB). Peak memory consumption was 170.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 152.48 ms. Allocated memory is still 1.2 GB. Free memory was 913.4 MB in the beginning and 832.7 MB in the end (delta: 80.6 MB). Peak memory consumption was 80.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 25382.11 ms. Allocated memory was 1.2 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 832.7 MB in the beginning and 1.1 GB in the end (delta: -274.3 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1829 locations, 2458 edges
  - StatisticsResult: BuchiProgram size
    4504 locations, 8011 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.7 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 4752 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 25.3s and 8 iterations.  TraceHistogramMax:2. Analysis of lassos took 16.5s. Construction of modules took 6.0s. BÃ¼chi inclusion checks took 1.9s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 7 MinimizatonAttempts, 3688 StatesRemovedByMinimization, 6 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4752 states and ocurred in iteration 7.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 26082 SDtfs, 31922 SDslu, 49713 SDs, 0 SdLazy, 100991 SolverSat, 5482 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 6.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(500000000000000000000000016) = (new ITEN)({from : 500000000000000000000000015, initialSupply : 500000000000000000000000017, tokenName : 500000000000000000000000011, tokenSymbol : 500000000000000000000000005});
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
TokenERC20(500000000000000000000000016).transferFrom~address~address~uint256.gas(3979002)({from : 500000000000000000000000007, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s528 || p2 != msgsender_MSG) && _from_s528 == _to_s528) && _value_s528 <= balanceOf_TokenERC20[this][_from_s528]) && _value_s528 <= allowance_TokenERC20[this][_from_s528][msgsender_MSG]) && _value_s528 >= 0) && _value_s528 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s528] >= 0) && balanceOf_TokenERC20[this][_to_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s528] >= 0) && balanceOf_TokenERC20[this][_from_s528] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s528][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND TRUE   __exception
[L743]               __tmp__Balance := Balance;
[L744]               __tmp__DType := DType;
[L745]               __tmp__Alloc := Alloc;
[L746]               __tmp__balance_ADDR := balance_ADDR;
[L747]               __tmp__M_Ref_int := M_Ref_int;
[L748]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L749]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L750]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L751]               __tmp__sum_allowance1 := sum_allowance1;
[L752]               __tmp__M_Ref_bool := M_Ref_bool;
[L753]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L754]               __tmp__Length := Length;
[L755]               __tmp__now := now;
[L756]               __tmp__owner_owned := owner_owned;
[L757]               __tmp__name_TokenERC20 := name_TokenERC20;
[L758]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L759]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L760]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L761]               __tmp__released_TokenERC20 := released_TokenERC20;
[L762]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L763]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L764]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L765]   CALL        call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2780]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2780]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2781]  COND FALSE  !(revert)
[L2784]  COND FALSE  !(!(_value_s528 <= __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG]))
[L2788]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2261]  COND FALSE  !(!(b_s82 <= a_s82))
[L2265]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2266]              __ret_0_ := c_s82;
[L2788]  RET         call __var_10 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG], _value_s528);
[L2789]  COND FALSE  !(revert)
[L2792]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] - __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2793]              __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG] := __var_10;
[L2794]              __tmp__sum_allowance1[_from_s528] := __tmp__sum_allowance1[_from_s528] + __tmp__allowance_TokenERC20[this][_from_s528][msgsender_MSG];
[L2795]  COND TRUE   __tmp__DType[this] == ITEN
[L2796]  CALL        call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L3124]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L3124]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3125]  COND FALSE  !(revert)
[L3128]              __var_16 := null;
[L3129]  COND TRUE   !(_to_s760 != null)
[L3130]              revert := true;
[L2796]  RET         call _transfer~address~address~uint256_ITEN__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L2797]  COND TRUE   revert
[L765]   RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);
[L766]               assume revert || gas < 0;
[L4886]  RET         call success_s528 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s528, _to_s528, _value_s528);

Loop:
owned(500000000000000000000000016).owner.gas(3979001)({from : 500000000000000000000000001});
[L272]               havoc __exception;
[L273]               revert := false;
[L274]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := owner_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2388]              __ret_0_ := owner_owned[this];
[L300]   RET         call __ret_0_ := owner_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L4804]  RET         call __ret_0_owner := owner_owned(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
