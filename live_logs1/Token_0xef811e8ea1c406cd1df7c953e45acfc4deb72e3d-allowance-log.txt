This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:59:30,971 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:59:30,972 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:59:30,979 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:59:30,979 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:59:30,979 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:59:30,980 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:59:30,981 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:59:30,982 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:59:30,982 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:59:30,983 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:59:30,983 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:59:30,983 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:59:30,984 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:59:30,985 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:59:30,985 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:59:30,985 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:59:30,986 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:59:30,987 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:59:30,988 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:59:30,988 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:59:30,989 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:59:30,990 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:59:30,990 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:59:30,990 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:59:30,990 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:59:30,991 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:59:30,992 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:59:30,992 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:59:30,992 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:59:30,992 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:59:30,993 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:59:30,993 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:59:30,993 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:59:30,994 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:59:30,994 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:59:30,994 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:59:30,994 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:59:30,994 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:59:30,995 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:59:30,995 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:59:30,995 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:59:31,003 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:59:31,003 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:59:31,004 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:59:31,004 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:59:31,004 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:59:31,004 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:59:31,004 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:59:31,005 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:59:31,005 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:59:31,005 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:59:31,006 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:59:31,006 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:59:31,034 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:59:31,047 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:59:31,050 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:59:31,051 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:59:31,051 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:59:31,052 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl
[2020-11-25 05:59:31,052 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl'
[2020-11-25 05:59:31,116 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:59:31,117 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:59:31,118 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:59:31,118 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:59:31,118 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:59:31,133 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,135 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,156 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,157 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,171 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,178 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,182 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,188 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:59:31,189 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:59:31,189 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:59:31,191 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:59:31,195 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/1) ...
[2020-11-25 05:59:31,208 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Token.allowance(owner, spender), _allowed_Token[this][owner][spender] >= 0 && _allowed_Token[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.allowance(owner, spender), return == _allowed_Token[this][owner][spender] &&  _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-25 05:59:31,215 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Token.allowance(owner, spender), _allowed_Token[this][owner][spender] >= 0 && _allowed_Token[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.allowance(owner, spender), return == _allowed_Token[this][owner][spender] &&  _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-25 05:59:31,223 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Token.allowance(owner, spender), _allowed_Token[this][owner][spender] >= 0 && _allowed_Token[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.allowance(owner, spender), return == _allowed_Token[this][owner][spender] &&  _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-25 05:59:31,228 INFO  L636   opiaSpecLangObserver]: Parsed ( _allowed_Token[this][owner_s297][spender_s297]>=0 && _allowed_Token[this][owner_s297][spender_s297]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[owner_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[spender_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[owner_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[spender_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:59:31,230 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( __ret_0_==_allowed_Token[this][owner_s297][spender_s297] && _totalSupply_Token[this]==( old(_totalSupply_Token[this]) ) ) && _balances_Token[this]==( old(_balances_Token[this]) ) ) && _allowed_Token[this]==( old(_allowed_Token[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_Token>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[owner_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],[IdentifierExpression[spender_s297,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Token>]]]]]]
[2020-11-25 05:59:31,234 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Token.allowance(owner, spender), _allowed_Token[this][owner][spender] >= 0 && _allowed_Token[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.allowance(owner, spender), return == _allowed_Token[this][owner][spender] &&  _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-25 05:59:31,235 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_Token0) ==> ( <>AP(success_allowance_Token0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:59:31,240 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:59:31 PropertyContainer
[2020-11-25 05:59:31,241 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:59:31,241 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:59:31,241 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:59:31,241 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:59:31,242 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/2) ...
[2020-11-25 05:59:31,242 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:59:31,242 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:59:31,251 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:59:31" (2/2) ...
[2020-11-25 05:59:31,251 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:59:31,251 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:59:31,251 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:59:31,251 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:59:31,252 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/2) ...
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:59:31,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,309 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:59:31,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:59:31,310 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token
[2020-11-25 05:59:31,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token
[2020-11-25 05:59:31,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token
[2020-11-25 05:59:31,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token
[2020-11-25 05:59:31,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token
[2020-11-25 05:59:31,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__success
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__success
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token
[2020-11-25 05:59:31,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token
[2020-11-25 05:59:31,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token
[2020-11-25 05:59:31,312 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token
[2020-11-25 05:59:31,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:59:31,313 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__success
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__fail
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__success
[2020-11-25 05:59:31,314 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token__success
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token__fail
[2020-11-25 05:59:31,315 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token__success
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token__success
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token__success
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token__success
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:59:31,316 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__success
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__fail
[2020-11-25 05:59:31,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__success
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token__fail
[2020-11-25 05:59:31,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token__fail
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token__success
[2020-11-25 05:59:31,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:59:31,321 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:59:31,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:59:31,732 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:59:31,733 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:59:31,733 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:59:31,801 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:59:31,802 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 05:59:31,803 INFO  L202        PluginConnector]: Adding new model Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:59:31 BoogieIcfgContainer
[2020-11-25 05:59:31,803 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:59:31" (2/2) ...
[2020-11-25 05:59:31,803 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:59:31,804 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@331c9a15 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:59:31, skipping insertion in model container
[2020-11-25 05:59:31,804 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:59:31,804 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:59:31,804 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:59:31,806 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:59:31,806 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/3) ...
[2020-11-25 05:59:31,806 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2193211b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:59:31, skipping insertion in model container
[2020-11-25 05:59:31,806 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:59:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:59:31,842 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:59:31 NWAContainer
[2020-11-25 05:59:31,842 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:59:31,842 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:59:31,842 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:59:31,843 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:59:31,844 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:59:31" (3/4) ...
[2020-11-25 05:59:31,844 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7d8a3764 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:59:31, skipping insertion in model container
[2020-11-25 05:59:31,845 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:59:31" (4/4) ...
[2020-11-25 05:59:31,847 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:59:31,850 INFO  L110   BuchiProductObserver]: Initial RCFG 826 locations, 1043 edges
[2020-11-25 05:59:31,850 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:59:31,861 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:59:32,794 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:59:32,797 INFO  L110   BuchiProductObserver]: BuchiProgram size 2004 locations, 3389 edges
[2020-11-25 05:59:32,797 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:59:32 BoogieIcfgContainer
[2020-11-25 05:59:32,798 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:59:32,798 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:59:32,798 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:59:32,800 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:59:32,800 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:59:32" (1/1) ...
[2020-11-25 05:59:32,859 INFO  L313           BlockEncoder]: Initial Icfg 2004 locations, 3389 edges
[2020-11-25 05:59:32,860 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:59:32,860 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:59:32,861 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:59:32,861 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:59:32,870 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-25 05:59:32,876 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 05:59:32,884 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:59:32,888 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:59:32,890 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:59:32,890 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:59:32,894 INFO  L313           BlockEncoder]: Encoded RCFG 1982 locations, 3337 edges
[2020-11-25 05:59:32,894 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:59:32 BasicIcfg
[2020-11-25 05:59:32,895 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:59:32,895 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:59:32,895 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:59:32,897 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:59:32,898 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,898 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:59:31" (1/6) ...
[2020-11-25 05:59:32,900 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@693bc598 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:59:32, skipping insertion in model container
[2020-11-25 05:59:32,900 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,900 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:59:31" (2/6) ...
[2020-11-25 05:59:32,900 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@693bc598 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:59:32, skipping insertion in model container
[2020-11-25 05:59:32,900 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,901 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:59:31" (3/6) ...
[2020-11-25 05:59:32,901 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@693bc598 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:59:32, skipping insertion in model container
[2020-11-25 05:59:32,901 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,901 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:59:31" (4/6) ...
[2020-11-25 05:59:32,901 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@693bc598 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:59:32, skipping insertion in model container
[2020-11-25 05:59:32,901 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,901 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:59:32" (5/6) ...
[2020-11-25 05:59:32,902 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@693bc598 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:59:32, skipping insertion in model container
[2020-11-25 05:59:32,902 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:59:32,902 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:59:32" (6/6) ...
[2020-11-25 05:59:32,903 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_allowance.bpl_BEv2
[2020-11-25 05:59:32,942 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:59:32,943 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:59:32,943 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:59:32,943 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:59:32,943 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:59:32,943 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:59:32,943 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:59:32,943 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:59:32,943 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:59:32,968 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1982 states.
[2020-11-25 05:59:33,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:59:33,022 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:33,023 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:33,032 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:33,032 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:33,032 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:59:33,032 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1982 states.
[2020-11-25 05:59:33,046 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:59:33,046 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:33,047 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:33,048 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:33,049 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Token0 := false;
[L2]                 call_allowance_Token0 := false;
[L2]     CALL        call main();
[L2366]              assume null == 0;
[L2367]  CALL        call this := FreshRefGenerator__success();
[L1107]              havoc newRef;
[L1108]              assume Alloc[newRef] == false;
[L1109]              Alloc[newRef] := true;
[L1110]              assume newRef != null;
[L2367]  RET         call this := FreshRefGenerator__success();
[L2368]              assume now >= 0;
[L2369]              assume DType[this] == Token;
[L2370]              assume msgvalue_MSG == 0;
[L2371]              gas := gas - 53000;
[L2372]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1374]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1295]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1280]              assume msgsender_MSG != null;
[L1281]              Balance[this] := 0;
[L1295]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  COND FALSE  !(revert)
[L1374]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1375]  COND TRUE   revert
[L232]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L233]               assume !revert && gas >= 0;
[L2372]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2373]              assume !revert && gas >= 0;

Loop:
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND TRUE   choice == 11
[L2287]              gas := gas - 21000;
[L2288]  COND FALSE  !(gas >= 0)
[L2376]  RET         call CorralChoice_Token(this);

[2020-11-25 05:59:33,072 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:59:33,073 INFO  L82        PathProgramCache]: Analyzing trace with hash 1612515022, now seen corresponding path program 1 times
[2020-11-25 05:59:33,077 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:59:33,101 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:59:33,146 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:59:33,148 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:59:33,149 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:59:33,153 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:59:33,265 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:59:33,267 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:59:33,269 INFO  L87              Difference]: Start difference. First operand 1982 states. Second operand 3 states.
[2020-11-25 05:59:33,413 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:59:33,413 INFO  L93              Difference]: Finished difference Result 2208 states and 3549 transitions.
[2020-11-25 05:59:33,413 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:59:33,415 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2208 states and 3549 transitions.
[2020-11-25 05:59:33,435 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:59:33,463 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2208 states to 2208 states and 3549 transitions.
[2020-11-25 05:59:33,464 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 05:59:33,468 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 651
[2020-11-25 05:59:33,468 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2208 states and 3549 transitions.
[2020-11-25 05:59:33,479 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:59:33,479 INFO  L728         BuchiCegarLoop]: Abstraction has 2208 states and 3549 transitions.
[2020-11-25 05:59:33,496 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2208 states and 3549 transitions.
[2020-11-25 05:59:33,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2208 to 1792.
[2020-11-25 05:59:33,546 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1792 states.
[2020-11-25 05:59:33,553 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1792 states to 1792 states and 2834 transitions.
[2020-11-25 05:59:33,554 INFO  L751         BuchiCegarLoop]: Abstraction has 1792 states and 2834 transitions.
[2020-11-25 05:59:33,554 INFO  L631         BuchiCegarLoop]: Abstraction has 1792 states and 2834 transitions.
[2020-11-25 05:59:33,554 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:59:33,554 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1792 states and 2834 transitions.
[2020-11-25 05:59:33,561 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:59:33,561 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:33,561 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:33,562 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:33,562 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Token0 := false;
[L2]                 call_allowance_Token0 := false;
[L2]     CALL        call main();
[L2366]              assume null == 0;
[L2367]  CALL        call this := FreshRefGenerator__success();
[L1107]              havoc newRef;
[L1108]              assume Alloc[newRef] == false;
[L1109]              Alloc[newRef] := true;
[L1110]              assume newRef != null;
[L2367]  RET         call this := FreshRefGenerator__success();
[L2368]              assume now >= 0;
[L2369]              assume DType[this] == Token;
[L2370]              assume msgvalue_MSG == 0;
[L2371]              gas := gas - 53000;
[L2372]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1374]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1295]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1280]              assume msgsender_MSG != null;
[L1281]              Balance[this] := 0;
[L1295]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  COND FALSE  !(revert)
[L1374]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1375]  COND FALSE  !(revert)
[L1378]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1333]              assume msgsender_MSG != null;
[L1334]              Balance[this] := 0;
[L1335]              name_Token[this] := 1672502729;
[L1336]              symbol_Token[this] := 624073;
[L1337]              decimals_Token[this] := 18;
[L1338]              _balances_Token[this] := zeroRefintArr();
[L1339]              sum__balances0[this] := 0;
[L1340]              _allowed_Token[this] := zeroRefRefintArr();
[L1341]              sum__allowed1[this] := 0;
[L1342]              _totalSupply_Token[this] := 0;
[L1344]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1345]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1240]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1241]  COND TRUE   !(c_s106 >= a_s106)
[L1242]              revert := true;
[L1345]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1346]  COND TRUE   revert
[L1378]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1379]  COND FALSE  !(revert)
[L232]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L233]               assume !revert && gas >= 0;
[L2372]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2373]              assume !revert && gas >= 0;

Loop:
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND TRUE   choice == 11
[L2287]              gas := gas - 21000;
[L2288]  COND FALSE  !(gas >= 0)
[L2376]  RET         call CorralChoice_Token(this);

[2020-11-25 05:59:33,565 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:59:33,565 INFO  L82        PathProgramCache]: Analyzing trace with hash -378082446, now seen corresponding path program 1 times
[2020-11-25 05:59:33,566 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:59:33,575 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:59:33,590 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:59:33,590 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:59:33,590 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:59:33,592 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:59:33,592 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:59:33,592 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:59:33,592 INFO  L87              Difference]: Start difference. First operand 1792 states and 2834 transitions. cyclomatic complexity: 1044 Second operand 4 states.
[2020-11-25 05:59:33,815 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:59:33,815 INFO  L93              Difference]: Finished difference Result 1650 states and 1851 transitions.
[2020-11-25 05:59:33,816 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:59:33,816 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1650 states and 1851 transitions.
[2020-11-25 05:59:33,825 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:59:33,833 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1650 states to 1650 states and 1851 transitions.
[2020-11-25 05:59:33,834 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 468
[2020-11-25 05:59:33,834 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 468
[2020-11-25 05:59:33,834 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1650 states and 1851 transitions.
[2020-11-25 05:59:33,836 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:59:33,837 INFO  L728         BuchiCegarLoop]: Abstraction has 1650 states and 1851 transitions.
[2020-11-25 05:59:33,838 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1650 states and 1851 transitions.
[2020-11-25 05:59:33,855 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1650 to 1650.
[2020-11-25 05:59:33,855 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1650 states.
[2020-11-25 05:59:33,859 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1650 states to 1650 states and 1851 transitions.
[2020-11-25 05:59:33,860 INFO  L751         BuchiCegarLoop]: Abstraction has 1650 states and 1851 transitions.
[2020-11-25 05:59:33,860 INFO  L631         BuchiCegarLoop]: Abstraction has 1650 states and 1851 transitions.
[2020-11-25 05:59:33,860 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:59:33,860 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1650 states and 1851 transitions.
[2020-11-25 05:59:33,865 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:59:33,865 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:33,865 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:33,867 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:33,867 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Token0 := false;
[L2]                 call_allowance_Token0 := false;
[L2]     CALL        call main();
[L2366]              assume null == 0;
[L2367]  CALL        call this := FreshRefGenerator__success();
[L1107]              havoc newRef;
[L1108]              assume Alloc[newRef] == false;
[L1109]              Alloc[newRef] := true;
[L1110]              assume newRef != null;
[L2367]  RET         call this := FreshRefGenerator__success();
[L2368]              assume now >= 0;
[L2369]              assume DType[this] == Token;
[L2370]              assume msgvalue_MSG == 0;
[L2371]              gas := gas - 53000;
[L2372]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1374]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1295]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1280]              assume msgsender_MSG != null;
[L1281]              Balance[this] := 0;
[L1295]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  COND FALSE  !(revert)
[L1374]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1375]  COND FALSE  !(revert)
[L1378]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1333]              assume msgsender_MSG != null;
[L1334]              Balance[this] := 0;
[L1335]              name_Token[this] := 1672502729;
[L1336]              symbol_Token[this] := 624073;
[L1337]              decimals_Token[this] := 18;
[L1338]              _balances_Token[this] := zeroRefintArr();
[L1339]              sum__balances0[this] := 0;
[L1340]              _allowed_Token[this] := zeroRefRefintArr();
[L1341]              sum__allowed1[this] := 0;
[L1342]              _totalSupply_Token[this] := 0;
[L1344]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1345]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1240]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1241]  COND TRUE   !(c_s106 >= a_s106)
[L1242]              revert := true;
[L1345]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1346]  COND TRUE   revert
[L1378]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1379]  COND FALSE  !(revert)
[L232]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L233]               assume !revert && gas >= 0;
[L2372]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2373]              assume !revert && gas >= 0;
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND FALSE  !(__exception)
[L382]   CALL        call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1416]              __ret_0_ := _allowed_Token[this][owner_s297][spender_s297];
[L382]   RET         call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L383]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_Token[this][owner_s297][spender_s297] && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

Loop:
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND FALSE  !(__exception)
[L382]   CALL        call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1416]              __ret_0_ := _allowed_Token[this][owner_s297][spender_s297];
[L382]   RET         call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L383]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_Token[this][owner_s297][spender_s297] && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

[2020-11-25 05:59:33,871 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:59:33,871 INFO  L82        PathProgramCache]: Analyzing trace with hash 2046362605, now seen corresponding path program 1 times
[2020-11-25 05:59:33,872 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:59:33,882 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:59:33,904 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:59:33,904 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:59:33,904 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:59:33,905 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:59:33,905 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:59:33,905 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:59:33,905 INFO  L87              Difference]: Start difference. First operand 1650 states and 1851 transitions. cyclomatic complexity: 203 Second operand 3 states.
[2020-11-25 05:59:33,950 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:59:33,950 INFO  L93              Difference]: Finished difference Result 2048 states and 2271 transitions.
[2020-11-25 05:59:33,950 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:59:33,951 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2048 states and 2271 transitions.
[2020-11-25 05:59:33,962 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:59:33,974 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2048 states to 1914 states and 2123 transitions.
[2020-11-25 05:59:33,974 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 537
[2020-11-25 05:59:33,975 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 552
[2020-11-25 05:59:33,975 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1914 states and 2123 transitions.
[2020-11-25 05:59:33,977 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:59:33,977 INFO  L728         BuchiCegarLoop]: Abstraction has 1914 states and 2123 transitions.
[2020-11-25 05:59:33,979 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1914 states and 2123 transitions.
[2020-11-25 05:59:33,997 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1914 to 1681.
[2020-11-25 05:59:33,997 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1681 states.
[2020-11-25 05:59:34,001 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1681 states to 1681 states and 1832 transitions.
[2020-11-25 05:59:34,001 INFO  L751         BuchiCegarLoop]: Abstraction has 1681 states and 1832 transitions.
[2020-11-25 05:59:34,002 INFO  L631         BuchiCegarLoop]: Abstraction has 1681 states and 1832 transitions.
[2020-11-25 05:59:34,002 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:59:34,002 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1681 states and 1832 transitions.
[2020-11-25 05:59:34,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:59:34,007 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:34,007 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:34,008 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:34,008 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Token0 := false;
[L2]                 call_allowance_Token0 := false;
[L2]     CALL        call main();
[L2366]              assume null == 0;
[L2367]  CALL        call this := FreshRefGenerator__success();
[L1107]              havoc newRef;
[L1108]              assume Alloc[newRef] == false;
[L1109]              Alloc[newRef] := true;
[L1110]              assume newRef != null;
[L2367]  RET         call this := FreshRefGenerator__success();
[L2368]              assume now >= 0;
[L2369]              assume DType[this] == Token;
[L2370]              assume msgvalue_MSG == 0;
[L2371]              gas := gas - 53000;
[L2372]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1374]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1295]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1280]              assume msgsender_MSG != null;
[L1281]              Balance[this] := 0;
[L1295]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  COND FALSE  !(revert)
[L1374]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1375]  COND FALSE  !(revert)
[L1378]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1333]              assume msgsender_MSG != null;
[L1334]              Balance[this] := 0;
[L1335]              name_Token[this] := 1672502729;
[L1336]              symbol_Token[this] := 624073;
[L1337]              decimals_Token[this] := 18;
[L1338]              _balances_Token[this] := zeroRefintArr();
[L1339]              sum__balances0[this] := 0;
[L1340]              _allowed_Token[this] := zeroRefRefintArr();
[L1341]              sum__allowed1[this] := 0;
[L1342]              _totalSupply_Token[this] := 0;
[L1344]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1345]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1240]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1241]  COND FALSE  !(!(c_s106 >= a_s106))
[L1245]              __ret_0_ := c_s106;
[L1345]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1346]  COND FALSE  !(revert)
[L1349]              _totalSupply_Token[this] := __var_1;
[L1350]              sum__balances0[this] := sum__balances0[this] - _balances_Token[this][banker_s261];
[L1351]              _balances_Token[this][banker_s261] := amount_s261;
[L1352]              sum__balances0[this] := sum__balances0[this] + _balances_Token[this][banker_s261];
[L1353]              assert { :EventEmitted "Transfer_Token" } true;
[L1378]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1379]  COND FALSE  !(revert)
[L232]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L233]               assume !revert && gas >= 0;
[L2372]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2373]              assume !revert && gas >= 0;
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND FALSE  !(__exception)
[L382]   CALL        call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1416]              __ret_0_ := _allowed_Token[this][owner_s297][spender_s297];
[L382]   RET         call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L383]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_Token[this][owner_s297][spender_s297] && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

Loop:
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND FALSE  !(__exception)
[L382]   CALL        call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1416]              __ret_0_ := _allowed_Token[this][owner_s297][spender_s297];
[L382]   RET         call __ret_0_ := allowance~address~address_Token__success(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L383]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_Token[this][owner_s297][spender_s297] && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

[2020-11-25 05:59:34,012 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:59:34,012 INFO  L82        PathProgramCache]: Analyzing trace with hash -1257323569, now seen corresponding path program 1 times
[2020-11-25 05:59:34,013 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:59:34,024 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:59:34,064 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:59:34,064 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:59:34,064 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:59:34,065 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:59:34,065 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:59:34,065 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:59:34,065 INFO  L87              Difference]: Start difference. First operand 1681 states and 1832 transitions. cyclomatic complexity: 153 Second operand 4 states.
[2020-11-25 05:59:34,101 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:59:34,101 INFO  L93              Difference]: Finished difference Result 1682 states and 1831 transitions.
[2020-11-25 05:59:34,101 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:59:34,101 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1682 states and 1831 transitions.
[2020-11-25 05:59:34,109 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:59:34,115 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1682 states to 1672 states and 1821 transitions.
[2020-11-25 05:59:34,115 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 505
[2020-11-25 05:59:34,116 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 505
[2020-11-25 05:59:34,116 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1672 states and 1821 transitions.
[2020-11-25 05:59:34,118 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:59:34,118 INFO  L728         BuchiCegarLoop]: Abstraction has 1672 states and 1821 transitions.
[2020-11-25 05:59:34,119 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1672 states and 1821 transitions.
[2020-11-25 05:59:34,136 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1672 to 1670.
[2020-11-25 05:59:34,136 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1670 states.
[2020-11-25 05:59:34,139 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1670 states to 1670 states and 1819 transitions.
[2020-11-25 05:59:34,139 INFO  L751         BuchiCegarLoop]: Abstraction has 1670 states and 1819 transitions.
[2020-11-25 05:59:34,139 INFO  L631         BuchiCegarLoop]: Abstraction has 1670 states and 1819 transitions.
[2020-11-25 05:59:34,139 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:59:34,140 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1670 states and 1819 transitions.
[2020-11-25 05:59:34,143 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:59:34,143 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:59:34,143 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:59:34,145 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:59:34,145 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Token0 := false;
[L2]                 call_allowance_Token0 := false;
[L2]     CALL        call main();
[L2366]              assume null == 0;
[L2367]  CALL        call this := FreshRefGenerator__success();
[L1107]              havoc newRef;
[L1108]              assume Alloc[newRef] == false;
[L1109]              Alloc[newRef] := true;
[L1110]              assume newRef != null;
[L2367]  RET         call this := FreshRefGenerator__success();
[L2368]              assume now >= 0;
[L2369]              assume DType[this] == Token;
[L2370]              assume msgvalue_MSG == 0;
[L2371]              gas := gas - 53000;
[L2372]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1374]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1295]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1280]              assume msgsender_MSG != null;
[L1281]              Balance[this] := 0;
[L1295]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  COND FALSE  !(revert)
[L1374]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1375]  COND FALSE  !(revert)
[L1378]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1333]              assume msgsender_MSG != null;
[L1334]              Balance[this] := 0;
[L1335]              name_Token[this] := 1672502729;
[L1336]              symbol_Token[this] := 624073;
[L1337]              decimals_Token[this] := 18;
[L1338]              _balances_Token[this] := zeroRefintArr();
[L1339]              sum__balances0[this] := 0;
[L1340]              _allowed_Token[this] := zeroRefRefintArr();
[L1341]              sum__allowed1[this] := 0;
[L1342]              _totalSupply_Token[this] := 0;
[L1344]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1345]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1240]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1241]  COND FALSE  !(!(c_s106 >= a_s106))
[L1245]              __ret_0_ := c_s106;
[L1345]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1346]  COND FALSE  !(revert)
[L1349]              _totalSupply_Token[this] := __var_1;
[L1350]              sum__balances0[this] := sum__balances0[this] - _balances_Token[this][banker_s261];
[L1351]              _balances_Token[this][banker_s261] := amount_s261;
[L1352]              sum__balances0[this] := sum__balances0[this] + _balances_Token[this][banker_s261];
[L1353]              assert { :EventEmitted "Transfer_Token" } true;
[L1378]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1379]  COND FALSE  !(revert)
[L232]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L233]               assume !revert && gas >= 0;
[L2372]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2373]              assume !revert && gas >= 0;
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND TRUE   __exception
[L362]               __tmp__Balance := Balance;
[L363]               __tmp__DType := DType;
[L364]               __tmp__Alloc := Alloc;
[L365]               __tmp__balance_ADDR := balance_ADDR;
[L366]               __tmp__M_Ref_int := M_Ref_int;
[L367]               __tmp__sum__balances0 := sum__balances0;
[L368]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L369]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L370]               __tmp__sum__allowed1 := sum__allowed1;
[L371]               __tmp__Length := Length;
[L372]               __tmp__now := now;
[L373]               __tmp__name_Token := name_Token;
[L374]               __tmp__symbol_Token := symbol_Token;
[L375]               __tmp__decimals_Token := decimals_Token;
[L376]               __tmp___balances_Token := _balances_Token;
[L377]               __tmp___allowed_Token := _allowed_Token;
[L378]               __tmp___totalSupply_Token := _totalSupply_Token;
[L379]   CALL        call __ret_0_ := allowance~address~address_Token__fail(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1410]              __ret_0_ := __tmp___allowed_Token[this][owner_s297][spender_s297];
[L379]   RET         call __ret_0_ := allowance~address~address_Token__fail(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L380]               assume revert || gas < 0;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

Loop:
[L2376]  CALL        call CorralChoice_Token(this);
[L2246]              havoc msgsender_MSG;
[L2247]              havoc msgvalue_MSG;
[L2248]              havoc choice;
[L2249]              havoc to_s316;
[L2250]              havoc value_s316;
[L2251]              havoc __ret_0_transfer;
[L2252]              havoc spender_s335;
[L2253]              havoc value_s335;
[L2254]              havoc __ret_0_approve;
[L2255]              havoc from_s370;
[L2256]              havoc to_s370;
[L2257]              havoc value_s370;
[L2258]              havoc __ret_0_transferFrom;
[L2259]              havoc __ret_0_totalSupply;
[L2260]              havoc owner_s281;
[L2261]              havoc __ret_0_balanceOf;
[L2262]              havoc owner_s297;
[L2263]              havoc spender_s297;
[L2264]              havoc __ret_0_allowance;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc banker_s261;
[L2269]              havoc spender_s397;
[L2270]              havoc addedValue_s397;
[L2271]              havoc __ret_0_increaseAllowance;
[L2272]              havoc spender_s424;
[L2273]              havoc subtractedValue_s424;
[L2274]              havoc __ret_0_decreaseAllowance;
[L2275]              havoc tmpNow;
[L2276]              havoc gas;
[L2277]              assume gas > 4000000 && gas <= 8000000;
[L2278]              tmpNow := now;
[L2279]              havoc now;
[L2280]              assume now > tmpNow;
[L2281]              assume msgsender_MSG != null;
[L2282]              assume DType[msgsender_MSG] != SafeMath;
[L2283]              assume DType[msgsender_MSG] != IERC20;
[L2284]              assume DType[msgsender_MSG] != Token;
[L2285]              Alloc[msgsender_MSG] := true;
[L2286]  COND FALSE  !(choice == 11)
[L2293]  COND FALSE  !(choice == 10)
[L2300]  COND FALSE  !(choice == 9)
[L2307]  COND FALSE  !(choice == 8)
[L2313]  COND FALSE  !(choice == 7)
[L2319]  COND TRUE   choice == 6
[L2320]              gas := gas - 21000;
[L2321]  COND TRUE   gas >= 0
[L2322]              assume msgvalue_MSG == 0;
[L2323]  CALL        call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_Token[this][owner_s297][spender_s297] >= 0 && _allowed_Token[this][owner_s297][spender_s297] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Token0 := true;
[L2]                 call_allowance_Token0 := false;
[L2]                 revert := revert_hold;
[L359]               havoc __exception;
[L360]               revert := false;
[L361]   COND TRUE   __exception
[L362]               __tmp__Balance := Balance;
[L363]               __tmp__DType := DType;
[L364]               __tmp__Alloc := Alloc;
[L365]               __tmp__balance_ADDR := balance_ADDR;
[L366]               __tmp__M_Ref_int := M_Ref_int;
[L367]               __tmp__sum__balances0 := sum__balances0;
[L368]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L369]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L370]               __tmp__sum__allowed1 := sum__allowed1;
[L371]               __tmp__Length := Length;
[L372]               __tmp__now := now;
[L373]               __tmp__name_Token := name_Token;
[L374]               __tmp__symbol_Token := symbol_Token;
[L375]               __tmp__decimals_Token := decimals_Token;
[L376]               __tmp___balances_Token := _balances_Token;
[L377]               __tmp___allowed_Token := _allowed_Token;
[L378]               __tmp___totalSupply_Token := _totalSupply_Token;
[L379]   CALL        call __ret_0_ := allowance~address~address_Token__fail(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L1410]              __ret_0_ := __tmp___allowed_Token[this][owner_s297][spender_s297];
[L379]   RET         call __ret_0_ := allowance~address~address_Token__fail(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L380]               assume revert || gas < 0;
[L2323]  RET         call __ret_0_allowance := allowance~address~address_Token(this, msgsender_MSG, msgvalue_MSG, owner_s297, spender_s297);
[L2376]  RET         call CorralChoice_Token(this);

[2020-11-25 05:59:34,147 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:59:34,148 INFO  L82        PathProgramCache]: Analyzing trace with hash -25221892, now seen corresponding path program 1 times
[2020-11-25 05:59:34,148 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:59:34,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:59:34,187 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:59:34,187 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:59:34,188 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 05:59:34,188 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:59:34,188 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 05:59:34,188 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 05:59:34,188 INFO  L87              Difference]: Start difference. First operand 1670 states and 1819 transitions. cyclomatic complexity: 151 Second operand 5 states.
[2020-11-25 05:59:34,343 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:59:34,343 INFO  L93              Difference]: Finished difference Result 1143 states and 1238 transitions.
[2020-11-25 05:59:34,343 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:59:34,343 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1143 states and 1238 transitions.
[2020-11-25 05:59:34,347 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:59:34,347 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1143 states to 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 05:59:34,347 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 05:59:34,347 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:59:34,347 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:59:34,347 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 05:59:34,347 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:59:34,348 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 05:59:34,351 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:59:34 BasicIcfg
[2020-11-25 05:59:34,351 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:59:34,351 INFO  L168              Benchmark]: Toolchain (without parser) took 3234.53 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 246.4 MB). Free memory was 940.6 MB in the beginning and 822.5 MB in the end (delta: 118.0 MB). Peak memory consumption was 364.5 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,352 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,352 INFO  L168              Benchmark]: Boogie Preprocessor took 71.02 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,353 INFO  L168              Benchmark]: UtopiaSpecLang took 51.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,353 INFO  L168              Benchmark]: Boogie Printer took 10.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,353 INFO  L168              Benchmark]: RCFGBuilder took 552.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,353 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.82 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,354 INFO  L168              Benchmark]: BÃ¼chi Program Product took 955.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 861.8 MB in the beginning and 895.5 MB in the end (delta: -33.7 MB). Peak memory consumption was 146.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,354 INFO  L168              Benchmark]: BlockEncodingV2 took 96.68 ms. Allocated memory is still 1.1 GB. Free memory was 895.5 MB in the beginning and 860.6 MB in the end (delta: 34.9 MB). Peak memory consumption was 34.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,354 INFO  L168              Benchmark]: BuchiAutomizer took 1455.94 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 186.6 MB). Free memory was 860.6 MB in the beginning and 822.5 MB in the end (delta: 38.1 MB). Peak memory consumption was 224.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:59:34,357 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2004 locations, 3389 edges
  - StatisticsResult: Encoded RCFG
    1982 locations, 3337 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 71.02 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 552.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.82 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 955.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 861.8 MB in the beginning and 895.5 MB in the end (delta: -33.7 MB). Peak memory consumption was 146.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 96.68 ms. Allocated memory is still 1.1 GB. Free memory was 895.5 MB in the beginning and 860.6 MB in the end (delta: 34.9 MB). Peak memory consumption was 34.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1455.94 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 186.6 MB). Free memory was 860.6 MB in the beginning and 822.5 MB in the end (delta: 38.1 MB). Peak memory consumption was 224.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    826 locations, 1043 edges
  - StatisticsResult: BuchiProgram size
    2004 locations, 3389 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.4s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 651 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1792 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9103 SDtfs, 6181 SDslu, 8111 SDs, 0 SdLazy, 1272 SolverSat, 1378 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_Token0) ==> ( <>(success_allowance_Token0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
