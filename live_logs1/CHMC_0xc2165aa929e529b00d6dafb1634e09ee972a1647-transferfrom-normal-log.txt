This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:56:06,098 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:56:06,099 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:56:06,110 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:56:06,110 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:56:06,110 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:56:06,111 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:56:06,113 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:56:06,114 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:56:06,115 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:56:06,115 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:56:06,116 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:56:06,116 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:56:06,117 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:56:06,118 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:56:06,118 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:56:06,119 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:56:06,120 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:56:06,121 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:56:06,122 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:56:06,123 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:56:06,124 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:56:06,127 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:56:06,128 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:56:06,128 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:56:06,128 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:56:06,129 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:56:06,129 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:56:06,129 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:56:06,130 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:56:06,130 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:56:06,130 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:56:06,131 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:56:06,132 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:56:06,132 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:56:06,132 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:56:06,133 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:56:06,133 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:56:06,133 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:56:06,134 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:56:06,134 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:56:06,135 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:56:06,142 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:56:06,142 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:56:06,143 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:56:06,143 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:56:06,143 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:56:06,144 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:56:06,144 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:56:06,144 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:56:06,144 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:56:06,145 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:56:06,145 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:56:06,146 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:56:06,168 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:56:06,183 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:56:06,186 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:56:06,187 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:56:06,187 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:56:06,188 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl
[2020-11-25 11:56:06,188 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl'
[2020-11-25 11:56:06,260 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:56:06,262 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:56:06,262 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:56:06,262 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:56:06,262 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:56:06,279 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,281 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,307 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,308 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,325 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,333 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,338 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,346 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:56:06,347 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:56:06,347 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:56:06,349 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:56:06,353 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/1) ...
[2020-11-25 11:56:06,369 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CHMC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_CHMC[this][from] && value <= _allowed_CHMC[this][from][msg.sender] && _balances_CHMC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][from] >= 0 &&  _balances_CHMC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_CHMC[this][from][msg.sender] >= 0 && _allowed_CHMC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transferFrom(from, to, value), return == true && _balances_CHMC[this][from] == old(_balances_CHMC[this][from]) - value && _balances_CHMC[this][to] == old(_balances_CHMC[this][to]) + value && _allowed_CHMC[this][from][msg.sender] == old(_allowed_CHMC[this][from][msg.sender]) - value && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1]) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:56:06,375 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CHMC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_CHMC[this][from] && value <= _allowed_CHMC[this][from][msg.sender] && _balances_CHMC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][from] >= 0 &&  _balances_CHMC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_CHMC[this][from][msg.sender] >= 0 && _allowed_CHMC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transferFrom(from, to, value), return == true && _balances_CHMC[this][from] == old(_balances_CHMC[this][from]) - value && _balances_CHMC[this][to] == old(_balances_CHMC[this][to]) + value && _allowed_CHMC[this][from][msg.sender] == old(_allowed_CHMC[this][from][msg.sender]) - value && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1]) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:56:06,383 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CHMC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_CHMC[this][from] && value <= _allowed_CHMC[this][from][msg.sender] && _balances_CHMC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][from] >= 0 &&  _balances_CHMC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_CHMC[this][from][msg.sender] >= 0 && _allowed_CHMC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transferFrom(from, to, value), return == true && _balances_CHMC[this][from] == old(_balances_CHMC[this][from]) - value && _balances_CHMC[this][to] == old(_balances_CHMC[this][to]) + value && _allowed_CHMC[this][from][msg.sender] == old(_allowed_CHMC[this][from][msg.sender]) - value && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1]) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:56:06,391 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s426 && p1!=to_s426 ) && ( p2!=from_s426 || p3!=msg.sender ) ) && from_s426!=to_s426 ) && value_s426<=_balances_CHMC[this][from_s426] ) && value_s426<=_allowed_CHMC[this][from_s426][msg.sender] ) && ( _balances_CHMC[this][to_s426] + value_s426 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s426>=0 ) && value_s426<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_CHMC[this][to_s426]>=0 ) && _balances_CHMC[this][to_s426]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_CHMC[this][from_s426]>=0 ) && _balances_CHMC[this][from_s426]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_CHMC[this][from_s426][msg.sender]>=0 ) && _allowed_CHMC[this][from_s426][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>],IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:56:06,394 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_CHMC[this][from_s426]==( ( old(_balances_CHMC[this][from_s426]) ) - value_s426 ) ) && _balances_CHMC[this][to_s426]==( ( old(_balances_CHMC[this][to_s426]) ) + value_s426 ) ) && _allowed_CHMC[this][from_s426][msg.sender]==( ( old(_allowed_CHMC[this][from_s426][msg.sender]) ) - value_s426 ) ) && _totalSupply_CHMC[this]==( old(_totalSupply_CHMC[this]) ) ) && _balances_CHMC[this][p1]==( old(_balances_CHMC[this][p1]) ) ) && _allowed_CHMC[this][p2][p3]==( old(_allowed_CHMC[this][p2][p3]) ) ) && _name_CHMC[this]==( old(_name_CHMC[this]) ) ) && _symbol_CHMC[this]==( old(_symbol_CHMC[this]) ) ) && _decimals_CHMC[this]==( old(_decimals_CHMC[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_CHMC>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[to_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[from_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],IdentifierExpression[value_s426,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CHMC>]]]]]]
[2020-11-25 11:56:06,398 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CHMC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_CHMC[this][from] && value <= _allowed_CHMC[this][from][msg.sender] && _balances_CHMC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][from] >= 0 &&  _balances_CHMC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_CHMC[this][from][msg.sender] >= 0 && _allowed_CHMC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transferFrom(from, to, value), return == true && _balances_CHMC[this][from] == old(_balances_CHMC[this][from]) - value && _balances_CHMC[this][to] == old(_balances_CHMC[this][to]) + value && _allowed_CHMC[this][from][msg.sender] == old(_allowed_CHMC[this][from][msg.sender]) - value && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1]) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:56:06,399 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_CHMC0) ==> ( <>AP(success_transferFrom_CHMC0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:56:06,405 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:06 PropertyContainer
[2020-11-25 11:56:06,405 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:56:06,405 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:56:06,405 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:56:06,405 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:56:06,406 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/2) ...
[2020-11-25 11:56:06,406 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:56:06,406 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:56:06,417 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:06" (2/2) ...
[2020-11-25 11:56:06,417 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:56:06,417 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:56:06,417 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:56:06,418 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:56:06,418 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/2) ...
[2020-11-25 11:56:06,474 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:56:06,474 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:56:06,474 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 11:56:06,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 11:56:06,474 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 11:56:06,474 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:56:06,475 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,475 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,476 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,476 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,476 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC_NoBaseCtor__success
[2020-11-25 11:56:06,476 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC
[2020-11-25 11:56:06,476 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC
[2020-11-25 11:56:06,476 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC
[2020-11-25 11:56:06,477 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC
[2020-11-25 11:56:06,477 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC
[2020-11-25 11:56:06,477 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC
[2020-11-25 11:56:06,477 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC
[2020-11-25 11:56:06,477 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC
[2020-11-25 11:56:06,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC
[2020-11-25 11:56:06,478 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC
[2020-11-25 11:56:06,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_CHMC__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_CHMC__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:56:06,479 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CHMC
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,480 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC_NoBaseCtor__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC__success
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC__success
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC__success
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC__success
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC__fail
[2020-11-25 11:56:06,481 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC__success
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:56:06,482 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__success
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,483 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:56:06,484 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:56:06,484 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:56:06,484 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:56:06,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:56:06,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC_NoBaseCtor__fail
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC_NoBaseCtor__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC__fail
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC__fail
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC__fail
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC__fail
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC__success
[2020-11-25 11:56:06,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__fail
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__success
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__fail
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__success
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__fail
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__success
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__fail
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__success
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC__fail
[2020-11-25 11:56:06,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_CHMC__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_CHMC__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_CHMC__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 11:56:06,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 11:56:06,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:56:06,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:56:06,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CHMC
[2020-11-25 11:56:06,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:56:06,490 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:56:06,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:56:06,660 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:06,898 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:06,899 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:06,899 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:07,061 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:56:07,061 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 11:56:07,063 INFO  L202        PluginConnector]: Adding new model CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:07 BoogieIcfgContainer
[2020-11-25 11:56:07,063 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:06" (2/2) ...
[2020-11-25 11:56:07,063 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:56:07,063 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4ce80dc0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:07, skipping insertion in model container
[2020-11-25 11:56:07,064 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:56:07,064 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:56:07,064 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:56:07,065 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:56:07,065 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/3) ...
[2020-11-25 11:56:07,066 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5934990c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:07, skipping insertion in model container
[2020-11-25 11:56:07,066 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:06" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:56:07,103 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:07 NWAContainer
[2020-11-25 11:56:07,103 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:56:07,104 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:56:07,104 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:56:07,104 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:56:07,105 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:07" (3/4) ...
[2020-11-25 11:56:07,106 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@72365543 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:07, skipping insertion in model container
[2020-11-25 11:56:07,106 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:07" (4/4) ...
[2020-11-25 11:56:07,109 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:56:07,113 INFO  L110   BuchiProductObserver]: Initial RCFG 965 locations, 1238 edges
[2020-11-25 11:56:07,113 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:56:07,124 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:56:08,128 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:56:08,131 INFO  L110   BuchiProductObserver]: BuchiProgram size 2362 locations, 4022 edges
[2020-11-25 11:56:08,131 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:08 BoogieIcfgContainer
[2020-11-25 11:56:08,131 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:56:08,131 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:56:08,131 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:56:08,132 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:56:08,133 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:08" (1/1) ...
[2020-11-25 11:56:08,182 INFO  L313           BlockEncoder]: Initial Icfg 2362 locations, 4022 edges
[2020-11-25 11:56:08,183 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:56:08,183 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:56:08,183 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:56:08,184 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:56:08,191 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-25 11:56:08,195 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:56:08,202 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:56:08,204 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:56:08,205 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:56:08,206 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:56:08,208 INFO  L313           BlockEncoder]: Encoded RCFG 2340 locations, 3970 edges
[2020-11-25 11:56:08,209 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:56:08 BasicIcfg
[2020-11-25 11:56:08,209 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:56:08,209 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:56:08,209 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:56:08,211 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:56:08,211 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,211 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:06" (1/6) ...
[2020-11-25 11:56:08,213 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f61f5b0 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:08, skipping insertion in model container
[2020-11-25 11:56:08,213 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,213 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:06" (2/6) ...
[2020-11-25 11:56:08,213 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f61f5b0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:08, skipping insertion in model container
[2020-11-25 11:56:08,213 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,213 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:07" (3/6) ...
[2020-11-25 11:56:08,214 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f61f5b0 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:56:08, skipping insertion in model container
[2020-11-25 11:56:08,214 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,214 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:07" (4/6) ...
[2020-11-25 11:56:08,214 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f61f5b0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:08, skipping insertion in model container
[2020-11-25 11:56:08,214 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,214 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:08" (5/6) ...
[2020-11-25 11:56:08,214 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f61f5b0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:56:08, skipping insertion in model container
[2020-11-25 11:56:08,214 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:08,214 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:56:08" (6/6) ...
[2020-11-25 11:56:08,215 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transferfrom-normal.bpl_BEv2
[2020-11-25 11:56:08,249 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:56:08,249 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:56:08,249 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:56:08,249 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:56:08,249 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:56:08,249 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:56:08,249 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:56:08,249 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:56:08,249 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:56:08,270 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2340 states.
[2020-11-25 11:56:08,307 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:08,307 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:08,307 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:08,314 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:08,314 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:08,314 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:56:08,314 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2340 states.
[2020-11-25 11:56:08,327 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:08,327 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:08,327 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:08,328 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:08,329 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CHMC0 := false;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND TRUE   revert
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND TRUE   choice == 13
[L2620]              gas := gas - 21000;
[L2621]  COND FALSE  !(gas >= 0)
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:56:08,346 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:08,346 INFO  L82        PathProgramCache]: Analyzing trace with hash -2116844195, now seen corresponding path program 1 times
[2020-11-25 11:56:08,350 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:08,369 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:08,422 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:08,424 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:08,425 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:56:08,530 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:08,543 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:56:08,543 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:56:08,545 INFO  L87              Difference]: Start difference. First operand 2340 states. Second operand 3 states.
[2020-11-25 11:56:08,703 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:08,703 INFO  L93              Difference]: Finished difference Result 1862 states and 2101 transitions.
[2020-11-25 11:56:08,704 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:56:08,705 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1862 states and 2101 transitions.
[2020-11-25 11:56:08,717 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:08,736 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1862 states to 1862 states and 2101 transitions.
[2020-11-25 11:56:08,737 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:56:08,739 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 488
[2020-11-25 11:56:08,739 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1862 states and 2101 transitions.
[2020-11-25 11:56:08,746 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:08,746 INFO  L728         BuchiCegarLoop]: Abstraction has 1862 states and 2101 transitions.
[2020-11-25 11:56:08,763 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1862 states and 2101 transitions.
[2020-11-25 11:56:08,812 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1862 to 1862.
[2020-11-25 11:56:08,812 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1862 states.
[2020-11-25 11:56:08,817 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1862 states to 1862 states and 2101 transitions.
[2020-11-25 11:56:08,818 INFO  L751         BuchiCegarLoop]: Abstraction has 1862 states and 2101 transitions.
[2020-11-25 11:56:08,818 INFO  L631         BuchiCegarLoop]: Abstraction has 1862 states and 2101 transitions.
[2020-11-25 11:56:08,818 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:56:08,818 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1862 states and 2101 transitions.
[2020-11-25 11:56:08,825 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:08,825 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:08,825 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:08,828 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:08,828 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CHMC0 := false;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND TRUE   revert
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND FALSE  !(choice == 12)
[L2633]  COND TRUE   choice == 11
[L2634]              gas := gas - 21000;
[L2635]  COND TRUE   gas >= 0
[L2636]              assume value_s426 >= 0 && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2637]              assume msgvalue_MSG == 0;
[L2638]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CHMC0 := true;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]                 revert := revert_hold;
[L775]               havoc __exception;
[L776]               revert := false;
[L777]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1704]  CALL        call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1811]              __var_4 := null;
[L1812]  COND TRUE   !(to_s526 != null)
[L1813]              revert := true;
[L1704]  RET         call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1705]  COND TRUE   revert
[L798]   RET         call __ret_0_ := transferFrom~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L799]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_CHMC[this][from_s426] == old(_balances_CHMC[this][from_s426]) - value_s426) && _balances_CHMC[this][to_s426] == old(_balances_CHMC[this][to_s426]) + value_s426) && _allowed_CHMC[this][from_s426][msgsender_MSG] == old(_allowed_CHMC[this][from_s426][msgsender_MSG]) - value_s426) && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1])) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L3]                 revert := revert_hold;
[L2638]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND FALSE  !(choice == 12)
[L2633]  COND TRUE   choice == 11
[L2634]              gas := gas - 21000;
[L2635]  COND TRUE   gas >= 0
[L2636]              assume value_s426 >= 0 && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2637]              assume msgvalue_MSG == 0;
[L2638]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CHMC0 := true;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]                 revert := revert_hold;
[L775]               havoc __exception;
[L776]               revert := false;
[L777]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1704]  CALL        call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1811]              __var_4 := null;
[L1812]  COND TRUE   !(to_s526 != null)
[L1813]              revert := true;
[L1704]  RET         call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1705]  COND TRUE   revert
[L798]   RET         call __ret_0_ := transferFrom~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L799]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_CHMC[this][from_s426] == old(_balances_CHMC[this][from_s426]) - value_s426) && _balances_CHMC[this][to_s426] == old(_balances_CHMC[this][to_s426]) + value_s426) && _allowed_CHMC[this][from_s426][msgsender_MSG] == old(_allowed_CHMC[this][from_s426][msgsender_MSG]) - value_s426) && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this][p1] == old(_balances_CHMC[this][p1])) && _allowed_CHMC[this][p2][p3] == old(_allowed_CHMC[this][p2][p3])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L3]                 revert := revert_hold;
[L2638]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:56:08,832 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:08,832 INFO  L82        PathProgramCache]: Analyzing trace with hash 1156327333, now seen corresponding path program 1 times
[2020-11-25 11:56:08,833 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:08,846 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:08,871 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:08,871 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:08,871 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:56:08,873 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:08,873 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:56:08,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:56:08,873 INFO  L87              Difference]: Start difference. First operand 1862 states and 2101 transitions. cyclomatic complexity: 241 Second operand 4 states.
[2020-11-25 11:56:09,326 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:09,327 INFO  L93              Difference]: Finished difference Result 2862 states and 3273 transitions.
[2020-11-25 11:56:09,327 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:56:09,327 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2862 states and 3273 transitions.
[2020-11-25 11:56:09,339 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:56:09,350 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2862 states to 2696 states and 3083 transitions.
[2020-11-25 11:56:09,350 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 689
[2020-11-25 11:56:09,351 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 713
[2020-11-25 11:56:09,351 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2696 states and 3083 transitions.
[2020-11-25 11:56:09,356 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:09,356 INFO  L728         BuchiCegarLoop]: Abstraction has 2696 states and 3083 transitions.
[2020-11-25 11:56:09,358 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2696 states and 3083 transitions.
[2020-11-25 11:56:09,377 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2696 to 1944.
[2020-11-25 11:56:09,378 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1944 states.
[2020-11-25 11:56:09,380 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1944 states to 1944 states and 2115 transitions.
[2020-11-25 11:56:09,381 INFO  L751         BuchiCegarLoop]: Abstraction has 1944 states and 2115 transitions.
[2020-11-25 11:56:09,381 INFO  L631         BuchiCegarLoop]: Abstraction has 1944 states and 2115 transitions.
[2020-11-25 11:56:09,381 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:56:09,381 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1944 states and 2115 transitions.
[2020-11-25 11:56:09,385 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:09,386 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:09,386 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:09,387 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:09,387 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CHMC0 := false;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND FALSE  !(choice == 12)
[L2633]  COND TRUE   choice == 11
[L2634]              gas := gas - 21000;
[L2635]  COND TRUE   gas >= 0
[L2636]              assume value_s426 >= 0 && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2637]              assume msgvalue_MSG == 0;
[L2638]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CHMC0 := true;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]                 revert := revert_hold;
[L775]               havoc __exception;
[L776]               revert := false;
[L777]   COND TRUE   __exception
[L778]               __tmp__Balance := Balance;
[L779]               __tmp__DType := DType;
[L780]               __tmp__Alloc := Alloc;
[L781]               __tmp__balance_ADDR := balance_ADDR;
[L782]               __tmp__M_Ref_int := M_Ref_int;
[L783]               __tmp__sum__balances0 := sum__balances0;
[L784]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L785]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L786]               __tmp__sum__allowed1 := sum__allowed1;
[L787]               __tmp__Length := Length;
[L788]               __tmp__now := now;
[L789]               __tmp___name_CHMC := _name_CHMC;
[L790]               __tmp___symbol_CHMC := _symbol_CHMC;
[L791]               __tmp___decimals_CHMC := _decimals_CHMC;
[L792]               __tmp___balances_CHMC := _balances_CHMC;
[L793]               __tmp___allowed_CHMC := _allowed_CHMC;
[L794]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L795]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1685]  CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1785]              __var_4 := null;
[L1786]  COND TRUE   !(to_s526 != null)
[L1787]              revert := true;
[L1685]  RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1686]  COND TRUE   revert
[L795]   RET         call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L796]               assume revert || gas < 0;
[L2638]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND FALSE  !(choice == 12)
[L2633]  COND TRUE   choice == 11
[L2634]              gas := gas - 21000;
[L2635]  COND TRUE   gas >= 0
[L2636]              assume value_s426 >= 0 && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2637]              assume msgvalue_MSG == 0;
[L2638]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CHMC0 := true;
[L3]                 call_transferFrom_CHMC0 := false;
[L3]                 revert := revert_hold;
[L775]               havoc __exception;
[L776]               revert := false;
[L777]   COND TRUE   __exception
[L778]               __tmp__Balance := Balance;
[L779]               __tmp__DType := DType;
[L780]               __tmp__Alloc := Alloc;
[L781]               __tmp__balance_ADDR := balance_ADDR;
[L782]               __tmp__M_Ref_int := M_Ref_int;
[L783]               __tmp__sum__balances0 := sum__balances0;
[L784]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L785]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L786]               __tmp__sum__allowed1 := sum__allowed1;
[L787]               __tmp__Length := Length;
[L788]               __tmp__now := now;
[L789]               __tmp___name_CHMC := _name_CHMC;
[L790]               __tmp___symbol_CHMC := _symbol_CHMC;
[L791]               __tmp___decimals_CHMC := _decimals_CHMC;
[L792]               __tmp___balances_CHMC := _balances_CHMC;
[L793]               __tmp___allowed_CHMC := _allowed_CHMC;
[L794]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L795]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1685]  CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1785]              __var_4 := null;
[L1786]  COND TRUE   !(to_s526 != null)
[L1787]              revert := true;
[L1685]  RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1686]  COND TRUE   revert
[L795]   RET         call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L796]               assume revert || gas < 0;
[L2638]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:56:09,390 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:09,391 INFO  L82        PathProgramCache]: Analyzing trace with hash -198390575, now seen corresponding path program 1 times
[2020-11-25 11:56:09,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:09,409 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:09,427 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:09,477 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:09,477 INFO  L82        PathProgramCache]: Analyzing trace with hash -756864020, now seen corresponding path program 1 times
[2020-11-25 11:56:09,478 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:09,483 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:09,489 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:09,502 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:09,502 INFO  L82        PathProgramCache]: Analyzing trace with hash -1087870788, now seen corresponding path program 1 times
[2020-11-25 11:56:09,503 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:09,520 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:09,540 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:56:09,821 WARN  L188               SmtUtils]: Spent 172.00 ms on a formula simplification. DAG size of input: 157 DAG size of output: 150
Garbage collection #1: 59 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 11:56:10,097 WARN  L188               SmtUtils]: Spent 237.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 102
[2020-11-25 11:56:10,215 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
[2020-11-25 11:56:10,766 WARN  L188               SmtUtils]: Spent 533.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-25 11:56:11,364 WARN  L188               SmtUtils]: Spent 595.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 11:56:11,688 WARN  L188               SmtUtils]: Spent 288.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 149
[2020-11-25 11:56:11,979 WARN  L188               SmtUtils]: Spent 289.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 11:56:12,509 WARN  L188               SmtUtils]: Spent 515.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 231
[2020-11-25 11:56:12,715 WARN  L188               SmtUtils]: Spent 204.00 ms on a formula simplification that was a NOOP. DAG size: 231
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 11:56:13,105 WARN  L188               SmtUtils]: Spent 367.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 143
[2020-11-25 11:56:13,112 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 11:56:13,537 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 11:56:13,901 WARN  L188               SmtUtils]: Spent 358.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-25 11:56:14,418 WARN  L188               SmtUtils]: Spent 515.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 11:56:14,680 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 152
[2020-11-25 11:56:14,888 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification that was a NOOP. DAG size: 291
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 11:56:15,314 WARN  L188               SmtUtils]: Spent 406.00 ms on a formula simplification. DAG size of input: 247 DAG size of output: 227
[2020-11-25 11:56:16,072 WARN  L188               SmtUtils]: Spent 756.00 ms on a formula simplification. DAG size of input: 399 DAG size of output: 390
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4357 to 8713
[2020-11-25 11:56:16,465 WARN  L188               SmtUtils]: Spent 373.00 ms on a formula simplification. DAG size of input: 209 DAG size of output: 176
[2020-11-25 11:56:16,597 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 272
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 11:56:16,775 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 176
[2020-11-25 11:56:17,067 WARN  L188               SmtUtils]: Spent 291.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 273
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-25 11:56:17,652 WARN  L188               SmtUtils]: Spent 575.00 ms on a formula simplification. DAG size of input: 280 DAG size of output: 268
[2020-11-25 11:56:17,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:17,677 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:56:17,683 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:56:17 BasicIcfg
[2020-11-25 11:56:17,683 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:56:17,684 INFO  L168              Benchmark]: Toolchain (without parser) took 11422.86 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 957.3 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -141.7 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,684 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,684 INFO  L168              Benchmark]: Boogie Preprocessor took 84.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,685 INFO  L168              Benchmark]: UtopiaSpecLang took 58.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,685 INFO  L168              Benchmark]: Boogie Printer took 12.11 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,685 INFO  L168              Benchmark]: RCFGBuilder took 646.29 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,686 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.57 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,686 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1027.40 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 851.1 MB in the beginning and 831.7 MB in the end (delta: 19.4 MB). Peak memory consumption was 136.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,687 INFO  L168              Benchmark]: BlockEncodingV2 took 77.73 ms. Allocated memory is still 1.1 GB. Free memory was 831.7 MB in the beginning and 794.9 MB in the end (delta: 36.8 MB). Peak memory consumption was 36.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,687 INFO  L168              Benchmark]: BuchiAutomizer took 9474.19 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 902.8 MB). Free memory was 794.9 MB in the beginning and 1.1 GB in the end (delta: -287.4 MB). Peak memory consumption was 914.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:17,690 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2362 locations, 4022 edges
  - StatisticsResult: Encoded RCFG
    2340 locations, 3970 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.11 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 646.29 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.57 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1027.40 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 851.1 MB in the beginning and 831.7 MB in the end (delta: 19.4 MB). Peak memory consumption was 136.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 77.73 ms. Allocated memory is still 1.1 GB. Free memory was 831.7 MB in the beginning and 794.9 MB in the end (delta: 36.8 MB). Peak memory consumption was 36.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9474.19 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 902.8 MB). Free memory was 794.9 MB in the beginning and 1.1 GB in the end (delta: -287.4 MB). Peak memory consumption was 914.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    965 locations, 1238 edges
  - StatisticsResult: BuchiProgram size
    2362 locations, 4022 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 1944 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.4s and 3 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.5s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 2 MinimizatonAttempts, 752 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1944 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4763 SDtfs, 4848 SDslu, 2046 SDs, 0 SdLazy, 1111 SolverSat, 1130 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1993504671) = (new CHMC)({from : 1993504668, initialSupply : 1, tokenName : 1993504669, decimalUnits : 1993504675, tokenSymbol : 1993504674});
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
CHMC(1993504671).transferFrom~address~address~uint256.gas(3979002)({from : 1993504677, from : 1993504668, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_CHMC0 := true;
[L3]                call_transferFrom_CHMC0 := false;
[L3]                revert := revert_hold;
[L775]              havoc __exception;
[L776]              revert := false;
[L777]   COND TRUE  __exception
[L778]              __tmp__Balance := Balance;
[L779]              __tmp__DType := DType;
[L780]              __tmp__Alloc := Alloc;
[L781]              __tmp__balance_ADDR := balance_ADDR;
[L782]              __tmp__M_Ref_int := M_Ref_int;
[L783]              __tmp__sum__balances0 := sum__balances0;
[L784]              __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L785]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L786]              __tmp__sum__allowed1 := sum__allowed1;
[L787]              __tmp__Length := Length;
[L788]              __tmp__now := now;
[L789]              __tmp___name_CHMC := _name_CHMC;
[L790]              __tmp___symbol_CHMC := _symbol_CHMC;
[L791]              __tmp___decimals_CHMC := _decimals_CHMC;
[L792]              __tmp___balances_CHMC := _balances_CHMC;
[L793]              __tmp___allowed_CHMC := _allowed_CHMC;
[L794]              __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L795]   CALL       call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1685]  CALL       call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1785]             __var_4 := null;
[L1786]  COND TRUE  !(to_s526 != null)
[L1787]             revert := true;
[L1685]  RET        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1686]  COND TRUE  revert
[L795]   RET        call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L796]              assume revert || gas < 0;
[L2638]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);

Loop:
CHMC(1993504671).transferFrom~address~address~uint256.gas(3979001)({from : 1993504678, from : 1993504668, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s426 && p1 != to_s426) && (p2 != from_s426 || p3 != msgsender_MSG)) && from_s426 != to_s426) && value_s426 <= _balances_CHMC[this][from_s426]) && value_s426 <= _allowed_CHMC[this][from_s426][msgsender_MSG]) && _balances_CHMC[this][to_s426] + value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s426 >= 0) && value_s426 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s426] >= 0) && _balances_CHMC[this][to_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][from_s426] >= 0) && _balances_CHMC[this][from_s426] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_CHMC[this][from_s426][msgsender_MSG] >= 0) && _allowed_CHMC[this][from_s426][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_CHMC0 := true;
[L3]                call_transferFrom_CHMC0 := false;
[L3]                revert := revert_hold;
[L775]              havoc __exception;
[L776]              revert := false;
[L777]   COND TRUE  __exception
[L778]              __tmp__Balance := Balance;
[L779]              __tmp__DType := DType;
[L780]              __tmp__Alloc := Alloc;
[L781]              __tmp__balance_ADDR := balance_ADDR;
[L782]              __tmp__M_Ref_int := M_Ref_int;
[L783]              __tmp__sum__balances0 := sum__balances0;
[L784]              __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L785]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L786]              __tmp__sum__allowed1 := sum__allowed1;
[L787]              __tmp__Length := Length;
[L788]              __tmp__now := now;
[L789]              __tmp___name_CHMC := _name_CHMC;
[L790]              __tmp___symbol_CHMC := _symbol_CHMC;
[L791]              __tmp___decimals_CHMC := _decimals_CHMC;
[L792]              __tmp___balances_CHMC := _balances_CHMC;
[L793]              __tmp___allowed_CHMC := _allowed_CHMC;
[L794]              __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L795]   CALL       call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1685]  CALL       call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1785]             __var_4 := null;
[L1786]  COND TRUE  !(to_s526 != null)
[L1787]             revert := true;
[L1685]  RET        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L1686]  COND TRUE  revert
[L795]   RET        call __ret_0_ := transferFrom~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);
[L796]              assume revert || gas < 0;
[L2638]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, from_s426, to_s426, value_s426);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
