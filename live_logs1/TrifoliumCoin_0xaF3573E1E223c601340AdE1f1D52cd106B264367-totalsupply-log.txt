This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:20:13,258 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:20:13,259 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:20:13,267 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:20:13,267 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:20:13,267 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:20:13,268 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:20:13,270 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:20:13,271 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:20:13,272 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:20:13,272 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:20:13,273 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:20:13,273 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:20:13,274 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:20:13,275 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:20:13,275 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:20:13,276 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:20:13,277 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:20:13,278 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:20:13,279 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:20:13,280 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:20:13,281 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:20:13,282 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:20:13,282 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:20:13,282 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:20:13,283 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:20:13,283 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:20:13,283 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:20:13,284 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:20:13,284 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:20:13,284 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:20:13,284 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:20:13,285 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:20:13,285 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:20:13,286 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:20:13,286 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:20:13,286 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:20:13,286 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:20:13,286 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:20:13,287 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:20:13,287 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:20:13,287 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:20:13,294 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:20:13,294 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:20:13,294 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:20:13,295 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:20:13,295 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:20:13,295 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:20:13,296 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:20:13,296 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:20:13,297 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:20:13,297 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:20:13,297 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:20:13,297 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:20:13,297 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:20:13,317 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:20:13,330 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:20:13,332 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:20:13,333 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:20:13,334 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:20:13,334 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl
[2020-11-25 06:20:13,334 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl'
[2020-11-25 06:20:13,421 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:20:13,422 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:20:13,423 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:20:13,423 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:20:13,423 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:20:13,434 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,435 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,458 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,459 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,478 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,485 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,489 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,496 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:20:13,496 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:20:13,496 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:20:13,498 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:20:13,500 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/1) ...
[2020-11-25 06:20:13,517 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TrifoliumCoin.totalSupply, _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.totalSupply, return == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:13,521 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TrifoliumCoin.totalSupply, _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.totalSupply, return == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:13,526 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TrifoliumCoin.totalSupply, _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.totalSupply, return == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:13,531 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_TrifoliumCoin[this]>=0 && _totalSupply_TrifoliumCoin[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:20:13,534 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this]==( old(_totalSupply_TrifoliumCoin[this]) ) ) && balances_TrifoliumCoin[this]==( old(balances_TrifoliumCoin[this]) ) ) && allowed_TrifoliumCoin[this]==( old(allowed_TrifoliumCoin[this]) ) ) && symbol_TrifoliumCoin[this]==( old(symbol_TrifoliumCoin[this]) ) ) && name_TrifoliumCoin[this]==( old(name_TrifoliumCoin[this]) ) ) && decimals_TrifoliumCoin[this]==( old(decimals_TrifoliumCoin[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_TrifoliumCoin>],ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TrifoliumCoin>]]]]]]
[2020-11-25 06:20:13,538 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TrifoliumCoin.totalSupply, _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.totalSupply, return == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:13,538 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_TrifoliumCoin0) ==> ( <>AP(success_totalSupply_TrifoliumCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:20:13,544 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:13 PropertyContainer
[2020-11-25 06:20:13,544 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:20:13,544 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:20:13,545 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:20:13,545 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:20:13,545 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/2) ...
[2020-11-25 06:20:13,545 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:20:13,545 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:20:13,557 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:13" (2/2) ...
[2020-11-25 06:20:13,558 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:20:13,558 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:20:13,558 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:20:13,558 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:20:13,559 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/2) ...
[2020-11-25 06:20:13,592 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:20:13,592 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:20:13,592 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:20:13,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:20:13,592 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 06:20:13,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 06:20:13,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:20:13,594 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin
[2020-11-25 06:20:13,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 06:20:13,596 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:20:13,597 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:13,598 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__success
[2020-11-25 06:20:13,599 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:20:13,600 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 06:20:13,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:20:13,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:20:13,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:20:13,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:20:13,605 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:20:13,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:20:14,135 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:14,135 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:14,135 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:14,235 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:20:14,235 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 06:20:14,238 INFO  L202        PluginConnector]: Adding new model TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:14 BoogieIcfgContainer
[2020-11-25 06:20:14,238 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:13" (2/2) ...
[2020-11-25 06:20:14,238 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:20:14,239 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1c333a30 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:14, skipping insertion in model container
[2020-11-25 06:20:14,239 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:20:14,239 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:20:14,239 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:20:14,241 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:20:14,241 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/3) ...
[2020-11-25 06:20:14,242 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@537687dc and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:14, skipping insertion in model container
[2020-11-25 06:20:14,242 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:13" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:20:14,287 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:14 NWAContainer
[2020-11-25 06:20:14,287 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:20:14,288 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:20:14,288 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:20:14,288 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:20:14,289 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:14" (3/4) ...
[2020-11-25 06:20:14,290 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@42071f47 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:14, skipping insertion in model container
[2020-11-25 06:20:14,290 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:14" (4/4) ...
[2020-11-25 06:20:14,293 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:20:14,296 INFO  L110   BuchiProductObserver]: Initial RCFG 1563 locations, 1975 edges
[2020-11-25 06:20:14,296 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:20:14,307 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:20:15,627 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:20:15,632 INFO  L110   BuchiProductObserver]: BuchiProgram size 3718 locations, 6399 edges
[2020-11-25 06:20:15,632 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:15 BoogieIcfgContainer
[2020-11-25 06:20:15,632 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:20:15,632 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:20:15,632 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:20:15,634 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:20:15,634 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:15" (1/1) ...
[2020-11-25 06:20:15,713 INFO  L313           BlockEncoder]: Initial Icfg 3718 locations, 6399 edges
[2020-11-25 06:20:15,713 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:20:15,713 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:20:15,713 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:20:15,714 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:20:15,725 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 06:20:15,734 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 06:20:15,744 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:20:15,748 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:20:15,750 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:20:15,751 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:20:15,755 INFO  L313           BlockEncoder]: Encoded RCFG 3658 locations, 6239 edges
[2020-11-25 06:20:15,755 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:20:15 BasicIcfg
[2020-11-25 06:20:15,755 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:20:15,756 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:20:15,756 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:20:15,758 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:20:15,758 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,758 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:13" (1/6) ...
[2020-11-25 06:20:15,760 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ed726ed and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:15, skipping insertion in model container
[2020-11-25 06:20:15,760 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,760 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:13" (2/6) ...
[2020-11-25 06:20:15,760 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ed726ed and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:15, skipping insertion in model container
[2020-11-25 06:20:15,760 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,760 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:14" (3/6) ...
[2020-11-25 06:20:15,760 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ed726ed and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:20:15, skipping insertion in model container
[2020-11-25 06:20:15,760 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,761 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:14" (4/6) ...
[2020-11-25 06:20:15,761 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ed726ed and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:15, skipping insertion in model container
[2020-11-25 06:20:15,761 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,761 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:15" (5/6) ...
[2020-11-25 06:20:15,761 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ed726ed and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:20:15, skipping insertion in model container
[2020-11-25 06:20:15,761 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:15,761 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:20:15" (6/6) ...
[2020-11-25 06:20:15,762 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_totalsupply.bpl_BEv2
[2020-11-25 06:20:15,798 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:20:15,798 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:20:15,798 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:20:15,798 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:20:15,798 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:20:15,798 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:20:15,798 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:20:15,798 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:20:15,798 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:20:15,828 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3658 states.
[2020-11-25 06:20:15,879 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:15,879 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:15,879 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:15,889 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:15,889 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:15,889 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:20:15,889 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3658 states.
[2020-11-25 06:20:15,906 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:15,906 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:15,906 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:15,908 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:15,908 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TrifoliumCoin0 := false;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == TrifoliumCoin;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;

Loop:
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND TRUE   choice == 20
[L4110]              gas := gas - 21000;
[L4111]  COND FALSE  !(gas >= 0)
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:15,921 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:15,921 INFO  L82        PathProgramCache]: Analyzing trace with hash -149861187, now seen corresponding path program 1 times
[2020-11-25 06:20:15,925 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:15,948 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:15,985 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:15,986 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:15,986 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:20:15,989 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:16,189 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:20:16,190 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:20:16,191 INFO  L87              Difference]: Start difference. First operand 3658 states. Second operand 4 states.
[2020-11-25 06:20:16,533 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:16,534 INFO  L93              Difference]: Finished difference Result 2514 states and 2743 transitions.
[2020-11-25 06:20:16,534 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:20:16,535 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2514 states and 2743 transitions.
[2020-11-25 06:20:16,549 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:16,568 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2514 states to 2514 states and 2743 transitions.
[2020-11-25 06:20:16,569 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:20:16,571 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 06:20:16,571 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2514 states and 2743 transitions.
[2020-11-25 06:20:16,578 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:16,578 INFO  L728         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 06:20:16,593 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2514 states and 2743 transitions.
[2020-11-25 06:20:16,635 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2514 to 2514.
[2020-11-25 06:20:16,636 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2514 states.
[2020-11-25 06:20:16,639 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2514 states to 2514 states and 2743 transitions.
[2020-11-25 06:20:16,640 INFO  L751         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 06:20:16,640 INFO  L631         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 06:20:16,640 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:20:16,641 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2514 states and 2743 transitions.
[2020-11-25 06:20:16,646 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:16,646 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:16,647 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:16,648 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:16,648 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TrifoliumCoin0 := false;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == TrifoliumCoin;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:16,652 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:16,652 INFO  L82        PathProgramCache]: Analyzing trace with hash -154046196, now seen corresponding path program 1 times
[2020-11-25 06:20:16,653 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:16,660 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:16,680 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:16,680 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:16,681 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:20:16,682 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:16,682 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:20:16,682 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:20:16,682 INFO  L87              Difference]: Start difference. First operand 2514 states and 2743 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 06:20:17,080 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:17,080 INFO  L93              Difference]: Finished difference Result 3734 states and 4229 transitions.
[2020-11-25 06:20:17,081 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:20:17,081 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3734 states and 4229 transitions.
[2020-11-25 06:20:17,100 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 06:20:17,126 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3734 states to 3614 states and 4101 transitions.
[2020-11-25 06:20:17,126 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1158
[2020-11-25 06:20:17,128 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1168
[2020-11-25 06:20:17,128 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3614 states and 4101 transitions.
[2020-11-25 06:20:17,136 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:17,136 INFO  L728         BuchiCegarLoop]: Abstraction has 3614 states and 4101 transitions.
[2020-11-25 06:20:17,140 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3614 states and 4101 transitions.
[2020-11-25 06:20:17,179 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3614 to 2730.
[2020-11-25 06:20:17,179 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2730 states.
[2020-11-25 06:20:17,184 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2730 states to 2730 states and 2957 transitions.
[2020-11-25 06:20:17,184 INFO  L751         BuchiCegarLoop]: Abstraction has 2730 states and 2957 transitions.
[2020-11-25 06:20:17,184 INFO  L631         BuchiCegarLoop]: Abstraction has 2730 states and 2957 transitions.
[2020-11-25 06:20:17,184 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:20:17,185 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2730 states and 2957 transitions.
[2020-11-25 06:20:17,192 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:20:17,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:17,192 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:17,195 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:17,195 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TrifoliumCoin0 := false;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == TrifoliumCoin;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_TrifoliumCoin[this] := 693034565;
[L2235]              name_TrifoliumCoin[this] := 693034565;
[L2236]              decimals_TrifoliumCoin[this] := 0;
[L2237]              _totalSupply_TrifoliumCoin[this] := 0;
[L2238]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_TrifoliumCoin[this] := -893528733;
[L2244]              name_TrifoliumCoin[this] := 1552345693;
[L2245]              decimals_TrifoliumCoin[this] := 8;
[L2246]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2248]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2250]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2287]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:17,199 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:17,199 INFO  L82        PathProgramCache]: Analyzing trace with hash -268451015, now seen corresponding path program 1 times
[2020-11-25 06:20:17,200 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:17,227 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:17,552 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:17,552 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:17,552 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 06:20:17,553 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:17,553 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 06:20:17,553 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-25 06:20:17,553 INFO  L87              Difference]: Start difference. First operand 2730 states and 2957 transitions. cyclomatic complexity: 229 Second operand 14 states.
[2020-11-25 06:20:19,603 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:19,604 INFO  L93              Difference]: Finished difference Result 2857 states and 3117 transitions.
[2020-11-25 06:20:19,604 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 06:20:19,604 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2857 states and 3117 transitions.
[2020-11-25 06:20:19,612 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 06:20:19,620 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2857 states to 2857 states and 3117 transitions.
[2020-11-25 06:20:19,620 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1026
[2020-11-25 06:20:19,621 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1026
[2020-11-25 06:20:19,621 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2857 states and 3117 transitions.
[2020-11-25 06:20:19,623 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:19,623 INFO  L728         BuchiCegarLoop]: Abstraction has 2857 states and 3117 transitions.
[2020-11-25 06:20:19,626 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2857 states and 3117 transitions.
[2020-11-25 06:20:19,649 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2857 to 2843.
[2020-11-25 06:20:19,649 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2843 states.
[2020-11-25 06:20:19,653 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2843 states to 2843 states and 3089 transitions.
[2020-11-25 06:20:19,653 INFO  L751         BuchiCegarLoop]: Abstraction has 2843 states and 3089 transitions.
[2020-11-25 06:20:19,653 INFO  L631         BuchiCegarLoop]: Abstraction has 2843 states and 3089 transitions.
[2020-11-25 06:20:19,653 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:20:19,653 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2843 states and 3089 transitions.
[2020-11-25 06:20:19,658 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 06:20:19,659 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:19,659 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:19,660 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:19,660 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TrifoliumCoin0 := false;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == TrifoliumCoin;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_TrifoliumCoin[this] := 693034565;
[L2235]              name_TrifoliumCoin[this] := 693034565;
[L2236]              decimals_TrifoliumCoin[this] := 0;
[L2237]              _totalSupply_TrifoliumCoin[this] := 0;
[L2238]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_TrifoliumCoin[this] := -893528733;
[L2244]              name_TrifoliumCoin[this] := 1552345693;
[L2245]              decimals_TrifoliumCoin[this] := 8;
[L2246]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2248]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2250]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2287]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND TRUE   __exception
[L825]               __tmp__Balance := Balance;
[L826]               __tmp__DType := DType;
[L827]               __tmp__Alloc := Alloc;
[L828]               __tmp__balance_ADDR := balance_ADDR;
[L829]               __tmp__M_Ref_int := M_Ref_int;
[L830]               __tmp__sum_balances0 := sum_balances0;
[L831]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L832]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L833]               __tmp__sum_allowed1 := sum_allowed1;
[L834]               __tmp__Length := Length;
[L835]               __tmp__now := now;
[L836]               __tmp__owner_Owned := owner_Owned;
[L837]               __tmp__newOwner_Owned := newOwner_Owned;
[L838]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L839]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L840]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L841]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L842]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L843]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L844]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG);
[L2296]              __var_2 := null;
[L2297]              __ret_0_ := (__tmp___totalSupply_TrifoliumCoin[this] - __tmp__balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L844]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG);
[L845]               assume revert || gas < 0;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND TRUE   __exception
[L825]               __tmp__Balance := Balance;
[L826]               __tmp__DType := DType;
[L827]               __tmp__Alloc := Alloc;
[L828]               __tmp__balance_ADDR := balance_ADDR;
[L829]               __tmp__M_Ref_int := M_Ref_int;
[L830]               __tmp__sum_balances0 := sum_balances0;
[L831]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L832]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L833]               __tmp__sum_allowed1 := sum_allowed1;
[L834]               __tmp__Length := Length;
[L835]               __tmp__now := now;
[L836]               __tmp__owner_Owned := owner_Owned;
[L837]               __tmp__newOwner_Owned := newOwner_Owned;
[L838]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L839]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L840]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L841]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L842]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L843]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L844]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG);
[L2296]              __var_2 := null;
[L2297]              __ret_0_ := (__tmp___totalSupply_TrifoliumCoin[this] - __tmp__balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L844]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG);
[L845]               assume revert || gas < 0;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:19,663 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:19,663 INFO  L82        PathProgramCache]: Analyzing trace with hash -1141962431, now seen corresponding path program 1 times
[2020-11-25 06:20:19,664 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:19,672 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:19,719 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:19,720 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:19,720 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 06:20:19,721 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:19,721 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 06:20:19,721 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 06:20:19,721 INFO  L87              Difference]: Start difference. First operand 2843 states and 3089 transitions. cyclomatic complexity: 250 Second operand 5 states.
[2020-11-25 06:20:19,973 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:19,973 INFO  L93              Difference]: Finished difference Result 3619 states and 4006 transitions.
[2020-11-25 06:20:19,973 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:20:19,973 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3619 states and 4006 transitions.
[2020-11-25 06:20:19,982 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 06:20:19,990 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3619 states to 2768 states and 3151 transitions.
[2020-11-25 06:20:19,990 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 755
[2020-11-25 06:20:19,991 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 755
[2020-11-25 06:20:19,991 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2768 states and 3151 transitions.
[2020-11-25 06:20:19,993 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:19,994 INFO  L728         BuchiCegarLoop]: Abstraction has 2768 states and 3151 transitions.
[2020-11-25 06:20:19,995 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2768 states and 3151 transitions.
[2020-11-25 06:20:20,008 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2768 to 1845.
[2020-11-25 06:20:20,008 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1845 states.
[2020-11-25 06:20:20,009 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1845 states to 1845 states and 1991 transitions.
[2020-11-25 06:20:20,009 INFO  L751         BuchiCegarLoop]: Abstraction has 1845 states and 1991 transitions.
[2020-11-25 06:20:20,009 INFO  L631         BuchiCegarLoop]: Abstraction has 1845 states and 1991 transitions.
[2020-11-25 06:20:20,009 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:20:20,010 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1845 states and 1991 transitions.
[2020-11-25 06:20:20,011 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:20,012 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:20,012 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:20,013 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:20,013 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TrifoliumCoin0 := false;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == TrifoliumCoin;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_TrifoliumCoin[this] := 693034565;
[L2235]              name_TrifoliumCoin[this] := 693034565;
[L2236]              decimals_TrifoliumCoin[this] := 0;
[L2237]              _totalSupply_TrifoliumCoin[this] := 0;
[L2238]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_TrifoliumCoin[this] := -893528733;
[L2244]              name_TrifoliumCoin[this] := 1552345693;
[L2245]              decimals_TrifoliumCoin[this] := 8;
[L2246]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2248]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2250]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2287]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND TRUE   choice == 13
[L4160]              gas := gas - 21000;
[L4161]  COND TRUE   gas >= 0
[L4162]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4163]              assume msgvalue_MSG == 0;
[L4164]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L932]               havoc __exception;
[L933]               revert := false;
[L934]   COND FALSE  !(__exception)
[L957]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2355]  COND TRUE   DType[this] == TrifoliumCoin
[L2356]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2356]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2357]  COND FALSE  !(revert)
[L2363]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2364]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2365]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2366]  COND TRUE   DType[this] == TrifoliumCoin
[L2367]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2367]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2368]  COND FALSE  !(revert)
[L2374]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2375]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2376]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2377]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2378]              success_s371 := true;
[L957]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L958]               assume !revert && gas >= 0;
[L4164]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4260]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND TRUE   choice == 16
[L4142]              gas := gas - 21000;
[L4143]  COND TRUE   gas >= 0
[L4144]              assume msgvalue_MSG == 0;
[L4145]  CALL        call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4260]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:20,016 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:20,016 INFO  L82        PathProgramCache]: Analyzing trace with hash 1328423939, now seen corresponding path program 1 times
[2020-11-25 06:20:20,017 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:20,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:20,056 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:20,112 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:20,112 INFO  L82        PathProgramCache]: Analyzing trace with hash 681537643, now seen corresponding path program 1 times
[2020-11-25 06:20:20,112 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:20,116 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:20,119 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:20,126 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:20,126 INFO  L82        PathProgramCache]: Analyzing trace with hash -1673239383, now seen corresponding path program 1 times
[2020-11-25 06:20:20,126 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:20,145 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:20,184 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 06:20:20,601 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification. DAG size of input: 204 DAG size of output: 190
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 06:20:20,892 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 06:20:21,653 WARN  L188               SmtUtils]: Spent 155.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 201
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 06:20:21,818 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 278
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 06:20:21,942 WARN  L188               SmtUtils]: Spent 121.00 ms on a formula simplification that was a NOOP. DAG size: 228
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 06:20:25,893 WARN  L188               SmtUtils]: Spent 3.67 s on a formula simplification. DAG size of input: 581 DAG size of output: 572
Garbage collection #1: 239 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 239 to 467
Garbage collection #2: 467 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 467 to 929
Garbage collection #3: 929 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 929 to 1847
Garbage collection #4: 1847 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1847 to 3691
Garbage collection #5: 3691 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3691 to 7369
Garbage collection #6: 7369 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7369 to 14737
Garbage collection #7: 14737 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 14737 to 29473
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 06:20:26,311 WARN  L188               SmtUtils]: Spent 400.00 ms on a formula simplification that was a NOOP. DAG size: 223
[2020-11-25 06:20:26,893 WARN  L188               SmtUtils]: Spent 566.00 ms on a formula simplification that was a NOOP. DAG size: 300
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 06:20:27,169 WARN  L188               SmtUtils]: Spent 271.00 ms on a formula simplification that was a NOOP. DAG size: 223
[2020-11-25 06:20:28,279 WARN  L188               SmtUtils]: Spent 1.11 s on a formula simplification. DAG size of input: 302 DAG size of output: 301
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 06:20:28,865 WARN  L188               SmtUtils]: Spent 582.00 ms on a formula simplification that was a NOOP. DAG size: 297
[2020-11-25 06:20:28,880 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:28,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:20:28,909 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:20:28 BasicIcfg
[2020-11-25 06:20:28,909 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:20:28,910 INFO  L168              Benchmark]: Toolchain (without parser) took 15488.60 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 940.6 MB in the beginning and 1.7 GB in the end (delta: -787.2 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,910 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,910 INFO  L168              Benchmark]: Boogie Preprocessor took 73.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,911 INFO  L168              Benchmark]: UtopiaSpecLang took 47.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,911 INFO  L168              Benchmark]: Boogie Printer took 13.13 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,911 INFO  L168              Benchmark]: RCFGBuilder took 681.20 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 801.0 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,911 INFO  L168              Benchmark]: UtopiaLTL2Aut took 48.26 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,912 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1344.56 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 187.7 MB). Free memory was 797.4 MB in the beginning and 990.0 MB in the end (delta: -192.6 MB). Peak memory consumption was 171.8 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,912 INFO  L168              Benchmark]: BlockEncodingV2 took 122.81 ms. Allocated memory is still 1.2 GB. Free memory was 990.0 MB in the beginning and 927.2 MB in the end (delta: 62.9 MB). Peak memory consumption was 62.9 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,912 INFO  L168              Benchmark]: BuchiAutomizer took 13153.99 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 842.0 MB). Free memory was 927.2 MB in the beginning and 1.7 GB in the end (delta: -800.6 MB). Peak memory consumption was 916.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:20:28,918 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3718 locations, 6399 edges
  - StatisticsResult: Encoded RCFG
    3658 locations, 6239 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 73.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.13 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 681.20 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 801.0 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 48.26 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1344.56 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 187.7 MB). Free memory was 797.4 MB in the beginning and 990.0 MB in the end (delta: -192.6 MB). Peak memory consumption was 171.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 122.81 ms. Allocated memory is still 1.2 GB. Free memory was 990.0 MB in the beginning and 927.2 MB in the end (delta: 62.9 MB). Peak memory consumption was 62.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13153.99 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 842.0 MB). Free memory was 927.2 MB in the beginning and 1.7 GB in the end (delta: -800.6 MB). Peak memory consumption was 916.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1563 locations, 1975 edges
  - StatisticsResult: BuchiProgram size
    3718 locations, 6399 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 1845 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.1s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 9.4s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1821 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2843 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12033 SDtfs, 13543 SDslu, 16422 SDs, 0 SdLazy, 20718 SolverSat, 2493 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(2500000000000000007) = (new TrifoliumCoin)({from : 2500000000000000001});
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_TrifoliumCoin[this] := 693034565;
[L2235]              name_TrifoliumCoin[this] := 693034565;
[L2236]              decimals_TrifoliumCoin[this] := 0;
[L2237]              _totalSupply_TrifoliumCoin[this] := 0;
[L2238]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_TrifoliumCoin[this] := -893528733;
[L2244]              name_TrifoliumCoin[this] := 1552345693;
[L2245]              decimals_TrifoliumCoin[this] := 8;
[L2246]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2248]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2250]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2287]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
TrifoliumCoin(2500000000000000007).transfer~address~uint256.gas(3979002)({from : (- 388585086394691706242946996465895591095425695583), to : 0, tokens : 2500000000000000000});
[L932]               havoc __exception;
[L933]               revert := false;
[L934]   COND FALSE  !(__exception)
[L957]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2355]  COND TRUE   DType[this] == TrifoliumCoin
[L2356]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2356]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2357]  COND FALSE  !(revert)
[L2363]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2364]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2365]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2366]  COND TRUE   DType[this] == TrifoliumCoin
[L2367]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2367]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2368]  COND FALSE  !(revert)
[L2374]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2375]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2376]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2377]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2378]              success_s371 := true;
[L957]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L958]               assume !revert && gas >= 0;
[L4164]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
TrifoliumCoin(2500000000000000007).totalSupply.gas(3979003)({from : 2500000000000000013});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);

Loop:
TrifoliumCoin(2500000000000000007).totalSupply.gas(3979001)({from : 2500000000000000014});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TrifoliumCoin[this] >= 0 && _totalSupply_TrifoliumCoin[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TrifoliumCoin0 := true;
[L2]                 call_totalSupply_TrifoliumCoin0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2304]              __var_2 := null;
[L2305]              __ret_0_ := (_totalSupply_TrifoliumCoin[this] - balances_TrifoliumCoin[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_TrifoliumCoin[this] && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4145]  RET         call __ret_0_totalSupply := totalSupply_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
