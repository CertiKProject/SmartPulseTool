This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:18:34,758 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:18:34,759 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:18:34,766 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:18:34,766 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:18:34,767 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:18:34,767 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:18:34,768 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:18:34,769 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:18:34,770 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:18:34,770 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:18:34,770 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:18:34,771 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:18:34,771 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:18:34,772 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:18:34,773 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:18:34,773 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:18:34,774 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:18:34,775 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:18:34,775 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:18:34,776 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:18:34,777 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:18:34,778 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:18:34,778 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:18:34,778 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:18:34,779 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:18:34,779 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:18:34,780 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:18:34,780 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:18:34,780 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:18:34,780 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:18:34,780 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:18:34,781 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:18:34,781 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:18:34,782 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:18:34,782 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:18:34,782 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:18:34,782 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:18:34,782 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:18:34,783 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:18:34,783 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:18:34,783 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:18:34,791 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:18:34,791 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:18:34,792 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:18:34,792 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:18:34,792 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:18:34,793 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:18:34,793 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:18:34,793 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:18:34,793 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:18:34,794 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:18:34,795 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:18:34,795 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:18:34,795 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:18:34,814 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:18:34,828 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:18:34,833 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:18:34,835 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:18:34,835 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:18:34,836 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl
[2020-11-25 12:18:34,836 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl'
[2020-11-25 12:18:34,915 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:18:34,916 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:18:34,917 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:18:34,917 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:18:34,917 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:18:34,933 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:34,934 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:34,963 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:34,964 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:34,983 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:34,993 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:35,000 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:35,009 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:18:35,010 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:18:35,010 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:18:35,012 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:18:35,015 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/1) ...
[2020-11-25 12:18:35,039 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(COM.approve(spender, value), return == true && _allowed_COM[this][msg.sender][spender] == value &&  _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:35,044 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(COM.approve(spender, value), return == true && _allowed_COM[this][msg.sender][spender] == value &&  _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:35,051 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(COM.approve(spender, value), return == true && _allowed_COM[this][msg.sender][spender] == value &&  _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:35,058 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s643 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s643,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]
[2020-11-25 12:18:35,060 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowed_COM[this][msg.sender][spender_s643]==value_s643 ) && _totalSupply_COM[this]==( old(_totalSupply_COM[this]) ) ) && _balances_COM[this]==( old(_balances_COM[this]) ) ) && _allowed_COM[this][p1][p2]==( old(_allowed_COM[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_COM>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],[IdentifierExpression[spender_s643,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],IdentifierExpression[value_s643,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_COM>]]]]]]
[2020-11-25 12:18:35,064 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(COM.approve(spender, value), return == true && _allowed_COM[this][msg.sender][spender] == value &&  _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:35,065 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_COM0) ==> ( <>AP(success_approve_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:18:35,073 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:35 PropertyContainer
[2020-11-25 12:18:35,074 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:18:35,074 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:18:35,074 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:18:35,074 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:18:35,075 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/2) ...
[2020-11-25 12:18:35,075 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:18:35,075 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:18:35,089 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:35" (2/2) ...
[2020-11-25 12:18:35,089 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:18:35,089 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:18:35,089 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:18:35,090 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:18:35,090 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/2) ...
[2020-11-25 12:18:35,141 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:18:35,141 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 12:18:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:18:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:35,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:35,143 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 12:18:35,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-25 12:18:35,144 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-25 12:18:35,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-25 12:18:35,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-25 12:18:35,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:35,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM
[2020-11-25 12:18:35,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:35,146 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-25 12:18:35,147 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,148 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:35,149 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__success
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:35,150 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:35,151 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:35,152 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__success
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:35,153 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:18:35,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:35,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:35,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:35,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__success
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:35,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:35,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:35,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:18:35,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:18:35,161 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:18:35,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:18:35,564 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:35,692 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:35,692 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:35,693 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:35,816 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:18:35,816 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 12:18:35,818 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:35 BoogieIcfgContainer
[2020-11-25 12:18:35,818 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:35" (2/2) ...
[2020-11-25 12:18:35,818 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:18:35,819 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@200495b0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:35, skipping insertion in model container
[2020-11-25 12:18:35,819 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:18:35,819 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:35,819 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:18:35,820 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:18:35,821 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/3) ...
[2020-11-25 12:18:35,821 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@42368e4d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:35, skipping insertion in model container
[2020-11-25 12:18:35,821 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:35" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:18:35,855 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:35 NWAContainer
[2020-11-25 12:18:35,856 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:35,856 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:35,856 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:18:35,857 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:18:35,857 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:35" (3/4) ...
[2020-11-25 12:18:35,858 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@676fef2a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:35, skipping insertion in model container
[2020-11-25 12:18:35,858 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:35" (4/4) ...
[2020-11-25 12:18:35,861 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:18:35,865 INFO  L110   BuchiProductObserver]: Initial RCFG 1656 locations, 2149 edges
[2020-11-25 12:18:35,865 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:18:35,875 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:18:37,100 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:18:37,105 INFO  L110   BuchiProductObserver]: BuchiProgram size 3974 locations, 6938 edges
[2020-11-25 12:18:37,105 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:37 BoogieIcfgContainer
[2020-11-25 12:18:37,106 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:37,106 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:18:37,106 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:18:37,108 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:18:37,108 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:37" (1/1) ...
[2020-11-25 12:18:37,183 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:37,185 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:37,199 INFO  L313           BlockEncoder]: Initial Icfg 3974 locations, 6938 edges
[2020-11-25 12:18:37,199 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:18:37,200 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:37,200 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:18:37,201 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:18:37,214 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 11 locations because of local infeasibility
[2020-11-25 12:18:37,223 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:18:37,235 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:18:37,239 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:18:37,242 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:18:37,243 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:18:37,249 INFO  L313           BlockEncoder]: Encoded RCFG 3932 locations, 6829 edges
[2020-11-25 12:18:37,249 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:37 BasicIcfg
[2020-11-25 12:18:37,249 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:18:37,250 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:18:37,250 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:18:37,252 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:18:37,252 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,253 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:34" (1/6) ...
[2020-11-25 12:18:37,254 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38ecbad and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:37, skipping insertion in model container
[2020-11-25 12:18:37,255 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,255 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:35" (2/6) ...
[2020-11-25 12:18:37,255 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38ecbad and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:37, skipping insertion in model container
[2020-11-25 12:18:37,255 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,255 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:35" (3/6) ...
[2020-11-25 12:18:37,255 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38ecbad and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:18:37, skipping insertion in model container
[2020-11-25 12:18:37,255 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,255 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:35" (4/6) ...
[2020-11-25 12:18:37,256 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38ecbad and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:37, skipping insertion in model container
[2020-11-25 12:18:37,256 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,256 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:37" (5/6) ...
[2020-11-25 12:18:37,256 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38ecbad and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:18:37, skipping insertion in model container
[2020-11-25 12:18:37,256 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:37,256 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:37" (6/6) ...
[2020-11-25 12:18:37,257 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_approve.bpl_BEv2
[2020-11-25 12:18:37,295 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:18:37,295 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:18:37,296 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:18:37,296 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:18:37,296 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:18:37,296 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:18:37,296 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:18:37,296 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:18:37,296 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:18:37,336 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3932 states.
[2020-11-25 12:18:37,394 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:37,395 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:37,395 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:37,404 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:37,404 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:37,404 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:18:37,405 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3932 states.
[2020-11-25 12:18:37,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:37,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:37,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:37,434 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:37,434 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND TRUE   revert
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND TRUE   revert
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND TRUE   choice == 15
[L4182]              gas := gas - 21000;
[L4183]  COND FALSE  !(gas >= 0)
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:37,451 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:37,451 INFO  L82        PathProgramCache]: Analyzing trace with hash 268499213, now seen corresponding path program 1 times
[2020-11-25 12:18:37,456 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:37,482 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:37,518 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:37,520 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:37,520 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:37,523 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:37,730 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:37,730 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:37,731 INFO  L87              Difference]: Start difference. First operand 3932 states. Second operand 4 states.
[2020-11-25 12:18:38,141 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:38,141 INFO  L93              Difference]: Finished difference Result 2919 states and 3366 transitions.
[2020-11-25 12:18:38,143 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:38,145 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2919 states and 3366 transitions.
[2020-11-25 12:18:38,170 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,200 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2919 states to 2915 states and 3358 transitions.
[2020-11-25 12:18:38,201 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:18:38,203 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 626
[2020-11-25 12:18:38,204 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2915 states and 3358 transitions.
[2020-11-25 12:18:38,214 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:38,215 INFO  L728         BuchiCegarLoop]: Abstraction has 2915 states and 3358 transitions.
[2020-11-25 12:18:38,234 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2915 states and 3358 transitions.
[2020-11-25 12:18:38,275 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2915 to 2915.
[2020-11-25 12:18:38,276 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2915 states.
[2020-11-25 12:18:38,280 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2915 states to 2915 states and 3358 transitions.
[2020-11-25 12:18:38,281 INFO  L751         BuchiCegarLoop]: Abstraction has 2915 states and 3358 transitions.
[2020-11-25 12:18:38,281 INFO  L631         BuchiCegarLoop]: Abstraction has 2915 states and 3358 transitions.
[2020-11-25 12:18:38,281 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:18:38,281 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2915 states and 3358 transitions.
[2020-11-25 12:18:38,287 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,288 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:38,288 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:38,290 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:38,290 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND TRUE   revert
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:38,294 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:38,294 INFO  L82        PathProgramCache]: Analyzing trace with hash -1728380162, now seen corresponding path program 1 times
[2020-11-25 12:18:38,295 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:38,302 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:38,319 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:38,319 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:38,319 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:18:38,320 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:38,320 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:18:38,320 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:18:38,321 INFO  L87              Difference]: Start difference. First operand 2915 states and 3358 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 12:18:38,380 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:38,381 INFO  L93              Difference]: Finished difference Result 3549 states and 4006 transitions.
[2020-11-25 12:18:38,381 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:18:38,381 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3549 states and 4006 transitions.
[2020-11-25 12:18:38,393 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:18:38,408 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3549 states to 3549 states and 4006 transitions.
[2020-11-25 12:18:38,408 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 801
[2020-11-25 12:18:38,409 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 801
[2020-11-25 12:18:38,409 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3549 states and 4006 transitions.
[2020-11-25 12:18:38,414 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:38,414 INFO  L728         BuchiCegarLoop]: Abstraction has 3549 states and 4006 transitions.
[2020-11-25 12:18:38,417 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3549 states and 4006 transitions.
[2020-11-25 12:18:38,444 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3549 to 3019.
[2020-11-25 12:18:38,444 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3019 states.
[2020-11-25 12:18:38,447 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3019 states to 3019 states and 3362 transitions.
[2020-11-25 12:18:38,447 INFO  L751         BuchiCegarLoop]: Abstraction has 3019 states and 3362 transitions.
[2020-11-25 12:18:38,448 INFO  L631         BuchiCegarLoop]: Abstraction has 3019 states and 3362 transitions.
[2020-11-25 12:18:38,448 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:18:38,448 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3019 states and 3362 transitions.
[2020-11-25 12:18:38,453 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,454 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:38,454 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:38,455 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:38,455 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND TRUE   !(amount_s1039 != 0)
[L3011]              revert := true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND TRUE   revert
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:38,458 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:38,458 INFO  L82        PathProgramCache]: Analyzing trace with hash 1335527332, now seen corresponding path program 1 times
[2020-11-25 12:18:38,459 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:38,468 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:38,505 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:38,505 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:38,505 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:38,506 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:38,506 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:38,506 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:38,506 INFO  L87              Difference]: Start difference. First operand 3019 states and 3362 transitions. cyclomatic complexity: 345 Second operand 4 states.
[2020-11-25 12:18:38,542 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:38,542 INFO  L93              Difference]: Finished difference Result 3013 states and 3353 transitions.
[2020-11-25 12:18:38,542 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:38,542 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3013 states and 3353 transitions.
[2020-11-25 12:18:38,550 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,559 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3013 states to 3010 states and 3350 transitions.
[2020-11-25 12:18:38,559 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 670
[2020-11-25 12:18:38,559 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 670
[2020-11-25 12:18:38,559 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3010 states and 3350 transitions.
[2020-11-25 12:18:38,562 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:38,562 INFO  L728         BuchiCegarLoop]: Abstraction has 3010 states and 3350 transitions.
[2020-11-25 12:18:38,565 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3010 states and 3350 transitions.
[2020-11-25 12:18:38,590 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3010 to 3010.
[2020-11-25 12:18:38,590 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3010 states.
[2020-11-25 12:18:38,594 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3010 states to 3010 states and 3350 transitions.
[2020-11-25 12:18:38,594 INFO  L751         BuchiCegarLoop]: Abstraction has 3010 states and 3350 transitions.
[2020-11-25 12:18:38,594 INFO  L631         BuchiCegarLoop]: Abstraction has 3010 states and 3350 transitions.
[2020-11-25 12:18:38,594 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:18:38,594 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3010 states and 3350 transitions.
[2020-11-25 12:18:38,599 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,599 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:38,599 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:38,600 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:38,600 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND TRUE   !(spender_s643 != null)
[L2613]              revert := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:38,603 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:38,604 INFO  L82        PathProgramCache]: Analyzing trace with hash -310559845, now seen corresponding path program 1 times
[2020-11-25 12:18:38,604 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:38,618 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:38,675 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:38,675 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:38,675 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:18:38,676 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:38,676 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:18:38,676 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:18:38,676 INFO  L87              Difference]: Start difference. First operand 3010 states and 3350 transitions. cyclomatic complexity: 342 Second operand 3 states.
[2020-11-25 12:18:38,742 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:38,743 INFO  L93              Difference]: Finished difference Result 3536 states and 3949 transitions.
[2020-11-25 12:18:38,743 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:18:38,743 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3536 states and 3949 transitions.
[2020-11-25 12:18:38,757 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:18:38,772 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3536 states to 3369 states and 3744 transitions.
[2020-11-25 12:18:38,773 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 726
[2020-11-25 12:18:38,773 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 726
[2020-11-25 12:18:38,774 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3369 states and 3744 transitions.
[2020-11-25 12:18:38,777 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:38,777 INFO  L728         BuchiCegarLoop]: Abstraction has 3369 states and 3744 transitions.
[2020-11-25 12:18:38,781 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3369 states and 3744 transitions.
[2020-11-25 12:18:38,814 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3369 to 2907.
[2020-11-25 12:18:38,814 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2907 states.
[2020-11-25 12:18:38,819 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2907 states to 2907 states and 3168 transitions.
[2020-11-25 12:18:38,819 INFO  L751         BuchiCegarLoop]: Abstraction has 2907 states and 3168 transitions.
[2020-11-25 12:18:38,819 INFO  L631         BuchiCegarLoop]: Abstraction has 2907 states and 3168 transitions.
[2020-11-25 12:18:38,819 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:18:38,819 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2907 states and 3168 transitions.
[2020-11-25 12:18:38,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:38,826 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:38,826 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:38,828 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:38,828 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND FALSE  !(!(spender_s643 != null))
[L2616]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_COM[this][msgsender_MSG][spender_s643];
[L2617]              _allowed_COM[this][msgsender_MSG][spender_s643] := value_s643;
[L2618]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_COM[this][msgsender_MSG][spender_s643];
[L2619]              assert { :EventEmitted "Approval_COM" } true;
[L2620]              __ret_0_ := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND FALSE  !(__exception)
[L1016]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2611]              __var_12 := null;
[L2612]  COND FALSE  !(!(spender_s643 != null))
[L2616]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_COM[this][msgsender_MSG][spender_s643];
[L2617]              _allowed_COM[this][msgsender_MSG][spender_s643] := value_s643;
[L2618]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_COM[this][msgsender_MSG][spender_s643];
[L2619]              assert { :EventEmitted "Approval_COM" } true;
[L2620]              __ret_0_ := true;
[L1016]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1017]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_COM[this][msgsender_MSG][spender_s643] == value_s643) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this][p1][p2] == old(_allowed_COM[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:38,832 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:38,832 INFO  L82        PathProgramCache]: Analyzing trace with hash -38305021, now seen corresponding path program 1 times
[2020-11-25 12:18:38,833 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:38,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:39,016 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:39,016 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:39,016 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 12:18:39,017 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:39,017 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 12:18:39,017 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 12:18:39,017 INFO  L87              Difference]: Start difference. First operand 2907 states and 3168 transitions. cyclomatic complexity: 263 Second operand 13 states.
[2020-11-25 12:18:40,435 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:40,435 INFO  L93              Difference]: Finished difference Result 3046 states and 3329 transitions.
[2020-11-25 12:18:40,435 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 12:18:40,435 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3046 states and 3329 transitions.
[2020-11-25 12:18:40,441 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 12:18:40,450 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3046 states to 3046 states and 3329 transitions.
[2020-11-25 12:18:40,450 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 689
[2020-11-25 12:18:40,451 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 689
[2020-11-25 12:18:40,451 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3046 states and 3329 transitions.
[2020-11-25 12:18:40,454 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:40,454 INFO  L728         BuchiCegarLoop]: Abstraction has 3046 states and 3329 transitions.
[2020-11-25 12:18:40,456 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3046 states and 3329 transitions.
[2020-11-25 12:18:40,477 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3046 to 3010.
[2020-11-25 12:18:40,477 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3010 states.
[2020-11-25 12:18:40,480 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3010 states to 3010 states and 3284 transitions.
[2020-11-25 12:18:40,480 INFO  L751         BuchiCegarLoop]: Abstraction has 3010 states and 3284 transitions.
[2020-11-25 12:18:40,480 INFO  L631         BuchiCegarLoop]: Abstraction has 3010 states and 3284 transitions.
[2020-11-25 12:18:40,480 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:18:40,480 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3010 states and 3284 transitions.
[2020-11-25 12:18:40,483 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:18:40,484 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:40,484 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:40,485 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:40,485 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_COM0 := false;
[L3]                 call_approve_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND TRUE   __exception
[L989]               __tmp__Balance := Balance;
[L990]               __tmp__DType := DType;
[L991]               __tmp__Alloc := Alloc;
[L992]               __tmp__balance_ADDR := balance_ADDR;
[L993]               __tmp__M_Ref_int := M_Ref_int;
[L994]               __tmp__sum__balances0 := sum__balances0;
[L995]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L996]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L997]               __tmp__sum__allowed1 := sum__allowed1;
[L998]               __tmp__Length := Length;
[L999]               __tmp__now := now;
[L1000]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1001]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1002]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1003]              __tmp___balances_COM := _balances_COM;
[L1004]              __tmp___allowed_COM := _allowed_COM;
[L1005]              __tmp__tokenName_COM := tokenName_COM;
[L1006]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1007]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1008]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1009]              __tmp__noFee_COM := noFee_COM;
[L1010]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1011]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1012]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1013]  CALL        call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2596]              __var_12 := null;
[L2597]  COND TRUE   !(spender_s643 != null)
[L2598]              revert := true;
[L1013]  RET         call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1014]              assume revert || gas < 0;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND TRUE   choice == 11
[L4207]              gas := gas - 21000;
[L4208]  COND TRUE   gas >= 0
[L4209]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4210]              assume msgvalue_MSG == 0;
[L4211]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                 call_approve_COM0 := true;
[L3]                 call_approve_COM0 := false;
[L3]                 revert := revert_hold;
[L986]               havoc __exception;
[L987]               revert := false;
[L988]   COND TRUE   __exception
[L989]               __tmp__Balance := Balance;
[L990]               __tmp__DType := DType;
[L991]               __tmp__Alloc := Alloc;
[L992]               __tmp__balance_ADDR := balance_ADDR;
[L993]               __tmp__M_Ref_int := M_Ref_int;
[L994]               __tmp__sum__balances0 := sum__balances0;
[L995]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L996]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L997]               __tmp__sum__allowed1 := sum__allowed1;
[L998]               __tmp__Length := Length;
[L999]               __tmp__now := now;
[L1000]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1001]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1002]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1003]              __tmp___balances_COM := _balances_COM;
[L1004]              __tmp___allowed_COM := _allowed_COM;
[L1005]              __tmp__tokenName_COM := tokenName_COM;
[L1006]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1007]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1008]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1009]              __tmp__noFee_COM := noFee_COM;
[L1010]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1011]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1012]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1013]  CALL        call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2596]              __var_12 := null;
[L2597]  COND TRUE   !(spender_s643 != null)
[L2598]              revert := true;
[L1013]  RET         call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1014]              assume revert || gas < 0;
[L4211]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:40,490 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:40,490 INFO  L82        PathProgramCache]: Analyzing trace with hash -687314170, now seen corresponding path program 1 times
[2020-11-25 12:18:40,491 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:40,502 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:40,514 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:40,573 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:40,573 INFO  L82        PathProgramCache]: Analyzing trace with hash -1813600280, now seen corresponding path program 1 times
[2020-11-25 12:18:40,574 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:40,577 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:40,581 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:40,589 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:40,589 INFO  L82        PathProgramCache]: Analyzing trace with hash -157685203, now seen corresponding path program 1 times
[2020-11-25 12:18:40,589 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:40,602 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:40,616 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 12:18:40,907 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 264
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
[2020-11-25 12:18:41,332 WARN  L188               SmtUtils]: Spent 409.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 210
[2020-11-25 12:18:41,883 WARN  L188               SmtUtils]: Spent 547.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.004s / 0.008s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 12:18:42,050 WARN  L188               SmtUtils]: Spent 131.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 141
[2020-11-25 12:18:42,247 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 316
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 12:18:42,416 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification that was a NOOP. DAG size: 249
[2020-11-25 12:18:42,613 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 12:18:42,854 WARN  L188               SmtUtils]: Spent 222.00 ms on a formula simplification. DAG size of input: 160 DAG size of output: 145
[2020-11-25 12:18:42,862 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-25 12:18:43,109 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 123
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 12:18:43,396 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 176
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 12:18:43,824 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 12:18:43,952 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 12:18:44,430 WARN  L188               SmtUtils]: Spent 306.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 210
[2020-11-25 12:18:44,916 WARN  L188               SmtUtils]: Spent 484.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 12:18:45,031 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 140
[2020-11-25 12:18:45,157 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 12:18:45,481 WARN  L188               SmtUtils]: Spent 317.00 ms on a formula simplification. DAG size of input: 248 DAG size of output: 248
[2020-11-25 12:18:47,695 WARN  L188               SmtUtils]: Spent 2.21 s on a formula simplification. DAG size of input: 493 DAG size of output: 490
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 12:18:48,119 WARN  L188               SmtUtils]: Spent 406.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 12:18:48,552 WARN  L188               SmtUtils]: Spent 412.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 12:18:49,069 WARN  L188               SmtUtils]: Spent 501.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 12:18:49,658 WARN  L188               SmtUtils]: Spent 587.00 ms on a formula simplification. DAG size of input: 346 DAG size of output: 345
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 12:18:50,592 WARN  L188               SmtUtils]: Spent 925.00 ms on a formula simplification. DAG size of input: 360 DAG size of output: 353
[2020-11-25 12:18:50,604 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:50,619 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:50,627 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:18:50 BasicIcfg
[2020-11-25 12:18:50,627 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:18:50,628 INFO  L168              Benchmark]: Toolchain (without parser) took 15711.95 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -258.3 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,628 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,628 INFO  L168              Benchmark]: Boogie Preprocessor took 92.77 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,629 INFO  L168              Benchmark]: UtopiaSpecLang took 63.82 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,629 INFO  L168              Benchmark]: Boogie Printer took 15.33 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,629 INFO  L168              Benchmark]: RCFGBuilder took 729.58 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,629 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.53 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,630 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1249.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 206.6 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -245.6 MB). Peak memory consumption was 183.2 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,630 INFO  L168              Benchmark]: BlockEncodingV2 took 143.69 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 981.8 MB in the end (delta: 66.6 MB). Peak memory consumption was 66.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,630 INFO  L168              Benchmark]: BuchiAutomizer took 13377.54 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 981.8 MB in the beginning and 1.2 GB in the end (delta: -217.1 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 12:18:50,634 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3974 locations, 6938 edges
  - StatisticsResult: Encoded RCFG
    3932 locations, 6829 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.77 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.82 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.33 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 729.58 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.53 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1249.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 206.6 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -245.6 MB). Peak memory consumption was 183.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 143.69 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 981.8 MB in the end (delta: 66.6 MB). Peak memory consumption was 66.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13377.54 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 981.8 MB in the beginning and 1.2 GB in the end (delta: -217.1 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1656 locations, 2149 edges
  - StatisticsResult: BuchiProgram size
    3974 locations, 6938 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 3010 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.3s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 10.5s. Construction of modules took 1.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1028 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3019 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 16751 SDtfs, 9669 SDslu, 21711 SDs, 0 SdLazy, 21603 SolverSat, 2054 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000017) = (new COM)({from : 1000000000000000000000001});
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
COM(1000000000000000000000017).approve~address~uint256.gas(3979002)({from : 1000000000000000000000008, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                call_approve_COM0 := true;
[L3]                call_approve_COM0 := false;
[L3]                revert := revert_hold;
[L986]              havoc __exception;
[L987]              revert := false;
[L988]   COND TRUE  __exception
[L989]              __tmp__Balance := Balance;
[L990]              __tmp__DType := DType;
[L991]              __tmp__Alloc := Alloc;
[L992]              __tmp__balance_ADDR := balance_ADDR;
[L993]              __tmp__M_Ref_int := M_Ref_int;
[L994]              __tmp__sum__balances0 := sum__balances0;
[L995]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L996]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L997]              __tmp__sum__allowed1 := sum__allowed1;
[L998]              __tmp__Length := Length;
[L999]              __tmp__now := now;
[L1000]             __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1001]             __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1002]             __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1003]             __tmp___balances_COM := _balances_COM;
[L1004]             __tmp___allowed_COM := _allowed_COM;
[L1005]             __tmp__tokenName_COM := tokenName_COM;
[L1006]             __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1007]             __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1008]             __tmp___totalSupply_COM := _totalSupply_COM;
[L1009]             __tmp__noFee_COM := noFee_COM;
[L1010]             __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1011]             __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1012]             __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1013]  CALL       call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2596]             __var_12 := null;
[L2597]  COND TRUE  !(spender_s643 != null)
[L2598]             revert := true;
[L1013]  RET        call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1014]             assume revert || gas < 0;
[L4211]  RET        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);

Loop:
COM(1000000000000000000000017).approve~address~uint256.gas(3979001)({from : 1000000000000000000000009, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s643;
[L3]                call_approve_COM0 := true;
[L3]                call_approve_COM0 := false;
[L3]                revert := revert_hold;
[L986]              havoc __exception;
[L987]              revert := false;
[L988]   COND TRUE  __exception
[L989]              __tmp__Balance := Balance;
[L990]              __tmp__DType := DType;
[L991]              __tmp__Alloc := Alloc;
[L992]              __tmp__balance_ADDR := balance_ADDR;
[L993]              __tmp__M_Ref_int := M_Ref_int;
[L994]              __tmp__sum__balances0 := sum__balances0;
[L995]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L996]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L997]              __tmp__sum__allowed1 := sum__allowed1;
[L998]              __tmp__Length := Length;
[L999]              __tmp__now := now;
[L1000]             __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1001]             __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1002]             __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1003]             __tmp___balances_COM := _balances_COM;
[L1004]             __tmp___allowed_COM := _allowed_COM;
[L1005]             __tmp__tokenName_COM := tokenName_COM;
[L1006]             __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1007]             __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1008]             __tmp___totalSupply_COM := _totalSupply_COM;
[L1009]             __tmp__noFee_COM := noFee_COM;
[L1010]             __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1011]             __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1012]             __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1013]  CALL       call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2596]             __var_12 := null;
[L2597]  COND TRUE  !(spender_s643 != null)
[L2598]             revert := true;
[L1013]  RET        call __ret_0_ := approve~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1014]             assume revert || gas < 0;
[L4211]  RET        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
