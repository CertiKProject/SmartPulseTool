This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:52:38,451 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:52:38,452 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:52:38,462 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:52:38,462 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:52:38,463 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:52:38,464 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:52:38,465 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:52:38,467 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:52:38,467 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:52:38,468 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:52:38,468 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:52:38,469 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:52:38,470 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:52:38,471 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:52:38,471 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:52:38,472 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:52:38,473 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:52:38,474 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:52:38,475 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:52:38,476 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:52:38,476 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:52:38,478 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:52:38,478 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:52:38,478 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:52:38,479 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:52:38,479 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:52:38,480 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:52:38,480 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:52:38,480 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:52:38,481 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:52:38,481 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:52:38,481 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:52:38,482 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:52:38,483 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:52:38,483 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:52:38,484 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:52:38,484 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:52:38,484 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:52:38,485 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:52:38,485 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:52:38,485 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:52:38,493 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:52:38,493 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:52:38,494 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:52:38,494 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:52:38,494 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:52:38,494 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:52:38,494 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:52:38,494 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:52:38,494 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:52:38,494 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:52:38,495 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:52:38,495 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:52:38,496 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:52:38,496 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:52:38,518 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:52:38,531 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:52:38,533 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:52:38,534 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:52:38,535 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:52:38,535 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl
[2020-11-25 05:52:38,535 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl'
[2020-11-25 05:52:38,619 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:52:38,620 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:52:38,620 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:52:38,621 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:52:38,621 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:52:38,637 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,638 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,665 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,665 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,682 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,692 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,698 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,707 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:52:38,707 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:52:38,707 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:52:38,709 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:52:38,713 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/1) ...
[2020-11-25 05:52:38,730 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:38,735 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:38,742 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:38,746 INFO  L636   opiaSpecLangObserver]: Parsed ( _balances_ERC20[this][account_s121]>=0 && _balances_ERC20[this][account_s121]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s121,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s121,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:52:38,749 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==_balances_ERC20[this][account_s121] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _total_StrikeFarm[this]==( old(_total_StrikeFarm[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,balanceOf~address_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s121,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]]
[2020-11-25 05:52:38,756 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:38,757 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_ERC200) ==> ( <>AP(success_balanceOf_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:52:38,769 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:38 PropertyContainer
[2020-11-25 05:52:38,769 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:52:38,770 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:52:38,770 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:52:38,770 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:52:38,771 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/2) ...
[2020-11-25 05:52:38,772 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:52:38,772 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:52:38,785 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:38" (2/2) ...
[2020-11-25 05:52:38,785 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:52:38,785 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:52:38,785 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:52:38,785 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:52:38,786 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/2) ...
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:52:38,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:52:38,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:52:38,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:52:38,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:52:38,838 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:52:38,839 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:38,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:38,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:52:38,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:52:38,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:52:38,840 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:52:38,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:52:38,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:52:38,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:52:38,841 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:52:38,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:52:38,842 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StrikeFarm
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:52:38,843 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:52:38,844 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:52:38,845 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:52:38,846 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:52:38,847 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:52:38,848 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:52:38,848 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:52:38,848 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:52:38,848 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:52:38,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:52:38,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:52:38,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:52:38,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:52:38,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:52:38,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:52:38,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:52:38,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:52:38,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:52:38,855 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StrikeFarm
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:52:38,856 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:52:38,856 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:52:39,306 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:39,307 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:39,307 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:39,473 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:52:39,473 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:52:39,475 INFO  L202        PluginConnector]: Adding new model StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:39 BoogieIcfgContainer
[2020-11-25 05:52:39,475 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:38" (2/2) ...
[2020-11-25 05:52:39,475 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:52:39,476 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4a425fcc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:39, skipping insertion in model container
[2020-11-25 05:52:39,476 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:52:39,476 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:52:39,476 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:52:39,478 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:52:39,478 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/3) ...
[2020-11-25 05:52:39,479 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@66f341d0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:39, skipping insertion in model container
[2020-11-25 05:52:39,479 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:38" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:52:39,516 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:39 NWAContainer
[2020-11-25 05:52:39,516 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:52:39,517 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:52:39,517 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:52:39,517 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:52:39,518 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:39" (3/4) ...
[2020-11-25 05:52:39,519 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1ab50035 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:39, skipping insertion in model container
[2020-11-25 05:52:39,519 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:39" (4/4) ...
[2020-11-25 05:52:39,523 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:52:39,527 INFO  L110   BuchiProductObserver]: Initial RCFG 1475 locations, 2077 edges
[2020-11-25 05:52:39,527 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:52:39,538 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:52:40,781 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:52:40,786 INFO  L110   BuchiProductObserver]: BuchiProgram size 3732 locations, 6785 edges
[2020-11-25 05:52:40,786 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:40 BoogieIcfgContainer
[2020-11-25 05:52:40,786 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:52:40,786 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:52:40,786 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:52:40,788 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:52:40,788 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:40" (1/1) ...
[2020-11-25 05:52:40,859 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:52:40,863 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:52:40,878 INFO  L313           BlockEncoder]: Initial Icfg 3732 locations, 6785 edges
[2020-11-25 05:52:40,878 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:52:40,879 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:52:40,879 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:52:40,880 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:52:40,894 INFO  L70    emoveInfeasibleEdges]: Removed 150 edges and 15 locations because of local infeasibility
[2020-11-25 05:52:40,904 INFO  L70        RemoveSinkStates]: Removed 98 edges and 65 locations by removing sink states
[2020-11-25 05:52:40,920 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:52:40,923 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:52:40,925 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:52:40,926 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:52:40,930 INFO  L313           BlockEncoder]: Encoded RCFG 3632 locations, 6508 edges
[2020-11-25 05:52:40,930 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:52:40 BasicIcfg
[2020-11-25 05:52:40,930 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:52:40,931 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:52:40,931 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:52:40,933 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:52:40,933 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,933 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:38" (1/6) ...
[2020-11-25 05:52:40,935 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1b364b5c and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:40, skipping insertion in model container
[2020-11-25 05:52:40,935 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,935 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:38" (2/6) ...
[2020-11-25 05:52:40,935 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1b364b5c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:40, skipping insertion in model container
[2020-11-25 05:52:40,935 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,935 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:39" (3/6) ...
[2020-11-25 05:52:40,935 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1b364b5c and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:52:40, skipping insertion in model container
[2020-11-25 05:52:40,936 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,936 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:39" (4/6) ...
[2020-11-25 05:52:40,936 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1b364b5c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:40, skipping insertion in model container
[2020-11-25 05:52:40,936 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,936 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:40" (5/6) ...
[2020-11-25 05:52:40,936 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1b364b5c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:52:40, skipping insertion in model container
[2020-11-25 05:52:40,936 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:40,936 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:52:40" (6/6) ...
[2020-11-25 05:52:40,937 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_balanceof.bpl_BEv2
[2020-11-25 05:52:40,971 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:52:40,971 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:52:40,971 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:52:40,971 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:52:40,971 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:52:40,971 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:52:40,971 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:52:40,971 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:52:40,971 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:52:41,000 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3632 states.
[2020-11-25 05:52:41,044 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:41,044 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:41,044 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:41,052 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:41,052 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:41,052 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:52:41,052 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3632 states.
[2020-11-25 05:52:41,069 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:41,069 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:41,069 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:41,070 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:41,070 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND TRUE   revert
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND TRUE   choice == 11
[L4030]              gas := gas - 21000;
[L4031]  COND FALSE  !(gas >= 0)
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:41,083 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:41,083 INFO  L82        PathProgramCache]: Analyzing trace with hash -933491726, now seen corresponding path program 1 times
[2020-11-25 05:52:41,087 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:41,106 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:41,145 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:52:41,147 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:41,147 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:52:41,151 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:41,324 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:52:41,324 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:52:41,326 INFO  L87              Difference]: Start difference. First operand 3632 states. Second operand 4 states.
[2020-11-25 05:52:41,641 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:41,642 INFO  L93              Difference]: Finished difference Result 2193 states and 2636 transitions.
[2020-11-25 05:52:41,642 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:52:41,643 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2193 states and 2636 transitions.
[2020-11-25 05:52:41,653 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:41,670 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2193 states to 2193 states and 2636 transitions.
[2020-11-25 05:52:41,670 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:52:41,672 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 471
[2020-11-25 05:52:41,672 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2193 states and 2636 transitions.
[2020-11-25 05:52:41,678 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:41,679 INFO  L728         BuchiCegarLoop]: Abstraction has 2193 states and 2636 transitions.
[2020-11-25 05:52:41,692 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2193 states and 2636 transitions.
[2020-11-25 05:52:41,745 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2193 to 2193.
[2020-11-25 05:52:41,746 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2193 states.
[2020-11-25 05:52:41,750 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2193 states to 2193 states and 2636 transitions.
[2020-11-25 05:52:41,751 INFO  L751         BuchiCegarLoop]: Abstraction has 2193 states and 2636 transitions.
[2020-11-25 05:52:41,751 INFO  L631         BuchiCegarLoop]: Abstraction has 2193 states and 2636 transitions.
[2020-11-25 05:52:41,751 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:52:41,751 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2193 states and 2636 transitions.
[2020-11-25 05:52:41,756 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:41,757 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:41,757 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:41,758 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:41,758 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND TRUE   revert
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:41,761 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:41,761 INFO  L82        PathProgramCache]: Analyzing trace with hash 225073878, now seen corresponding path program 1 times
[2020-11-25 05:52:41,762 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:41,771 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:41,791 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:52:41,791 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:41,791 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:52:41,792 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:41,792 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:52:41,792 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:52:41,792 INFO  L87              Difference]: Start difference. First operand 2193 states and 2636 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 05:52:41,855 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:41,855 INFO  L93              Difference]: Finished difference Result 2799 states and 3298 transitions.
[2020-11-25 05:52:41,856 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:52:41,856 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2799 states and 3298 transitions.
[2020-11-25 05:52:41,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:41,880 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2799 states to 2799 states and 3298 transitions.
[2020-11-25 05:52:41,880 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 634
[2020-11-25 05:52:41,882 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 634
[2020-11-25 05:52:41,882 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2799 states and 3298 transitions.
[2020-11-25 05:52:41,887 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:41,888 INFO  L728         BuchiCegarLoop]: Abstraction has 2799 states and 3298 transitions.
[2020-11-25 05:52:41,890 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2799 states and 3298 transitions.
[2020-11-25 05:52:41,912 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2799 to 2385.
[2020-11-25 05:52:41,912 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2385 states.
[2020-11-25 05:52:41,916 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2385 states to 2385 states and 2796 transitions.
[2020-11-25 05:52:41,917 INFO  L751         BuchiCegarLoop]: Abstraction has 2385 states and 2796 transitions.
[2020-11-25 05:52:41,917 INFO  L631         BuchiCegarLoop]: Abstraction has 2385 states and 2796 transitions.
[2020-11-25 05:52:41,917 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:52:41,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2385 states and 2796 transitions.
[2020-11-25 05:52:41,921 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:41,921 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:41,921 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:41,923 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:41,923 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND FALSE  !(revert)
[L2729]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2729]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2733]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L1649]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  COND FALSE  !(revert)
[L1653]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L1653]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1654]  COND FALSE  !(revert)
[L1657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1621]              assume msgsender_MSG != null;
[L1622]              Balance[this] := 0;
[L1623]              _balances_ERC20[this] := zeroRefintArr();
[L1624]              sum__balances0[this] := 0;
[L1625]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1626]              sum__allowances1[this] := 0;
[L1627]              _totalSupply_ERC20[this] := 0;
[L1657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1658]  COND FALSE  !(revert)
[L2733]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]  COND FALSE  !(revert)
[L2737]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2413]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2413]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2414]  COND FALSE  !(revert)
[L2417]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2388]              assume msgsender_MSG != null;
[L2389]              Balance[this] := 0;
[L2390]              _name_ERC20Detailed[this] := -1368110498;
[L2391]              _symbol_ERC20Detailed[this] := -1368110498;
[L2392]              _decimals_ERC20Detailed[this] := 0;
[L2394]              _name_ERC20Detailed[this] := name_s483;
[L2395]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2396]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2417]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2418]  COND FALSE  !(revert)
[L2737]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2738]  COND FALSE  !(revert)
[L2741]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2672]              assume msgsender_MSG != null;
[L2673]              Balance[this] := 0;
[L2674]              _total_StrikeFarm[this] := 11000;
[L2676]  COND TRUE   DType[this] == StrikeFarm
[L2677]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2677]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2684]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2685]  COND TRUE   DType[this] == StrikeFarm
[L2686]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2263]              __var_16 := null;
[L2264]  COND TRUE   !(account_s366 != null)
[L2265]              revert := true;
[L2686]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2687]  COND TRUE   revert
[L2741]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2742]  COND FALSE  !(revert)
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:41,927 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:41,927 INFO  L82        PathProgramCache]: Analyzing trace with hash -1664718688, now seen corresponding path program 1 times
[2020-11-25 05:52:41,927 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:41,937 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:41,976 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 05:52:41,976 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 05:52:41,977 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 05:52:41,977 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:41,977 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:52:41,977 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:52:41,977 INFO  L87              Difference]: Start difference. First operand 2385 states and 2796 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 05:52:42,015 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:42,015 INFO  L93              Difference]: Finished difference Result 2393 states and 2803 transitions.
[2020-11-25 05:52:42,015 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:52:42,015 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2393 states and 2803 transitions.
[2020-11-25 05:52:42,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:42,031 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2393 states to 2384 states and 2794 transitions.
[2020-11-25 05:52:42,032 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 527
[2020-11-25 05:52:42,032 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 527
[2020-11-25 05:52:42,032 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2384 states and 2794 transitions.
[2020-11-25 05:52:42,034 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:42,034 INFO  L728         BuchiCegarLoop]: Abstraction has 2384 states and 2794 transitions.
[2020-11-25 05:52:42,036 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2384 states and 2794 transitions.
[2020-11-25 05:52:42,056 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2384 to 2384.
[2020-11-25 05:52:42,056 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2384 states.
[2020-11-25 05:52:42,059 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2384 states to 2384 states and 2794 transitions.
[2020-11-25 05:52:42,059 INFO  L751         BuchiCegarLoop]: Abstraction has 2384 states and 2794 transitions.
[2020-11-25 05:52:42,059 INFO  L631         BuchiCegarLoop]: Abstraction has 2384 states and 2794 transitions.
[2020-11-25 05:52:42,059 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:52:42,059 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2384 states and 2794 transitions.
[2020-11-25 05:52:42,064 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:42,064 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:42,064 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:42,065 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:42,066 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND FALSE  !(revert)
[L2729]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2729]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2733]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L1649]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  COND FALSE  !(revert)
[L1653]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L1653]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1654]  COND FALSE  !(revert)
[L1657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1621]              assume msgsender_MSG != null;
[L1622]              Balance[this] := 0;
[L1623]              _balances_ERC20[this] := zeroRefintArr();
[L1624]              sum__balances0[this] := 0;
[L1625]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1626]              sum__allowances1[this] := 0;
[L1627]              _totalSupply_ERC20[this] := 0;
[L1657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1658]  COND FALSE  !(revert)
[L2733]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]  COND FALSE  !(revert)
[L2737]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2413]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2413]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2414]  COND FALSE  !(revert)
[L2417]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2388]              assume msgsender_MSG != null;
[L2389]              Balance[this] := 0;
[L2390]              _name_ERC20Detailed[this] := -1368110498;
[L2391]              _symbol_ERC20Detailed[this] := -1368110498;
[L2392]              _decimals_ERC20Detailed[this] := 0;
[L2394]              _name_ERC20Detailed[this] := name_s483;
[L2395]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2396]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2417]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2418]  COND FALSE  !(revert)
[L2737]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2738]  COND FALSE  !(revert)
[L2741]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2672]              assume msgsender_MSG != null;
[L2673]              Balance[this] := 0;
[L2674]              _total_StrikeFarm[this] := 11000;
[L2676]  COND TRUE   DType[this] == StrikeFarm
[L2677]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2677]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2684]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2685]  COND TRUE   DType[this] == StrikeFarm
[L2686]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2263]              __var_16 := null;
[L2264]  COND FALSE  !(!(account_s366 != null))
[L2268]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2506]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2507]  COND TRUE   !(c_s533 >= a_s533)
[L2508]              revert := true;
[L2268]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2269]  COND TRUE   revert
[L2686]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2687]  COND TRUE   revert
[L2741]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2742]  COND FALSE  !(revert)
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:42,069 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:42,069 INFO  L82        PathProgramCache]: Analyzing trace with hash -1724243374, now seen corresponding path program 1 times
[2020-11-25 05:52:42,070 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:42,079 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:42,122 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:52:42,122 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:42,122 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:52:42,123 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:42,123 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:52:42,123 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:52:42,123 INFO  L87              Difference]: Start difference. First operand 2384 states and 2794 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 05:52:42,180 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:42,180 INFO  L93              Difference]: Finished difference Result 2792 states and 3196 transitions.
[2020-11-25 05:52:42,181 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:52:42,181 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2792 states and 3196 transitions.
[2020-11-25 05:52:42,193 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:42,208 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2792 states to 2619 states and 2992 transitions.
[2020-11-25 05:52:42,208 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 581
[2020-11-25 05:52:42,209 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 599
[2020-11-25 05:52:42,209 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2619 states and 2992 transitions.
[2020-11-25 05:52:42,213 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:42,213 INFO  L728         BuchiCegarLoop]: Abstraction has 2619 states and 2992 transitions.
[2020-11-25 05:52:42,216 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2619 states and 2992 transitions.
[2020-11-25 05:52:42,245 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2619 to 2381.
[2020-11-25 05:52:42,245 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2381 states.
[2020-11-25 05:52:42,248 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2381 states to 2381 states and 2696 transitions.
[2020-11-25 05:52:42,248 INFO  L751         BuchiCegarLoop]: Abstraction has 2381 states and 2696 transitions.
[2020-11-25 05:52:42,248 INFO  L631         BuchiCegarLoop]: Abstraction has 2381 states and 2696 transitions.
[2020-11-25 05:52:42,248 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:52:42,249 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2381 states and 2696 transitions.
[2020-11-25 05:52:42,252 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:42,253 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:42,253 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:42,254 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:42,254 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND FALSE  !(revert)
[L2729]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2729]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2733]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L1649]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  COND FALSE  !(revert)
[L1653]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L1653]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1654]  COND FALSE  !(revert)
[L1657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1621]              assume msgsender_MSG != null;
[L1622]              Balance[this] := 0;
[L1623]              _balances_ERC20[this] := zeroRefintArr();
[L1624]              sum__balances0[this] := 0;
[L1625]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1626]              sum__allowances1[this] := 0;
[L1627]              _totalSupply_ERC20[this] := 0;
[L1657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1658]  COND FALSE  !(revert)
[L2733]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]  COND FALSE  !(revert)
[L2737]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2413]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2413]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2414]  COND FALSE  !(revert)
[L2417]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2388]              assume msgsender_MSG != null;
[L2389]              Balance[this] := 0;
[L2390]              _name_ERC20Detailed[this] := -1368110498;
[L2391]              _symbol_ERC20Detailed[this] := -1368110498;
[L2392]              _decimals_ERC20Detailed[this] := 0;
[L2394]              _name_ERC20Detailed[this] := name_s483;
[L2395]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2396]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2417]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2418]  COND FALSE  !(revert)
[L2737]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2738]  COND FALSE  !(revert)
[L2741]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2672]              assume msgsender_MSG != null;
[L2673]              Balance[this] := 0;
[L2674]              _total_StrikeFarm[this] := 11000;
[L2676]  COND TRUE   DType[this] == StrikeFarm
[L2677]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2677]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2684]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2685]  COND TRUE   DType[this] == StrikeFarm
[L2686]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2263]              __var_16 := null;
[L2264]  COND FALSE  !(!(account_s366 != null))
[L2268]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2506]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2507]  COND FALSE  !(!(c_s533 >= a_s533))
[L2511]              __ret_0_ := c_s533;
[L2268]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2269]  COND FALSE  !(revert)
[L2272]              _totalSupply_ERC20[this] := __var_17;
[L2273]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2506]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2507]  COND FALSE  !(!(c_s533 >= a_s533))
[L2511]              __ret_0_ := c_s533;
[L2273]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2274]  COND FALSE  !(revert)
[L2277]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2278]              _balances_ERC20[this][account_s366] := __var_18;
[L2279]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2280]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2686]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2687]  COND FALSE  !(revert)
[L2741]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2742]  COND FALSE  !(revert)
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L326]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1683]              __ret_0_ := _balances_ERC20[this][account_s121];
[L326]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L327]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _balances_ERC20[this][account_s121] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:42,257 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:42,258 INFO  L82        PathProgramCache]: Analyzing trace with hash -2070719723, now seen corresponding path program 1 times
[2020-11-25 05:52:42,258 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:42,272 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:42,322 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:52:42,322 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:42,323 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:52:42,323 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:42,323 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:52:42,323 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:52:42,323 INFO  L87              Difference]: Start difference. First operand 2381 states and 2696 transitions. cyclomatic complexity: 317 Second operand 4 states.
[2020-11-25 05:52:42,351 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:42,351 INFO  L93              Difference]: Finished difference Result 2382 states and 2695 transitions.
[2020-11-25 05:52:42,352 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:52:42,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2382 states and 2695 transitions.
[2020-11-25 05:52:42,356 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:42,362 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2382 states to 2372 states and 2685 transitions.
[2020-11-25 05:52:42,362 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 558
[2020-11-25 05:52:42,363 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 558
[2020-11-25 05:52:42,363 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2372 states and 2685 transitions.
[2020-11-25 05:52:42,364 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:42,364 INFO  L728         BuchiCegarLoop]: Abstraction has 2372 states and 2685 transitions.
[2020-11-25 05:52:42,366 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2372 states and 2685 transitions.
[2020-11-25 05:52:42,380 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2372 to 2370.
[2020-11-25 05:52:42,381 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2370 states.
[2020-11-25 05:52:42,383 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2370 states to 2370 states and 2683 transitions.
[2020-11-25 05:52:42,383 INFO  L751         BuchiCegarLoop]: Abstraction has 2370 states and 2683 transitions.
[2020-11-25 05:52:42,383 INFO  L631         BuchiCegarLoop]: Abstraction has 2370 states and 2683 transitions.
[2020-11-25 05:52:42,383 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:52:42,383 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2370 states and 2683 transitions.
[2020-11-25 05:52:42,386 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:42,386 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:42,386 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:42,387 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:42,387 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L4108]              assume null == 0;
[L4109]  CALL        call this := FreshRefGenerator__success();
[L1523]              havoc newRef;
[L1524]              assume Alloc[newRef] == false;
[L1525]              Alloc[newRef] := true;
[L1526]              assume newRef != null;
[L4109]  RET         call this := FreshRefGenerator__success();
[L4110]              assume now >= 0;
[L4111]              assume DType[this] == StrikeFarm;
[L4112]              assume msgvalue_MSG == 0;
[L4113]              gas := gas - 53000;
[L4114]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1001]              havoc __exception;
[L1002]              revert := false;
[L1003]  COND FALSE  !(__exception)
[L1025]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2725]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L2725]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  COND FALSE  !(revert)
[L2729]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2729]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2733]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1587]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1572]              assume msgsender_MSG != null;
[L1573]              Balance[this] := 0;
[L1587]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  COND FALSE  !(revert)
[L1649]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  COND FALSE  !(revert)
[L1653]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L1653]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1654]  COND FALSE  !(revert)
[L1657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1621]              assume msgsender_MSG != null;
[L1622]              Balance[this] := 0;
[L1623]              _balances_ERC20[this] := zeroRefintArr();
[L1624]              sum__balances0[this] := 0;
[L1625]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1626]              sum__allowances1[this] := 0;
[L1627]              _totalSupply_ERC20[this] := 0;
[L1657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1658]  COND FALSE  !(revert)
[L2733]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]  COND FALSE  !(revert)
[L2737]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2413]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1555]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1540]              assume msgsender_MSG != null;
[L1541]              Balance[this] := 0;
[L1555]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  COND FALSE  !(revert)
[L2413]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2414]  COND FALSE  !(revert)
[L2417]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2388]              assume msgsender_MSG != null;
[L2389]              Balance[this] := 0;
[L2390]              _name_ERC20Detailed[this] := -1368110498;
[L2391]              _symbol_ERC20Detailed[this] := -1368110498;
[L2392]              _decimals_ERC20Detailed[this] := 0;
[L2394]              _name_ERC20Detailed[this] := name_s483;
[L2395]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2396]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2417]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2418]  COND FALSE  !(revert)
[L2737]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2738]  COND FALSE  !(revert)
[L2741]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2672]              assume msgsender_MSG != null;
[L2673]              Balance[this] := 0;
[L2674]              _total_StrikeFarm[this] := 11000;
[L2676]  COND TRUE   DType[this] == StrikeFarm
[L2677]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2677]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2684]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2685]  COND TRUE   DType[this] == StrikeFarm
[L2686]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2263]              __var_16 := null;
[L2264]  COND FALSE  !(!(account_s366 != null))
[L2268]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2506]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2507]  COND FALSE  !(!(c_s533 >= a_s533))
[L2511]              __ret_0_ := c_s533;
[L2268]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2269]  COND FALSE  !(revert)
[L2272]              _totalSupply_ERC20[this] := __var_17;
[L2273]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2506]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2507]  COND FALSE  !(!(c_s533 >= a_s533))
[L2511]              __ret_0_ := c_s533;
[L2273]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2274]  COND FALSE  !(revert)
[L2277]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2278]              _balances_ERC20[this][account_s366] := __var_18;
[L2279]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2280]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2686]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2687]  COND FALSE  !(revert)
[L2741]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2742]  COND FALSE  !(revert)
[L1025]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1026]              assume !revert && gas >= 0;
[L4114]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4115]              assume !revert && gas >= 0;
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND TRUE   __exception
[L305]               __tmp__Balance := Balance;
[L306]               __tmp__DType := DType;
[L307]               __tmp__Alloc := Alloc;
[L308]               __tmp__balance_ADDR := balance_ADDR;
[L309]               __tmp__M_Ref_int := M_Ref_int;
[L310]               __tmp__sum__balances0 := sum__balances0;
[L311]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L312]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L313]               __tmp__sum__allowances1 := sum__allowances1;
[L314]               __tmp__Length := Length;
[L315]               __tmp__now := now;
[L316]               __tmp___balances_ERC20 := _balances_ERC20;
[L317]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L318]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L319]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L320]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L321]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L322]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L323]   CALL        call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1677]              __ret_0_ := __tmp___balances_ERC20[this][account_s121];
[L323]   RET         call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L324]               assume revert || gas < 0;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4118]  CALL        call CorralChoice_StrikeFarm(this);
[L3984]              havoc msgsender_MSG;
[L3985]              havoc msgvalue_MSG;
[L3986]              havoc choice;
[L3987]              havoc __ret_0_totalSupply;
[L3988]              havoc account_s121;
[L3989]              havoc __ret_0_balanceOf;
[L3990]              havoc recipient_s140;
[L3991]              havoc amount_s140;
[L3992]              havoc __ret_0_transfer;
[L3993]              havoc owner_s156;
[L3994]              havoc spender_s156;
[L3995]              havoc __ret_0_allowance;
[L3996]              havoc spender_s175;
[L3997]              havoc amount_s175;
[L3998]              havoc __ret_0_approve;
[L3999]              havoc sender_s211;
[L4000]              havoc recipient_s211;
[L4001]              havoc amount_s211;
[L4002]              havoc __ret_0_transferFrom;
[L4003]              havoc spender_s238;
[L4004]              havoc addedValue_s238;
[L4005]              havoc __ret_0_increaseAllowance;
[L4006]              havoc spender_s266;
[L4007]              havoc subtractedValue_s266;
[L4008]              havoc __ret_0_decreaseAllowance;
[L4009]              havoc name_s483;
[L4010]              havoc symbol_s483;
[L4011]              havoc decimals_s483;
[L4012]              havoc __ret_0_name;
[L4013]              havoc __ret_0_symbol;
[L4014]              havoc __ret_0_decimals;
[L4015]              havoc tmpNow;
[L4016]              havoc gas;
[L4017]              assume gas > 4000000 && gas <= 8000000;
[L4018]              tmpNow := now;
[L4019]              havoc now;
[L4020]              assume now > tmpNow;
[L4021]              assume msgsender_MSG != null;
[L4022]              assume DType[msgsender_MSG] != IERC20;
[L4023]              assume DType[msgsender_MSG] != Context;
[L4024]              assume DType[msgsender_MSG] != ERC20;
[L4025]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4026]              assume DType[msgsender_MSG] != SafeMath;
[L4027]              assume DType[msgsender_MSG] != StrikeFarm;
[L4028]              Alloc[msgsender_MSG] := true;
[L4029]  COND FALSE  !(choice == 11)
[L4035]  COND TRUE   choice == 10
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume msgvalue_MSG == 0;
[L4039]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s121] >= 0 && _balances_ERC20[this][account_s121] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND TRUE   __exception
[L305]               __tmp__Balance := Balance;
[L306]               __tmp__DType := DType;
[L307]               __tmp__Alloc := Alloc;
[L308]               __tmp__balance_ADDR := balance_ADDR;
[L309]               __tmp__M_Ref_int := M_Ref_int;
[L310]               __tmp__sum__balances0 := sum__balances0;
[L311]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L312]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L313]               __tmp__sum__allowances1 := sum__allowances1;
[L314]               __tmp__Length := Length;
[L315]               __tmp__now := now;
[L316]               __tmp___balances_ERC20 := _balances_ERC20;
[L317]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L318]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L319]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L320]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L321]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L322]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L323]   CALL        call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L1677]              __ret_0_ := __tmp___balances_ERC20[this][account_s121];
[L323]   RET         call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L324]               assume revert || gas < 0;
[L4039]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s121);
[L4118]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:42,390 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:42,390 INFO  L82        PathProgramCache]: Analyzing trace with hash 106159763, now seen corresponding path program 1 times
[2020-11-25 05:52:42,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:42,400 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:42,432 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:52:42,432 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:42,432 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 05:52:42,432 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:42,432 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 05:52:42,432 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 05:52:42,433 INFO  L87              Difference]: Start difference. First operand 2370 states and 2683 transitions. cyclomatic complexity: 315 Second operand 5 states.
[2020-11-25 05:52:42,604 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:42,604 INFO  L93              Difference]: Finished difference Result 1583 states and 1763 transitions.
[2020-11-25 05:52:42,605 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:52:42,605 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1583 states and 1763 transitions.
[2020-11-25 05:52:42,609 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:52:42,609 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1583 states to 0 states and 0 transitions.
[2020-11-25 05:52:42,609 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 05:52:42,609 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 05:52:42,609 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 05:52:42,609 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:42,609 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:52:42,609 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:52:42,609 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:52:42,610 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 05:52:42,610 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 05:52:42,610 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:52:42,610 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 05:52:42,614 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:52:42 BasicIcfg
[2020-11-25 05:52:42,614 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:52:42,614 INFO  L168              Benchmark]: Toolchain (without parser) took 3994.77 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 408.9 MB). Free memory was 935.2 MB in the beginning and 1.0 GB in the end (delta: -102.9 MB). Peak memory consumption was 306.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,615 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,616 INFO  L168              Benchmark]: Boogie Preprocessor took 86.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,616 INFO  L168              Benchmark]: UtopiaSpecLang took 62.10 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,617 INFO  L168              Benchmark]: Boogie Printer took 15.27 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,617 INFO  L168              Benchmark]: RCFGBuilder took 690.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,617 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.39 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 797.4 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,618 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1269.47 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 176.2 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -216.5 MB). Peak memory consumption was 165.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,618 INFO  L168              Benchmark]: BlockEncodingV2 took 144.14 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 945.9 MB in the end (delta: 67.9 MB). Peak memory consumption was 67.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,618 INFO  L168              Benchmark]: BuchiAutomizer took 1683.24 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 232.8 MB). Free memory was 945.9 MB in the beginning and 1.0 GB in the end (delta: -92.2 MB). Peak memory consumption was 140.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:52:42,622 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3732 locations, 6785 edges
  - StatisticsResult: Encoded RCFG
    3632 locations, 6508 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 86.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 62.10 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.27 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 690.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.39 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 797.4 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1269.47 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 176.2 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -216.5 MB). Peak memory consumption was 165.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 144.14 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 945.9 MB in the end (delta: 67.9 MB). Peak memory consumption was 67.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1683.24 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 232.8 MB). Free memory was 945.9 MB in the beginning and 1.0 GB in the end (delta: -92.2 MB). Peak memory consumption was 140.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1475 locations, 2077 edges
  - StatisticsResult: BuchiProgram size
    3732 locations, 6785 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.3s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 654 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2385 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14736 SDtfs, 7910 SDslu, 24192 SDs, 0 SdLazy, 1988 SolverSat, 1976 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_ERC200) ==> ( <>(success_balanceOf_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
