This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:28:17,179 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:28:17,180 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:28:17,193 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:28:17,193 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:28:17,194 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:28:17,195 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:28:17,196 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:28:17,198 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:28:17,199 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:28:17,199 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:28:17,200 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:28:17,200 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:28:17,201 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:28:17,202 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:28:17,203 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:28:17,203 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:28:17,204 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:28:17,206 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:28:17,207 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:28:17,208 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:28:17,209 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:28:17,211 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:28:17,211 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:28:17,211 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:28:17,211 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:28:17,212 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:28:17,212 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:28:17,213 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:28:17,213 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:28:17,213 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:28:17,214 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:28:17,214 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:28:17,215 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:28:17,216 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:28:17,216 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:28:17,216 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:28:17,216 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:28:17,216 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:28:17,217 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:28:17,218 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:28:17,218 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:28:17,226 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:28:17,226 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:28:17,227 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:28:17,227 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:28:17,227 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:28:17,227 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:28:17,227 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:28:17,227 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:28:17,227 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:28:17,228 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:28:17,228 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:28:17,228 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:28:17,229 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:28:17,229 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:28:17,251 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:28:17,261 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:28:17,264 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:28:17,266 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:28:17,266 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:28:17,267 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl
[2020-11-25 02:28:17,267 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl'
[2020-11-25 02:28:17,349 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:28:17,350 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:28:17,350 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:28:17,351 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:28:17,351 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:28:17,367 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,369 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,406 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,406 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,431 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,442 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,451 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,460 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:28:17,460 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:28:17,460 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:28:17,463 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:28:17,466 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/1) ...
[2020-11-25 02:28:17,487 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(OMAToken.transferFrom(from, to, value), from == to && (value > balanceOf_OMAToken[this][from] || value > allowance_OMAToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][from] >= 0 &&  balanceOf_OMAToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_OMAToken[this][from][msg.sender] >= 0 && allowance_OMAToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(OMAToken.transferFrom)))
[2020-11-25 02:28:17,493 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(OMAToken.transferFrom(from, to, value), from == to && (value > balanceOf_OMAToken[this][from] || value > allowance_OMAToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][from] >= 0 &&  balanceOf_OMAToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_OMAToken[this][from][msg.sender] >= 0 && allowance_OMAToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(OMAToken.transferFrom)))
[2020-11-25 02:28:17,500 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(OMAToken.transferFrom(from, to, value), from == to && (value > balanceOf_OMAToken[this][from] || value > allowance_OMAToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][from] >= 0 &&  balanceOf_OMAToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_OMAToken[this][from][msg.sender] >= 0 && allowance_OMAToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(OMAToken.transferFrom)))
[2020-11-25 02:28:17,508 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s438==_to_s438 && ( _value_s438>balanceOf_OMAToken[this][_from_s438] || _value_s438>allowance_OMAToken[this][_from_s438][msg.sender] ) ) && _value_s438>=0 ) && _value_s438<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_OMAToken[this][_to_s438]>=0 ) && balanceOf_OMAToken[this][_to_s438]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_OMAToken[this][_from_s438]>=0 ) && balanceOf_OMAToken[this][_from_s438]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_OMAToken[this][_from_s438][msg.sender]>=0 ) && allowance_OMAToken[this][_from_s438][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>],IdentifierExpression[_to_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[_from_s438,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_OMAToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 02:28:17,514 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(OMAToken.transferFrom(from, to, value), from == to && (value > balanceOf_OMAToken[this][from] || value > allowance_OMAToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][from] >= 0 &&  balanceOf_OMAToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_OMAToken[this][from][msg.sender] >= 0 && allowance_OMAToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(OMAToken.transferFrom)))
[2020-11-25 02:28:17,514 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_OMAToken0) ==> ( <>AP(fail_transferFrom_OMAToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:28:17,529 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:28:17 PropertyContainer
[2020-11-25 02:28:17,530 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:28:17,530 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:28:17,530 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:28:17,530 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:28:17,531 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/2) ...
[2020-11-25 02:28:17,531 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:28:17,531 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:28:17,545 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:28:17" (2/2) ...
[2020-11-25 02:28:17,546 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:28:17,546 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:28:17,546 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:28:17,546 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:28:17,547 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/2) ...
[2020-11-25 02:28:17,600 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:28:17,600 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 02:28:17,600 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 02:28:17,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 02:28:17,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 02:28:17,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 02:28:17,601 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 02:28:17,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 02:28:17,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 02:28:17,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 02:28:17,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 02:28:17,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:28:17,602 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:28:17,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken_NoBaseCtor__success
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken
[2020-11-25 02:28:17,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_OMAToken__success
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken
[2020-11-25 02:28:17,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken
[2020-11-25 02:28:17,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken
[2020-11-25 02:28:17,603 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken
[2020-11-25 02:28:17,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken
[2020-11-25 02:28:17,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken
[2020-11-25 02:28:17,604 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken
[2020-11-25 02:28:17,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken
[2020-11-25 02:28:17,605 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken
[2020-11-25 02:28:17,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken
[2020-11-25 02:28:17,605 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken
[2020-11-25 02:28:17,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken
[2020-11-25 02:28:17,605 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken
[2020-11-25 02:28:17,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken
[2020-11-25 02:28:17,605 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken
[2020-11-25 02:28:17,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken
[2020-11-25 02:28:17,605 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken
[2020-11-25 02:28:17,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken
[2020-11-25 02:28:17,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 02:28:17,606 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OMAToken
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:28:17,607 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,608 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 02:28:17,609 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken_NoBaseCtor__fail
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken__success
[2020-11-25 02:28:17,610 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken__fail
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken__success
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken__success
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken__success
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken__success
[2020-11-25 02:28:17,611 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken__fail
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken__success
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken__fail
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken__success
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken__fail
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken__success
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken__success
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken__fail
[2020-11-25 02:28:17,612 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken__success
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken__fail
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken__success
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken__fail
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken__success
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken__fail
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken__success
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken__fail
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken__success
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken__fail
[2020-11-25 02:28:17,613 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken__success
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken__success
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken__success
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:28:17,614 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 02:28:17,615 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 02:28:17,615 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 02:28:17,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 02:28:17,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken_NoBaseCtor__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken_NoBaseCtor__success
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken__success
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken__fail
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken__fail
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken__success
[2020-11-25 02:28:17,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken__success
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken__success
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken__success
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken__success
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken__success
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken__fail
[2020-11-25 02:28:17,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken__success
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:28:17,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 02:28:17,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OMAToken
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:28:17,623 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:28:17,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:28:17,818 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:28:17,819 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:28:18,266 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:28:18,267 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 02:28:18,268 INFO  L202        PluginConnector]: Adding new model OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:28:18 BoogieIcfgContainer
[2020-11-25 02:28:18,269 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:28:17" (2/2) ...
[2020-11-25 02:28:18,269 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:28:18,269 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4c39956 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:28:18, skipping insertion in model container
[2020-11-25 02:28:18,269 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:28:18,269 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:28:18,269 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:28:18,271 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:28:18,271 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/3) ...
[2020-11-25 02:28:18,271 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2e06ca79 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:28:18, skipping insertion in model container
[2020-11-25 02:28:18,272 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:28:17" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:28:18,304 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:28:18 NWAContainer
[2020-11-25 02:28:18,304 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:28:18,305 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:28:18,305 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:28:18,306 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:28:18,306 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:28:18" (3/4) ...
[2020-11-25 02:28:18,307 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@758ae28c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:28:18, skipping insertion in model container
[2020-11-25 02:28:18,307 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:28:18" (4/4) ...
[2020-11-25 02:28:18,310 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:28:18,314 INFO  L110   BuchiProductObserver]: Initial RCFG 1679 locations, 2124 edges
[2020-11-25 02:28:18,314 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:28:18,325 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:28:19,604 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:28:19,609 INFO  L110   BuchiProductObserver]: BuchiProgram size 4040 locations, 6901 edges
[2020-11-25 02:28:19,609 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:28:19 BoogieIcfgContainer
[2020-11-25 02:28:19,609 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:28:19,609 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:28:19,609 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:28:19,611 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:28:19,611 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:28:19" (1/1) ...
[2020-11-25 02:28:19,692 INFO  L313           BlockEncoder]: Initial Icfg 4040 locations, 6901 edges
[2020-11-25 02:28:19,692 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:28:19,692 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:28:19,692 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:28:19,693 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:28:19,703 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 13 locations because of local infeasibility
[2020-11-25 02:28:19,711 INFO  L70        RemoveSinkStates]: Removed 54 edges and 27 locations by removing sink states
[2020-11-25 02:28:19,724 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:28:19,727 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:28:19,730 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:28:19,731 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:28:19,735 INFO  L313           BlockEncoder]: Encoded RCFG 3974 locations, 6749 edges
[2020-11-25 02:28:19,735 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:28:19 BasicIcfg
[2020-11-25 02:28:19,735 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:28:19,736 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:28:19,736 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:28:19,738 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:28:19,738 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,738 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:28:17" (1/6) ...
[2020-11-25 02:28:19,739 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@675e0edf and model type OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:28:19, skipping insertion in model container
[2020-11-25 02:28:19,739 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,739 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:28:17" (2/6) ...
[2020-11-25 02:28:19,740 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@675e0edf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:28:19, skipping insertion in model container
[2020-11-25 02:28:19,740 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,740 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:28:18" (3/6) ...
[2020-11-25 02:28:19,740 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@675e0edf and model type OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:28:19, skipping insertion in model container
[2020-11-25 02:28:19,740 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,740 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:28:18" (4/6) ...
[2020-11-25 02:28:19,740 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@675e0edf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:28:19, skipping insertion in model container
[2020-11-25 02:28:19,740 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,740 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:28:19" (5/6) ...
[2020-11-25 02:28:19,741 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@675e0edf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:28:19, skipping insertion in model container
[2020-11-25 02:28:19,741 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:28:19,741 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:28:19" (6/6) ...
[2020-11-25 02:28:19,742 INFO  L404   chiAutomizerObserver]: Analyzing ICFG OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transferfrom-self-fail.bpl_BEv2
[2020-11-25 02:28:19,777 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:28:19,777 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:28:19,777 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:28:19,777 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:28:19,777 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:28:19,777 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:28:19,777 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:28:19,777 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:28:19,777 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:28:19,817 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3974 states.
[2020-11-25 02:28:19,875 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:19,875 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:19,875 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:19,885 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:19,885 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:19,885 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:28:19,885 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3974 states.
[2020-11-25 02:28:19,912 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:19,912 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:19,912 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:19,914 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:19,914 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_OMAToken0 := false;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]     CALL        call main();
[L4541]              assume null == 0;
[L4542]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L4542]  RET         call this := FreshRefGenerator__success();
[L4543]              assume now >= 0;
[L4544]              assume DType[this] == OMAToken;
[L4545]              assume msgvalue_MSG == 0;
[L4546]              gas := gas - 53000;
[L4547]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L712]               havoc __exception;
[L713]               revert := false;
[L714]   COND FALSE  !(__exception)
[L742]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2754]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2754]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2755]  COND TRUE   revert
[L742]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L743]               assume !revert && gas >= 0;
[L4547]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4548]              assume !revert && gas >= 0;

Loop:
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND TRUE   choice == 21
[L4399]              gas := gas - 21000;
[L4400]  COND FALSE  !(gas >= 0)
[L4551]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:28:19,932 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:28:19,932 INFO  L82        PathProgramCache]: Analyzing trace with hash 1106994975, now seen corresponding path program 1 times
[2020-11-25 02:28:19,937 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:28:19,964 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:28:20,009 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:28:20,011 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:28:20,011 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:28:20,015 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:28:20,198 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:28:20,199 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:28:20,201 INFO  L87              Difference]: Start difference. First operand 3974 states. Second operand 4 states.
[2020-11-25 02:28:20,619 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:28:20,619 INFO  L93              Difference]: Finished difference Result 2953 states and 3262 transitions.
[2020-11-25 02:28:20,619 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:28:20,621 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2953 states and 3262 transitions.
[2020-11-25 02:28:20,634 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:20,659 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2953 states to 2949 states and 3254 transitions.
[2020-11-25 02:28:20,660 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 02:28:20,662 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 785
[2020-11-25 02:28:20,662 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2949 states and 3254 transitions.
[2020-11-25 02:28:20,669 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:28:20,669 INFO  L728         BuchiCegarLoop]: Abstraction has 2949 states and 3254 transitions.
[2020-11-25 02:28:20,684 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2949 states and 3254 transitions.
[2020-11-25 02:28:20,730 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2949 to 2949.
[2020-11-25 02:28:20,731 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2949 states.
[2020-11-25 02:28:20,745 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2949 states to 2949 states and 3254 transitions.
[2020-11-25 02:28:20,746 INFO  L751         BuchiCegarLoop]: Abstraction has 2949 states and 3254 transitions.
[2020-11-25 02:28:20,746 INFO  L631         BuchiCegarLoop]: Abstraction has 2949 states and 3254 transitions.
[2020-11-25 02:28:20,746 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:28:20,746 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2949 states and 3254 transitions.
[2020-11-25 02:28:20,752 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:20,752 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:20,752 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:20,754 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:20,754 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_OMAToken0 := false;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]     CALL        call main();
[L4541]              assume null == 0;
[L4542]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L4542]  RET         call this := FreshRefGenerator__success();
[L4543]              assume now >= 0;
[L4544]              assume DType[this] == OMAToken;
[L4545]              assume msgvalue_MSG == 0;
[L4546]              gas := gas - 53000;
[L4547]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L712]               havoc __exception;
[L713]               revert := false;
[L714]   COND FALSE  !(__exception)
[L742]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2754]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2754]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2755]  COND TRUE   revert
[L742]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L743]               assume !revert && gas >= 0;
[L4547]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4548]              assume !revert && gas >= 0;
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND TRUE   revert
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND TRUE   revert
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:28:20,758 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:28:20,758 INFO  L82        PathProgramCache]: Analyzing trace with hash -324633633, now seen corresponding path program 1 times
[2020-11-25 02:28:20,759 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:28:20,768 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:28:20,786 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:28:20,786 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:28:20,786 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:28:20,787 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:28:20,788 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:28:20,788 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:28:20,788 INFO  L87              Difference]: Start difference. First operand 2949 states and 3254 transitions. cyclomatic complexity: 307 Second operand 4 states.
[2020-11-25 02:28:21,298 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:28:21,298 INFO  L93              Difference]: Finished difference Result 3777 states and 4166 transitions.
[2020-11-25 02:28:21,298 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:28:21,298 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3777 states and 4166 transitions.
[2020-11-25 02:28:21,312 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:28:21,325 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3777 states to 3609 states and 3982 transitions.
[2020-11-25 02:28:21,325 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 948
[2020-11-25 02:28:21,327 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 960
[2020-11-25 02:28:21,327 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3609 states and 3982 transitions.
[2020-11-25 02:28:21,332 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:28:21,332 INFO  L728         BuchiCegarLoop]: Abstraction has 3609 states and 3982 transitions.
[2020-11-25 02:28:21,335 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3609 states and 3982 transitions.
[2020-11-25 02:28:21,365 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3609 to 3195.
[2020-11-25 02:28:21,365 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3195 states.
[2020-11-25 02:28:21,370 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3195 states to 3195 states and 3461 transitions.
[2020-11-25 02:28:21,370 INFO  L751         BuchiCegarLoop]: Abstraction has 3195 states and 3461 transitions.
[2020-11-25 02:28:21,370 INFO  L631         BuchiCegarLoop]: Abstraction has 3195 states and 3461 transitions.
[2020-11-25 02:28:21,370 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:28:21,370 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3195 states and 3461 transitions.
[2020-11-25 02:28:21,377 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:28:21,378 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:21,378 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:21,380 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:21,380 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_OMAToken0 := false;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]     CALL        call main();
[L4541]              assume null == 0;
[L4542]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L4542]  RET         call this := FreshRefGenerator__success();
[L4543]              assume now >= 0;
[L4544]              assume DType[this] == OMAToken;
[L4545]              assume msgvalue_MSG == 0;
[L4546]              gas := gas - 53000;
[L4547]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L712]               havoc __exception;
[L713]               revert := false;
[L714]   COND FALSE  !(__exception)
[L742]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2754]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2754]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2755]  COND FALSE  !(revert)
[L2758]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2572]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2572]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2573]  COND FALSE  !(revert)
[L2576]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]              assume msgsender_MSG != null;
[L2553]              Balance[this] := 0;
[L2554]              paused_Pausable[this] := false;
[L2576]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2577]  COND FALSE  !(revert)
[L2758]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2759]  COND FALSE  !(revert)
[L2762]  CALL        call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2711]              assume msgsender_MSG != null;
[L2712]              Balance[this] := 0;
[L2713]              symbol_OMAToken[this] := -641797033;
[L2714]              name_OMAToken[this] := -641797033;
[L2715]              decimals_OMAToken[this] := 18;
[L2716]              totalSupply_OMAToken[this] := 0;
[L2717]              balanceOf_OMAToken[this] := zeroRefintArr();
[L2718]              sum_balanceOf0[this] := 0;
[L2719]              allowance_OMAToken[this] := zeroRefRefintArr();
[L2720]              sum_allowance1[this] := 0;
[L2721]              frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2722]              frozenAmount_OMAToken[this] := zeroRefintArr();
[L2723]              sum_frozenAmount3[this] := 0;
[L2725]              __var_1 := decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2726]              totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2727]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][msgsender_MSG];
[L2728]              balanceOf_OMAToken[this][msgsender_MSG] := totalSupply_OMAToken[this];
[L2729]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][msgsender_MSG];
[L2730]              name_OMAToken[this] := tokenName_s302;
[L2731]              symbol_OMAToken[this] := tokenSymbol_s302;
[L2762]  RET         call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2763]  COND FALSE  !(revert)
[L742]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L743]               assume !revert && gas >= 0;
[L4547]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4548]              assume !revert && gas >= 0;
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND FALSE  !(revert)
[L2900]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] - allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2901]              allowance_OMAToken[this][_from_s438][msgsender_MSG] := __var_4;
[L2902]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] + allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2903]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2816]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4048]  COND FALSE  !(!!paused_Pausable[this])
[L2816]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]              __var_2 := null;
[L2821]  COND FALSE  !(!(_to_s382 != null))
[L2825]  COND FALSE  !(!!frozenAccount_OMAToken[this][_from_s382])
[L2829]  COND FALSE  !(!!frozenAccount_OMAToken[this][_to_s382])
[L2833]  CALL        call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2833]  RET         call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2834]  COND FALSE  !(revert)
[L2837]              amount_s382 := amount_s382;
[L2838]  COND FALSE  !(!(frozenAmount_OMAToken[this][_from_s382] == 0 || amount_s382 >= frozenAmount_OMAToken[this][_from_s382]))
[L2842]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_from_s382];
[L2843]              balanceOf_OMAToken[this][_from_s382] := amount_s382;
[L2844]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_from_s382];
[L2845]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2468]              c_s92 := (a_s92 + b_s92) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2469]              assert c_s92 >= a_s92;
[L2470]              c_s92 := c_s92;
[L2845]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2846]  COND FALSE  !(revert)
[L2849]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_to_s382];
[L2850]              balanceOf_OMAToken[this][_to_s382] := __var_3;
[L2851]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_to_s382];
[L2852]              assert { :EventEmitted "Transfer_OMAToken" } true;
[L2903]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2904]  COND FALSE  !(revert)
[L2907]              success_s438 := true;
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND FALSE  !(revert)
[L2900]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] - allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2901]              allowance_OMAToken[this][_from_s438][msgsender_MSG] := __var_4;
[L2902]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] + allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2903]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2816]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4048]  COND FALSE  !(!!paused_Pausable[this])
[L2816]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]              __var_2 := null;
[L2821]  COND FALSE  !(!(_to_s382 != null))
[L2825]  COND FALSE  !(!!frozenAccount_OMAToken[this][_from_s382])
[L2829]  COND FALSE  !(!!frozenAccount_OMAToken[this][_to_s382])
[L2833]  CALL        call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2833]  RET         call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2834]  COND FALSE  !(revert)
[L2837]              amount_s382 := amount_s382;
[L2838]  COND FALSE  !(!(frozenAmount_OMAToken[this][_from_s382] == 0 || amount_s382 >= frozenAmount_OMAToken[this][_from_s382]))
[L2842]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_from_s382];
[L2843]              balanceOf_OMAToken[this][_from_s382] := amount_s382;
[L2844]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_from_s382];
[L2845]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2468]              c_s92 := (a_s92 + b_s92) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2469]              assert c_s92 >= a_s92;
[L2470]              c_s92 := c_s92;
[L2845]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2846]  COND FALSE  !(revert)
[L2849]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_to_s382];
[L2850]              balanceOf_OMAToken[this][_to_s382] := __var_3;
[L2851]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_to_s382];
[L2852]              assert { :EventEmitted "Transfer_OMAToken" } true;
[L2903]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2904]  COND FALSE  !(revert)
[L2907]              success_s438 := true;
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:28:21,385 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:28:21,385 INFO  L82        PathProgramCache]: Analyzing trace with hash 1316823282, now seen corresponding path program 1 times
[2020-11-25 02:28:21,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:28:21,409 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:28:21,567 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 13 trivial. 0 not checked.
[2020-11-25 02:28:21,567 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:28:21,567 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-25 02:28:21,568 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:28:21,568 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 02:28:21,568 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 02:28:21,569 INFO  L87              Difference]: Start difference. First operand 3195 states and 3461 transitions. cyclomatic complexity: 268 Second operand 13 states.
[2020-11-25 02:28:23,199 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:28:23,199 INFO  L93              Difference]: Finished difference Result 3280 states and 3558 transitions.
[2020-11-25 02:28:23,199 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 02:28:23,199 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3280 states and 3558 transitions.
[2020-11-25 02:28:23,207 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:28:23,216 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3280 states to 3280 states and 3558 transitions.
[2020-11-25 02:28:23,216 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 920
[2020-11-25 02:28:23,217 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 920
[2020-11-25 02:28:23,217 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3280 states and 3558 transitions.
[2020-11-25 02:28:23,219 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:28:23,219 INFO  L728         BuchiCegarLoop]: Abstraction has 3280 states and 3558 transitions.
[2020-11-25 02:28:23,222 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3280 states and 3558 transitions.
[2020-11-25 02:28:23,240 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3280 to 3051.
[2020-11-25 02:28:23,241 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3051 states.
[2020-11-25 02:28:23,243 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3051 states to 3051 states and 3278 transitions.
[2020-11-25 02:28:23,244 INFO  L751         BuchiCegarLoop]: Abstraction has 3051 states and 3278 transitions.
[2020-11-25 02:28:23,244 INFO  L631         BuchiCegarLoop]: Abstraction has 3051 states and 3278 transitions.
[2020-11-25 02:28:23,244 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:28:23,244 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3051 states and 3278 transitions.
[2020-11-25 02:28:23,247 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:23,247 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:23,247 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:23,249 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:23,249 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_OMAToken0 := false;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]     CALL        call main();
[L4541]              assume null == 0;
[L4542]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L4542]  RET         call this := FreshRefGenerator__success();
[L4543]              assume now >= 0;
[L4544]              assume DType[this] == OMAToken;
[L4545]              assume msgvalue_MSG == 0;
[L4546]              gas := gas - 53000;
[L4547]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L712]               havoc __exception;
[L713]               revert := false;
[L714]   COND TRUE   __exception
[L715]               __tmp__Balance := Balance;
[L716]               __tmp__DType := DType;
[L717]               __tmp__Alloc := Alloc;
[L718]               __tmp__balance_ADDR := balance_ADDR;
[L719]               __tmp__M_Ref_int := M_Ref_int;
[L720]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L721]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L722]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L723]               __tmp__sum_allowance1 := sum_allowance1;
[L724]               __tmp__M_Ref_bool := M_Ref_bool;
[L725]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L726]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L727]               __tmp__Length := Length;
[L728]               __tmp__now := now;
[L729]               __tmp__owner_Owned := owner_Owned;
[L730]               __tmp__paused_Pausable := paused_Pausable;
[L731]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L732]               __tmp__name_OMAToken := name_OMAToken;
[L733]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L734]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L735]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L736]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L737]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L738]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L739]   CALL        call OMAToken_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2737]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              __tmp__Balance[this] := 0;
[L2479]              __tmp__owner_Owned[this] := null;
[L2481]              __tmp__owner_Owned[this] := msgsender_MSG;
[L2496]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2737]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2741]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              __tmp__Balance[this] := 0;
[L2479]              __tmp__owner_Owned[this] := null;
[L2481]              __tmp__owner_Owned[this] := msgsender_MSG;
[L2496]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2560]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2564]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2543]              assume msgsender_MSG != null;
[L2544]              __tmp__Balance[this] := 0;
[L2545]              __tmp__paused_Pausable[this] := false;
[L2564]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2565]  COND FALSE  !(revert)
[L2741]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2742]  COND FALSE  !(revert)
[L2745]  CALL        call OMAToken_OMAToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2684]              assume msgsender_MSG != null;
[L2685]              __tmp__Balance[this] := 0;
[L2686]              __tmp__symbol_OMAToken[this] := -641797033;
[L2687]              __tmp__name_OMAToken[this] := -641797033;
[L2688]              __tmp__decimals_OMAToken[this] := 18;
[L2689]              __tmp__totalSupply_OMAToken[this] := 0;
[L2690]              __tmp__balanceOf_OMAToken[this] := zeroRefintArr();
[L2691]              __tmp__sum_balanceOf0[this] := 0;
[L2692]              __tmp__allowance_OMAToken[this] := zeroRefRefintArr();
[L2693]              __tmp__sum_allowance1[this] := 0;
[L2694]              __tmp__frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2695]              __tmp__frozenAmount_OMAToken[this] := zeroRefintArr();
[L2696]              __tmp__sum_frozenAmount3[this] := 0;
[L2698]              __var_1 := __tmp__decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2699]              __tmp__totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, __tmp__decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2700]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_OMAToken[this][msgsender_MSG];
[L2701]              __tmp__balanceOf_OMAToken[this][msgsender_MSG] := __tmp__totalSupply_OMAToken[this];
[L2702]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_OMAToken[this][msgsender_MSG];
[L2703]              __tmp__name_OMAToken[this] := tokenName_s302;
[L2704]              __tmp__symbol_OMAToken[this] := tokenSymbol_s302;
[L2745]  RET         call OMAToken_OMAToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2746]  COND FALSE  !(revert)
[L739]   RET         call OMAToken_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L740]               assume revert || gas < 0;
[L4547]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4548]              assume !revert && gas >= 0;
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND FALSE  !(revert)
[L2900]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] - allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2901]              allowance_OMAToken[this][_from_s438][msgsender_MSG] := __var_4;
[L2902]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] + allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2903]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2816]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4048]  COND FALSE  !(!!paused_Pausable[this])
[L2816]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]              __var_2 := null;
[L2821]  COND FALSE  !(!(_to_s382 != null))
[L2825]  COND FALSE  !(!!frozenAccount_OMAToken[this][_from_s382])
[L2829]  COND FALSE  !(!!frozenAccount_OMAToken[this][_to_s382])
[L2833]  CALL        call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2833]  RET         call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2834]  COND FALSE  !(revert)
[L2837]              amount_s382 := amount_s382;
[L2838]  COND FALSE  !(!(frozenAmount_OMAToken[this][_from_s382] == 0 || amount_s382 >= frozenAmount_OMAToken[this][_from_s382]))
[L2842]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_from_s382];
[L2843]              balanceOf_OMAToken[this][_from_s382] := amount_s382;
[L2844]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_from_s382];
[L2845]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2468]              c_s92 := (a_s92 + b_s92) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2469]              assert c_s92 >= a_s92;
[L2470]              c_s92 := c_s92;
[L2845]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2846]  COND FALSE  !(revert)
[L2849]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_to_s382];
[L2850]              balanceOf_OMAToken[this][_to_s382] := __var_3;
[L2851]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_to_s382];
[L2852]              assert { :EventEmitted "Transfer_OMAToken" } true;
[L2903]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2904]  COND FALSE  !(revert)
[L2907]              success_s438 := true;
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND TRUE   choice == 21
[L4399]              gas := gas - 21000;
[L4400]  COND FALSE  !(gas >= 0)
[L4551]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:28:23,252 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:28:23,252 INFO  L82        PathProgramCache]: Analyzing trace with hash 495274564, now seen corresponding path program 1 times
[2020-11-25 02:28:23,253 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:28:23,262 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:28:23,295 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 02:28:23,296 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:28:23,296 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:28:23,296 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:28:23,296 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:28:23,296 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:28:23,296 INFO  L87              Difference]: Start difference. First operand 3051 states and 3278 transitions. cyclomatic complexity: 230 Second operand 4 states.
[2020-11-25 02:28:23,553 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:28:23,553 INFO  L93              Difference]: Finished difference Result 3868 states and 4313 transitions.
[2020-11-25 02:28:23,554 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:28:23,554 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3868 states and 4313 transitions.
[2020-11-25 02:28:23,562 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 02:28:23,573 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3868 states to 3773 states and 4217 transitions.
[2020-11-25 02:28:23,573 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1032
[2020-11-25 02:28:23,574 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1032
[2020-11-25 02:28:23,574 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3773 states and 4217 transitions.
[2020-11-25 02:28:23,577 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:28:23,578 INFO  L728         BuchiCegarLoop]: Abstraction has 3773 states and 4217 transitions.
[2020-11-25 02:28:23,580 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3773 states and 4217 transitions.
[2020-11-25 02:28:23,599 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3773 to 2956.
[2020-11-25 02:28:23,599 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2956 states.
[2020-11-25 02:28:23,603 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2956 states to 2956 states and 3181 transitions.
[2020-11-25 02:28:23,603 INFO  L751         BuchiCegarLoop]: Abstraction has 2956 states and 3181 transitions.
[2020-11-25 02:28:23,603 INFO  L631         BuchiCegarLoop]: Abstraction has 2956 states and 3181 transitions.
[2020-11-25 02:28:23,603 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 02:28:23,603 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2956 states and 3181 transitions.
[2020-11-25 02:28:23,607 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:28:23,607 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:28:23,607 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:28:23,609 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:28:23,609 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_OMAToken0 := false;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]     CALL        call main();
[L4541]              assume null == 0;
[L4542]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L4542]  RET         call this := FreshRefGenerator__success();
[L4543]              assume now >= 0;
[L4544]              assume DType[this] == OMAToken;
[L4545]              assume msgvalue_MSG == 0;
[L4546]              gas := gas - 53000;
[L4547]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L712]               havoc __exception;
[L713]               revert := false;
[L714]   COND FALSE  !(__exception)
[L742]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2754]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2754]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2755]  COND FALSE  !(revert)
[L2758]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2572]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2504]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2487]              assume msgsender_MSG != null;
[L2488]              Balance[this] := 0;
[L2489]              owner_Owned[this] := null;
[L2491]              owner_Owned[this] := msgsender_MSG;
[L2504]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  COND FALSE  !(revert)
[L2572]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2573]  COND FALSE  !(revert)
[L2576]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]              assume msgsender_MSG != null;
[L2553]              Balance[this] := 0;
[L2554]              paused_Pausable[this] := false;
[L2576]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2577]  COND FALSE  !(revert)
[L2758]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2759]  COND FALSE  !(revert)
[L2762]  CALL        call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2711]              assume msgsender_MSG != null;
[L2712]              Balance[this] := 0;
[L2713]              symbol_OMAToken[this] := -641797033;
[L2714]              name_OMAToken[this] := -641797033;
[L2715]              decimals_OMAToken[this] := 18;
[L2716]              totalSupply_OMAToken[this] := 0;
[L2717]              balanceOf_OMAToken[this] := zeroRefintArr();
[L2718]              sum_balanceOf0[this] := 0;
[L2719]              allowance_OMAToken[this] := zeroRefRefintArr();
[L2720]              sum_allowance1[this] := 0;
[L2721]              frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2722]              frozenAmount_OMAToken[this] := zeroRefintArr();
[L2723]              sum_frozenAmount3[this] := 0;
[L2725]              __var_1 := decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2726]              totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2727]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][msgsender_MSG];
[L2728]              balanceOf_OMAToken[this][msgsender_MSG] := totalSupply_OMAToken[this];
[L2729]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][msgsender_MSG];
[L2730]              name_OMAToken[this] := tokenName_s302;
[L2731]              symbol_OMAToken[this] := tokenSymbol_s302;
[L2762]  RET         call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2763]  COND FALSE  !(revert)
[L742]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L743]               assume !revert && gas >= 0;
[L4547]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4548]              assume !revert && gas >= 0;
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND FALSE  !(choice == 7)
[L4490]  COND TRUE   choice == 6
[L4491]              gas := gas - 21000;
[L4492]  COND TRUE   gas >= 0
[L4493]              assume _value_s468 >= 0 && _value_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4494]              assume msgvalue_MSG == 0;
[L4495]  CALL        call success_s468 := approve~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _spender_s468, _value_s468);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L946]   CALL        call success_s468 := approve~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s468, _value_s468);
[L2926]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4032]  COND FALSE  !(!(msgsender_MSG == owner_Owned[this]))
[L2926]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2927]  COND FALSE  !(revert)
[L2930]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_OMAToken[this][msgsender_MSG][_spender_s468];
[L2931]              allowance_OMAToken[this][msgsender_MSG][_spender_s468] := _value_s468;
[L2932]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_OMAToken[this][msgsender_MSG][_spender_s468];
[L2933]              assert { :EventEmitted "Approval_OMAToken" } true;
[L2934]              success_s468 := true;
[L946]   RET         call success_s468 := approve~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s468, _value_s468);
[L947]               assume !revert && gas >= 0;
[L4495]  RET         call success_s468 := approve~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _spender_s468, _value_s468);
[L4551]  RET         call CorralChoice_OMAToken(this);
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND FALSE  !(revert)
[L2900]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] - allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2901]              allowance_OMAToken[this][_from_s438][msgsender_MSG] := __var_4;
[L2902]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] + allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2903]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2816]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4048]  COND FALSE  !(!!paused_Pausable[this])
[L2816]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]              __var_2 := null;
[L2821]  COND FALSE  !(!(_to_s382 != null))
[L2825]  COND FALSE  !(!!frozenAccount_OMAToken[this][_from_s382])
[L2829]  COND FALSE  !(!!frozenAccount_OMAToken[this][_to_s382])
[L2833]  CALL        call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2833]  RET         call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2834]  COND FALSE  !(revert)
[L2837]              amount_s382 := amount_s382;
[L2838]  COND FALSE  !(!(frozenAmount_OMAToken[this][_from_s382] == 0 || amount_s382 >= frozenAmount_OMAToken[this][_from_s382]))
[L2842]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_from_s382];
[L2843]              balanceOf_OMAToken[this][_from_s382] := amount_s382;
[L2844]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_from_s382];
[L2845]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2468]              c_s92 := (a_s92 + b_s92) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2469]              assert c_s92 >= a_s92;
[L2470]              c_s92 := c_s92;
[L2845]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2846]  COND FALSE  !(revert)
[L2849]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_to_s382];
[L2850]              balanceOf_OMAToken[this][_to_s382] := __var_3;
[L2851]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_to_s382];
[L2852]              assert { :EventEmitted "Transfer_OMAToken" } true;
[L2903]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2904]  COND FALSE  !(revert)
[L2907]              success_s438 := true;
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4551]  CALL        call CorralChoice_OMAToken(this);
[L4342]              havoc msgsender_MSG;
[L4343]              havoc msgvalue_MSG;
[L4344]              havoc choice;
[L4345]              havoc __ret_0_owner;
[L4346]              havoc newOwner_s127;
[L4347]              havoc __ret_0_paused;
[L4348]              havoc __ret_0_symbol;
[L4349]              havoc __ret_0_name;
[L4350]              havoc __ret_0_decimals;
[L4351]              havoc __ret_0_totalSupply;
[L4352]              havoc arg613_s0;
[L4353]              havoc __ret_0_balanceOf;
[L4354]              havoc arg614_s0;
[L4355]              havoc arg615_s0;
[L4356]              havoc __ret_0_allowance;
[L4357]              havoc arg616_s0;
[L4358]              havoc __ret_0_frozenAccount;
[L4359]              havoc arg617_s0;
[L4360]              havoc __ret_0_frozenAmount;
[L4361]              havoc initialSupply_s302;
[L4362]              havoc tokenName_s302;
[L4363]              havoc tokenSymbol_s302;
[L4364]              havoc _to_s401;
[L4365]              havoc _value_s401;
[L4366]              havoc success_s401;
[L4367]              havoc _from_s438;
[L4368]              havoc _to_s438;
[L4369]              havoc _value_s438;
[L4370]              havoc success_s438;
[L4371]              havoc _spender_s468;
[L4372]              havoc _value_s468;
[L4373]              havoc success_s468;
[L4374]              havoc _spender_s508;
[L4375]              havoc _value_s508;
[L4376]              havoc _extraData_s508;
[L4377]              havoc success_s508;
[L4378]              havoc _value_s544;
[L4379]              havoc success_s544;
[L4380]              havoc target_s565;
[L4381]              havoc freeze_s565;
[L4382]              havoc target_s592;
[L4383]              havoc _value_s592;
[L4384]              havoc target_s610;
[L4385]              havoc tmpNow;
[L4386]              havoc gas;
[L4387]              assume gas > 4000000 && gas <= 8000000;
[L4388]              tmpNow := now;
[L4389]              havoc now;
[L4390]              assume now > tmpNow;
[L4391]              assume msgsender_MSG != null;
[L4392]              assume DType[msgsender_MSG] != SafeMath;
[L4393]              assume DType[msgsender_MSG] != Owned;
[L4394]              assume DType[msgsender_MSG] != Pausable;
[L4395]              assume DType[msgsender_MSG] != tokenRecipient;
[L4396]              assume DType[msgsender_MSG] != OMAToken;
[L4397]              Alloc[msgsender_MSG] := true;
[L4398]  COND FALSE  !(choice == 21)
[L4404]  COND FALSE  !(choice == 20)
[L4410]  COND FALSE  !(choice == 19)
[L4416]  COND FALSE  !(choice == 18)
[L4422]  COND FALSE  !(choice == 17)
[L4428]  COND FALSE  !(choice == 16)
[L4434]  COND FALSE  !(choice == 15)
[L4440]  COND FALSE  !(choice == 14)
[L4446]  COND FALSE  !(choice == 13)
[L4452]  COND FALSE  !(choice == 12)
[L4458]  COND FALSE  !(choice == 11)
[L4464]  COND FALSE  !(choice == 10)
[L4470]  COND FALSE  !(choice == 9)
[L4476]  COND FALSE  !(choice == 8)
[L4483]  COND TRUE   choice == 7
[L4484]              gas := gas - 21000;
[L4485]  COND TRUE   gas >= 0
[L4486]              assume _value_s438 >= 0 && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s438 == _to_s438 && (_value_s438 > balanceOf_OMAToken[this][_from_s438] || _value_s438 > allowance_OMAToken[this][_from_s438][msgsender_MSG])) && _value_s438 >= 0) && _value_s438 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s438] >= 0) && balanceOf_OMAToken[this][_to_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_from_s438] >= 0) && balanceOf_OMAToken[this][_from_s438] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_OMAToken[this][_from_s438][msgsender_MSG] >= 0) && allowance_OMAToken[this][_from_s438][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_OMAToken0 := true;
[L2]                 call_transferFrom_OMAToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L880]   CALL        call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2896]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2896]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_OMAToken[this][_from_s438][msgsender_MSG], _value_s438);
[L2897]  COND FALSE  !(revert)
[L2900]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] - allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2901]              allowance_OMAToken[this][_from_s438][msgsender_MSG] := __var_4;
[L2902]              sum_allowance1[_from_s438] := sum_allowance1[_from_s438] + allowance_OMAToken[this][_from_s438][msgsender_MSG];
[L2903]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2816]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4048]  COND FALSE  !(!!paused_Pausable[this])
[L2816]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]              __var_2 := null;
[L2821]  COND FALSE  !(!(_to_s382 != null))
[L2825]  COND FALSE  !(!!frozenAccount_OMAToken[this][_from_s382])
[L2829]  COND FALSE  !(!!frozenAccount_OMAToken[this][_to_s382])
[L2833]  CALL        call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2454]              assert b_s68 <= a_s68;
[L2455]              __ret_0_ := (a_s68 - b_s68) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2833]  RET         call amount_s382 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_from_s382], _value_s382);
[L2834]  COND FALSE  !(revert)
[L2837]              amount_s382 := amount_s382;
[L2838]  COND FALSE  !(!(frozenAmount_OMAToken[this][_from_s382] == 0 || amount_s382 >= frozenAmount_OMAToken[this][_from_s382]))
[L2842]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_from_s382];
[L2843]              balanceOf_OMAToken[this][_from_s382] := amount_s382;
[L2844]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_from_s382];
[L2845]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2468]              c_s92 := (a_s92 + b_s92) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2469]              assert c_s92 >= a_s92;
[L2470]              c_s92 := c_s92;
[L2845]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_OMAToken[this][_to_s382], _value_s382);
[L2846]  COND FALSE  !(revert)
[L2849]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][_to_s382];
[L2850]              balanceOf_OMAToken[this][_to_s382] := __var_3;
[L2851]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][_to_s382];
[L2852]              assert { :EventEmitted "Transfer_OMAToken" } true;
[L2903]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L2904]  COND FALSE  !(revert)
[L2907]              success_s438 := true;
[L880]   RET         call success_s438 := transferFrom~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L881]               assume !revert && gas >= 0;
[L4488]  RET         call success_s438 := transferFrom~address~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _from_s438, _to_s438, _value_s438);
[L4551]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:28:23,613 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:28:23,614 INFO  L82        PathProgramCache]: Analyzing trace with hash 1608630615, now seen corresponding path program 1 times
[2020-11-25 02:28:23,614 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:28:23,631 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:28:23,752 INFO  L134       CoverageAnalysis]: Checked inductivity of 89 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 89 trivial. 0 not checked.
[2020-11-25 02:28:23,752 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:28:23,752 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 02:28:23,753 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:28:23,753 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 02:28:23,753 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=84, Unknown=0, NotChecked=0, Total=110
[2020-11-25 02:28:23,753 INFO  L87              Difference]: Start difference. First operand 2956 states and 3181 transitions. cyclomatic complexity: 228 Second operand 11 states.
[2020-11-25 02:28:24,435 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:28:24,435 INFO  L93              Difference]: Finished difference Result 1654 states and 1772 transitions.
[2020-11-25 02:28:24,435 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-25 02:28:24,435 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1654 states and 1772 transitions.
[2020-11-25 02:28:24,438 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:28:24,438 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1654 states to 0 states and 0 transitions.
[2020-11-25 02:28:24,438 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 02:28:24,438 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 02:28:24,438 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 02:28:24,438 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:28:24,438 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:28:24,438 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:28:24,438 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:28:24,438 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 02:28:24,438 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 02:28:24,439 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:28:24,439 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 02:28:24,442 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:28:24 BasicIcfg
[2020-11-25 02:28:24,442 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:28:24,442 INFO  L168              Benchmark]: Toolchain (without parser) took 7092.57 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 595.1 MB). Free memory was 935.2 MB in the beginning and 912.3 MB in the end (delta: 22.9 MB). Peak memory consumption was 617.9 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,443 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,443 INFO  L168              Benchmark]: Boogie Preprocessor took 109.60 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,444 INFO  L168              Benchmark]: UtopiaSpecLang took 69.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,444 INFO  L168              Benchmark]: Boogie Printer took 16.07 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,444 INFO  L168              Benchmark]: RCFGBuilder took 723.00 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,444 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.06 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,445 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1304.50 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 183.0 MB). Free memory was 802.8 MB in the beginning and 984.3 MB in the end (delta: -181.5 MB). Peak memory consumption was 171.2 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,445 INFO  L168              Benchmark]: BlockEncodingV2 took 126.22 ms. Allocated memory is still 1.2 GB. Free memory was 984.3 MB in the beginning and 925.0 MB in the end (delta: 59.3 MB). Peak memory consumption was 59.3 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,446 INFO  L168              Benchmark]: BuchiAutomizer took 4705.90 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 412.1 MB). Free memory was 925.0 MB in the beginning and 912.3 MB in the end (delta: 12.6 MB). Peak memory consumption was 424.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:28:24,448 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4040 locations, 6901 edges
  - StatisticsResult: Encoded RCFG
    3974 locations, 6749 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 109.60 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.07 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 723.00 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.06 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1304.50 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 183.0 MB). Free memory was 802.8 MB in the beginning and 984.3 MB in the end (delta: -181.5 MB). Peak memory consumption was 171.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 126.22 ms. Allocated memory is still 1.2 GB. Free memory was 984.3 MB in the beginning and 925.0 MB in the end (delta: 59.3 MB). Peak memory consumption was 59.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4705.90 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 412.1 MB). Free memory was 925.0 MB in the beginning and 912.3 MB in the end (delta: 12.6 MB). Peak memory consumption was 424.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1679 locations, 2124 edges
  - StatisticsResult: BuchiProgram size
    4040 locations, 6901 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.6s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.5s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1460 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3195 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15006 SDtfs, 15999 SDslu, 19720 SDs, 0 SdLazy, 36739 SolverSat, 2427 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_OMAToken0) ==> ( <>(fail_transferFrom_OMAToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
