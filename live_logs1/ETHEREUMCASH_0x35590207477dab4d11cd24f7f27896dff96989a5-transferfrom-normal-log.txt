This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:02:59,328 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:02:59,329 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:02:59,336 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:02:59,337 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:02:59,337 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:02:59,338 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:02:59,339 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:02:59,340 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:02:59,340 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:02:59,341 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:02:59,341 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:02:59,342 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:02:59,342 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:02:59,343 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:02:59,343 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:02:59,344 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:02:59,345 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:02:59,346 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:02:59,347 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:02:59,347 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:02:59,348 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:02:59,350 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:02:59,350 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:02:59,350 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:02:59,350 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:02:59,350 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:02:59,351 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:02:59,351 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:02:59,351 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:02:59,352 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:02:59,352 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:02:59,352 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:02:59,353 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:02:59,353 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:02:59,353 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:02:59,354 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:02:59,354 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:02:59,354 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:02:59,354 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:02:59,355 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:02:59,355 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:02:59,360 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:02:59,361 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:02:59,361 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:02:59,361 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:02:59,361 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:02:59,361 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:02:59,361 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:02:59,362 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:02:59,362 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:02:59,362 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:02:59,363 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:02:59,363 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:02:59,363 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:02:59,363 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:02:59,380 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:02:59,386 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:02:59,388 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:02:59,389 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:02:59,389 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:02:59,390 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl
[2020-11-25 16:02:59,390 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl'
[2020-11-25 16:02:59,456 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:02:59,457 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:02:59,458 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:02:59,458 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:02:59,458 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:02:59,474 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,475 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,497 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,498 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,512 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,518 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,523 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,528 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:02:59,529 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:02:59,529 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:02:59,531 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:02:59,535 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/1) ...
[2020-11-25 16:02:59,549 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ETHEREUMCASH.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && balanceOf_ETHEREUMCASH[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && balanceOf_ETHEREUMCASH[this][from] == old(balanceOf_ETHEREUMCASH[this][from]) - value && balanceOf_ETHEREUMCASH[this][to] == old(balanceOf_ETHEREUMCASH[this][to]) + value && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1]) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:59,554 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ETHEREUMCASH.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && balanceOf_ETHEREUMCASH[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && balanceOf_ETHEREUMCASH[this][from] == old(balanceOf_ETHEREUMCASH[this][from]) - value && balanceOf_ETHEREUMCASH[this][to] == old(balanceOf_ETHEREUMCASH[this][to]) + value && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1]) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:59,562 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ETHEREUMCASH.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && balanceOf_ETHEREUMCASH[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && balanceOf_ETHEREUMCASH[this][from] == old(balanceOf_ETHEREUMCASH[this][from]) - value && balanceOf_ETHEREUMCASH[this][to] == old(balanceOf_ETHEREUMCASH[this][to]) + value && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1]) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:59,568 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s226 && p1!=_to_s226 ) && ( p2!=_from_s226 || p3!=msg.sender ) ) && _from_s226!=_to_s226 ) && _value_s226<=balanceOf_ETHEREUMCASH[this][_from_s226] ) && _value_s226<=allowance_ETHEREUMCASH[this][_from_s226][msg.sender] ) && ( balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s226>=0 ) && _value_s226<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][_to_s226]>=0 ) && balanceOf_ETHEREUMCASH[this][_to_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][_from_s226]>=0 ) && balanceOf_ETHEREUMCASH[this][_from_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]>=0 ) && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:02:59,571 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s226==true && balanceOf_ETHEREUMCASH[this][_from_s226]==( ( old(balanceOf_ETHEREUMCASH[this][_from_s226]) ) - _value_s226 ) ) && balanceOf_ETHEREUMCASH[this][_to_s226]==( ( old(balanceOf_ETHEREUMCASH[this][_to_s226]) ) + _value_s226 ) ) && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]==( ( old(allowance_ETHEREUMCASH[this][_from_s226][msg.sender]) ) - _value_s226 ) ) && totalSupply_ETHEREUMCASH[this]==( old(totalSupply_ETHEREUMCASH[this]) ) ) && balanceOf_ETHEREUMCASH[this][p1]==( old(balanceOf_ETHEREUMCASH[this][p1]) ) ) && allowance_ETHEREUMCASH[this][p2][p3]==( old(allowance_ETHEREUMCASH[this][p2][p3]) ) ) && name_ETHEREUMCASH[this]==( old(name_ETHEREUMCASH[this]) ) ) && symbol_ETHEREUMCASH[this]==( old(symbol_ETHEREUMCASH[this]) ) ) && decimals_ETHEREUMCASH[this]==( old(decimals_ETHEREUMCASH[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s226,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]]
[2020-11-25 16:02:59,575 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ETHEREUMCASH.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && balanceOf_ETHEREUMCASH[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && balanceOf_ETHEREUMCASH[this][from] == old(balanceOf_ETHEREUMCASH[this][from]) - value && balanceOf_ETHEREUMCASH[this][to] == old(balanceOf_ETHEREUMCASH[this][to]) + value && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1]) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:59,575 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ETHEREUMCASH0) ==> ( <>AP(success_transferFrom_ETHEREUMCASH0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:02:59,580 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:59 PropertyContainer
[2020-11-25 16:02:59,580 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:02:59,581 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:02:59,581 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:02:59,581 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:02:59,582 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/2) ...
[2020-11-25 16:02:59,582 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:02:59,582 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:02:59,591 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:59" (2/2) ...
[2020-11-25 16:02:59,591 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:02:59,591 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:02:59,591 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:02:59,592 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:02:59,592 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/2) ...
[2020-11-25 16:02:59,646 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:02:59,646 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:02:59,646 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:02:59,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:02:59,646 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH
[2020-11-25 16:02:59,648 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:02:59,649 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:02:59,650 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,651 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:02:59,652 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:02:59,653 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:02:59,653 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:02:59,653 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:02:59,653 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:02:59,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:02:59,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:02:59,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:02:59,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 16:02:59,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 16:02:59,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:02:59,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:02:59,657 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:02:59,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:02:59,762 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:59,762 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:59,763 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:59,857 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:03:00,117 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:03:00,117 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 16:03:00,118 INFO  L202        PluginConnector]: Adding new model ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:00 BoogieIcfgContainer
[2020-11-25 16:03:00,119 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:59" (2/2) ...
[2020-11-25 16:03:00,119 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:03:00,119 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@62bc753e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:00, skipping insertion in model container
[2020-11-25 16:03:00,119 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:03:00,119 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:03:00,119 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:03:00,121 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:03:00,121 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/3) ...
[2020-11-25 16:03:00,121 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@277ae8c5 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:00, skipping insertion in model container
[2020-11-25 16:03:00,122 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:59" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:03:00,155 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:00 NWAContainer
[2020-11-25 16:03:00,156 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:03:00,156 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:03:00,156 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:03:00,157 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:03:00,158 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:00" (3/4) ...
[2020-11-25 16:03:00,158 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1db5fb04 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:00, skipping insertion in model container
[2020-11-25 16:03:00,159 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:00" (4/4) ...
[2020-11-25 16:03:00,162 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:03:00,164 INFO  L110   BuchiProductObserver]: Initial RCFG 819 locations, 991 edges
[2020-11-25 16:03:00,164 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:03:00,173 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:03:01,147 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:03:01,150 INFO  L110   BuchiProductObserver]: BuchiProgram size 1904 locations, 3188 edges
[2020-11-25 16:03:01,150 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:01 BoogieIcfgContainer
[2020-11-25 16:03:01,150 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:03:01,150 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:03:01,151 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:03:01,152 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:03:01,153 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:01" (1/1) ...
[2020-11-25 16:03:01,206 INFO  L313           BlockEncoder]: Initial Icfg 1904 locations, 3188 edges
[2020-11-25 16:03:01,207 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:03:01,208 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:03:01,209 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:03:01,210 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:03:01,220 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 16:03:01,225 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 16:03:01,232 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:03:01,235 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:03:01,237 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:03:01,237 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:03:01,240 INFO  L313           BlockEncoder]: Encoded RCFG 1884 locations, 3139 edges
[2020-11-25 16:03:01,241 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:03:01 BasicIcfg
[2020-11-25 16:03:01,241 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:03:01,241 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:03:01,241 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:03:01,244 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:03:01,244 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,244 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:59" (1/6) ...
[2020-11-25 16:03:01,246 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1d743133 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:01, skipping insertion in model container
[2020-11-25 16:03:01,246 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,246 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:59" (2/6) ...
[2020-11-25 16:03:01,246 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1d743133 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:01, skipping insertion in model container
[2020-11-25 16:03:01,246 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,247 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:00" (3/6) ...
[2020-11-25 16:03:01,247 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1d743133 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:03:01, skipping insertion in model container
[2020-11-25 16:03:01,247 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,247 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:00" (4/6) ...
[2020-11-25 16:03:01,247 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1d743133 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:01, skipping insertion in model container
[2020-11-25 16:03:01,247 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,247 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:01" (5/6) ...
[2020-11-25 16:03:01,248 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1d743133 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:03:01, skipping insertion in model container
[2020-11-25 16:03:01,248 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:01,248 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:03:01" (6/6) ...
[2020-11-25 16:03:01,249 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-normal.bpl_BEv2
[2020-11-25 16:03:01,287 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:03:01,287 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:03:01,287 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:03:01,287 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:03:01,287 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:03:01,287 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:03:01,287 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:03:01,288 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:03:01,288 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:03:01,310 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1884 states.
[2020-11-25 16:03:01,352 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:01,352 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:01,352 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:01,361 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:01,362 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:01,362 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:03:01,362 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1884 states.
[2020-11-25 16:03:01,373 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:01,373 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:01,373 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:01,375 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:01,375 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND TRUE   choice == 12
[L2089]              gas := gas - 21000;
[L2090]  COND FALSE  !(gas >= 0)
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:01,398 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:01,398 INFO  L82        PathProgramCache]: Analyzing trace with hash -923953865, now seen corresponding path program 1 times
[2020-11-25 16:03:01,403 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:01,425 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:01,467 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:01,469 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:01,469 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:03:01,473 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:01,602 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:03:01,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:03:01,605 INFO  L87              Difference]: Start difference. First operand 1884 states. Second operand 4 states.
[2020-11-25 16:03:01,851 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:01,852 INFO  L93              Difference]: Finished difference Result 1512 states and 1647 transitions.
[2020-11-25 16:03:01,853 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:03:01,855 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1512 states and 1647 transitions.
[2020-11-25 16:03:01,865 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:01,882 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1512 states to 1510 states and 1643 transitions.
[2020-11-25 16:03:01,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:03:01,885 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 702
[2020-11-25 16:03:01,886 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1510 states and 1643 transitions.
[2020-11-25 16:03:01,893 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:01,893 INFO  L728         BuchiCegarLoop]: Abstraction has 1510 states and 1643 transitions.
[2020-11-25 16:03:01,914 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1510 states and 1643 transitions.
[2020-11-25 16:03:01,948 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1510 to 1510.
[2020-11-25 16:03:01,949 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1510 states.
[2020-11-25 16:03:01,951 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1510 states to 1510 states and 1643 transitions.
[2020-11-25 16:03:01,952 INFO  L751         BuchiCegarLoop]: Abstraction has 1510 states and 1643 transitions.
[2020-11-25 16:03:01,952 INFO  L631         BuchiCegarLoop]: Abstraction has 1510 states and 1643 transitions.
[2020-11-25 16:03:01,952 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:03:01,952 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1510 states and 1643 transitions.
[2020-11-25 16:03:01,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:01,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:01,957 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:01,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:01,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s226 == true && balanceOf_ETHEREUMCASH[this][_from_s226] == old(balanceOf_ETHEREUMCASH[this][_from_s226]) - _value_s226) && balanceOf_ETHEREUMCASH[this][_to_s226] == old(balanceOf_ETHEREUMCASH[this][_to_s226]) + _value_s226) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1])) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s226 == true && balanceOf_ETHEREUMCASH[this][_from_s226] == old(balanceOf_ETHEREUMCASH[this][_from_s226]) - _value_s226) && balanceOf_ETHEREUMCASH[this][_to_s226] == old(balanceOf_ETHEREUMCASH[this][_to_s226]) + _value_s226) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1])) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:01,962 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:01,963 INFO  L82        PathProgramCache]: Analyzing trace with hash 1920529213, now seen corresponding path program 1 times
[2020-11-25 16:03:01,963 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:01,974 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:01,999 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:01,999 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:01,999 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:03:02,000 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:02,000 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:03:02,001 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:03:02,001 INFO  L87              Difference]: Start difference. First operand 1510 states and 1643 transitions. cyclomatic complexity: 135 Second operand 3 states.
[2020-11-25 16:03:02,034 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:02,035 INFO  L93              Difference]: Finished difference Result 1958 states and 2175 transitions.
[2020-11-25 16:03:02,035 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:03:02,035 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1958 states and 2175 transitions.
[2020-11-25 16:03:02,043 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:03:02,052 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1958 states to 1880 states and 2085 transitions.
[2020-11-25 16:03:02,052 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 887
[2020-11-25 16:03:02,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 887
[2020-11-25 16:03:02,053 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1880 states and 2085 transitions.
[2020-11-25 16:03:02,055 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:02,055 INFO  L728         BuchiCegarLoop]: Abstraction has 1880 states and 2085 transitions.
[2020-11-25 16:03:02,057 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1880 states and 2085 transitions.
[2020-11-25 16:03:02,073 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1880 to 1508.
[2020-11-25 16:03:02,073 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1508 states.
[2020-11-25 16:03:02,076 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1508 states to 1508 states and 1621 transitions.
[2020-11-25 16:03:02,076 INFO  L751         BuchiCegarLoop]: Abstraction has 1508 states and 1621 transitions.
[2020-11-25 16:03:02,076 INFO  L631         BuchiCegarLoop]: Abstraction has 1508 states and 1621 transitions.
[2020-11-25 16:03:02,076 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:03:02,076 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1508 states and 1621 transitions.
[2020-11-25 16:03:02,079 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:02,080 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:02,080 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:02,081 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:02,082 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:02,085 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:02,085 INFO  L82        PathProgramCache]: Analyzing trace with hash 1010781787, now seen corresponding path program 1 times
[2020-11-25 16:03:02,085 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:02,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:02,146 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:02,146 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:02,146 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 16:03:02,147 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:02,147 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 16:03:02,148 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 16:03:02,148 INFO  L87              Difference]: Start difference. First operand 1508 states and 1621 transitions. cyclomatic complexity: 115 Second operand 6 states.
[2020-11-25 16:03:02,679 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:02,679 INFO  L93              Difference]: Finished difference Result 1654 states and 1781 transitions.
[2020-11-25 16:03:02,680 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:03:02,680 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1654 states and 1781 transitions.
[2020-11-25 16:03:02,688 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:03:02,694 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1654 states to 1654 states and 1781 transitions.
[2020-11-25 16:03:02,694 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 772
[2020-11-25 16:03:02,696 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 772
[2020-11-25 16:03:02,696 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1654 states and 1781 transitions.
[2020-11-25 16:03:02,698 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:02,698 INFO  L728         BuchiCegarLoop]: Abstraction has 1654 states and 1781 transitions.
[2020-11-25 16:03:02,699 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1654 states and 1781 transitions.
[2020-11-25 16:03:02,725 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1654 to 1560.
[2020-11-25 16:03:02,725 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1560 states.
[2020-11-25 16:03:02,728 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1560 states to 1560 states and 1677 transitions.
[2020-11-25 16:03:02,728 INFO  L751         BuchiCegarLoop]: Abstraction has 1560 states and 1677 transitions.
[2020-11-25 16:03:02,728 INFO  L631         BuchiCegarLoop]: Abstraction has 1560 states and 1677 transitions.
[2020-11-25 16:03:02,728 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:03:02,728 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1560 states and 1677 transitions.
[2020-11-25 16:03:02,732 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:02,732 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:02,732 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:02,734 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:02,734 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1278]              allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1225]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1228]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1231]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s226 == true && balanceOf_ETHEREUMCASH[this][_from_s226] == old(balanceOf_ETHEREUMCASH[this][_from_s226]) - _value_s226) && balanceOf_ETHEREUMCASH[this][_to_s226] == old(balanceOf_ETHEREUMCASH[this][_to_s226]) + _value_s226) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1])) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1278]              allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1225]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1228]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1231]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s226 == true && balanceOf_ETHEREUMCASH[this][_from_s226] == old(balanceOf_ETHEREUMCASH[this][_from_s226]) - _value_s226) && balanceOf_ETHEREUMCASH[this][_to_s226] == old(balanceOf_ETHEREUMCASH[this][_to_s226]) + _value_s226) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this][p1] == old(balanceOf_ETHEREUMCASH[this][p1])) && allowance_ETHEREUMCASH[this][p2][p3] == old(allowance_ETHEREUMCASH[this][p2][p3])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:02,737 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:02,737 INFO  L82        PathProgramCache]: Analyzing trace with hash 997465065, now seen corresponding path program 1 times
[2020-11-25 16:03:02,738 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:02,797 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:03,603 WARN  L188               SmtUtils]: Spent 225.00 ms on a formula simplification. DAG size of input: 115 DAG size of output: 92
[2020-11-25 16:03:03,883 WARN  L188               SmtUtils]: Spent 242.00 ms on a formula simplification. DAG size of input: 116 DAG size of output: 93
[2020-11-25 16:03:04,067 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:04,068 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:04,068 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [24] imperfect sequences [] total 24
[2020-11-25 16:03:04,068 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:04,068 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 25 interpolants.
[2020-11-25 16:03:04,069 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=61, Invalid=539, Unknown=0, NotChecked=0, Total=600
[2020-11-25 16:03:04,069 INFO  L87              Difference]: Start difference. First operand 1560 states and 1677 transitions. cyclomatic complexity: 119 Second operand 25 states.
[2020-11-25 16:03:08,438 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:08,438 INFO  L93              Difference]: Finished difference Result 1661 states and 1820 transitions.
[2020-11-25 16:03:08,439 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 27 states. 
[2020-11-25 16:03:08,439 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1661 states and 1820 transitions.
[2020-11-25 16:03:08,444 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 16:03:08,449 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1661 states to 1661 states and 1820 transitions.
[2020-11-25 16:03:08,449 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 773
[2020-11-25 16:03:08,450 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 773
[2020-11-25 16:03:08,450 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1661 states and 1820 transitions.
[2020-11-25 16:03:08,452 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:08,452 INFO  L728         BuchiCegarLoop]: Abstraction has 1661 states and 1820 transitions.
[2020-11-25 16:03:08,453 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1661 states and 1820 transitions.
[2020-11-25 16:03:08,466 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1661 to 1632.
[2020-11-25 16:03:08,466 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1632 states.
[2020-11-25 16:03:08,468 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1632 states to 1632 states and 1759 transitions.
[2020-11-25 16:03:08,468 INFO  L751         BuchiCegarLoop]: Abstraction has 1632 states and 1759 transitions.
[2020-11-25 16:03:08,468 INFO  L631         BuchiCegarLoop]: Abstraction has 1632 states and 1759 transitions.
[2020-11-25 16:03:08,468 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:03:08,468 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1632 states and 1759 transitions.
[2020-11-25 16:03:08,471 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:03:08,471 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:08,471 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:08,472 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:08,472 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:08,475 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:08,475 INFO  L82        PathProgramCache]: Analyzing trace with hash -753012290, now seen corresponding path program 1 times
[2020-11-25 16:03:08,475 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:08,482 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:08,514 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:08,573 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:08,573 INFO  L82        PathProgramCache]: Analyzing trace with hash -1338104454, now seen corresponding path program 1 times
[2020-11-25 16:03:08,574 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:08,579 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:08,585 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:08,599 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:08,600 INFO  L82        PathProgramCache]: Analyzing trace with hash 233242141, now seen corresponding path program 1 times
[2020-11-25 16:03:08,600 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:08,616 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:08,635 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 16:03:09,054 WARN  L188               SmtUtils]: Spent 236.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 168
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 16:03:09,301 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification. DAG size of input: 123 DAG size of output: 117
[2020-11-25 16:03:09,496 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification that was a NOOP. DAG size: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 16:03:10,242 WARN  L188               SmtUtils]: Spent 733.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 217
[2020-11-25 16:03:11,377 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 273 DAG size of output: 248
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 16:03:14,860 WARN  L188               SmtUtils]: Spent 3.45 s on a formula simplification. DAG size of input: 206 DAG size of output: 180
[2020-11-25 16:03:16,179 WARN  L188               SmtUtils]: Spent 1.32 s on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 16:03:21,841 WARN  L188               SmtUtils]: Spent 5.59 s on a formula simplification. DAG size of input: 322 DAG size of output: 254
[2020-11-25 16:03:23,241 WARN  L188               SmtUtils]: Spent 1.40 s on a formula simplification that was a NOOP. DAG size: 254
Garbage collection #1: 89 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 16:03:26,997 WARN  L188               SmtUtils]: Spent 3.70 s on a formula simplification. DAG size of input: 375 DAG size of output: 185
[2020-11-25 16:03:27,005 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 16:03:27,420 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 168
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:03:27,565 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification. DAG size of input: 123 DAG size of output: 117
[2020-11-25 16:03:27,769 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification that was a NOOP. DAG size: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 16:03:28,557 WARN  L188               SmtUtils]: Spent 781.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 217
[2020-11-25 16:03:29,516 WARN  L188               SmtUtils]: Spent 956.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 248
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 16:03:29,857 WARN  L188               SmtUtils]: Spent 327.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 153
[2020-11-25 16:03:30,138 WARN  L188               SmtUtils]: Spent 279.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 16:03:30,732 WARN  L188               SmtUtils]: Spent 588.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 16:03:31,894 WARN  L188               SmtUtils]: Spent 1.16 s on a formula simplification. DAG size of input: 412 DAG size of output: 400
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 16:03:32,844 WARN  L188               SmtUtils]: Spent 921.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 208
[2020-11-25 16:03:33,334 WARN  L188               SmtUtils]: Spent 478.00 ms on a formula simplification that was a NOOP. DAG size: 304
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 16:03:35,210 WARN  L188               SmtUtils]: Spent 1.85 s on a formula simplification. DAG size of input: 302 DAG size of output: 215
[2020-11-25 16:03:36,597 WARN  L188               SmtUtils]: Spent 1.39 s on a formula simplification. DAG size of input: 313 DAG size of output: 312
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 25073 to 50131
Garbage collection #10: 50131 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 50131 to 100129
[2020-11-25 16:03:40,908 WARN  L188               SmtUtils]: Spent 4.28 s on a formula simplification. DAG size of input: 366 DAG size of output: 307
[2020-11-25 16:03:40,929 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:40,946 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:40,954 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:03:40 BasicIcfg
[2020-11-25 16:03:40,954 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:03:40,954 INFO  L168              Benchmark]: Toolchain (without parser) took 41497.63 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.8 GB). Free memory was 940.6 MB in the beginning and 2.1 GB in the end (delta: -1.1 GB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,955 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.11 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,955 INFO  L168              Benchmark]: Boogie Preprocessor took 70.88 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,955 INFO  L168              Benchmark]: UtopiaSpecLang took 51.71 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,955 INFO  L168              Benchmark]: Boogie Printer took 10.33 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,956 INFO  L168              Benchmark]: RCFGBuilder took 527.90 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,956 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.32 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,956 INFO  L168              Benchmark]: BÃ¼chi Program Product took 994.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 860.8 MB in the end (delta: 1.1 MB). Peak memory consumption was 146.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,957 INFO  L168              Benchmark]: BlockEncodingV2 took 90.42 ms. Allocated memory is still 1.1 GB. Free memory was 860.8 MB in the beginning and 826.7 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,957 INFO  L168              Benchmark]: BuchiAutomizer took 39712.78 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.8 GB). Free memory was 826.7 MB in the beginning and 2.1 GB in the end (delta: -1.2 GB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-25 16:03:40,959 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1904 locations, 3188 edges
  - StatisticsResult: Encoded RCFG
    1884 locations, 3139 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.11 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 70.88 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.71 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.33 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 527.90 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.32 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 994.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 860.8 MB in the end (delta: 1.1 MB). Peak memory consumption was 146.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 90.42 ms. Allocated memory is still 1.1 GB. Free memory was 860.8 MB in the beginning and 826.7 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 39712.78 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.8 GB). Free memory was 826.7 MB in the beginning and 2.1 GB in the end (delta: -1.2 GB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    819 locations, 991 edges
  - StatisticsResult: BuchiProgram size
    1904 locations, 3188 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 25 locations. The remainder module has 1632 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 39.6s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 33.9s. Construction of modules took 4.1s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 495 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1632 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6510 SDtfs, 4895 SDslu, 16321 SDs, 0 SdLazy, 23608 SolverSat, 1113 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639949) = (new ETHEREUMCASH)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639947, initialSupply : 115792089237316195423570985008687907853269984665640564039457584007913129639957, tokenName : 115792089237316195423570985008687907853269984665640564039457584007913129639954, tokenSymbol : 115792089237316195423570985008687907853269984665640564039457584007913129639951});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
ETHEREUMCASH(115792089237316195423570985008687907853269984665640564039457584007913129639949).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639958, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639947, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);

Loop:
ETHEREUMCASH(115792089237316195423570985008687907853269984665640564039457584007913129639949).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639956, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639947, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s226 && p1 != _to_s226) && (p2 != _from_s226 || p3 != msgsender_MSG)) && _from_s226 != _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && balanceOf_ETHEREUMCASH[this][_to_s226] + _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
