This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:13:10,568 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:13:10,569 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:13:10,579 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:13:10,579 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:13:10,580 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:13:10,580 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:13:10,582 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:13:10,583 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:13:10,584 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:13:10,585 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:13:10,585 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:13:10,585 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:13:10,586 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:13:10,587 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:13:10,587 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:13:10,588 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:13:10,589 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:13:10,590 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:13:10,591 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:13:10,592 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:13:10,593 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:13:10,594 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:13:10,595 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:13:10,595 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:13:10,595 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:13:10,595 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:13:10,596 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:13:10,596 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:13:10,596 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:13:10,597 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:13:10,597 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:13:10,598 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:13:10,598 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:13:10,599 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:13:10,599 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:13:10,600 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:13:10,600 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:13:10,600 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:13:10,601 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:13:10,601 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:13:10,601 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:13:10,608 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:13:10,609 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:13:10,609 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:13:10,609 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:13:10,610 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:13:10,610 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:13:10,610 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:13:10,611 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:13:10,611 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:13:10,612 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:13:10,612 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:13:10,612 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:13:10,633 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:13:10,647 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:13:10,649 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:13:10,650 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:13:10,650 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:13:10,650 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl
[2020-11-25 01:13:10,650 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl'
[2020-11-25 01:13:10,712 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:13:10,712 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:13:10,713 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:13:10,713 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:13:10,713 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:13:10,724 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,725 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,752 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,753 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,771 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,781 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,787 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,794 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:13:10,794 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:13:10,794 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:13:10,796 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:13:10,798 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/1) ...
[2020-11-25 01:13:10,812 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:13:10,817 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:13:10,824 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:13:10,829 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s287 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 01:13:10,832 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][msg.sender][spender_s287]==value_s287 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[value_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 01:13:10,836 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:13:10,836 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:13:10,843 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:13:10 PropertyContainer
[2020-11-25 01:13:10,843 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:13:10,843 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:13:10,843 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:13:10,843 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:13:10,844 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/2) ...
[2020-11-25 01:13:10,844 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:13:10,844 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:13:10,858 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:13:10" (2/2) ...
[2020-11-25 01:13:10,859 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:13:10,859 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:13:10,859 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:13:10,859 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:13:10,860 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/2) ...
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:13:10,898 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:13:10,898 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:13:10,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:13:10,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:13:10,900 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:13:10,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:13:10,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:13:10,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 01:13:10,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 01:13:10,901 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 01:13:10,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 01:13:10,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS
[2020-11-25 01:13:10,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:13:10,902 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BNS
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:13:10,903 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:13:10,904 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:13:10,905 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:13:10,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__success
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:13:10,907 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:13:10,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:13:10,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:13:10,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:13:10,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:13:10,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:13:10,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:13:10,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BNS
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:13:10,912 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:13:10,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:13:11,089 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:13:11,089 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:13:11,089 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:13:11,220 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:13:11,496 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:13:11,496 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 01:13:11,498 INFO  L202        PluginConnector]: Adding new model BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:13:11 BoogieIcfgContainer
[2020-11-25 01:13:11,498 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:13:10" (2/2) ...
[2020-11-25 01:13:11,498 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:13:11,499 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@8ee4027 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:13:11, skipping insertion in model container
[2020-11-25 01:13:11,499 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:13:11,499 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:13:11,499 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:13:11,500 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:13:11,501 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/3) ...
[2020-11-25 01:13:11,501 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@60c44d5d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:13:11, skipping insertion in model container
[2020-11-25 01:13:11,501 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:13:10" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:13:11,536 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:13:11 NWAContainer
[2020-11-25 01:13:11,536 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:13:11,536 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:13:11,537 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:13:11,537 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:13:11,538 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:13:11" (3/4) ...
[2020-11-25 01:13:11,539 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6e05c719 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:13:11, skipping insertion in model container
[2020-11-25 01:13:11,539 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:13:11" (4/4) ...
[2020-11-25 01:13:11,542 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:13:11,546 INFO  L110   BuchiProductObserver]: Initial RCFG 1601 locations, 2302 edges
[2020-11-25 01:13:11,546 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:13:11,557 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:13:12,811 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:13:12,816 INFO  L110   BuchiProductObserver]: BuchiProgram size 4096 locations, 7561 edges
[2020-11-25 01:13:12,817 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:13:12 BoogieIcfgContainer
[2020-11-25 01:13:12,817 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:13:12,817 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:13:12,817 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:13:12,818 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:13:12,819 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:13:12" (1/1) ...
[2020-11-25 01:13:12,904 INFO  L313           BlockEncoder]: Initial Icfg 4096 locations, 7561 edges
[2020-11-25 01:13:12,905 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:13:12,905 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:13:12,905 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:13:12,906 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:13:12,926 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 15 locations because of local infeasibility
[2020-11-25 01:13:12,933 INFO  L70        RemoveSinkStates]: Removed 68 edges and 45 locations by removing sink states
[2020-11-25 01:13:12,946 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:13:12,950 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:13:12,954 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:13:12,955 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:13:12,961 INFO  L313           BlockEncoder]: Encoded RCFG 4016 locations, 7344 edges
[2020-11-25 01:13:12,961 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:13:12 BasicIcfg
[2020-11-25 01:13:12,962 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:13:12,962 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:13:12,962 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:13:12,965 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:13:12,965 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,965 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:13:10" (1/6) ...
[2020-11-25 01:13:12,967 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2fd39355 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:13:12, skipping insertion in model container
[2020-11-25 01:13:12,967 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,967 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:13:10" (2/6) ...
[2020-11-25 01:13:12,967 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2fd39355 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:13:12, skipping insertion in model container
[2020-11-25 01:13:12,967 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:13:11" (3/6) ...
[2020-11-25 01:13:12,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2fd39355 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:13:12, skipping insertion in model container
[2020-11-25 01:13:12,968 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:13:11" (4/6) ...
[2020-11-25 01:13:12,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2fd39355 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:13:12, skipping insertion in model container
[2020-11-25 01:13:12,968 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:13:12" (5/6) ...
[2020-11-25 01:13:12,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2fd39355 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:13:12, skipping insertion in model container
[2020-11-25 01:13:12,969 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:13:12,969 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:13:12" (6/6) ...
[2020-11-25 01:13:12,970 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_approve.bpl_BEv2
[2020-11-25 01:13:13,003 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:13:13,003 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:13:13,003 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:13:13,003 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:13:13,003 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:13:13,003 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:13:13,003 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:13:13,003 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:13:13,003 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:13:13,034 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4016 states.
[2020-11-25 01:13:13,083 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,083 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:13,083 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:13,091 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:13,091 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:13,091 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:13:13,091 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4016 states.
[2020-11-25 01:13:13,111 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,111 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:13,111 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:13,112 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:13,112 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND TRUE   choice == 13
[L4465]              gas := gas - 21000;
[L4466]  COND FALSE  !(gas >= 0)
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:13,125 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:13,125 INFO  L82        PathProgramCache]: Analyzing trace with hash 1704519689, now seen corresponding path program 1 times
[2020-11-25 01:13:13,129 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:13,148 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:13:13,184 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:13:13,186 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:13:13,186 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:13:13,190 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:13:13,412 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:13:13,412 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:13:13,413 INFO  L87              Difference]: Start difference. First operand 4016 states. Second operand 3 states.
[2020-11-25 01:13:13,568 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:13:13,568 INFO  L93              Difference]: Finished difference Result 2412 states and 2903 transitions.
[2020-11-25 01:13:13,568 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:13:13,569 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2412 states and 2903 transitions.
[2020-11-25 01:13:13,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,607 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2412 states to 2412 states and 2903 transitions.
[2020-11-25 01:13:13,608 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:13:13,610 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 604
[2020-11-25 01:13:13,611 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2412 states and 2903 transitions.
[2020-11-25 01:13:13,620 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:13:13,621 INFO  L728         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:13:13,634 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2412 states and 2903 transitions.
[2020-11-25 01:13:13,672 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2412 to 2412.
[2020-11-25 01:13:13,673 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2412 states.
[2020-11-25 01:13:13,677 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2412 states to 2412 states and 2903 transitions.
[2020-11-25 01:13:13,677 INFO  L751         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:13:13,677 INFO  L631         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:13:13,678 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:13:13,678 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2412 states and 2903 transitions.
[2020-11-25 01:13:13,683 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,683 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:13,683 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:13,685 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:13,685 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:13,689 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:13,689 INFO  L82        PathProgramCache]: Analyzing trace with hash -212099348, now seen corresponding path program 1 times
[2020-11-25 01:13:13,690 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:13,702 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:13:13,724 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:13:13,724 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:13:13,724 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:13:13,726 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:13:13,726 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:13:13,726 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:13:13,726 INFO  L87              Difference]: Start difference. First operand 2412 states and 2903 transitions. cyclomatic complexity: 493 Second operand 3 states.
[2020-11-25 01:13:13,809 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:13:13,809 INFO  L93              Difference]: Finished difference Result 3266 states and 3959 transitions.
[2020-11-25 01:13:13,809 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:13:13,809 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3266 states and 3959 transitions.
[2020-11-25 01:13:13,821 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:13:13,835 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3266 states to 3266 states and 3959 transitions.
[2020-11-25 01:13:13,835 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 847
[2020-11-25 01:13:13,836 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 847
[2020-11-25 01:13:13,836 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3266 states and 3959 transitions.
[2020-11-25 01:13:13,842 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:13:13,842 INFO  L728         BuchiCegarLoop]: Abstraction has 3266 states and 3959 transitions.
[2020-11-25 01:13:13,845 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3266 states and 3959 transitions.
[2020-11-25 01:13:13,872 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3266 to 2772.
[2020-11-25 01:13:13,872 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2772 states.
[2020-11-25 01:13:13,876 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2772 states to 2772 states and 3363 transitions.
[2020-11-25 01:13:13,876 INFO  L751         BuchiCegarLoop]: Abstraction has 2772 states and 3363 transitions.
[2020-11-25 01:13:13,876 INFO  L631         BuchiCegarLoop]: Abstraction has 2772 states and 3363 transitions.
[2020-11-25 01:13:13,876 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:13:13,876 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2772 states and 3363 transitions.
[2020-11-25 01:13:13,881 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,881 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:13,881 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:13,883 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:13,883 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND TRUE   !(account_s464 != null)
[L2332]              revert := true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:13,887 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:13,887 INFO  L82        PathProgramCache]: Analyzing trace with hash 48306933, now seen corresponding path program 1 times
[2020-11-25 01:13:13,888 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:13,899 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:13:13,946 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 28 refuted. 0 times theorem prover too weak. 91 trivial. 0 not checked.
[2020-11-25 01:13:13,947 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:13:13,947 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:13:13,947 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:13:13,947 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:13:13,947 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:13:13,948 INFO  L87              Difference]: Start difference. First operand 2772 states and 3363 transitions. cyclomatic complexity: 593 Second operand 7 states.
[2020-11-25 01:13:13,982 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:13:13,982 INFO  L93              Difference]: Finished difference Result 2780 states and 3370 transitions.
[2020-11-25 01:13:13,982 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:13:13,982 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2780 states and 3370 transitions.
[2020-11-25 01:13:13,989 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:13,998 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2780 states to 2771 states and 3361 transitions.
[2020-11-25 01:13:13,998 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 716
[2020-11-25 01:13:13,999 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 716
[2020-11-25 01:13:13,999 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2771 states and 3361 transitions.
[2020-11-25 01:13:14,001 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:13:14,001 INFO  L728         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:13:14,003 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2771 states and 3361 transitions.
[2020-11-25 01:13:14,023 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2771 to 2771.
[2020-11-25 01:13:14,024 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2771 states.
[2020-11-25 01:13:14,027 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2771 states to 2771 states and 3361 transitions.
[2020-11-25 01:13:14,027 INFO  L751         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:13:14,027 INFO  L631         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:13:14,027 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:13:14,027 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2771 states and 3361 transitions.
[2020-11-25 01:13:14,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:14,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:14,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:14,036 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:14,036 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND TRUE   !(c_s174 >= a_s174)
[L1829]              revert := true;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND TRUE   revert
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND TRUE   !(spender_s546 != null)
[L2424]              revert := true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND TRUE   revert
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:14,039 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:14,039 INFO  L82        PathProgramCache]: Analyzing trace with hash -1575230065, now seen corresponding path program 1 times
[2020-11-25 01:13:14,040 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:14,050 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:13:14,106 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-25 01:13:14,106 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:13:14,106 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:13:14,106 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:13:14,106 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:13:14,107 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:13:14,107 INFO  L87              Difference]: Start difference. First operand 2771 states and 3361 transitions. cyclomatic complexity: 592 Second operand 3 states.
[2020-11-25 01:13:14,162 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:13:14,162 INFO  L93              Difference]: Finished difference Result 3265 states and 3789 transitions.
[2020-11-25 01:13:14,163 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:13:14,163 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3265 states and 3789 transitions.
[2020-11-25 01:13:14,173 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:13:14,185 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3265 states to 2992 states and 3455 transitions.
[2020-11-25 01:13:14,185 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 761
[2020-11-25 01:13:14,186 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 793
[2020-11-25 01:13:14,186 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2992 states and 3455 transitions.
[2020-11-25 01:13:14,189 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:13:14,196 INFO  L728         BuchiCegarLoop]: Abstraction has 2992 states and 3455 transitions.
[2020-11-25 01:13:14,198 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2992 states and 3455 transitions.
[2020-11-25 01:13:14,215 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2992 to 2566.
[2020-11-25 01:13:14,215 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2566 states.
[2020-11-25 01:13:14,218 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2566 states to 2566 states and 2927 transitions.
[2020-11-25 01:13:14,218 INFO  L751         BuchiCegarLoop]: Abstraction has 2566 states and 2927 transitions.
[2020-11-25 01:13:14,218 INFO  L631         BuchiCegarLoop]: Abstraction has 2566 states and 2927 transitions.
[2020-11-25 01:13:14,218 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:13:14,218 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2566 states and 2927 transitions.
[2020-11-25 01:13:14,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:13:14,221 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:14,221 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:14,222 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:14,223 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND FALSE  !(!(spender_s546 != null))
[L2427]              __var_14 := null;
[L2428]  COND FALSE  !(!(owner_s546 != null))
[L2432]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2433]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2434]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2435]              assert { :EventEmitted "Approval_ERC20" } true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND FALSE  !(revert)
[L2034]              __ret_0_ := true;
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND FALSE  !(__exception)
[L480]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2016]  COND TRUE   DType[this] == BNS
[L2017]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2422]              __var_13 := null;
[L2423]  COND FALSE  !(!(spender_s546 != null))
[L2427]              __var_14 := null;
[L2428]  COND FALSE  !(!(owner_s546 != null))
[L2432]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2433]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2434]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2435]              assert { :EventEmitted "Approval_ERC20" } true;
[L2017]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2018]  COND FALSE  !(revert)
[L2034]              __ret_0_ := true;
[L480]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L481]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:14,226 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:14,226 INFO  L82        PathProgramCache]: Analyzing trace with hash 1148136946, now seen corresponding path program 1 times
[2020-11-25 01:13:14,227 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:14,255 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:13:14,426 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 8 proven. 0 refuted. 0 times theorem prover too weak. 116 trivial. 0 not checked.
[2020-11-25 01:13:14,426 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:13:14,426 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 01:13:14,427 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:13:14,427 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 01:13:14,427 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-25 01:13:14,427 INFO  L87              Difference]: Start difference. First operand 2566 states and 2927 transitions. cyclomatic complexity: 363 Second operand 16 states.
[2020-11-25 01:13:16,124 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:13:16,125 INFO  L93              Difference]: Finished difference Result 2709 states and 3092 transitions.
[2020-11-25 01:13:16,125 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 01:13:16,125 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2709 states and 3092 transitions.
[2020-11-25 01:13:16,130 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 01:13:16,138 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2709 states to 2709 states and 3092 transitions.
[2020-11-25 01:13:16,138 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 749
[2020-11-25 01:13:16,139 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 749
[2020-11-25 01:13:16,139 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2709 states and 3092 transitions.
[2020-11-25 01:13:16,141 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:13:16,141 INFO  L728         BuchiCegarLoop]: Abstraction has 2709 states and 3092 transitions.
[2020-11-25 01:13:16,143 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2709 states and 3092 transitions.
[2020-11-25 01:13:16,164 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2709 to 2680.
[2020-11-25 01:13:16,164 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2680 states.
[2020-11-25 01:13:16,168 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2680 states to 2680 states and 3054 transitions.
[2020-11-25 01:13:16,168 INFO  L751         BuchiCegarLoop]: Abstraction has 2680 states and 3054 transitions.
[2020-11-25 01:13:16,168 INFO  L631         BuchiCegarLoop]: Abstraction has 2680 states and 3054 transitions.
[2020-11-25 01:13:16,168 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:13:16,168 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2680 states and 3054 transitions.
[2020-11-25 01:13:16,172 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 01:13:16,173 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:13:16,173 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:13:16,174 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:13:16,174 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND TRUE   __exception
[L460]               __tmp__Balance := Balance;
[L461]               __tmp__DType := DType;
[L462]               __tmp__Alloc := Alloc;
[L463]               __tmp__balance_ADDR := balance_ADDR;
[L464]               __tmp__M_Ref_int := M_Ref_int;
[L465]               __tmp__sum__balances0 := sum__balances0;
[L466]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L467]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L468]               __tmp__sum__allowed1 := sum__allowed1;
[L469]               __tmp__Length := Length;
[L470]               __tmp__now := now;
[L471]               __tmp___balances_ERC20 := _balances_ERC20;
[L472]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L473]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L474]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L475]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L476]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L477]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1992]  COND TRUE   __tmp__DType[this] == BNS
[L1993]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2403]              __var_13 := null;
[L2404]  COND TRUE   !(spender_s546 != null)
[L2405]              revert := true;
[L1993]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1994]  COND TRUE   revert
[L477]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L478]               assume revert || gas < 0;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND TRUE   choice == 12
[L4472]              gas := gas - 21000;
[L4473]  COND TRUE   gas >= 0
[L4474]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4475]              assume msgvalue_MSG == 0;
[L4476]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L457]               havoc __exception;
[L458]               revert := false;
[L459]   COND TRUE   __exception
[L460]               __tmp__Balance := Balance;
[L461]               __tmp__DType := DType;
[L462]               __tmp__Alloc := Alloc;
[L463]               __tmp__balance_ADDR := balance_ADDR;
[L464]               __tmp__M_Ref_int := M_Ref_int;
[L465]               __tmp__sum__balances0 := sum__balances0;
[L466]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L467]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L468]               __tmp__sum__allowed1 := sum__allowed1;
[L469]               __tmp__Length := Length;
[L470]               __tmp__now := now;
[L471]               __tmp___balances_ERC20 := _balances_ERC20;
[L472]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L473]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L474]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L475]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L476]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L477]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1992]  COND TRUE   __tmp__DType[this] == BNS
[L1993]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2403]              __var_13 := null;
[L2404]  COND TRUE   !(spender_s546 != null)
[L2405]              revert := true;
[L1993]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1994]  COND TRUE   revert
[L477]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L478]               assume revert || gas < 0;
[L4476]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:13:16,177 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:16,177 INFO  L82        PathProgramCache]: Analyzing trace with hash 2074334070, now seen corresponding path program 1 times
[2020-11-25 01:13:16,178 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:16,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:16,203 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:16,265 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:16,266 INFO  L82        PathProgramCache]: Analyzing trace with hash -1623494103, now seen corresponding path program 1 times
[2020-11-25 01:13:16,266 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:16,269 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:16,273 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:16,281 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:13:16,281 INFO  L82        PathProgramCache]: Analyzing trace with hash -152372386, now seen corresponding path program 1 times
[2020-11-25 01:13:16,282 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:13:16,298 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:16,313 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 01:13:16,851 WARN  L188               SmtUtils]: Spent 274.00 ms on a formula simplification. DAG size of input: 171 DAG size of output: 171
[2020-11-25 01:13:17,285 WARN  L188               SmtUtils]: Spent 431.00 ms on a formula simplification. DAG size of input: 222 DAG size of output: 217
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 01:13:17,426 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification. DAG size of input: 134 DAG size of output: 128
[2020-11-25 01:13:17,560 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 267
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-25 01:13:17,839 WARN  L188               SmtUtils]: Spent 272.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 214
[2020-11-25 01:13:17,974 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 214
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 01:13:18,055 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 01:13:18,568 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 191
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-25 01:13:19,138 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification. DAG size of input: 171 DAG size of output: 171
[2020-11-25 01:13:19,577 WARN  L188               SmtUtils]: Spent 437.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 217
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 01:13:19,839 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification that was a NOOP. DAG size: 267
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 01:13:20,051 WARN  L188               SmtUtils]: Spent 207.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 214
[2020-11-25 01:13:20,647 WARN  L188               SmtUtils]: Spent 593.00 ms on a formula simplification. DAG size of input: 382 DAG size of output: 375
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 01:13:20,829 WARN  L188               SmtUtils]: Spent 171.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 163
[2020-11-25 01:13:20,957 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 256
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 01:13:21,287 WARN  L188               SmtUtils]: Spent 324.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 180
[2020-11-25 01:13:21,582 WARN  L188               SmtUtils]: Spent 294.00 ms on a formula simplification. DAG size of input: 275 DAG size of output: 274
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-25 01:13:22,003 WARN  L188               SmtUtils]: Spent 406.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 269
[2020-11-25 01:13:22,019 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:22,034 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:13:22,042 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:13:22 BasicIcfg
[2020-11-25 01:13:22,042 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:13:22,043 INFO  L168              Benchmark]: Toolchain (without parser) took 11330.73 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 955.3 MB). Free memory was 935.2 MB in the beginning and 1.5 GB in the end (delta: -610.9 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,043 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.12 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,043 INFO  L168              Benchmark]: Boogie Preprocessor took 81.47 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,044 INFO  L168              Benchmark]: UtopiaSpecLang took 48.48 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,044 INFO  L168              Benchmark]: Boogie Printer took 15.63 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,045 INFO  L168              Benchmark]: RCFGBuilder took 639.99 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 779.4 MB in the end (delta: 128.8 MB). Peak memory consumption was 128.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,045 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.27 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,045 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1280.38 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 191.9 MB). Free memory was 775.8 MB in the beginning and 925.8 MB in the end (delta: -149.9 MB). Peak memory consumption was 156.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,046 INFO  L168              Benchmark]: BlockEncodingV2 took 144.63 ms. Allocated memory is still 1.2 GB. Free memory was 925.8 MB in the beginning and 851.6 MB in the end (delta: 74.2 MB). Peak memory consumption was 74.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,046 INFO  L168              Benchmark]: BuchiAutomizer took 9080.40 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 763.4 MB). Free memory was 851.6 MB in the beginning and 1.5 GB in the end (delta: -694.5 MB). Peak memory consumption was 742.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:13:22,049 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4096 locations, 7561 edges
  - StatisticsResult: Encoded RCFG
    4016 locations, 7344 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.12 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 81.47 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.48 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.63 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 639.99 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 779.4 MB in the end (delta: 128.8 MB). Peak memory consumption was 128.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.27 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1280.38 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 191.9 MB). Free memory was 775.8 MB in the beginning and 925.8 MB in the end (delta: -149.9 MB). Peak memory consumption was 156.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 144.63 ms. Allocated memory is still 1.2 GB. Free memory was 925.8 MB in the beginning and 851.6 MB in the end (delta: 74.2 MB). Peak memory consumption was 74.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9080.40 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 763.4 MB). Free memory was 851.6 MB in the beginning and 1.5 GB in the end (delta: -694.5 MB). Peak memory consumption was 742.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1601 locations, 2302 edges
  - StatisticsResult: BuchiProgram size
    4096 locations, 7561 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 16 locations. The remainder module has 2680 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.0s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 6.3s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 949 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2772 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14941 SDtfs, 8562 SDslu, 29203 SDs, 0 SdLazy, 23981 SolverSat, 2054 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(250000000000000016) = (new BNS)({from : 250000000000000006});
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
ERC20(250000000000000016).approve~address~uint256.gas(3979002)({from : 250000000000000011, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L457]              havoc __exception;
[L458]              revert := false;
[L459]   COND TRUE  __exception
[L460]              __tmp__Balance := Balance;
[L461]              __tmp__DType := DType;
[L462]              __tmp__Alloc := Alloc;
[L463]              __tmp__balance_ADDR := balance_ADDR;
[L464]              __tmp__M_Ref_int := M_Ref_int;
[L465]              __tmp__sum__balances0 := sum__balances0;
[L466]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L467]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L468]              __tmp__sum__allowed1 := sum__allowed1;
[L469]              __tmp__Length := Length;
[L470]              __tmp__now := now;
[L471]              __tmp___balances_ERC20 := _balances_ERC20;
[L472]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L473]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L474]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L475]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L476]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L477]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1992]  COND TRUE  __tmp__DType[this] == BNS
[L1993]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2403]             __var_13 := null;
[L2404]  COND TRUE  !(spender_s546 != null)
[L2405]             revert := true;
[L1993]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1994]  COND TRUE  revert
[L477]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L478]              assume revert || gas < 0;
[L4476]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);

Loop:
ERC20(250000000000000016).approve~address~uint256.gas(3979001)({from : 250000000000000008, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L457]              havoc __exception;
[L458]              revert := false;
[L459]   COND TRUE  __exception
[L460]              __tmp__Balance := Balance;
[L461]              __tmp__DType := DType;
[L462]              __tmp__Alloc := Alloc;
[L463]              __tmp__balance_ADDR := balance_ADDR;
[L464]              __tmp__M_Ref_int := M_Ref_int;
[L465]              __tmp__sum__balances0 := sum__balances0;
[L466]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L467]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L468]              __tmp__sum__allowed1 := sum__allowed1;
[L469]              __tmp__Length := Length;
[L470]              __tmp__now := now;
[L471]              __tmp___balances_ERC20 := _balances_ERC20;
[L472]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L473]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L474]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L475]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L476]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L477]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1992]  COND TRUE  __tmp__DType[this] == BNS
[L1993]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2403]             __var_13 := null;
[L2404]  COND TRUE  !(spender_s546 != null)
[L2405]             revert := true;
[L1993]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1994]  COND TRUE  revert
[L477]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L478]              assume revert || gas < 0;
[L4476]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
