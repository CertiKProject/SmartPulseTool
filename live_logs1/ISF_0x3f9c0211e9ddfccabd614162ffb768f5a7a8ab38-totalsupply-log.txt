This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:15:31,322 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:15:31,324 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:15:31,334 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:15:31,335 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:15:31,335 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:15:31,336 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:15:31,338 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:15:31,340 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:15:31,340 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:15:31,341 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:15:31,341 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:15:31,342 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:15:31,343 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:15:31,344 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:15:31,344 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:15:31,345 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:15:31,346 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:15:31,348 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:15:31,349 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:15:31,350 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:15:31,350 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:15:31,352 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:15:31,352 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:15:31,353 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:15:31,353 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:15:31,353 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:15:31,354 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:15:31,354 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:15:31,354 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:15:31,355 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:15:31,355 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:15:31,356 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:15:31,356 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:15:31,357 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:15:31,357 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:15:31,358 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:15:31,358 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:15:31,358 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:15:31,359 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:15:31,359 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:15:31,359 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:15:31,367 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:15:31,368 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:15:31,369 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:15:31,369 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:15:31,369 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:15:31,370 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:15:31,370 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:15:31,370 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:15:31,370 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:15:31,370 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:15:31,371 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:15:31,371 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:15:31,371 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:15:31,371 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:15:31,371 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:15:31,371 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:15:31,372 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:15:31,373 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:15:31,373 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:15:31,373 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:15:31,405 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:15:31,420 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:15:31,423 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:15:31,424 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:15:31,424 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:15:31,425 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl
[2020-11-25 18:15:31,425 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl'
[2020-11-25 18:15:31,523 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:15:31,524 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:15:31,524 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:15:31,524 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:15:31,524 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:15:31,541 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,543 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,585 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,586 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,614 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,630 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,640 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,653 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:15:31,653 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:15:31,654 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:15:31,656 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:15:31,659 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/1) ...
[2020-11-25 18:15:31,678 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:31,683 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:31,691 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:31,697 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_ERC20[this]>=0 && _totalSupply_ERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 18:15:31,699 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==_totalSupply_ERC20[this] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && _name_ERC20DetailedChangeable[this]==( old(_name_ERC20DetailedChangeable[this]) ) ) && _symbol_ERC20DetailedChangeable[this]==( old(_symbol_ERC20DetailedChangeable[this]) ) ) && _decimals_ERC20DetailedChangeable[this]==( old(_decimals_ERC20DetailedChangeable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_ERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]]
[2020-11-25 18:15:31,705 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:31,706 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_ERC200) ==> ( <>AP(success_totalSupply_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:15:31,718 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:31 PropertyContainer
[2020-11-25 18:15:31,718 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:15:31,718 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:15:31,718 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:15:31,719 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:15:31,719 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/2) ...
[2020-11-25 18:15:31,720 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:15:31,720 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:15:31,741 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:31" (2/2) ...
[2020-11-25 18:15:31,741 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:15:31,741 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:15:31,741 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:15:31,742 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:15:31,742 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/2) ...
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 18:15:31,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 18:15:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:15:31,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:15:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:15:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 18:15:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 18:15:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 18:15:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 18:15:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 18:15:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 18:15:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 18:15:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 18:15:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 18:15:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 18:15:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 18:15:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 18:15:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 18:15:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 18:15:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable
[2020-11-25 18:15:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 18:15:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected_NoBaseCtor__success
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected
[2020-11-25 18:15:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Protected__success
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected
[2020-11-25 18:15:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected
[2020-11-25 18:15:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected
[2020-11-25 18:15:31,804 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable
[2020-11-25 18:15:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF_NoBaseCtor__success
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF
[2020-11-25 18:15:31,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF
[2020-11-25 18:15:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Protected
[2020-11-25 18:15:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Protected
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20DetailedChangeable
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20DetailedChangeable
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ISF
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 18:15:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 18:15:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__success
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__fail
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 18:15:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected_NoBaseCtor__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected__success
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Protected__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected__success
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected__success
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF_NoBaseCtor__fail
[2020-11-25 18:15:31,813 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF__success
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF__success
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF__success
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF__success
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:15:31,814 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:15:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 18:15:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 18:15:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 18:15:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__fail
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__success
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected_NoBaseCtor__fail
[2020-11-25 18:15:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected_NoBaseCtor__success
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected__fail
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected__success
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Protected__fail
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Protected__success
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected__success
[2020-11-25 18:15:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected__success
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__fail
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:31,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF_NoBaseCtor__fail
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF_NoBaseCtor__success
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF__fail
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF__success
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF__fail
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF__success
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF__fail
[2020-11-25 18:15:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF__success
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF__fail
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF__success
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:15:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 18:15:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Protected
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Protected
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20DetailedChangeable
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20DetailedChangeable
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ISF
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:15:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:15:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:15:32,031 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:32,031 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:32,032 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:32,692 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:15:32,693 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-25 18:15:32,695 INFO  L202        PluginConnector]: Adding new model ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:32 BoogieIcfgContainer
[2020-11-25 18:15:32,695 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:31" (2/2) ...
[2020-11-25 18:15:32,695 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:15:32,695 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3b16da05 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:32, skipping insertion in model container
[2020-11-25 18:15:32,696 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:15:32,696 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:15:32,696 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:15:32,697 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:15:32,697 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/3) ...
[2020-11-25 18:15:32,698 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@42823253 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:32, skipping insertion in model container
[2020-11-25 18:15:32,698 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:15:32,733 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:32 NWAContainer
[2020-11-25 18:15:32,733 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:15:32,733 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:15:32,733 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:15:32,734 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:15:32,735 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:32" (3/4) ...
[2020-11-25 18:15:32,736 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5d14132 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:32, skipping insertion in model container
[2020-11-25 18:15:32,736 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:32" (4/4) ...
[2020-11-25 18:15:32,739 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:15:32,744 INFO  L110   BuchiProductObserver]: Initial RCFG 2327 locations, 3364 edges
[2020-11-25 18:15:32,744 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:15:32,756 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:15:34,316 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:15:34,324 INFO  L110   BuchiProductObserver]: BuchiProgram size 5978 locations, 11096 edges
[2020-11-25 18:15:34,324 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:34 BoogieIcfgContainer
[2020-11-25 18:15:34,324 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:15:34,324 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:15:34,325 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:15:34,326 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:15:34,326 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:34" (1/1) ...
[2020-11-25 18:15:34,438 INFO  L313           BlockEncoder]: Initial Icfg 5978 locations, 11096 edges
[2020-11-25 18:15:34,438 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:15:34,439 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:15:34,439 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:15:34,439 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:15:34,453 INFO  L70    emoveInfeasibleEdges]: Removed 147 edges and 17 locations because of local infeasibility
[2020-11-25 18:15:34,464 INFO  L70        RemoveSinkStates]: Removed 74 edges and 49 locations by removing sink states
[2020-11-25 18:15:34,478 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:15:34,482 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:15:34,486 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:15:34,487 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:15:34,490 INFO  L313           BlockEncoder]: Encoded RCFG 5880 locations, 10828 edges
[2020-11-25 18:15:34,491 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:34 BasicIcfg
[2020-11-25 18:15:34,491 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:15:34,491 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:15:34,491 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:15:34,493 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:15:34,493 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,493 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:31" (1/6) ...
[2020-11-25 18:15:34,494 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@24d5aba6 and model type ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:34, skipping insertion in model container
[2020-11-25 18:15:34,494 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:31" (2/6) ...
[2020-11-25 18:15:34,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@24d5aba6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:34, skipping insertion in model container
[2020-11-25 18:15:34,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:32" (3/6) ...
[2020-11-25 18:15:34,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@24d5aba6 and model type ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:15:34, skipping insertion in model container
[2020-11-25 18:15:34,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:32" (4/6) ...
[2020-11-25 18:15:34,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@24d5aba6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:34, skipping insertion in model container
[2020-11-25 18:15:34,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,496 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:34" (5/6) ...
[2020-11-25 18:15:34,496 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@24d5aba6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:15:34, skipping insertion in model container
[2020-11-25 18:15:34,496 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:34,496 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:34" (6/6) ...
[2020-11-25 18:15:34,497 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_totalsupply.bpl_BEv2
[2020-11-25 18:15:34,530 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:15:34,530 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:15:34,530 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:15:34,530 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:15:34,530 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:15:34,530 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:15:34,530 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:15:34,530 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:15:34,531 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:15:34,575 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5880 states.
[2020-11-25 18:15:34,632 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:34,632 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:34,632 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:34,639 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:34,639 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:34,639 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:15:34,639 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5880 states.
[2020-11-25 18:15:34,662 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:34,662 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:34,662 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:34,664 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:34,665 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND TRUE   revert
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND TRUE   choice == 19
[L6301]              gas := gas - 21000;
[L6302]  COND FALSE  !(gas >= 0)
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:34,679 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:34,679 INFO  L82        PathProgramCache]: Analyzing trace with hash 1889418797, now seen corresponding path program 1 times
[2020-11-25 18:15:34,684 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:34,704 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:34,749 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:15:34,751 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:34,751 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:15:35,106 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:35,120 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:15:35,121 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:15:35,122 INFO  L87              Difference]: Start difference. First operand 5880 states. Second operand 4 states.
[2020-11-25 18:15:35,630 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:35,630 INFO  L93              Difference]: Finished difference Result 3290 states and 3913 transitions.
[2020-11-25 18:15:35,630 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:15:35,631 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3290 states and 3913 transitions.
[2020-11-25 18:15:35,652 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:35,677 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3290 states to 3290 states and 3913 transitions.
[2020-11-25 18:15:35,678 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 18:15:35,682 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1109
[2020-11-25 18:15:35,683 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3290 states and 3913 transitions.
[2020-11-25 18:15:35,694 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:35,694 INFO  L728         BuchiCegarLoop]: Abstraction has 3290 states and 3913 transitions.
[2020-11-25 18:15:35,712 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3290 states and 3913 transitions.
[2020-11-25 18:15:35,766 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3290 to 3290.
[2020-11-25 18:15:35,766 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3290 states.
[2020-11-25 18:15:35,773 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3290 states to 3290 states and 3913 transitions.
[2020-11-25 18:15:35,774 INFO  L751         BuchiCegarLoop]: Abstraction has 3290 states and 3913 transitions.
[2020-11-25 18:15:35,774 INFO  L631         BuchiCegarLoop]: Abstraction has 3290 states and 3913 transitions.
[2020-11-25 18:15:35,774 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:15:35,774 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3290 states and 3913 transitions.
[2020-11-25 18:15:35,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:35,781 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:35,781 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:35,783 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:35,783 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND TRUE   revert
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:35,787 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:35,787 INFO  L82        PathProgramCache]: Analyzing trace with hash 1637807316, now seen corresponding path program 1 times
[2020-11-25 18:15:35,788 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:35,796 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:35,816 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:15:35,816 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:35,816 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:15:35,817 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:35,817 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:15:35,817 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:15:35,817 INFO  L87              Difference]: Start difference. First operand 3290 states and 3913 transitions. cyclomatic complexity: 625 Second operand 3 states.
[2020-11-25 18:15:35,901 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:35,901 INFO  L93              Difference]: Finished difference Result 4328 states and 5183 transitions.
[2020-11-25 18:15:35,902 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:15:35,902 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4328 states and 5183 transitions.
[2020-11-25 18:15:35,916 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:35,932 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4328 states to 4328 states and 5183 transitions.
[2020-11-25 18:15:35,932 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1480
[2020-11-25 18:15:35,933 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1480
[2020-11-25 18:15:35,934 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4328 states and 5183 transitions.
[2020-11-25 18:15:35,939 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:35,939 INFO  L728         BuchiCegarLoop]: Abstraction has 4328 states and 5183 transitions.
[2020-11-25 18:15:35,942 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4328 states and 5183 transitions.
[2020-11-25 18:15:35,976 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4328 to 3698.
[2020-11-25 18:15:35,977 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3698 states.
[2020-11-25 18:15:35,981 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3698 states to 3698 states and 4409 transitions.
[2020-11-25 18:15:35,981 INFO  L751         BuchiCegarLoop]: Abstraction has 3698 states and 4409 transitions.
[2020-11-25 18:15:35,981 INFO  L631         BuchiCegarLoop]: Abstraction has 3698 states and 4409 transitions.
[2020-11-25 18:15:35,981 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:15:35,981 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3698 states and 4409 transitions.
[2020-11-25 18:15:35,988 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:35,988 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:35,988 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:35,991 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:35,991 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L4048]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L4048]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(revert)
[L4052]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L4052]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4053]  COND FALSE  !(revert)
[L4056]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3880]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3880]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3881]  COND FALSE  !(revert)
[L3884]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3884]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3885]  COND FALSE  !(revert)
[L3888]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L3888]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3889]  COND FALSE  !(revert)
[L3892]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3847]              assume msgsender_MSG != null;
[L3848]              Balance[this] := 0;
[L3849]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3850]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3853]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3854]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3855]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3892]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3893]  COND FALSE  !(revert)
[L4056]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4057]  COND FALSE  !(revert)
[L4060]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  COND FALSE  !(revert)
[L3690]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3690]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3691]  COND FALSE  !(revert)
[L3694]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3694]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3695]  COND FALSE  !(revert)
[L4060]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4061]  COND FALSE  !(revert)
[L4064]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]              assume msgsender_MSG != null;
[L3997]              Balance[this] := 0;
[L3998]              DECIMALS_ISF[this] := 18;
[L3999]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4000]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4002]  COND TRUE   DType[this] == ISF
[L4003]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3275]              __var_7 := null;
[L3276]  COND TRUE   !(account_s464 != null)
[L3277]              revert := true;
[L4003]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4004]  COND TRUE   revert
[L4064]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:35,996 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:35,996 INFO  L82        PathProgramCache]: Analyzing trace with hash -145433561, now seen corresponding path program 1 times
[2020-11-25 18:15:35,997 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:36,017 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:36,091 INFO  L134       CoverageAnalysis]: Checked inductivity of 220 backedges. 0 proven. 35 refuted. 0 times theorem prover too weak. 185 trivial. 0 not checked.
[2020-11-25 18:15:36,091 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 18:15:36,092 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 18:15:36,092 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:36,092 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 18:15:36,092 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 18:15:36,093 INFO  L87              Difference]: Start difference. First operand 3698 states and 4409 transitions. cyclomatic complexity: 713 Second operand 7 states.
[2020-11-25 18:15:36,175 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:36,176 INFO  L93              Difference]: Finished difference Result 3706 states and 4416 transitions.
[2020-11-25 18:15:36,176 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 18:15:36,176 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3706 states and 4416 transitions.
[2020-11-25 18:15:36,183 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:36,194 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3706 states to 3697 states and 4407 transitions.
[2020-11-25 18:15:36,194 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1265
[2020-11-25 18:15:36,194 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1265
[2020-11-25 18:15:36,194 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3697 states and 4407 transitions.
[2020-11-25 18:15:36,198 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:36,198 INFO  L728         BuchiCegarLoop]: Abstraction has 3697 states and 4407 transitions.
[2020-11-25 18:15:36,201 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3697 states and 4407 transitions.
[2020-11-25 18:15:36,229 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3697 to 3697.
[2020-11-25 18:15:36,230 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3697 states.
[2020-11-25 18:15:36,234 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3697 states to 3697 states and 4407 transitions.
[2020-11-25 18:15:36,234 INFO  L751         BuchiCegarLoop]: Abstraction has 3697 states and 4407 transitions.
[2020-11-25 18:15:36,234 INFO  L631         BuchiCegarLoop]: Abstraction has 3697 states and 4407 transitions.
[2020-11-25 18:15:36,234 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:15:36,234 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3697 states and 4407 transitions.
[2020-11-25 18:15:36,239 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:36,239 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:36,239 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:36,241 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:36,241 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L4048]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L4048]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(revert)
[L4052]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L4052]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4053]  COND FALSE  !(revert)
[L4056]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3880]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3880]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3881]  COND FALSE  !(revert)
[L3884]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3884]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3885]  COND FALSE  !(revert)
[L3888]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L3888]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3889]  COND FALSE  !(revert)
[L3892]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3847]              assume msgsender_MSG != null;
[L3848]              Balance[this] := 0;
[L3849]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3850]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3853]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3854]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3855]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3892]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3893]  COND FALSE  !(revert)
[L4056]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4057]  COND FALSE  !(revert)
[L4060]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  COND FALSE  !(revert)
[L3690]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3690]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3691]  COND FALSE  !(revert)
[L3694]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3694]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3695]  COND FALSE  !(revert)
[L4060]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4061]  COND FALSE  !(revert)
[L4064]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]              assume msgsender_MSG != null;
[L3997]              Balance[this] := 0;
[L3998]              DECIMALS_ISF[this] := 18;
[L3999]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4000]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4002]  COND TRUE   DType[this] == ISF
[L4003]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3275]              __var_7 := null;
[L3276]  COND FALSE  !(!(account_s464 != null))
[L3280]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2712]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2713]  COND TRUE   !(c_s174 >= a_s174)
[L2714]              revert := true;
[L3280]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3281]  COND TRUE   revert
[L4003]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4004]  COND TRUE   revert
[L4064]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:36,248 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:36,248 INFO  L82        PathProgramCache]: Analyzing trace with hash -732490847, now seen corresponding path program 1 times
[2020-11-25 18:15:36,248 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:36,259 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:36,301 INFO  L134       CoverageAnalysis]: Checked inductivity of 220 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 220 trivial. 0 not checked.
[2020-11-25 18:15:36,301 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:36,301 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:15:36,302 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:36,302 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:15:36,302 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:15:36,302 INFO  L87              Difference]: Start difference. First operand 3697 states and 4407 transitions. cyclomatic complexity: 712 Second operand 3 states.
[2020-11-25 18:15:36,360 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:36,360 INFO  L93              Difference]: Finished difference Result 4315 states and 4973 transitions.
[2020-11-25 18:15:36,360 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:15:36,360 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4315 states and 4973 transitions.
[2020-11-25 18:15:36,371 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:36,384 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4315 states to 3982 states and 4569 transitions.
[2020-11-25 18:15:36,384 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1347
[2020-11-25 18:15:36,385 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1368
[2020-11-25 18:15:36,385 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3982 states and 4569 transitions.
[2020-11-25 18:15:36,389 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:36,389 INFO  L728         BuchiCegarLoop]: Abstraction has 3982 states and 4569 transitions.
[2020-11-25 18:15:36,393 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3982 states and 4569 transitions.
[2020-11-25 18:15:36,422 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3982 to 3611.
[2020-11-25 18:15:36,423 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3611 states.
[2020-11-25 18:15:36,426 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3611 states to 3611 states and 4102 transitions.
[2020-11-25 18:15:36,427 INFO  L751         BuchiCegarLoop]: Abstraction has 3611 states and 4102 transitions.
[2020-11-25 18:15:36,427 INFO  L631         BuchiCegarLoop]: Abstraction has 3611 states and 4102 transitions.
[2020-11-25 18:15:36,427 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:15:36,427 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3611 states and 4102 transitions.
[2020-11-25 18:15:36,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:36,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:36,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:36,434 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:36,434 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L4048]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L4048]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(revert)
[L4052]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L4052]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4053]  COND FALSE  !(revert)
[L4056]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3880]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3880]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3881]  COND FALSE  !(revert)
[L3884]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3884]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3885]  COND FALSE  !(revert)
[L3888]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L3888]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3889]  COND FALSE  !(revert)
[L3892]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3847]              assume msgsender_MSG != null;
[L3848]              Balance[this] := 0;
[L3849]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3850]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3853]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3854]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3855]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3892]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3893]  COND FALSE  !(revert)
[L4056]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4057]  COND FALSE  !(revert)
[L4060]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  COND FALSE  !(revert)
[L3690]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3690]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3691]  COND FALSE  !(revert)
[L3694]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3694]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3695]  COND FALSE  !(revert)
[L4060]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4061]  COND FALSE  !(revert)
[L4064]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]              assume msgsender_MSG != null;
[L3997]              Balance[this] := 0;
[L3998]              DECIMALS_ISF[this] := 18;
[L3999]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4000]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4002]  COND TRUE   DType[this] == ISF
[L4003]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3275]              __var_7 := null;
[L3276]  COND FALSE  !(!(account_s464 != null))
[L3280]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2712]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2713]  COND FALSE  !(!(c_s174 >= a_s174))
[L2717]              __ret_0_ := c_s174;
[L3280]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3281]  COND FALSE  !(revert)
[L3284]              _totalSupply_ERC20[this] := __var_8;
[L3285]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2712]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2713]  COND FALSE  !(!(c_s174 >= a_s174))
[L2717]              __ret_0_ := c_s174;
[L3285]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L3286]  COND FALSE  !(revert)
[L3289]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L3290]              _balances_ERC20[this][account_s464] := __var_9;
[L3291]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L3292]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4003]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4004]  COND FALSE  !(revert)
[L4064]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND FALSE  !(__exception)
[L300]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2799]              __ret_0_ := _totalSupply_ERC20[this];
[L300]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L301]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:36,437 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:36,437 INFO  L82        PathProgramCache]: Analyzing trace with hash -1877801657, now seen corresponding path program 1 times
[2020-11-25 18:15:36,438 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:36,449 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:36,502 INFO  L134       CoverageAnalysis]: Checked inductivity of 225 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 225 trivial. 0 not checked.
[2020-11-25 18:15:36,502 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:36,502 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:15:36,503 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:36,503 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:15:36,503 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:15:36,503 INFO  L87              Difference]: Start difference. First operand 3611 states and 4102 transitions. cyclomatic complexity: 493 Second operand 4 states.
[2020-11-25 18:15:36,534 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:36,534 INFO  L93              Difference]: Finished difference Result 3612 states and 4101 transitions.
[2020-11-25 18:15:36,534 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:15:36,534 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3612 states and 4101 transitions.
[2020-11-25 18:15:36,542 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:36,551 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3612 states to 3602 states and 4091 transitions.
[2020-11-25 18:15:36,551 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1281
[2020-11-25 18:15:36,552 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1281
[2020-11-25 18:15:36,552 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3602 states and 4091 transitions.
[2020-11-25 18:15:36,554 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:36,555 INFO  L728         BuchiCegarLoop]: Abstraction has 3602 states and 4091 transitions.
[2020-11-25 18:15:36,558 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3602 states and 4091 transitions.
[2020-11-25 18:15:36,580 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3602 to 3600.
[2020-11-25 18:15:36,580 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3600 states.
[2020-11-25 18:15:36,584 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3600 states to 3600 states and 4089 transitions.
[2020-11-25 18:15:36,584 INFO  L751         BuchiCegarLoop]: Abstraction has 3600 states and 4089 transitions.
[2020-11-25 18:15:36,584 INFO  L631         BuchiCegarLoop]: Abstraction has 3600 states and 4089 transitions.
[2020-11-25 18:15:36,584 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:15:36,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3600 states and 4089 transitions.
[2020-11-25 18:15:36,589 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:36,589 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:36,589 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:36,590 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:36,591 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6427]              assume null == 0;
[L6428]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L6428]  RET         call this := FreshRefGenerator__success();
[L6429]              assume now >= 0;
[L6430]              assume DType[this] == ISF;
[L6431]              assume msgvalue_MSG == 0;
[L6432]              gas := gas - 53000;
[L6433]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1613]              havoc __exception;
[L1614]              revert := false;
[L1615]  COND FALSE  !(__exception)
[L1639]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4044]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L4044]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L4048]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L4048]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(revert)
[L4052]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L4052]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4053]  COND FALSE  !(revert)
[L4056]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3880]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3880]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3881]  COND FALSE  !(revert)
[L3884]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3884]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3885]  COND FALSE  !(revert)
[L3888]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3524]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3506]              assume msgsender_MSG != null;
[L3507]              Balance[this] := 0;
[L3508]              _owner_Ownable[this] := null;
[L3510]              _owner_Ownable[this] := msgsender_MSG;
[L3511]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3524]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  COND FALSE  !(revert)
[L3888]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3889]  COND FALSE  !(revert)
[L3892]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3847]              assume msgsender_MSG != null;
[L3848]              Balance[this] := 0;
[L3849]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3850]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3853]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3854]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3855]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3892]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3893]  COND FALSE  !(revert)
[L4056]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4057]  COND FALSE  !(revert)
[L4060]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  COND FALSE  !(revert)
[L3690]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2781]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2781]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  COND FALSE  !(revert)
[L2785]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2757]              assume msgsender_MSG != null;
[L2758]              Balance[this] := 0;
[L2759]              _balances_ERC20[this] := zeroRefintArr();
[L2760]              sum__balances0[this] := 0;
[L2761]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2762]              sum__allowed1[this] := 0;
[L2763]              _totalSupply_ERC20[this] := 0;
[L2785]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L3690]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3691]  COND FALSE  !(revert)
[L3694]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3694]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3695]  COND FALSE  !(revert)
[L4060]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4061]  COND FALSE  !(revert)
[L4064]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]              assume msgsender_MSG != null;
[L3997]              Balance[this] := 0;
[L3998]              DECIMALS_ISF[this] := 18;
[L3999]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4000]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4002]  COND TRUE   DType[this] == ISF
[L4003]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3275]              __var_7 := null;
[L3276]  COND FALSE  !(!(account_s464 != null))
[L3280]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2712]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2713]  COND FALSE  !(!(c_s174 >= a_s174))
[L2717]              __ret_0_ := c_s174;
[L3280]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3281]  COND FALSE  !(revert)
[L3284]              _totalSupply_ERC20[this] := __var_8;
[L3285]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2712]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2713]  COND FALSE  !(!(c_s174 >= a_s174))
[L2717]              __ret_0_ := c_s174;
[L3285]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L3286]  COND FALSE  !(revert)
[L3289]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L3290]              _balances_ERC20[this][account_s464] := __var_9;
[L3291]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L3292]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4003]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4004]  COND FALSE  !(revert)
[L4064]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L1639]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1640]              assume !revert && gas >= 0;
[L6433]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6434]              assume !revert && gas >= 0;
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND TRUE   __exception
[L277]               __tmp__Balance := Balance;
[L278]               __tmp__DType := DType;
[L279]               __tmp__Alloc := Alloc;
[L280]               __tmp__balance_ADDR := balance_ADDR;
[L281]               __tmp__M_Ref_int := M_Ref_int;
[L282]               __tmp__sum__balances0 := sum__balances0;
[L283]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L284]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L285]               __tmp__sum__allowed1 := sum__allowed1;
[L286]               __tmp__Length := Length;
[L287]               __tmp__now := now;
[L288]               __tmp___balances_ERC20 := _balances_ERC20;
[L289]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L290]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L291]               __tmp___owner_Ownable := _owner_Ownable;
[L292]               __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L293]               __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L294]               __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L295]               __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L296]               __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L297]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2793]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L297]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L298]               assume revert || gas < 0;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

Loop:
[L6437]  CALL        call CorralChoice_ISF(this);
[L6247]              havoc msgsender_MSG;
[L6248]              havoc msgvalue_MSG;
[L6249]              havoc choice;
[L6250]              havoc to_s717;
[L6251]              havoc value_s717;
[L6252]              havoc __ret_0_transfer;
[L6253]              havoc spender_s287;
[L6254]              havoc value_s287;
[L6255]              havoc __ret_0_approve;
[L6256]              havoc from_s744;
[L6257]              havoc to_s744;
[L6258]              havoc value_s744;
[L6259]              havoc __ret_0_transferFrom;
[L6260]              havoc __ret_0_totalSupply;
[L6261]              havoc owner_s233;
[L6262]              havoc __ret_0_balanceOf;
[L6263]              havoc owner_s249;
[L6264]              havoc spender_s249;
[L6265]              havoc __ret_0_allowance;
[L6266]              havoc spender_s349;
[L6267]              havoc addedValue_s349;
[L6268]              havoc __ret_0_increaseAllowance;
[L6269]              havoc spender_s376;
[L6270]              havoc subtractedValue_s376;
[L6271]              havoc __ret_0_decreaseAllowance;
[L6272]              havoc __ret_0_owner;
[L6273]              havoc __ret_0_isOwner;
[L6274]              havoc newOwner_s659;
[L6275]              havoc name_s794;
[L6276]              havoc symbol_s794;
[L6277]              havoc decimals_s794;
[L6278]              havoc __ret_0_name;
[L6279]              havoc __ret_0_symbol;
[L6280]              havoc __ret_0_decimals;
[L6281]              havoc newName_s837;
[L6282]              havoc newSymbol_s856;
[L6283]              havoc __ret_0_DECIMALS;
[L6284]              havoc __ret_0_INITIAL_SUPPLY;
[L6285]              havoc tmpNow;
[L6286]              havoc gas;
[L6287]              assume gas > 4000000 && gas <= 8000000;
[L6288]              tmpNow := now;
[L6289]              havoc now;
[L6290]              assume now > tmpNow;
[L6291]              assume msgsender_MSG != null;
[L6292]              assume DType[msgsender_MSG] != IERC20;
[L6293]              assume DType[msgsender_MSG] != SafeMath;
[L6294]              assume DType[msgsender_MSG] != ERC20;
[L6295]              assume DType[msgsender_MSG] != Ownable;
[L6296]              assume DType[msgsender_MSG] != ERC20Protected;
[L6297]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6298]              assume DType[msgsender_MSG] != ISF;
[L6299]              Alloc[msgsender_MSG] := true;
[L6300]  COND FALSE  !(choice == 19)
[L6307]  COND FALSE  !(choice == 18)
[L6314]  COND FALSE  !(choice == 17)
[L6321]  COND TRUE   choice == 16
[L6322]              gas := gas - 21000;
[L6323]  COND TRUE   gas >= 0
[L6324]              assume msgvalue_MSG == 0;
[L6325]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L274]               havoc __exception;
[L275]               revert := false;
[L276]   COND TRUE   __exception
[L277]               __tmp__Balance := Balance;
[L278]               __tmp__DType := DType;
[L279]               __tmp__Alloc := Alloc;
[L280]               __tmp__balance_ADDR := balance_ADDR;
[L281]               __tmp__M_Ref_int := M_Ref_int;
[L282]               __tmp__sum__balances0 := sum__balances0;
[L283]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L284]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L285]               __tmp__sum__allowed1 := sum__allowed1;
[L286]               __tmp__Length := Length;
[L287]               __tmp__now := now;
[L288]               __tmp___balances_ERC20 := _balances_ERC20;
[L289]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L290]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L291]               __tmp___owner_Ownable := _owner_Ownable;
[L292]               __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L293]               __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L294]               __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L295]               __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L296]               __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L297]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2793]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L297]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L298]               assume revert || gas < 0;
[L6325]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6437]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:36,595 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:36,595 INFO  L82        PathProgramCache]: Analyzing trace with hash -720962591, now seen corresponding path program 1 times
[2020-11-25 18:15:36,595 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:36,606 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:36,690 INFO  L134       CoverageAnalysis]: Checked inductivity of 225 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 225 trivial. 0 not checked.
[2020-11-25 18:15:36,691 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:36,691 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 18:15:36,691 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:36,691 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 18:15:36,691 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 18:15:36,691 INFO  L87              Difference]: Start difference. First operand 3600 states and 4089 transitions. cyclomatic complexity: 491 Second operand 5 states.
[2020-11-25 18:15:36,917 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:36,917 INFO  L93              Difference]: Finished difference Result 2300 states and 2584 transitions.
[2020-11-25 18:15:36,917 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 18:15:36,917 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2300 states and 2584 transitions.
[2020-11-25 18:15:36,922 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:15:36,922 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2300 states to 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 18:15:36,922 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 18:15:36,922 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:36,922 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 18:15:36,922 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 18:15:36,922 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:15:36,922 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 18:15:36,925 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:15:36 BasicIcfg
[2020-11-25 18:15:36,925 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:15:36,926 INFO  L168              Benchmark]: Toolchain (without parser) took 5402.78 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 665.3 MB). Free memory was 929.8 MB in the beginning and 1.4 GB in the end (delta: -442.5 MB). Peak memory consumption was 222.9 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,927 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,927 INFO  L168              Benchmark]: Boogie Preprocessor took 129.02 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,927 INFO  L168              Benchmark]: UtopiaSpecLang took 64.72 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.3 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,928 INFO  L168              Benchmark]: Boogie Printer took 22.71 ms. Allocated memory is still 1.0 GB. Free memory is still 908.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,928 INFO  L168              Benchmark]: RCFGBuilder took 954.23 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 908.3 MB in the beginning and 1.0 GB in the end (delta: -108.4 MB). Peak memory consumption was 196.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,928 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.38 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,929 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1590.98 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 160.4 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -51.3 MB). Peak memory consumption was 527.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,929 INFO  L168              Benchmark]: BlockEncodingV2 took 166.18 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 967.9 MB in the end (delta: 93.2 MB). Peak memory consumption was 93.2 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,929 INFO  L168              Benchmark]: BuchiAutomizer took 2434.55 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 440.9 MB). Free memory was 967.9 MB in the beginning and 1.4 GB in the end (delta: -404.4 MB). Peak memory consumption was 36.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:15:36,932 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5978 locations, 11096 edges
  - StatisticsResult: Encoded RCFG
    5880 locations, 10828 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 129.02 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.72 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.3 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.71 ms. Allocated memory is still 1.0 GB. Free memory is still 908.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 954.23 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 908.3 MB in the beginning and 1.0 GB in the end (delta: -108.4 MB). Peak memory consumption was 196.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.38 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1590.98 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 160.4 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -51.3 MB). Peak memory consumption was 527.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 166.18 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 967.9 MB in the end (delta: 93.2 MB). Peak memory consumption was 93.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2434.55 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 440.9 MB). Free memory was 967.9 MB in the beginning and 1.4 GB in the end (delta: -404.4 MB). Peak memory consumption was 36.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2327 locations, 3364 edges
  - StatisticsResult: BuchiProgram size
    5978 locations, 11096 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 7 iterations.  TraceHistogramMax:6. Analysis of lassos took 0.8s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1003 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3698 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 22308 SDtfs, 11959 SDslu, 36588 SDs, 0 SdLazy, 2930 SolverSat, 2990 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_ERC200) ==> ( <>(success_totalSupply_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
