This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:15:08,050 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:15:08,051 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:15:08,063 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:15:08,064 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:15:08,064 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:15:08,066 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:15:08,067 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:15:08,069 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:15:08,070 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:15:08,070 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:15:08,070 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:15:08,071 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:15:08,072 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:15:08,073 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:15:08,073 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:15:08,074 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:15:08,076 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:15:08,077 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:15:08,078 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:15:08,079 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:15:08,079 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:15:08,081 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:15:08,081 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:15:08,081 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:15:08,082 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:15:08,082 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:15:08,083 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:15:08,083 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:15:08,083 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:15:08,084 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:15:08,084 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:15:08,085 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:15:08,085 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:15:08,086 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:15:08,086 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:15:08,087 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:15:08,087 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:15:08,087 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:15:08,088 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:15:08,088 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:15:08,088 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:15:08,097 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:15:08,097 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:15:08,098 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:15:08,099 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:15:08,099 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:15:08,099 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:15:08,100 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:15:08,100 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:15:08,100 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:15:08,100 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:15:08,101 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:15:08,101 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:15:08,101 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:15:08,102 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:15:08,102 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:15:08,102 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:15:08,103 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:15:08,103 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:15:08,103 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:15:08,103 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:15:08,104 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:15:08,104 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:15:08,104 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:15:08,104 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:15:08,104 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:15:08,104 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:15:08,131 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:15:08,143 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:15:08,146 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:15:08,147 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:15:08,147 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:15:08,148 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl
[2020-11-25 07:15:08,148 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl'
[2020-11-25 07:15:08,225 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:15:08,226 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:15:08,227 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:15:08,227 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:15:08,227 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:15:08,243 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,245 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,275 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,275 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,294 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,303 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,309 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,318 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:15:08,319 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:15:08,319 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:15:08,321 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:15:08,325 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/1) ...
[2020-11-25 07:15:08,343 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:08,350 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:08,357 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:08,363 INFO  L636   opiaSpecLangObserver]: Parsed ( _balances_ERC20[this][account_s236]>=0 && _balances_ERC20[this][account_s236]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s236,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s236,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:15:08,365 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==_balances_ERC20[this][account_s236] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,balanceOf~address_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],[IdentifierExpression[account_s236,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_ERC20>]]]]]]
[2020-11-25 07:15:08,370 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.balanceOf(owner), _balances_ERC20[this][owner] >= 0 && _balances_ERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.balanceOf(owner), return == _balances_ERC20[this][owner] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:08,370 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_ERC200) ==> ( <>AP(success_balanceOf_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:15:08,378 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:08 PropertyContainer
[2020-11-25 07:15:08,379 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:15:08,379 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:15:08,379 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:15:08,379 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:15:08,380 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/2) ...
[2020-11-25 07:15:08,380 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:15:08,380 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:15:08,394 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:08" (2/2) ...
[2020-11-25 07:15:08,394 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:15:08,394 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:15:08,394 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:15:08,394 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:15:08,395 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/2) ...
[2020-11-25 07:15:08,447 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:15:08,447 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:15:08,448 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:15:08,448 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:15:08,448 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:15:08,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:15:08,449 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:08,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:08,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:15:08,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:15:08,451 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 07:15:08,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 07:15:08,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 07:15:08,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC
[2020-11-25 07:15:08,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:15:08,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ULMC
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,453 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:15:08,454 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:08,455 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:15:08,456 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__success
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__fail
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:15:08,457 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:15:08,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:15:08,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:15:08,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:15:08,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:15:08,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:08,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:15:08,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:15:08,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:15:08,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 07:15:08,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__fail
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:15:08,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:15:08,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:15:08,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ULMC
[2020-11-25 07:15:08,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:15:08,465 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:15:08,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:15:08,947 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:08,947 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:08,947 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:09,127 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:15:09,127 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:15:09,129 INFO  L202        PluginConnector]: Adding new model ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:09 BoogieIcfgContainer
[2020-11-25 07:15:09,129 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:08" (2/2) ...
[2020-11-25 07:15:09,129 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:15:09,129 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2b03a39c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:09, skipping insertion in model container
[2020-11-25 07:15:09,129 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:15:09,130 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:15:09,130 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:15:09,131 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:15:09,131 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/3) ...
[2020-11-25 07:15:09,132 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2dac39a4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:09, skipping insertion in model container
[2020-11-25 07:15:09,132 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:15:09,172 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:09 NWAContainer
[2020-11-25 07:15:09,172 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:15:09,172 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:15:09,173 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:15:09,173 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:15:09,174 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:09" (3/4) ...
[2020-11-25 07:15:09,175 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@76a37fe5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:09, skipping insertion in model container
[2020-11-25 07:15:09,175 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:09" (4/4) ...
[2020-11-25 07:15:09,178 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:15:09,182 INFO  L110   BuchiProductObserver]: Initial RCFG 1273 locations, 1751 edges
[2020-11-25 07:15:09,182 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:15:09,194 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:15:10,532 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:15:10,536 INFO  L110   BuchiProductObserver]: BuchiProgram size 3182 locations, 5737 edges
[2020-11-25 07:15:10,536 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:10 BoogieIcfgContainer
[2020-11-25 07:15:10,536 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:15:10,537 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:15:10,537 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:15:10,538 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:15:10,539 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:10" (1/1) ...
[2020-11-25 07:15:10,607 INFO  L313           BlockEncoder]: Initial Icfg 3182 locations, 5737 edges
[2020-11-25 07:15:10,607 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:15:10,608 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:15:10,608 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:15:10,608 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:15:10,618 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 07:15:10,625 INFO  L70        RemoveSinkStates]: Removed 56 edges and 37 locations by removing sink states
[2020-11-25 07:15:10,634 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:15:10,637 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:15:10,639 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:15:10,639 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:15:10,643 INFO  L313           BlockEncoder]: Encoded RCFG 3114 locations, 5553 edges
[2020-11-25 07:15:10,643 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:15:10 BasicIcfg
[2020-11-25 07:15:10,643 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:15:10,644 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:15:10,644 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:15:10,645 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:15:10,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:08" (1/6) ...
[2020-11-25 07:15:10,647 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e6df229 and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:10, skipping insertion in model container
[2020-11-25 07:15:10,647 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,647 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:08" (2/6) ...
[2020-11-25 07:15:10,647 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e6df229 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:10, skipping insertion in model container
[2020-11-25 07:15:10,647 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,647 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:09" (3/6) ...
[2020-11-25 07:15:10,648 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e6df229 and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:15:10, skipping insertion in model container
[2020-11-25 07:15:10,648 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,648 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:09" (4/6) ...
[2020-11-25 07:15:10,648 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e6df229 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:10, skipping insertion in model container
[2020-11-25 07:15:10,648 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,648 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:10" (5/6) ...
[2020-11-25 07:15:10,648 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e6df229 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:15:10, skipping insertion in model container
[2020-11-25 07:15:10,648 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:10,648 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:15:10" (6/6) ...
[2020-11-25 07:15:10,649 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_balanceof.bpl_BEv2
[2020-11-25 07:15:10,682 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:15:10,683 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:15:10,683 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:15:10,683 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:15:10,683 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:15:10,683 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:15:10,683 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:15:10,683 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:15:10,683 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:15:10,711 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3114 states.
[2020-11-25 07:15:10,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:10,754 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:10,754 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:10,764 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:10,764 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:10,764 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:15:10,764 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3114 states.
[2020-11-25 07:15:10,783 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:10,783 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:10,783 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:10,784 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:10,784 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND TRUE   revert
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND TRUE   choice == 11
[L3603]              gas := gas - 21000;
[L3604]  COND FALSE  !(gas >= 0)
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:10,797 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:10,798 INFO  L82        PathProgramCache]: Analyzing trace with hash 1169134619, now seen corresponding path program 1 times
[2020-11-25 07:15:10,801 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:10,819 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:10,851 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:15:10,853 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:10,854 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:15:10,858 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,007 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:15:11,007 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:15:11,008 INFO  L87              Difference]: Start difference. First operand 3114 states. Second operand 4 states.
[2020-11-25 07:15:11,264 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:11,265 INFO  L93              Difference]: Finished difference Result 1798 states and 2077 transitions.
[2020-11-25 07:15:11,265 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:15:11,266 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1798 states and 2077 transitions.
[2020-11-25 07:15:11,276 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:11,289 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1798 states to 1798 states and 2077 transitions.
[2020-11-25 07:15:11,289 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 07:15:11,291 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 487
[2020-11-25 07:15:11,291 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1798 states and 2077 transitions.
[2020-11-25 07:15:11,297 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:11,297 INFO  L728         BuchiCegarLoop]: Abstraction has 1798 states and 2077 transitions.
[2020-11-25 07:15:11,310 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1798 states and 2077 transitions.
[2020-11-25 07:15:11,340 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1798 to 1798.
[2020-11-25 07:15:11,341 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1798 states.
[2020-11-25 07:15:11,344 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1798 states to 1798 states and 2077 transitions.
[2020-11-25 07:15:11,344 INFO  L751         BuchiCegarLoop]: Abstraction has 1798 states and 2077 transitions.
[2020-11-25 07:15:11,344 INFO  L631         BuchiCegarLoop]: Abstraction has 1798 states and 2077 transitions.
[2020-11-25 07:15:11,345 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:15:11,345 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1798 states and 2077 transitions.
[2020-11-25 07:15:11,350 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:11,350 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:11,350 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:11,351 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:11,351 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND TRUE   revert
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:11,355 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:11,355 INFO  L82        PathProgramCache]: Analyzing trace with hash -1404492652, now seen corresponding path program 1 times
[2020-11-25 07:15:11,356 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:11,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:11,378 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:15:11,378 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:11,378 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:15:11,379 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,380 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:15:11,380 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:15:11,380 INFO  L87              Difference]: Start difference. First operand 1798 states and 2077 transitions. cyclomatic complexity: 281 Second operand 3 states.
[2020-11-25 07:15:11,430 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:11,430 INFO  L93              Difference]: Finished difference Result 2402 states and 2807 transitions.
[2020-11-25 07:15:11,431 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:15:11,431 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2402 states and 2807 transitions.
[2020-11-25 07:15:11,440 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:11,450 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2402 states to 2402 states and 2807 transitions.
[2020-11-25 07:15:11,450 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 658
[2020-11-25 07:15:11,451 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 658
[2020-11-25 07:15:11,451 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2402 states and 2807 transitions.
[2020-11-25 07:15:11,455 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:11,455 INFO  L728         BuchiCegarLoop]: Abstraction has 2402 states and 2807 transitions.
[2020-11-25 07:15:11,457 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2402 states and 2807 transitions.
[2020-11-25 07:15:11,477 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2402 to 1990.
[2020-11-25 07:15:11,478 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1990 states.
[2020-11-25 07:15:11,481 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1990 states to 1990 states and 2307 transitions.
[2020-11-25 07:15:11,481 INFO  L751         BuchiCegarLoop]: Abstraction has 1990 states and 2307 transitions.
[2020-11-25 07:15:11,481 INFO  L631         BuchiCegarLoop]: Abstraction has 1990 states and 2307 transitions.
[2020-11-25 07:15:11,481 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:15:11,481 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1990 states and 2307 transitions.
[2020-11-25 07:15:11,485 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:11,485 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:11,485 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:11,487 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:11,487 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND TRUE   !(account_s478 != null)
[L2015]              revert := true;
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND TRUE   revert
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:11,490 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:11,490 INFO  L82        PathProgramCache]: Analyzing trace with hash -2080457729, now seen corresponding path program 1 times
[2020-11-25 07:15:11,491 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:11,502 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:11,538 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 07:15:11,538 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:15:11,538 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 07:15:11,538 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,539 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:15:11,539 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:15:11,539 INFO  L87              Difference]: Start difference. First operand 1990 states and 2307 transitions. cyclomatic complexity: 319 Second operand 7 states.
[2020-11-25 07:15:11,571 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:11,571 INFO  L93              Difference]: Finished difference Result 1998 states and 2314 transitions.
[2020-11-25 07:15:11,571 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:15:11,571 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1998 states and 2314 transitions.
[2020-11-25 07:15:11,578 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:11,584 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1998 states to 1989 states and 2305 transitions.
[2020-11-25 07:15:11,584 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 543
[2020-11-25 07:15:11,585 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 543
[2020-11-25 07:15:11,585 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1989 states and 2305 transitions.
[2020-11-25 07:15:11,587 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:11,587 INFO  L728         BuchiCegarLoop]: Abstraction has 1989 states and 2305 transitions.
[2020-11-25 07:15:11,588 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1989 states and 2305 transitions.
[2020-11-25 07:15:11,602 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1989 to 1989.
[2020-11-25 07:15:11,602 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1989 states.
[2020-11-25 07:15:11,605 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1989 states to 1989 states and 2305 transitions.
[2020-11-25 07:15:11,605 INFO  L751         BuchiCegarLoop]: Abstraction has 1989 states and 2305 transitions.
[2020-11-25 07:15:11,605 INFO  L631         BuchiCegarLoop]: Abstraction has 1989 states and 2305 transitions.
[2020-11-25 07:15:11,605 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:15:11,605 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1989 states and 2305 transitions.
[2020-11-25 07:15:11,610 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:11,610 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:11,610 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:11,611 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:11,611 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND FALSE  !(!(account_s478 != null))
[L2018]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND TRUE   !(c_s26 >= a_s26)
[L1448]              revert := true;
[L2018]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2019]  COND TRUE   revert
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND TRUE   revert
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:11,614 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:11,614 INFO  L82        PathProgramCache]: Analyzing trace with hash 1394541627, now seen corresponding path program 1 times
[2020-11-25 07:15:11,615 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:11,623 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:11,655 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 07:15:11,655 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:11,655 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:15:11,656 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,656 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:15:11,656 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:15:11,656 INFO  L87              Difference]: Start difference. First operand 1989 states and 2305 transitions. cyclomatic complexity: 318 Second operand 3 states.
[2020-11-25 07:15:11,692 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:11,693 INFO  L93              Difference]: Finished difference Result 2395 states and 2705 transitions.
[2020-11-25 07:15:11,693 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:15:11,693 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2395 states and 2705 transitions.
[2020-11-25 07:15:11,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:11,709 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2395 states to 2222 states and 2501 transitions.
[2020-11-25 07:15:11,709 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 605
[2020-11-25 07:15:11,710 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 623
[2020-11-25 07:15:11,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2222 states and 2501 transitions.
[2020-11-25 07:15:11,712 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:11,712 INFO  L728         BuchiCegarLoop]: Abstraction has 2222 states and 2501 transitions.
[2020-11-25 07:15:11,714 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2222 states and 2501 transitions.
[2020-11-25 07:15:11,731 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2222 to 1985.
[2020-11-25 07:15:11,731 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1985 states.
[2020-11-25 07:15:11,733 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1985 states to 1985 states and 2206 transitions.
[2020-11-25 07:15:11,734 INFO  L751         BuchiCegarLoop]: Abstraction has 1985 states and 2206 transitions.
[2020-11-25 07:15:11,734 INFO  L631         BuchiCegarLoop]: Abstraction has 1985 states and 2206 transitions.
[2020-11-25 07:15:11,734 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:15:11,734 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1985 states and 2206 transitions.
[2020-11-25 07:15:11,738 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:11,738 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:11,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:11,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:11,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND FALSE  !(!(account_s478 != null))
[L2018]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2018]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2019]  COND FALSE  !(revert)
[L2022]              _totalSupply_ERC20[this] := __var_9;
[L2023]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2023]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2024]  COND FALSE  !(revert)
[L2027]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2028]              _balances_ERC20[this][account_s478] := __var_10;
[L2029]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2030]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND FALSE  !(revert)
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1657]              __ret_0_ := _balances_ERC20[this][account_s236];
[L324]   RET         call __ret_0_ := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L325]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_ERC20[this][account_s236] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:11,743 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:11,743 INFO  L82        PathProgramCache]: Analyzing trace with hash -1044882721, now seen corresponding path program 1 times
[2020-11-25 07:15:11,743 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:11,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:11,805 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 07:15:11,805 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:11,805 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:15:11,805 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,806 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:15:11,806 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:15:11,806 INFO  L87              Difference]: Start difference. First operand 1985 states and 2206 transitions. cyclomatic complexity: 223 Second operand 4 states.
[2020-11-25 07:15:11,852 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:11,853 INFO  L93              Difference]: Finished difference Result 1986 states and 2205 transitions.
[2020-11-25 07:15:11,853 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:15:11,853 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1986 states and 2205 transitions.
[2020-11-25 07:15:11,858 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:11,864 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1986 states to 1976 states and 2195 transitions.
[2020-11-25 07:15:11,864 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 576
[2020-11-25 07:15:11,864 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 576
[2020-11-25 07:15:11,864 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1976 states and 2195 transitions.
[2020-11-25 07:15:11,866 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:11,866 INFO  L728         BuchiCegarLoop]: Abstraction has 1976 states and 2195 transitions.
[2020-11-25 07:15:11,867 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1976 states and 2195 transitions.
[2020-11-25 07:15:11,883 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1976 to 1974.
[2020-11-25 07:15:11,883 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1974 states.
[2020-11-25 07:15:11,885 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1974 states to 1974 states and 2193 transitions.
[2020-11-25 07:15:11,885 INFO  L751         BuchiCegarLoop]: Abstraction has 1974 states and 2193 transitions.
[2020-11-25 07:15:11,885 INFO  L631         BuchiCegarLoop]: Abstraction has 1974 states and 2193 transitions.
[2020-11-25 07:15:11,886 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:15:11,886 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1974 states and 2193 transitions.
[2020-11-25 07:15:11,888 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:11,888 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:11,888 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:11,889 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:11,889 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_ERC200 := false;
[L2]                 call_balanceOf_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND FALSE  !(!(account_s478 != null))
[L2018]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2018]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2019]  COND FALSE  !(revert)
[L2022]              _totalSupply_ERC20[this] := __var_9;
[L2023]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2023]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2024]  COND FALSE  !(revert)
[L2027]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2028]              _balances_ERC20[this][account_s478] := __var_10;
[L2029]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2030]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND FALSE  !(revert)
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum__balances0 := sum__balances0;
[L310]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum__allowances1 := sum__allowances1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp___balances_ERC20 := _balances_ERC20;
[L316]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L317]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L318]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L319]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L320]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L321]   CALL        call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1651]              __ret_0_ := __tmp___balances_ERC20[this][account_s236];
[L321]   RET         call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L322]               assume revert || gas < 0;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND TRUE   choice == 10
[L3609]              gas := gas - 21000;
[L3610]  COND TRUE   gas >= 0
[L3611]              assume msgvalue_MSG == 0;
[L3612]  CALL        call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_ERC20[this][account_s236] >= 0 && _balances_ERC20[this][account_s236] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_ERC200 := true;
[L2]                 call_balanceOf_ERC200 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum__balances0 := sum__balances0;
[L310]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum__allowances1 := sum__allowances1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp___balances_ERC20 := _balances_ERC20;
[L316]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L317]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L318]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L319]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L320]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L321]   CALL        call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L1651]              __ret_0_ := __tmp___balances_ERC20[this][account_s236];
[L321]   RET         call __ret_0_ := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L322]               assume revert || gas < 0;
[L3612]  RET         call __ret_0_balanceOf := balanceOf~address_ERC20(this, msgsender_MSG, msgvalue_MSG, account_s236);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:11,892 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:11,892 INFO  L82        PathProgramCache]: Analyzing trace with hash 111796122, now seen corresponding path program 1 times
[2020-11-25 07:15:11,893 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:11,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:11,929 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 07:15:11,929 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:11,929 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 07:15:11,929 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:11,929 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 07:15:11,929 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 07:15:11,930 INFO  L87              Difference]: Start difference. First operand 1974 states and 2193 transitions. cyclomatic complexity: 221 Second operand 5 states.
[2020-11-25 07:15:12,048 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:12,048 INFO  L93              Difference]: Finished difference Result 1364 states and 1496 transitions.
[2020-11-25 07:15:12,048 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:15:12,048 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1364 states and 1496 transitions.
[2020-11-25 07:15:12,051 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:15:12,051 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1364 states to 0 states and 0 transitions.
[2020-11-25 07:15:12,051 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:15:12,051 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:15:12,051 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:15:12,052 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:12,052 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:15:12,052 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:15:12,052 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:15:12,052 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:15:12,052 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:15:12,052 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:15:12,052 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:15:12,055 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:15:12 BasicIcfg
[2020-11-25 07:15:12,055 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:15:12,055 INFO  L168              Benchmark]: Toolchain (without parser) took 3829.62 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 368.1 MB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -204.1 MB). Peak memory consumption was 164.0 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,056 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,056 INFO  L168              Benchmark]: Boogie Preprocessor took 91.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,057 INFO  L168              Benchmark]: UtopiaSpecLang took 59.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,057 INFO  L168              Benchmark]: Boogie Printer took 14.87 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,057 INFO  L168              Benchmark]: RCFGBuilder took 735.48 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 817.0 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,057 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.67 ms. Allocated memory is still 1.0 GB. Free memory was 817.0 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,058 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1363.84 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -295.2 MB). Peak memory consumption was 182.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,058 INFO  L168              Benchmark]: BlockEncodingV2 took 106.71 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 62.8 MB). Peak memory consumption was 62.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,058 INFO  L168              Benchmark]: BuchiAutomizer took 1411.39 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 178.3 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -93.4 MB). Peak memory consumption was 84.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:12,061 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3182 locations, 5737 edges
  - StatisticsResult: Encoded RCFG
    3114 locations, 5553 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 91.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.87 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 735.48 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 817.0 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.67 ms. Allocated memory is still 1.0 GB. Free memory was 817.0 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1363.84 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -295.2 MB). Peak memory consumption was 182.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 106.71 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 62.8 MB). Peak memory consumption was 62.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1411.39 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 178.3 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -93.4 MB). Peak memory consumption was 84.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1273 locations, 1751 edges
  - StatisticsResult: BuchiProgram size
    3182 locations, 5737 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.3s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.3s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 651 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1990 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12058 SDtfs, 6497 SDslu, 19726 SDs, 0 SdLazy, 1570 SolverSat, 1588 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_ERC200) ==> ( <>(success_balanceOf_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
