This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:50:48,336 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:50:48,338 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:50:48,349 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:50:48,350 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:50:48,351 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:50:48,352 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:50:48,354 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:50:48,356 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:50:48,356 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:50:48,357 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:50:48,358 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:50:48,358 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:50:48,359 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:50:48,360 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:50:48,361 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:50:48,361 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:50:48,363 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:50:48,364 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:50:48,365 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:50:48,366 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:50:48,367 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:50:48,369 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:50:48,369 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:50:48,369 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:50:48,370 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:50:48,370 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:50:48,371 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:50:48,371 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:50:48,371 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:50:48,372 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:50:48,372 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:50:48,373 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:50:48,373 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:50:48,374 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:50:48,374 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:50:48,374 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:50:48,375 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:50:48,375 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:50:48,375 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:50:48,376 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:50:48,376 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:50:48,384 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:50:48,385 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:50:48,385 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:50:48,386 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:50:48,386 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:50:48,386 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:50:48,387 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:50:48,387 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:50:48,388 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:50:48,388 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:50:48,388 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:50:48,388 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:50:48,409 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:50:48,421 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:50:48,424 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:50:48,425 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:50:48,426 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:50:48,426 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl
[2020-11-25 07:50:48,426 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl'
[2020-11-25 07:50:48,515 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:50:48,516 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:50:48,517 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:50:48,517 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:50:48,517 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:50:48,541 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,543 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,582 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,583 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,608 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,624 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,637 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,649 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:50:48,650 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:50:48,650 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:50:48,652 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:50:48,656 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/1) ...
[2020-11-25 07:50:48,678 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20Pausable.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20Pausable.transfer)))
[2020-11-25 07:50:48,684 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20Pausable.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20Pausable.transfer)))
[2020-11-25 07:50:48,692 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20Pausable.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20Pausable.transfer)))
[2020-11-25 07:50:48,700 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s648 && ( value_s648>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][to_s648] + value_s648 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s648>=0 ) && value_s648<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s648]>=0 ) && _balances_ERC20[this][to_s648]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:50:48,706 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20Pausable.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20Pausable.transfer)))
[2020-11-25 07:50:48,706 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC20Pausable0) ==> ( <>AP(fail_transfer_ERC20Pausable0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:50:48,718 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:48 PropertyContainer
[2020-11-25 07:50:48,718 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:50:48,718 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:50:48,718 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:50:48,718 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:50:48,719 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/2) ...
[2020-11-25 07:50:48,719 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:50:48,720 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:50:48,736 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:48" (2/2) ...
[2020-11-25 07:50:48,737 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:50:48,737 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:50:48,737 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:50:48,737 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:50:48,738 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/2) ...
[2020-11-25 07:50:48,791 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:50:48,791 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:50:48,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,792 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:50:48,793 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:50:48,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:50:48,793 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:50:48,793 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:50:48,793 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:50:48,793 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:50:48,794 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:50:48,794 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:50:48,794 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:50:48,794 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:50:48,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:50:48,794 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:50:48,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:50:48,795 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:50:48,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:50:48,795 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:50:48,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:50:48,795 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:50:48,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:50:48,795 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:50:48,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:50:48,795 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:50:48,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:48,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:48,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 07:50:48,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 07:50:48,796 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 07:50:48,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 07:50:48,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 07:50:48,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 07:50:48,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 07:50:48,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 07:50:48,797 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 07:50:48,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 07:50:48,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 07:50:48,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,799 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,799 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:48,799 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken_NoBaseCtor__success
[2020-11-25 07:50:48,799 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken
[2020-11-25 07:50:48,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken
[2020-11-25 07:50:48,799 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken
[2020-11-25 07:50:48,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken
[2020-11-25 07:50:48,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken
[2020-11-25 07:50:48,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 07:50:48,800 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 07:50:48,801 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UPCToken
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:50:48,802 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:50:48,803 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:50:48,804 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,805 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 07:50:48,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 07:50:48,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 07:50:48,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 07:50:48,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 07:50:48,806 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 07:50:48,807 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 07:50:48,807 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 07:50:48,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 07:50:48,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 07:50:48,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 07:50:48,808 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,810 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken_NoBaseCtor__fail
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken__success
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken__fail
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken__success
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken__fail
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken__success
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken__fail
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken__success
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken__fail
[2020-11-25 07:50:48,811 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:50:48,812 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:50:48,812 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:50:48,812 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 07:50:48,812 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 07:50:48,812 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 07:50:48,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:50:48,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:50:48,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:50:48,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:50:48,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:50:48,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:50:48,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:50:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 07:50:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 07:50:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 07:50:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken_NoBaseCtor__fail
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken_NoBaseCtor__success
[2020-11-25 07:50:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken__success
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken__success
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken__success
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken__success
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:50:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:50:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UPCToken
[2020-11-25 07:50:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:50:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:50:48,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:50:49,412 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:49,412 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:49,679 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:50:49,679 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-25 07:50:49,681 INFO  L202        PluginConnector]: Adding new model UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:49 BoogieIcfgContainer
[2020-11-25 07:50:49,681 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:48" (2/2) ...
[2020-11-25 07:50:49,681 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:50:49,682 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1ac4f8db and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:49, skipping insertion in model container
[2020-11-25 07:50:49,682 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:50:49,682 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:50:49,682 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:50:49,684 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:50:49,684 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/3) ...
[2020-11-25 07:50:49,684 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1ee234f4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:49, skipping insertion in model container
[2020-11-25 07:50:49,684 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:50:49,725 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:49 NWAContainer
[2020-11-25 07:50:49,725 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:50:49,725 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:50:49,725 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:50:49,726 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:50:49,727 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:49" (3/4) ...
[2020-11-25 07:50:49,728 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@67b9ce7c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:49, skipping insertion in model container
[2020-11-25 07:50:49,728 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:49" (4/4) ...
[2020-11-25 07:50:49,731 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:50:49,736 INFO  L110   BuchiProductObserver]: Initial RCFG 2069 locations, 2936 edges
[2020-11-25 07:50:49,736 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:50:49,749 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:50:51,291 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:50:51,299 INFO  L110   BuchiProductObserver]: BuchiProgram size 5286 locations, 9648 edges
[2020-11-25 07:50:51,299 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:51 BoogieIcfgContainer
[2020-11-25 07:50:51,299 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:50:51,299 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:50:51,299 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:50:51,301 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:50:51,301 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:51" (1/1) ...
[2020-11-25 07:50:51,429 INFO  L313           BlockEncoder]: Initial Icfg 5286 locations, 9648 edges
[2020-11-25 07:50:51,429 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:50:51,429 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:50:51,430 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:50:51,430 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:50:51,453 INFO  L70    emoveInfeasibleEdges]: Removed 141 edges and 18 locations because of local infeasibility
[2020-11-25 07:50:51,467 INFO  L70        RemoveSinkStates]: Removed 164 edges and 94 locations by removing sink states
[2020-11-25 07:50:51,479 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:50:51,483 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:50:51,486 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:50:51,487 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:50:51,490 INFO  L313           BlockEncoder]: Encoded RCFG 5148 locations, 9305 edges
[2020-11-25 07:50:51,490 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:50:51 BasicIcfg
[2020-11-25 07:50:51,490 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:50:51,490 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:50:51,490 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:50:51,492 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:50:51,492 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,493 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:48" (1/6) ...
[2020-11-25 07:50:51,494 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f144a52 and model type UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:51, skipping insertion in model container
[2020-11-25 07:50:51,494 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,494 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:48" (2/6) ...
[2020-11-25 07:50:51,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f144a52 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:51, skipping insertion in model container
[2020-11-25 07:50:51,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:49" (3/6) ...
[2020-11-25 07:50:51,496 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f144a52 and model type UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:50:51, skipping insertion in model container
[2020-11-25 07:50:51,496 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,496 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:49" (4/6) ...
[2020-11-25 07:50:51,496 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f144a52 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:51, skipping insertion in model container
[2020-11-25 07:50:51,496 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,496 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:51" (5/6) ...
[2020-11-25 07:50:51,496 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f144a52 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:50:51, skipping insertion in model container
[2020-11-25 07:50:51,497 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:51,497 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:50:51" (6/6) ...
[2020-11-25 07:50:51,498 INFO  L404   chiAutomizerObserver]: Analyzing ICFG UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-fail.bpl_BEv2
[2020-11-25 07:50:51,561 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:50:51,561 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:50:51,562 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:50:51,562 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:50:51,562 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:50:51,562 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:50:51,562 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:50:51,562 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:50:51,562 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:50:51,599 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5148 states.
[2020-11-25 07:50:51,650 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:51,651 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:51,651 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:51,657 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:51,657 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:51,657 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:50:51,657 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5148 states.
[2020-11-25 07:50:51,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:51,678 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:51,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:51,679 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:51,679 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND FALSE  !(__exception)
[L1563]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3753]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3753]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  COND TRUE   revert
[L1563]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]              assume !revert && gas >= 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND TRUE   choice == 16
[L5630]              gas := gas - 21000;
[L5631]  COND FALSE  !(gas >= 0)
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:51,692 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:51,692 INFO  L82        PathProgramCache]: Analyzing trace with hash 1076519084, now seen corresponding path program 1 times
[2020-11-25 07:50:51,696 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:51,717 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:51,766 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:50:51,768 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:51,768 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:52,053 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:52,065 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:52,066 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:52,067 INFO  L87              Difference]: Start difference. First operand 5148 states. Second operand 4 states.
[2020-11-25 07:50:52,647 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:52,647 INFO  L93              Difference]: Finished difference Result 2910 states and 3457 transitions.
[2020-11-25 07:50:52,647 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:52,649 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2910 states and 3457 transitions.
[2020-11-25 07:50:52,671 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:52,698 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2910 states to 2910 states and 3457 transitions.
[2020-11-25 07:50:52,699 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 07:50:52,703 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 958
[2020-11-25 07:50:52,703 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2910 states and 3457 transitions.
[2020-11-25 07:50:52,712 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:52,712 INFO  L728         BuchiCegarLoop]: Abstraction has 2910 states and 3457 transitions.
[2020-11-25 07:50:52,730 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2910 states and 3457 transitions.
[2020-11-25 07:50:52,787 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2910 to 2910.
[2020-11-25 07:50:52,788 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2910 states.
[2020-11-25 07:50:52,794 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2910 states to 2910 states and 3457 transitions.
[2020-11-25 07:50:52,795 INFO  L751         BuchiCegarLoop]: Abstraction has 2910 states and 3457 transitions.
[2020-11-25 07:50:52,795 INFO  L631         BuchiCegarLoop]: Abstraction has 2910 states and 3457 transitions.
[2020-11-25 07:50:52,795 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:50:52,795 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states and 3457 transitions.
[2020-11-25 07:50:52,804 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:52,804 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:52,804 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:52,806 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:52,806 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND FALSE  !(__exception)
[L1563]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3753]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3753]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  COND TRUE   revert
[L1563]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]              assume !revert && gas >= 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND TRUE   revert
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND TRUE   revert
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:52,811 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:52,811 INFO  L82        PathProgramCache]: Analyzing trace with hash -1754617177, now seen corresponding path program 1 times
[2020-11-25 07:50:52,812 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:52,823 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:52,846 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:50:52,846 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:52,846 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:52,848 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:52,848 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:52,848 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:52,848 INFO  L87              Difference]: Start difference. First operand 2910 states and 3457 transitions. cyclomatic complexity: 549 Second operand 4 states.
[2020-11-25 07:50:53,707 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:53,707 INFO  L93              Difference]: Finished difference Result 3882 states and 4448 transitions.
[2020-11-25 07:50:53,707 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:53,708 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3882 states and 4448 transitions.
[2020-11-25 07:50:53,722 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:50:53,735 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3882 states to 3558 states and 4052 transitions.
[2020-11-25 07:50:53,735 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1145
[2020-11-25 07:50:53,736 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1145
[2020-11-25 07:50:53,736 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3558 states and 4052 transitions.
[2020-11-25 07:50:53,743 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:53,744 INFO  L728         BuchiCegarLoop]: Abstraction has 3558 states and 4052 transitions.
[2020-11-25 07:50:53,747 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3558 states and 4052 transitions.
[2020-11-25 07:50:53,776 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3558 to 3232.
[2020-11-25 07:50:53,776 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3232 states.
[2020-11-25 07:50:53,780 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3232 states to 3232 states and 3644 transitions.
[2020-11-25 07:50:53,780 INFO  L751         BuchiCegarLoop]: Abstraction has 3232 states and 3644 transitions.
[2020-11-25 07:50:53,780 INFO  L631         BuchiCegarLoop]: Abstraction has 3232 states and 3644 transitions.
[2020-11-25 07:50:53,780 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:50:53,780 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3232 states and 3644 transitions.
[2020-11-25 07:50:53,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:50:53,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:53,786 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:53,789 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:53,789 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND FALSE  !(__exception)
[L1563]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3753]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3753]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  COND FALSE  !(revert)
[L3757]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3757]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  COND FALSE  !(revert)
[L3761]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3761]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3762]  COND FALSE  !(revert)
[L3765]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3765]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3766]  COND FALSE  !(revert)
[L3769]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3416]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3416]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  COND FALSE  !(revert)
[L3420]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3420]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3421]  COND FALSE  !(revert)
[L3424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3425]  COND FALSE  !(revert)
[L3428]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3428]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3429]  COND FALSE  !(revert)
[L3432]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3385]              assume msgsender_MSG != null;
[L3386]              Balance[this] := 0;
[L3432]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3433]  COND FALSE  !(revert)
[L3769]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3770]  COND FALSE  !(revert)
[L3773]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3708]              assume msgsender_MSG != null;
[L3709]              Balance[this] := 0;
[L3710]              name_UPCToken[this] := 995162267;
[L3711]              symbol_UPCToken[this] := 189219111;
[L3712]              decimals_UPCToken[this] := 18;
[L3713]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3715]              owner_Ownable[this] := msgsender_MSG;
[L3716]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3717]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3718]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3719]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3720]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3773]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3774]  COND FALSE  !(revert)
[L1563]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]              assume !revert && gas >= 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:53,794 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:53,794 INFO  L82        PathProgramCache]: Analyzing trace with hash -391627746, now seen corresponding path program 1 times
[2020-11-25 07:50:53,795 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:53,818 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:54,255 INFO  L134       CoverageAnalysis]: Checked inductivity of 161 backedges. 10 proven. 0 refuted. 0 times theorem prover too weak. 151 trivial. 0 not checked.
[2020-11-25 07:50:54,256 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:54,256 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 07:50:54,256 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:54,257 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 07:50:54,257 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=44, Invalid=376, Unknown=0, NotChecked=0, Total=420
[2020-11-25 07:50:54,257 INFO  L87              Difference]: Start difference. First operand 3232 states and 3644 transitions. cyclomatic complexity: 414 Second operand 21 states.
[2020-11-25 07:50:57,804 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:57,804 INFO  L93              Difference]: Finished difference Result 3322 states and 3746 transitions.
[2020-11-25 07:50:57,805 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 23 states. 
[2020-11-25 07:50:57,805 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3322 states and 3746 transitions.
[2020-11-25 07:50:57,813 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:50:57,823 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3322 states to 3322 states and 3746 transitions.
[2020-11-25 07:50:57,823 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1109
[2020-11-25 07:50:57,823 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1109
[2020-11-25 07:50:57,824 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3322 states and 3746 transitions.
[2020-11-25 07:50:57,827 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:57,827 INFO  L728         BuchiCegarLoop]: Abstraction has 3322 states and 3746 transitions.
[2020-11-25 07:50:57,829 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3322 states and 3746 transitions.
[2020-11-25 07:50:57,854 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3322 to 3147.
[2020-11-25 07:50:57,854 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3147 states.
[2020-11-25 07:50:57,857 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3147 states to 3147 states and 3530 transitions.
[2020-11-25 07:50:57,857 INFO  L751         BuchiCegarLoop]: Abstraction has 3147 states and 3530 transitions.
[2020-11-25 07:50:57,857 INFO  L631         BuchiCegarLoop]: Abstraction has 3147 states and 3530 transitions.
[2020-11-25 07:50:57,857 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:50:57,857 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3147 states and 3530 transitions.
[2020-11-25 07:50:57,861 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:57,861 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:57,861 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:57,863 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:57,863 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND TRUE   __exception
[L1540]              __tmp__Balance := Balance;
[L1541]              __tmp__DType := DType;
[L1542]              __tmp__Alloc := Alloc;
[L1543]              __tmp__balance_ADDR := balance_ADDR;
[L1544]              __tmp__M_Ref_int := M_Ref_int;
[L1545]              __tmp__sum__balances0 := sum__balances0;
[L1546]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1547]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1548]              __tmp__sum__allowances1 := sum__allowances1;
[L1549]              __tmp__Length := Length;
[L1550]              __tmp__now := now;
[L1551]              __tmp___balances_ERC20 := _balances_ERC20;
[L1552]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1553]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1554]              __tmp__owner_Ownable := owner_Ownable;
[L1555]              __tmp___paused_Pausable := _paused_Pausable;
[L1556]              __tmp__name_UPCToken := name_UPCToken;
[L1557]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1558]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1559]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1560]  CALL        call UPCToken_UPCToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3725]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2623]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              __tmp__Balance[this] := 0;
[L2623]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2665]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2623]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              __tmp__Balance[this] := 0;
[L2623]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  COND FALSE  !(revert)
[L2665]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2666]  COND FALSE  !(revert)
[L2669]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2640]              assume msgsender_MSG != null;
[L2641]              __tmp__Balance[this] := 0;
[L2642]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2643]              __tmp__sum__balances0[this] := 0;
[L2644]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2645]              __tmp__sum__allowances1[this] := 0;
[L2646]              __tmp___totalSupply_ERC20[this] := 0;
[L2669]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2670]  COND FALSE  !(revert)
[L3729]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3730]  COND FALSE  !(revert)
[L3733]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3153]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3136]              assume msgsender_MSG != null;
[L3137]              __tmp__Balance[this] := 0;
[L3138]              __tmp__owner_Ownable[this] := null;
[L3153]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  COND FALSE  !(revert)
[L3733]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3734]  COND FALSE  !(revert)
[L3737]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3286]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3153]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3136]              assume msgsender_MSG != null;
[L3137]              __tmp__Balance[this] := 0;
[L3138]              __tmp__owner_Ownable[this] := null;
[L3153]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  COND FALSE  !(revert)
[L3286]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3287]  COND FALSE  !(revert)
[L3290]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3267]              assume msgsender_MSG != null;
[L3268]              __tmp__Balance[this] := 0;
[L3269]              __tmp___paused_Pausable[this] := false;
[L3271]              __tmp___paused_Pausable[this] := false;
[L3290]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3291]  COND FALSE  !(revert)
[L3737]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3738]  COND FALSE  !(revert)
[L3741]  CALL        call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3392]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2623]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              __tmp__Balance[this] := 0;
[L2623]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  COND FALSE  !(revert)
[L3392]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3393]  COND FALSE  !(revert)
[L3396]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2665]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2623]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              __tmp__Balance[this] := 0;
[L2623]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  COND FALSE  !(revert)
[L2665]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2666]  COND FALSE  !(revert)
[L2669]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2640]              assume msgsender_MSG != null;
[L2641]              __tmp__Balance[this] := 0;
[L2642]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2643]              __tmp__sum__balances0[this] := 0;
[L2644]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2645]              __tmp__sum__allowances1[this] := 0;
[L2646]              __tmp___totalSupply_ERC20[this] := 0;
[L2669]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2670]  COND FALSE  !(revert)
[L3396]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3153]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3136]              assume msgsender_MSG != null;
[L3137]              __tmp__Balance[this] := 0;
[L3138]              __tmp__owner_Ownable[this] := null;
[L3153]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  COND FALSE  !(revert)
[L3400]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3286]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3153]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3136]              assume msgsender_MSG != null;
[L3137]              __tmp__Balance[this] := 0;
[L3138]              __tmp__owner_Ownable[this] := null;
[L3153]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  COND FALSE  !(revert)
[L3286]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3287]  COND FALSE  !(revert)
[L3290]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3267]              assume msgsender_MSG != null;
[L3268]              __tmp__Balance[this] := 0;
[L3269]              __tmp___paused_Pausable[this] := false;
[L3271]              __tmp___paused_Pausable[this] := false;
[L3290]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3291]  COND FALSE  !(revert)
[L3404]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3377]              assume msgsender_MSG != null;
[L3378]              __tmp__Balance[this] := 0;
[L3408]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3741]  RET         call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3742]  COND FALSE  !(revert)
[L3745]  CALL        call UPCToken_UPCToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3691]              assume msgsender_MSG != null;
[L3692]              __tmp__Balance[this] := 0;
[L3693]              __tmp__name_UPCToken[this] := 995162267;
[L3694]              __tmp__symbol_UPCToken[this] := 189219111;
[L3695]              __tmp__decimals_UPCToken[this] := 18;
[L3696]              __tmp__INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3698]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3699]              __tmp___totalSupply_ERC20[this] := __tmp__INIT_TOTALSUPPLY_UPCToken[this];
[L3700]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]];
[L3701]              __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]] := __tmp___totalSupply_ERC20[this];
[L3702]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]];
[L3745]  RET         call UPCToken_UPCToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3746]  COND FALSE  !(revert)
[L1560]  RET         call UPCToken_UPCToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1561]              assume revert || gas < 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:57,867 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:57,867 INFO  L82        PathProgramCache]: Analyzing trace with hash 1987930503, now seen corresponding path program 1 times
[2020-11-25 07:50:57,868 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:57,879 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:57,932 INFO  L134       CoverageAnalysis]: Checked inductivity of 161 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 161 trivial. 0 not checked.
[2020-11-25 07:50:57,933 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:57,933 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:57,933 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:57,933 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:57,933 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:57,933 INFO  L87              Difference]: Start difference. First operand 3147 states and 3530 transitions. cyclomatic complexity: 386 Second operand 4 states.
[2020-11-25 07:50:58,214 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:58,215 INFO  L93              Difference]: Finished difference Result 3778 states and 4333 transitions.
[2020-11-25 07:50:58,215 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:58,215 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3778 states and 4333 transitions.
[2020-11-25 07:50:58,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 07:50:58,235 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3778 states to 3629 states and 4178 transitions.
[2020-11-25 07:50:58,235 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1199
[2020-11-25 07:50:58,236 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1199
[2020-11-25 07:50:58,236 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3629 states and 4178 transitions.
[2020-11-25 07:50:58,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:58,240 INFO  L728         BuchiCegarLoop]: Abstraction has 3629 states and 4178 transitions.
[2020-11-25 07:50:58,242 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3629 states and 4178 transitions.
[2020-11-25 07:50:58,265 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3629 to 2998.
[2020-11-25 07:50:58,265 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2998 states.
[2020-11-25 07:50:58,268 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2998 states to 2998 states and 3374 transitions.
[2020-11-25 07:50:58,268 INFO  L751         BuchiCegarLoop]: Abstraction has 2998 states and 3374 transitions.
[2020-11-25 07:50:58,268 INFO  L631         BuchiCegarLoop]: Abstraction has 2998 states and 3374 transitions.
[2020-11-25 07:50:58,268 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:50:58,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2998 states and 3374 transitions.
[2020-11-25 07:50:58,272 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:58,273 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:58,273 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:58,274 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:58,274 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND FALSE  !(__exception)
[L1563]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3753]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3753]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  COND FALSE  !(revert)
[L3757]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3757]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  COND FALSE  !(revert)
[L3761]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3761]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3762]  COND FALSE  !(revert)
[L3765]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3765]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3766]  COND FALSE  !(revert)
[L3769]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3416]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3416]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  COND FALSE  !(revert)
[L3420]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3420]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3421]  COND FALSE  !(revert)
[L3424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3425]  COND FALSE  !(revert)
[L3428]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3428]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3429]  COND FALSE  !(revert)
[L3432]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3385]              assume msgsender_MSG != null;
[L3386]              Balance[this] := 0;
[L3432]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3433]  COND FALSE  !(revert)
[L3769]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3770]  COND FALSE  !(revert)
[L3773]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3708]              assume msgsender_MSG != null;
[L3709]              Balance[this] := 0;
[L3710]              name_UPCToken[this] := 995162267;
[L3711]              symbol_UPCToken[this] := 189219111;
[L3712]              decimals_UPCToken[this] := 18;
[L3713]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3715]              owner_Ownable[this] := msgsender_MSG;
[L3716]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3717]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3718]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3719]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3720]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3773]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3774]  COND FALSE  !(revert)
[L1563]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]              assume !revert && gas >= 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND FALSE  !(DType[this] == UPCToken)
[L2742]  COND TRUE   DType[this] == ERC20Pausable
[L2743]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2743]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2744]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:58,279 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:58,279 INFO  L82        PathProgramCache]: Analyzing trace with hash -371738555, now seen corresponding path program 1 times
[2020-11-25 07:50:58,280 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:58,293 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:58,372 INFO  L134       CoverageAnalysis]: Checked inductivity of 221 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 220 trivial. 0 not checked.
[2020-11-25 07:50:58,373 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:58,373 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 07:50:58,373 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:58,373 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:50:58,373 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:50:58,373 INFO  L87              Difference]: Start difference. First operand 2998 states and 3374 transitions. cyclomatic complexity: 379 Second operand 7 states.
[2020-11-25 07:50:58,481 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:58,482 INFO  L93              Difference]: Finished difference Result 3046 states and 3421 transitions.
[2020-11-25 07:50:58,482 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:50:58,482 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3046 states and 3421 transitions.
[2020-11-25 07:50:58,487 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:58,494 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3046 states to 2980 states and 3348 transitions.
[2020-11-25 07:50:58,494 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1036
[2020-11-25 07:50:58,495 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1036
[2020-11-25 07:50:58,495 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2980 states and 3348 transitions.
[2020-11-25 07:50:58,498 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:58,498 INFO  L728         BuchiCegarLoop]: Abstraction has 2980 states and 3348 transitions.
[2020-11-25 07:50:58,501 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2980 states and 3348 transitions.
[2020-11-25 07:50:58,517 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2980 to 2980.
[2020-11-25 07:50:58,517 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2980 states.
[2020-11-25 07:50:58,520 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2980 states to 2980 states and 3348 transitions.
[2020-11-25 07:50:58,520 INFO  L751         BuchiCegarLoop]: Abstraction has 2980 states and 3348 transitions.
[2020-11-25 07:50:58,520 INFO  L631         BuchiCegarLoop]: Abstraction has 2980 states and 3348 transitions.
[2020-11-25 07:50:58,520 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:50:58,520 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2980 states and 3348 transitions.
[2020-11-25 07:50:58,524 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:58,524 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:58,524 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:58,525 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:58,526 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC20Pausable0 := false;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]     CALL        call main();
[L5738]              assume null == 0;
[L5739]  CALL        call this := FreshRefGenerator__success();
[L2443]              havoc newRef;
[L2444]              assume Alloc[newRef] == false;
[L2445]              Alloc[newRef] := true;
[L2446]              assume newRef != null;
[L5739]  RET         call this := FreshRefGenerator__success();
[L5740]              assume now >= 0;
[L5741]              assume DType[this] == UPCToken;
[L5742]              assume msgvalue_MSG == 0;
[L5743]              gas := gas - 53000;
[L5744]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1537]              havoc __exception;
[L1538]              revert := false;
[L1539]  COND FALSE  !(__exception)
[L1563]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3753]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3753]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  COND FALSE  !(revert)
[L3757]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3757]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  COND FALSE  !(revert)
[L3761]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3761]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3762]  COND FALSE  !(revert)
[L3765]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3765]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3766]  COND FALSE  !(revert)
[L3769]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3416]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L3416]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  COND FALSE  !(revert)
[L3420]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2677]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2631]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2616]              assume msgsender_MSG != null;
[L2617]              Balance[this] := 0;
[L2631]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  COND FALSE  !(revert)
[L2677]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  COND FALSE  !(revert)
[L2681]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]              assume msgsender_MSG != null;
[L2654]              Balance[this] := 0;
[L2655]              _balances_ERC20[this] := zeroRefintArr();
[L2656]              sum__balances0[this] := 0;
[L2657]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2658]              sum__allowances1[this] := 0;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2681]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L3420]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3421]  COND FALSE  !(revert)
[L3424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3425]  COND FALSE  !(revert)
[L3428]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3298]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3161]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]              assume msgsender_MSG != null;
[L3146]              Balance[this] := 0;
[L3147]              owner_Ownable[this] := null;
[L3161]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  COND FALSE  !(revert)
[L3298]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  COND FALSE  !(revert)
[L3302]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]              assume msgsender_MSG != null;
[L3278]              Balance[this] := 0;
[L3279]              _paused_Pausable[this] := false;
[L3281]              _paused_Pausable[this] := false;
[L3302]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3303]  COND FALSE  !(revert)
[L3428]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3429]  COND FALSE  !(revert)
[L3432]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3385]              assume msgsender_MSG != null;
[L3386]              Balance[this] := 0;
[L3432]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3433]  COND FALSE  !(revert)
[L3769]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3770]  COND FALSE  !(revert)
[L3773]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3708]              assume msgsender_MSG != null;
[L3709]              Balance[this] := 0;
[L3710]              name_UPCToken[this] := 995162267;
[L3711]              symbol_UPCToken[this] := 189219111;
[L3712]              decimals_UPCToken[this] := 18;
[L3713]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3715]              owner_Ownable[this] := msgsender_MSG;
[L3716]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3717]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3718]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3719]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3720]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3773]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3774]  COND FALSE  !(revert)
[L1563]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]              assume !revert && gas >= 0;
[L5744]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5745]              assume !revert && gas >= 0;
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5748]  CALL        call CorralChoice_UPCToken(this);
[L5583]              havoc msgsender_MSG;
[L5584]              havoc msgvalue_MSG;
[L5585]              havoc choice;
[L5586]              havoc __ret_0_totalSupply;
[L5587]              havoc account_s242;
[L5588]              havoc __ret_0_balanceOf;
[L5589]              havoc to_s648;
[L5590]              havoc value_s648;
[L5591]              havoc __ret_0_transfer;
[L5592]              havoc owner_s277;
[L5593]              havoc spender_s277;
[L5594]              havoc __ret_0_allowance;
[L5595]              havoc spender_s687;
[L5596]              havoc value_s687;
[L5597]              havoc __ret_0_approve;
[L5598]              havoc from_s669;
[L5599]              havoc to_s669;
[L5600]              havoc value_s669;
[L5601]              havoc __ret_0_transferFrom;
[L5602]              havoc spender_s705;
[L5603]              havoc addedValue_s705;
[L5604]              havoc __ret_0_increaseAllowance;
[L5605]              havoc spender_s723;
[L5606]              havoc subtractedValue_s723;
[L5607]              havoc __ret_0_decreaseAllowance;
[L5608]              havoc __ret_0_owner;
[L5609]              havoc _newOwner_s519;
[L5610]              havoc __ret_0_paused;
[L5611]              havoc __ret_0_name;
[L5612]              havoc __ret_0_symbol;
[L5613]              havoc __ret_0_decimals;
[L5614]              havoc tmpNow;
[L5615]              havoc gas;
[L5616]              assume gas > 4000000 && gas <= 8000000;
[L5617]              tmpNow := now;
[L5618]              havoc now;
[L5619]              assume now > tmpNow;
[L5620]              assume msgsender_MSG != null;
[L5621]              assume DType[msgsender_MSG] != SafeMath;
[L5622]              assume DType[msgsender_MSG] != IERC20;
[L5623]              assume DType[msgsender_MSG] != ERC20;
[L5624]              assume DType[msgsender_MSG] != Ownable;
[L5625]              assume DType[msgsender_MSG] != Pausable;
[L5626]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5627]              assume DType[msgsender_MSG] != UPCToken;
[L5628]              Alloc[msgsender_MSG] := true;
[L5629]  COND FALSE  !(choice == 16)
[L5635]  COND FALSE  !(choice == 15)
[L5641]  COND TRUE   choice == 14
[L5642]              gas := gas - 21000;
[L5643]  COND TRUE   gas >= 0
[L5644]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5645]              assume msgvalue_MSG == 0;
[L5646]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s648 && (value_s648 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s648] + value_s648 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC20Pausable0 := true;
[L2]                 call_transfer_ERC20Pausable0 := false;
[L2]                 revert := revert_hold;
[L1221]              havoc __exception;
[L1222]              revert := false;
[L1223]  COND FALSE  !(__exception)
[L1247]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3467]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(!!_paused_Pausable[this])
[L3467]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3468]  COND FALSE  !(revert)
[L3471]  COND TRUE   DType[this] == UPCToken
[L3472]  CALL        call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2737]  COND TRUE   DType[this] == UPCToken
[L2738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3067]              __var_4 := null;
[L3068]  COND FALSE  !(!(sender_s444 != null))
[L3072]              __var_5 := null;
[L3073]  COND FALSE  !(!(recipient_s444 != null))
[L3077]  CALL        call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L2520]  COND FALSE  !(!(b_s53 <= a_s53))
[L2524]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2525]              __ret_0_ := c_s53;
[L3077]  RET         call __var_6 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s444], amount_s444, -412855710);
[L3078]  COND FALSE  !(revert)
[L3081]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s444];
[L3082]              _balances_ERC20[this][sender_s444] := __var_6;
[L3083]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s444];
[L3084]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L2496]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2497]  COND FALSE  !(!(c_s26 >= a_s26))
[L2501]              __ret_0_ := c_s26;
[L3084]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s444], amount_s444);
[L3085]  COND FALSE  !(revert)
[L3088]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s444];
[L3089]              _balances_ERC20[this][recipient_s444] := __var_7;
[L3090]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s444];
[L3091]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2739]  COND FALSE  !(revert)
[L2755]              __ret_0_ := true;
[L3472]  RET         call __var_11 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3473]  COND FALSE  !(revert)
[L3484]              __ret_0_ := __var_11;
[L1247]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1248]              assume !revert && gas >= 0;
[L5646]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5748]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:58,530 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:58,530 INFO  L82        PathProgramCache]: Analyzing trace with hash 268195393, now seen corresponding path program 1 times
[2020-11-25 07:50:58,531 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:58,554 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:58,711 INFO  L134       CoverageAnalysis]: Checked inductivity of 221 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 221 trivial. 0 not checked.
[2020-11-25 07:50:58,712 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:58,712 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 07:50:58,712 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:58,712 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 07:50:58,712 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=129, Unknown=0, NotChecked=0, Total=156
[2020-11-25 07:50:58,712 INFO  L87              Difference]: Start difference. First operand 2980 states and 3348 transitions. cyclomatic complexity: 371 Second operand 13 states.
[2020-11-25 07:51:00,156 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:51:00,156 INFO  L93              Difference]: Finished difference Result 1777 states and 1988 transitions.
[2020-11-25 07:51:00,156 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 07:51:00,156 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1777 states and 1988 transitions.
[2020-11-25 07:51:00,159 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:51:00,159 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1777 states to 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:51:00,159 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:51:00,159 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:51:00,159 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:51:00,159 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:51:00,159 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:51:00,159 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:51:00,162 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:51:00 BasicIcfg
[2020-11-25 07:51:00,162 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:51:00,162 INFO  L168              Benchmark]: Toolchain (without parser) took 11646.80 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 907.5 MB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -439.1 MB). Peak memory consumption was 468.5 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,163 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,163 INFO  L168              Benchmark]: Boogie Preprocessor took 132.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,164 INFO  L168              Benchmark]: UtopiaSpecLang took 68.12 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,164 INFO  L168              Benchmark]: Boogie Printer took 18.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,165 INFO  L168              Benchmark]: RCFGBuilder took 944.79 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.7 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,165 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.94 ms. Allocated memory is still 1.0 GB. Free memory was 752.7 MB in the beginning and 749.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,165 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1573.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.1 MB). Free memory was 749.1 MB in the beginning and 760.8 MB in the end (delta: -11.7 MB). Peak memory consumption was 196.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,166 INFO  L168              Benchmark]: BlockEncodingV2 took 190.90 ms. Allocated memory is still 1.2 GB. Free memory was 760.8 MB in the beginning and 685.2 MB in the end (delta: 75.6 MB). Peak memory consumption was 75.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,166 INFO  L168              Benchmark]: BuchiAutomizer took 8671.73 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 699.4 MB). Free memory was 685.2 MB in the beginning and 1.4 GB in the end (delta: -689.1 MB). Peak memory consumption was 10.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:51:00,169 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5286 locations, 9648 edges
  - StatisticsResult: Encoded RCFG
    5148 locations, 9305 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 132.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.12 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 944.79 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.7 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.94 ms. Allocated memory is still 1.0 GB. Free memory was 752.7 MB in the beginning and 749.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1573.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.1 MB). Free memory was 749.1 MB in the beginning and 760.8 MB in the end (delta: -11.7 MB). Peak memory consumption was 196.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 190.90 ms. Allocated memory is still 1.2 GB. Free memory was 760.8 MB in the beginning and 685.2 MB in the end (delta: 75.6 MB). Peak memory consumption was 75.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8671.73 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 699.4 MB). Free memory was 685.2 MB in the beginning and 1.4 GB in the end (delta: -689.1 MB). Peak memory consumption was 10.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2069 locations, 2936 edges
  - StatisticsResult: BuchiProgram size
    5286 locations, 9648 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.6s and 7 iterations.  TraceHistogramMax:4. Analysis of lassos took 1.2s. Construction of modules took 5.2s. BÃ¼chi inclusion checks took 1.5s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1132 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3232 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18696 SDtfs, 15112 SDslu, 41112 SDs, 0 SdLazy, 62916 SolverSat, 2596 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 5.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC20Pausable0) ==> ( <>(fail_transfer_ERC20Pausable0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
