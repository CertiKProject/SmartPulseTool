This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:52:49,130 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:52:49,131 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:52:49,139 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:52:49,139 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:52:49,139 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:52:49,140 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:52:49,141 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:52:49,142 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:52:49,142 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:52:49,143 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:52:49,143 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:52:49,143 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:52:49,144 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:52:49,145 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:52:49,145 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:52:49,145 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:52:49,146 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:52:49,147 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:52:49,149 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:52:49,149 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:52:49,150 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:52:49,152 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:52:49,152 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:52:49,152 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:52:49,153 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:52:49,153 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:52:49,154 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:52:49,154 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:52:49,154 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:52:49,155 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:52:49,155 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:52:49,156 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:52:49,156 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:52:49,157 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:52:49,157 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:52:49,157 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:52:49,158 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:52:49,158 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:52:49,158 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:52:49,159 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:52:49,159 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:52:49,164 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:52:49,164 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:52:49,165 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:52:49,165 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:52:49,165 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:52:49,165 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:52:49,166 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:52:49,166 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:52:49,166 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:52:49,186 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:52:49,200 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:52:49,204 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:52:49,205 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:52:49,205 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:52:49,206 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl
[2020-11-25 05:52:49,206 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl'
[2020-11-25 05:52:49,288 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:52:49,289 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:52:49,289 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:52:49,289 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:52:49,289 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:52:49,306 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,308 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,339 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,340 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,362 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,374 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,382 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,391 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:52:49,391 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:52:49,392 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:52:49,394 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:52:49,397 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/1) ...
[2020-11-25 05:52:49,416 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:49,422 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:49,430 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:49,436 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s175 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s175,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 05:52:49,438 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][msg.sender][spender_s175]==amount_s175 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && _total_StrikeFarm[this]==( old(_total_StrikeFarm[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s175,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[amount_s175,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 05:52:49,443 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:52:49,443 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:52:49,452 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:49 PropertyContainer
[2020-11-25 05:52:49,452 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:52:49,453 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:52:49,453 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:52:49,453 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:52:49,454 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/2) ...
[2020-11-25 05:52:49,454 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:52:49,454 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:52:49,472 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:49" (2/2) ...
[2020-11-25 05:52:49,472 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:52:49,473 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:52:49,473 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:52:49,473 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:52:49,474 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/2) ...
[2020-11-25 05:52:49,525 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:52:49,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:52:49,526 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:52:49,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:52:49,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:52:49,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:52:49,527 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:52:49,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:52:49,528 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:52:49,529 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:52:49,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:52:49,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:52:49,530 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StrikeFarm
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:52:49,531 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:52:49,532 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:49,533 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:52:49,534 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:52:49,535 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:52:49,536 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:52:49,536 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:52:49,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:52:49,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,538 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:52:49,539 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:49,540 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:52:49,541 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:52:49,542 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:52:49,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:52:49,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:52:49,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StrikeFarm
[2020-11-25 05:52:49,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:52:49,543 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:52:49,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:52:49,744 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:49,745 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:49,745 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:49,950 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:52:50,156 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:52:50,156 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:52:50,158 INFO  L202        PluginConnector]: Adding new model StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:50 BoogieIcfgContainer
[2020-11-25 05:52:50,158 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:49" (2/2) ...
[2020-11-25 05:52:50,158 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:52:50,158 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@c701d90 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:50, skipping insertion in model container
[2020-11-25 05:52:50,159 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:52:50,159 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:52:50,159 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:52:50,160 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:52:50,161 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/3) ...
[2020-11-25 05:52:50,161 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6205616d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:50, skipping insertion in model container
[2020-11-25 05:52:50,161 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:49" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:52:50,202 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:50 NWAContainer
[2020-11-25 05:52:50,202 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:52:50,202 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:52:50,203 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:52:50,203 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:52:50,204 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:50" (3/4) ...
[2020-11-25 05:52:50,205 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@79c6494f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:50, skipping insertion in model container
[2020-11-25 05:52:50,205 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:50" (4/4) ...
[2020-11-25 05:52:50,208 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:52:50,212 INFO  L110   BuchiProductObserver]: Initial RCFG 1477 locations, 2079 edges
[2020-11-25 05:52:50,212 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:52:50,224 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:52:51,442 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:52:51,447 INFO  L110   BuchiProductObserver]: BuchiProgram size 3736 locations, 6791 edges
[2020-11-25 05:52:51,447 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:51 BoogieIcfgContainer
[2020-11-25 05:52:51,447 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:52:51,447 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:52:51,447 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:52:51,449 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:52:51,449 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:51" (1/1) ...
[2020-11-25 05:52:51,514 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:52:51,518 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:52:51,528 INFO  L313           BlockEncoder]: Initial Icfg 3736 locations, 6791 edges
[2020-11-25 05:52:51,528 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:52:51,529 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:52:51,529 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:52:51,530 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:52:51,540 INFO  L70    emoveInfeasibleEdges]: Removed 150 edges and 15 locations because of local infeasibility
[2020-11-25 05:52:51,548 INFO  L70        RemoveSinkStates]: Removed 98 edges and 65 locations by removing sink states
[2020-11-25 05:52:51,557 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:52:51,561 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:52:51,564 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:52:51,564 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:52:51,568 INFO  L313           BlockEncoder]: Encoded RCFG 3636 locations, 6514 edges
[2020-11-25 05:52:51,568 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:52:51 BasicIcfg
[2020-11-25 05:52:51,568 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:52:51,569 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:52:51,569 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:52:51,571 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:52:51,571 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,571 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:52:49" (1/6) ...
[2020-11-25 05:52:51,573 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50332abc and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:51, skipping insertion in model container
[2020-11-25 05:52:51,573 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,573 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:52:49" (2/6) ...
[2020-11-25 05:52:51,573 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50332abc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:51, skipping insertion in model container
[2020-11-25 05:52:51,573 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,573 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:52:50" (3/6) ...
[2020-11-25 05:52:51,574 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50332abc and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:52:51, skipping insertion in model container
[2020-11-25 05:52:51,574 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,574 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:52:50" (4/6) ...
[2020-11-25 05:52:51,574 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50332abc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:52:51, skipping insertion in model container
[2020-11-25 05:52:51,574 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,574 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:52:51" (5/6) ...
[2020-11-25 05:52:51,574 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50332abc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:52:51, skipping insertion in model container
[2020-11-25 05:52:51,574 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:52:51,574 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:52:51" (6/6) ...
[2020-11-25 05:52:51,575 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_approve.bpl_BEv2
[2020-11-25 05:52:51,609 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:52:51,610 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:52:51,610 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:52:51,610 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:52:51,610 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:52:51,610 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:52:51,610 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:52:51,610 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:52:51,610 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:52:51,640 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3636 states.
[2020-11-25 05:52:51,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:51,687 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:51,687 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:51,694 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:51,694 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:51,694 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:52:51,695 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3636 states.
[2020-11-25 05:52:51,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:51,711 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:51,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:51,713 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:51,713 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND TRUE   revert
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND TRUE   choice == 11
[L4031]              gas := gas - 21000;
[L4032]  COND FALSE  !(gas >= 0)
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:51,726 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:51,726 INFO  L82        PathProgramCache]: Analyzing trace with hash -968154066, now seen corresponding path program 1 times
[2020-11-25 05:52:51,730 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:51,750 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:51,785 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:52:51,787 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:51,787 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:52:51,791 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:51,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:52:51,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:52:51,969 INFO  L87              Difference]: Start difference. First operand 3636 states. Second operand 3 states.
[2020-11-25 05:52:52,122 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:52,123 INFO  L93              Difference]: Finished difference Result 3118 states and 5102 transitions.
[2020-11-25 05:52:52,123 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:52:52,124 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3118 states and 5102 transitions.
[2020-11-25 05:52:52,141 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:52,170 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3118 states to 3118 states and 5102 transitions.
[2020-11-25 05:52:52,170 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 05:52:52,173 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 685
[2020-11-25 05:52:52,173 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3118 states and 5102 transitions.
[2020-11-25 05:52:52,184 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:52,184 INFO  L728         BuchiCegarLoop]: Abstraction has 3118 states and 5102 transitions.
[2020-11-25 05:52:52,198 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3118 states and 5102 transitions.
[2020-11-25 05:52:52,261 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3118 to 2698.
[2020-11-25 05:52:52,262 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2698 states.
[2020-11-25 05:52:52,272 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2698 states to 2698 states and 4383 transitions.
[2020-11-25 05:52:52,273 INFO  L751         BuchiCegarLoop]: Abstraction has 2698 states and 4383 transitions.
[2020-11-25 05:52:52,273 INFO  L631         BuchiCegarLoop]: Abstraction has 2698 states and 4383 transitions.
[2020-11-25 05:52:52,273 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:52:52,273 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2698 states and 4383 transitions.
[2020-11-25 05:52:52,283 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,284 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:52,284 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:52,287 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:52,287 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND TRUE   !(account_s366 != null)
[L2266]              revert := true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND TRUE   choice == 11
[L4031]              gas := gas - 21000;
[L4032]  COND FALSE  !(gas >= 0)
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:52,291 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:52,292 INFO  L82        PathProgramCache]: Analyzing trace with hash -1039875739, now seen corresponding path program 1 times
[2020-11-25 05:52:52,293 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:52,306 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:52,341 INFO  L134       CoverageAnalysis]: Checked inductivity of 19 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 19 trivial. 0 not checked.
[2020-11-25 05:52:52,341 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:52,341 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:52:52,342 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:52,343 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:52:52,343 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:52:52,343 INFO  L87              Difference]: Start difference. First operand 2698 states and 4383 transitions. cyclomatic complexity: 1687 Second operand 4 states.
[2020-11-25 05:52:52,610 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:52,610 INFO  L93              Difference]: Finished difference Result 2387 states and 2798 transitions.
[2020-11-25 05:52:52,610 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:52:52,610 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2387 states and 2798 transitions.
[2020-11-25 05:52:52,619 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,628 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2387 states to 2387 states and 2798 transitions.
[2020-11-25 05:52:52,628 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 494
[2020-11-25 05:52:52,629 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 533
[2020-11-25 05:52:52,629 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2387 states and 2798 transitions.
[2020-11-25 05:52:52,631 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:52,631 INFO  L728         BuchiCegarLoop]: Abstraction has 2387 states and 2798 transitions.
[2020-11-25 05:52:52,633 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2387 states and 2798 transitions.
[2020-11-25 05:52:52,651 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2387 to 2387.
[2020-11-25 05:52:52,651 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2387 states.
[2020-11-25 05:52:52,654 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2387 states to 2387 states and 2798 transitions.
[2020-11-25 05:52:52,655 INFO  L751         BuchiCegarLoop]: Abstraction has 2387 states and 2798 transitions.
[2020-11-25 05:52:52,655 INFO  L631         BuchiCegarLoop]: Abstraction has 2387 states and 2798 transitions.
[2020-11-25 05:52:52,655 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:52:52,655 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2387 states and 2798 transitions.
[2020-11-25 05:52:52,659 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,659 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:52,659 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:52,661 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:52,661 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND TRUE   !(account_s366 != null)
[L2266]              revert := true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND TRUE   !(owner_s452 != null)
[L2358]              revert := true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND TRUE   revert
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND TRUE   !(owner_s452 != null)
[L2358]              revert := true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND TRUE   revert
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:52,665 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:52,665 INFO  L82        PathProgramCache]: Analyzing trace with hash -1778618192, now seen corresponding path program 1 times
[2020-11-25 05:52:52,666 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:52,675 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:52,726 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 05:52:52,726 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 05:52:52,726 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 05:52:52,727 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:52,727 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:52:52,727 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:52:52,727 INFO  L87              Difference]: Start difference. First operand 2387 states and 2798 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 05:52:52,772 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:52,772 INFO  L93              Difference]: Finished difference Result 2395 states and 2805 transitions.
[2020-11-25 05:52:52,772 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:52:52,772 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2395 states and 2805 transitions.
[2020-11-25 05:52:52,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,789 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2395 states to 2386 states and 2796 transitions.
[2020-11-25 05:52:52,789 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 533
[2020-11-25 05:52:52,790 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 533
[2020-11-25 05:52:52,790 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2386 states and 2796 transitions.
[2020-11-25 05:52:52,792 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:52,792 INFO  L728         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:52:52,795 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2386 states and 2796 transitions.
[2020-11-25 05:52:52,814 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2386 to 2386.
[2020-11-25 05:52:52,814 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2386 states.
[2020-11-25 05:52:52,818 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2386 states to 2386 states and 2796 transitions.
[2020-11-25 05:52:52,818 INFO  L751         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:52:52,818 INFO  L631         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:52:52,818 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:52:52,818 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2386 states and 2796 transitions.
[2020-11-25 05:52:52,824 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,824 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:52,824 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:52,826 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:52,826 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND TRUE   !(c_s533 >= a_s533)
[L2509]              revert := true;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND TRUE   revert
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND TRUE   !(owner_s452 != null)
[L2358]              revert := true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND TRUE   revert
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND TRUE   !(owner_s452 != null)
[L2358]              revert := true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND TRUE   revert
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:52,830 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:52,830 INFO  L82        PathProgramCache]: Analyzing trace with hash 545612118, now seen corresponding path program 1 times
[2020-11-25 05:52:52,831 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:52,840 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:52,901 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:52:52,901 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:52,902 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:52:52,902 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:52,903 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:52:52,903 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:52:52,903 INFO  L87              Difference]: Start difference. First operand 2386 states and 2796 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 05:52:52,948 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:52,948 INFO  L93              Difference]: Finished difference Result 2794 states and 3202 transitions.
[2020-11-25 05:52:52,948 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:52:52,948 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2794 states and 3202 transitions.
[2020-11-25 05:52:52,955 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:52:52,964 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2794 states to 2621 states and 2998 transitions.
[2020-11-25 05:52:52,964 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 05:52:52,965 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 613
[2020-11-25 05:52:52,965 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2621 states and 2998 transitions.
[2020-11-25 05:52:52,967 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:52,967 INFO  L728         BuchiCegarLoop]: Abstraction has 2621 states and 2998 transitions.
[2020-11-25 05:52:52,969 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2621 states and 2998 transitions.
[2020-11-25 05:52:52,984 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2621 to 2265.
[2020-11-25 05:52:52,984 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2265 states.
[2020-11-25 05:52:52,990 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2265 states to 2265 states and 2556 transitions.
[2020-11-25 05:52:52,990 INFO  L751         BuchiCegarLoop]: Abstraction has 2265 states and 2556 transitions.
[2020-11-25 05:52:52,990 INFO  L631         BuchiCegarLoop]: Abstraction has 2265 states and 2556 transitions.
[2020-11-25 05:52:52,990 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:52:52,990 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2265 states and 2556 transitions.
[2020-11-25 05:52:52,993 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:52:52,993 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:52,993 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:52,994 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:52,994 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND FALSE  !(!(owner_s452 != null))
[L2361]              __var_23 := null;
[L2362]  COND FALSE  !(!(spender_s452 != null))
[L2366]              sum__allowances1[owner_s452] := sum__allowances1[owner_s452] - _allowances_ERC20[this][owner_s452][spender_s452];
[L2367]              _allowances_ERC20[this][owner_s452][spender_s452] := amount_s452;
[L2368]              sum__allowances1[owner_s452] := sum__allowances1[owner_s452] + _allowances_ERC20[this][owner_s452][spender_s452];
[L2369]              assert { :EventEmitted "Approval_ERC20" } true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND FALSE  !(revert)
[L1828]              __ret_0_ := true;
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L487]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1802]  COND TRUE   DType[this] == StrikeFarm
[L1803]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1803]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1804]  COND FALSE  !(revert)
[L1815]  COND TRUE   DType[this] == StrikeFarm
[L1816]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2356]              __var_22 := null;
[L2357]  COND FALSE  !(!(owner_s452 != null))
[L2361]              __var_23 := null;
[L2362]  COND FALSE  !(!(spender_s452 != null))
[L2366]              sum__allowances1[owner_s452] := sum__allowances1[owner_s452] - _allowances_ERC20[this][owner_s452][spender_s452];
[L2367]              _allowances_ERC20[this][owner_s452][spender_s452] := amount_s452;
[L2368]              sum__allowances1[owner_s452] := sum__allowances1[owner_s452] + _allowances_ERC20[this][owner_s452][spender_s452];
[L2369]              assert { :EventEmitted "Approval_ERC20" } true;
[L1816]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1817]  COND FALSE  !(revert)
[L1828]              __ret_0_ := true;
[L487]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L488]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s175] == amount_s175) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:52,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:52,997 INFO  L82        PathProgramCache]: Analyzing trace with hash -83351233, now seen corresponding path program 1 times
[2020-11-25 05:52:52,998 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:53,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:53,221 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:52:53,221 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:53,221 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 05:52:53,221 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:53,222 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 05:52:53,222 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=238, Unknown=0, NotChecked=0, Total=272
[2020-11-25 05:52:53,222 INFO  L87              Difference]: Start difference. First operand 2265 states and 2556 transitions. cyclomatic complexity: 293 Second operand 17 states.
[2020-11-25 05:52:55,043 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:55,044 INFO  L93              Difference]: Finished difference Result 2386 states and 2699 transitions.
[2020-11-25 05:52:55,044 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 05:52:55,044 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2386 states and 2699 transitions.
[2020-11-25 05:52:55,050 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 05:52:55,072 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2386 states to 2386 states and 2699 transitions.
[2020-11-25 05:52:55,072 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 555
[2020-11-25 05:52:55,073 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 555
[2020-11-25 05:52:55,073 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2386 states and 2699 transitions.
[2020-11-25 05:52:55,078 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:55,078 INFO  L728         BuchiCegarLoop]: Abstraction has 2386 states and 2699 transitions.
[2020-11-25 05:52:55,082 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2386 states and 2699 transitions.
[2020-11-25 05:52:55,101 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2386 to 2356.
[2020-11-25 05:52:55,102 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2356 states.
[2020-11-25 05:52:55,105 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2356 states to 2356 states and 2660 transitions.
[2020-11-25 05:52:55,105 INFO  L751         BuchiCegarLoop]: Abstraction has 2356 states and 2660 transitions.
[2020-11-25 05:52:55,105 INFO  L631         BuchiCegarLoop]: Abstraction has 2356 states and 2660 transitions.
[2020-11-25 05:52:55,105 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:52:55,105 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2356 states and 2660 transitions.
[2020-11-25 05:52:55,109 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:52:55,109 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:55,109 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:55,111 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:55,111 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND TRUE   !(owner_s452 != null)
[L2339]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND TRUE   !(owner_s452 != null)
[L2339]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:55,118 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:55,119 INFO  L82        PathProgramCache]: Analyzing trace with hash 2004154683, now seen corresponding path program 1 times
[2020-11-25 05:52:55,119 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:55,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:52:55,164 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:52:55,165 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:52:55,165 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 05:52:55,165 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:52:55,165 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 05:52:55,165 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 05:52:55,165 INFO  L87              Difference]: Start difference. First operand 2356 states and 2660 transitions. cyclomatic complexity: 308 Second operand 8 states.
[2020-11-25 05:52:55,220 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:52:55,220 INFO  L93              Difference]: Finished difference Result 2384 states and 2700 transitions.
[2020-11-25 05:52:55,220 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:52:55,220 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2384 states and 2700 transitions.
[2020-11-25 05:52:55,226 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:52:55,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2384 states to 2360 states and 2674 transitions.
[2020-11-25 05:52:55,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 555
[2020-11-25 05:52:55,233 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 555
[2020-11-25 05:52:55,233 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2360 states and 2674 transitions.
[2020-11-25 05:52:55,235 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:52:55,235 INFO  L728         BuchiCegarLoop]: Abstraction has 2360 states and 2674 transitions.
[2020-11-25 05:52:55,237 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2360 states and 2674 transitions.
[2020-11-25 05:52:55,253 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2360 to 2360.
[2020-11-25 05:52:55,254 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2360 states.
[2020-11-25 05:52:55,256 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2360 states to 2360 states and 2674 transitions.
[2020-11-25 05:52:55,256 INFO  L751         BuchiCegarLoop]: Abstraction has 2360 states and 2674 transitions.
[2020-11-25 05:52:55,256 INFO  L631         BuchiCegarLoop]: Abstraction has 2360 states and 2674 transitions.
[2020-11-25 05:52:55,256 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 05:52:55,256 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2360 states and 2674 transitions.
[2020-11-25 05:52:55,259 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:52:55,259 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:52:55,259 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:52:55,260 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:52:55,261 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND FALSE  !(!(owner_s452 != null))
[L2342]              __var_23 := null;
[L2343]  COND TRUE   !(spender_s452 != null)
[L2344]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND TRUE   choice == 7
[L4056]              gas := gas - 21000;
[L4057]  COND TRUE   gas >= 0
[L4058]              assume amount_s175 >= 0 && amount_s175 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4059]              assume msgvalue_MSG == 0;
[L4060]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND FALSE  !(!(owner_s452 != null))
[L2342]              __var_23 := null;
[L2343]  COND TRUE   !(spender_s452 != null)
[L2344]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:52:55,264 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:55,264 INFO  L82        PathProgramCache]: Analyzing trace with hash -765277117, now seen corresponding path program 1 times
[2020-11-25 05:52:55,264 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:55,274 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:52:55,288 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:52:55,361 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:55,361 INFO  L82        PathProgramCache]: Analyzing trace with hash 1565321065, now seen corresponding path program 1 times
[2020-11-25 05:52:55,362 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:55,367 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:52:55,372 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:52:55,384 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:52:55,385 INFO  L82        PathProgramCache]: Analyzing trace with hash -2057219993, now seen corresponding path program 1 times
[2020-11-25 05:52:55,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:52:55,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:52:55,425 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 89 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 05:52:56,036 WARN  L188               SmtUtils]: Spent 307.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 179
[2020-11-25 05:52:56,478 WARN  L188               SmtUtils]: Spent 439.00 ms on a formula simplification. DAG size of input: 239 DAG size of output: 223
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 05:52:56,619 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification. DAG size of input: 137 DAG size of output: 131
[2020-11-25 05:52:56,805 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 05:52:57,097 WARN  L188               SmtUtils]: Spent 283.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 05:52:57,214 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 216
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 05:52:57,340 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 138
[2020-11-25 05:52:57,348 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-25 05:52:57,959 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 182
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 05:52:58,276 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 223
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
[2020-11-25 05:52:58,732 WARN  L188               SmtUtils]: Spent 233.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 179
[2020-11-25 05:52:59,194 WARN  L188               SmtUtils]: Spent 459.00 ms on a formula simplification. DAG size of input: 238 DAG size of output: 223
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 05:52:59,426 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 05:52:59,722 WARN  L188               SmtUtils]: Spent 287.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 05:53:00,446 WARN  L188               SmtUtils]: Spent 722.00 ms on a formula simplification. DAG size of input: 401 DAG size of output: 394
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 05:53:00,821 WARN  L188               SmtUtils]: Spent 359.00 ms on a formula simplification. DAG size of input: 203 DAG size of output: 194
[2020-11-25 05:53:01,105 WARN  L188               SmtUtils]: Spent 270.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 05:53:01,456 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 194
[2020-11-25 05:53:01,901 WARN  L188               SmtUtils]: Spent 443.00 ms on a formula simplification. DAG size of input: 294 DAG size of output: 293
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 25073 to 50131
[2020-11-25 05:53:02,489 WARN  L188               SmtUtils]: Spent 576.00 ms on a formula simplification. DAG size of input: 299 DAG size of output: 288
[2020-11-25 05:53:02,501 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:02,517 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:02,524 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:53:02 BasicIcfg
[2020-11-25 05:53:02,524 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:53:02,525 INFO  L168              Benchmark]: Toolchain (without parser) took 13236.73 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -668.6 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,525 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,525 INFO  L168              Benchmark]: Boogie Preprocessor took 101.98 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,526 INFO  L168              Benchmark]: UtopiaSpecLang took 60.92 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,526 INFO  L168              Benchmark]: Boogie Printer took 19.95 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,526 INFO  L168              Benchmark]: RCFGBuilder took 685.81 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.3 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,526 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.52 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,527 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1244.64 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -244.9 MB). Peak memory consumption was 184.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,527 INFO  L168              Benchmark]: BlockEncodingV2 took 121.16 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 987.9 MB in the end (delta: 59.8 MB). Peak memory consumption was 59.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,527 INFO  L168              Benchmark]: BuchiAutomizer took 10955.74 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 911.2 MB). Free memory was 987.9 MB in the beginning and 1.6 GB in the end (delta: -621.2 MB). Peak memory consumption was 972.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:02,529 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3736 locations, 6791 edges
  - StatisticsResult: Encoded RCFG
    3636 locations, 6514 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 101.98 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.92 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 19.95 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 685.81 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.3 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.52 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1244.64 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -244.9 MB). Peak memory consumption was 184.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 121.16 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 987.9 MB in the end (delta: 59.8 MB). Peak memory consumption was 59.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10955.74 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 911.2 MB). Free memory was 987.9 MB in the beginning and 1.6 GB in the end (delta: -621.2 MB). Peak memory consumption was 972.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1477 locations, 2079 edges
  - StatisticsResult: BuchiProgram size
    3736 locations, 6791 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 2360 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 10.9s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 7.7s. Construction of modules took 1.7s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 806 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2698 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 16785 SDtfs, 9013 SDslu, 42951 SDs, 0 SdLazy, 24155 SolverSat, 1934 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(879309104) = (new StrikeFarm)({from : 879309106});
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
ERC20(879309104).approve~address~uint256.gas(3979002)({from : 879309098, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND FALSE  !(!(owner_s452 != null))
[L2342]              __var_23 := null;
[L2343]  COND TRUE   !(spender_s452 != null)
[L2344]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);

Loop:
ERC20(879309104).approve~address~uint256.gas(3979001)({from : 879309100, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s175;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L484]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L1769]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1770]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1770]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1771]  COND FALSE  !(revert)
[L1782]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1783]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L2337]              __var_22 := null;
[L2338]  COND FALSE  !(!(owner_s452 != null))
[L2342]              __var_23 := null;
[L2343]  COND TRUE   !(spender_s452 != null)
[L2344]              revert := true;
[L1783]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s175, amount_s175);
[L1784]  COND TRUE   revert
[L484]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);
[L485]               assume revert || gas < 0;
[L4060]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s175, amount_s175);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
