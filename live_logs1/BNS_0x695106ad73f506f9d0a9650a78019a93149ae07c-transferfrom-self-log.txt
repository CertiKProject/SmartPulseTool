This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:14:42,308 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:14:42,309 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:14:42,319 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:14:42,320 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:14:42,321 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:14:42,322 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:14:42,323 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:14:42,325 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:14:42,325 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:14:42,326 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:14:42,326 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:14:42,327 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:14:42,328 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:14:42,329 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:14:42,329 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:14:42,330 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:14:42,331 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:14:42,333 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:14:42,334 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:14:42,334 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:14:42,335 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:14:42,337 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:14:42,337 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:14:42,338 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:14:42,338 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:14:42,338 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:14:42,339 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:14:42,339 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:14:42,339 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:14:42,340 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:14:42,340 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:14:42,341 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:14:42,342 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:14:42,342 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:14:42,342 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:14:42,343 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:14:42,343 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:14:42,343 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:14:42,344 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:14:42,344 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:14:42,345 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:14:42,352 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:14:42,353 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:14:42,353 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:14:42,353 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:14:42,354 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:14:42,354 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:14:42,354 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:14:42,355 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:14:42,355 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:14:42,356 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:14:42,356 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:14:42,356 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:14:42,384 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:14:42,395 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:14:42,398 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:14:42,399 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:14:42,399 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:14:42,400 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl
[2020-11-25 01:14:42,400 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl'
[2020-11-25 01:14:42,486 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:14:42,487 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:14:42,487 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:14:42,487 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:14:42,487 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:14:42,504 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,506 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,546 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,547 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,568 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,579 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,587 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,597 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:14:42,598 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:14:42,598 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:14:42,600 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:14:42,603 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/1) ...
[2020-11-25 01:14:42,625 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:42,631 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:42,638 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:42,645 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s322 || p2!=msg.sender ) && from_s322==to_s322 ) && value_s322<=_balances_ERC20[this][from_s322] ) && value_s322<=_allowed_ERC20[this][from_s322][msg.sender] ) && value_s322>=0 ) && value_s322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s322]>=0 ) && _balances_ERC20[this][to_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s322]>=0 ) && _balances_ERC20[this][from_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s322][msg.sender]>=0 ) && _allowed_ERC20[this][from_s322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:14:42,648 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][from_s322][msg.sender]==( ( old(_allowed_ERC20[this][from_s322][msg.sender]) ) - value_s322 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 01:14:42,656 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:42,657 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:14:42,671 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:42 PropertyContainer
[2020-11-25 01:14:42,671 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:14:42,671 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:14:42,672 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:14:42,672 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:14:42,672 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/2) ...
[2020-11-25 01:14:42,673 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:14:42,673 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:14:42,689 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:42" (2/2) ...
[2020-11-25 01:14:42,689 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:14:42,689 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:14:42,690 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:14:42,690 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:14:42,690 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/2) ...
[2020-11-25 01:14:42,743 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:14:42,743 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:14:42,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:42,744 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:14:42,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:42,745 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:14:42,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:14:42,746 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:14:42,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:14:42,746 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:14:42,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:14:42,746 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:14:42,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:14:42,746 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:42,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:42,746 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:42,747 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 01:14:42,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:42,749 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS
[2020-11-25 01:14:42,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:42,750 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BNS
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:14:42,751 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,752 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:42,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,754 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:42,755 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:42,756 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__success
[2020-11-25 01:14:42,757 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__fail
[2020-11-25 01:14:42,757 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:14:42,757 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:42,757 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:14:42,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:14:42,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:14:42,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:42,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:42,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:14:42,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:42,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:42,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:42,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__fail
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__success
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:42,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:42,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:42,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:42,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BNS
[2020-11-25 01:14:42,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:14:42,765 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:14:42,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:14:43,112 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:43,112 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:43,113 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:43,220 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:43,524 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:14:43,525 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 01:14:43,527 INFO  L202        PluginConnector]: Adding new model BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:43 BoogieIcfgContainer
[2020-11-25 01:14:43,527 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:42" (2/2) ...
[2020-11-25 01:14:43,527 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:14:43,528 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2c07e914 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:43, skipping insertion in model container
[2020-11-25 01:14:43,528 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:14:43,528 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:43,528 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:14:43,530 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:14:43,530 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/3) ...
[2020-11-25 01:14:43,530 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@168989f8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:43, skipping insertion in model container
[2020-11-25 01:14:43,530 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:42" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:14:43,570 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:43 NWAContainer
[2020-11-25 01:14:43,570 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:43,570 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:43,570 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:14:43,571 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:14:43,572 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:43" (3/4) ...
[2020-11-25 01:14:43,573 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@12a7034a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:43, skipping insertion in model container
[2020-11-25 01:14:43,573 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:43" (4/4) ...
[2020-11-25 01:14:43,577 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:14:43,581 INFO  L110   BuchiProductObserver]: Initial RCFG 1601 locations, 2302 edges
[2020-11-25 01:14:43,581 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:14:43,595 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:14:45,083 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:14:45,088 INFO  L110   BuchiProductObserver]: BuchiProgram size 4096 locations, 7561 edges
[2020-11-25 01:14:45,089 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:45 BoogieIcfgContainer
[2020-11-25 01:14:45,089 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:45,089 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:14:45,089 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:14:45,091 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:14:45,091 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:45" (1/1) ...
[2020-11-25 01:14:45,181 INFO  L313           BlockEncoder]: Initial Icfg 4096 locations, 7561 edges
[2020-11-25 01:14:45,182 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:14:45,182 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:45,182 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:14:45,183 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:14:45,194 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 15 locations because of local infeasibility
[2020-11-25 01:14:45,205 INFO  L70        RemoveSinkStates]: Removed 68 edges and 45 locations by removing sink states
[2020-11-25 01:14:45,217 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:14:45,220 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:14:45,223 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:14:45,224 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:14:45,228 INFO  L313           BlockEncoder]: Encoded RCFG 4016 locations, 7344 edges
[2020-11-25 01:14:45,228 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:45 BasicIcfg
[2020-11-25 01:14:45,228 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:14:45,229 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:14:45,229 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:14:45,231 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:14:45,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:42" (1/6) ...
[2020-11-25 01:14:45,232 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ca0ab9 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:45, skipping insertion in model container
[2020-11-25 01:14:45,232 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,232 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:42" (2/6) ...
[2020-11-25 01:14:45,233 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ca0ab9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:45, skipping insertion in model container
[2020-11-25 01:14:45,233 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,233 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:43" (3/6) ...
[2020-11-25 01:14:45,233 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ca0ab9 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:45, skipping insertion in model container
[2020-11-25 01:14:45,233 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,233 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:43" (4/6) ...
[2020-11-25 01:14:45,233 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ca0ab9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:45, skipping insertion in model container
[2020-11-25 01:14:45,233 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,233 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:45" (5/6) ...
[2020-11-25 01:14:45,233 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ca0ab9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:14:45, skipping insertion in model container
[2020-11-25 01:14:45,233 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:45,234 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:45" (6/6) ...
[2020-11-25 01:14:45,234 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-self.bpl_BEv2
[2020-11-25 01:14:45,269 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:14:45,269 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:14:45,269 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:14:45,269 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:14:45,269 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:14:45,269 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:14:45,269 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:14:45,269 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:14:45,270 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:14:45,303 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4016 states.
[2020-11-25 01:14:45,349 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:45,349 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:45,349 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:45,359 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:45,359 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:45,359 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:14:45,359 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4016 states.
[2020-11-25 01:14:45,376 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:45,376 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:45,376 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:45,377 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:45,377 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND TRUE   choice == 13
[L4465]              gas := gas - 21000;
[L4466]  COND FALSE  !(gas >= 0)
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:45,390 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:45,390 INFO  L82        PathProgramCache]: Analyzing trace with hash -1573706896, now seen corresponding path program 1 times
[2020-11-25 01:14:45,393 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:45,416 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:45,453 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:45,456 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:45,457 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:14:45,462 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:45,705 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:14:45,705 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:14:45,707 INFO  L87              Difference]: Start difference. First operand 4016 states. Second operand 4 states.
[2020-11-25 01:14:46,061 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:46,062 INFO  L93              Difference]: Finished difference Result 2412 states and 2903 transitions.
[2020-11-25 01:14:46,063 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:14:46,066 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2412 states and 2903 transitions.
[2020-11-25 01:14:46,086 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,108 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2412 states to 2412 states and 2903 transitions.
[2020-11-25 01:14:46,109 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:14:46,111 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 610
[2020-11-25 01:14:46,111 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2412 states and 2903 transitions.
[2020-11-25 01:14:46,120 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:46,120 INFO  L728         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:14:46,138 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2412 states and 2903 transitions.
[2020-11-25 01:14:46,183 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2412 to 2412.
[2020-11-25 01:14:46,183 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2412 states.
[2020-11-25 01:14:46,188 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2412 states to 2412 states and 2903 transitions.
[2020-11-25 01:14:46,188 INFO  L751         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:14:46,189 INFO  L631         BuchiCegarLoop]: Abstraction has 2412 states and 2903 transitions.
[2020-11-25 01:14:46,189 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:14:46,189 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2412 states and 2903 transitions.
[2020-11-25 01:14:46,194 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,194 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:46,194 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:46,196 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:46,196 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:46,200 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,200 INFO  L82        PathProgramCache]: Analyzing trace with hash -876742779, now seen corresponding path program 1 times
[2020-11-25 01:14:46,201 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,209 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:46,228 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:46,228 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:46,228 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:46,230 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:46,230 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:46,230 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:46,230 INFO  L87              Difference]: Start difference. First operand 2412 states and 2903 transitions. cyclomatic complexity: 493 Second operand 3 states.
[2020-11-25 01:14:46,297 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:46,297 INFO  L93              Difference]: Finished difference Result 3266 states and 3959 transitions.
[2020-11-25 01:14:46,297 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:46,297 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3266 states and 3959 transitions.
[2020-11-25 01:14:46,310 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:46,323 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3266 states to 3266 states and 3959 transitions.
[2020-11-25 01:14:46,323 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 861
[2020-11-25 01:14:46,324 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 861
[2020-11-25 01:14:46,325 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3266 states and 3959 transitions.
[2020-11-25 01:14:46,330 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:46,330 INFO  L728         BuchiCegarLoop]: Abstraction has 3266 states and 3959 transitions.
[2020-11-25 01:14:46,332 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3266 states and 3959 transitions.
[2020-11-25 01:14:46,359 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3266 to 2772.
[2020-11-25 01:14:46,359 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2772 states.
[2020-11-25 01:14:46,364 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2772 states to 2772 states and 3363 transitions.
[2020-11-25 01:14:46,364 INFO  L751         BuchiCegarLoop]: Abstraction has 2772 states and 3363 transitions.
[2020-11-25 01:14:46,364 INFO  L631         BuchiCegarLoop]: Abstraction has 2772 states and 3363 transitions.
[2020-11-25 01:14:46,364 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:14:46,364 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2772 states and 3363 transitions.
[2020-11-25 01:14:46,369 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,369 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:46,369 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:46,371 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:46,372 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND TRUE   !(account_s464 != null)
[L2332]              revert := true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:46,375 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,375 INFO  L82        PathProgramCache]: Analyzing trace with hash -82675734, now seen corresponding path program 1 times
[2020-11-25 01:14:46,376 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,389 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:46,443 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 28 refuted. 0 times theorem prover too weak. 91 trivial. 0 not checked.
[2020-11-25 01:14:46,443 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:14:46,443 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:14:46,443 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:46,444 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:14:46,444 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:14:46,444 INFO  L87              Difference]: Start difference. First operand 2772 states and 3363 transitions. cyclomatic complexity: 593 Second operand 7 states.
[2020-11-25 01:14:46,491 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:46,491 INFO  L93              Difference]: Finished difference Result 2780 states and 3370 transitions.
[2020-11-25 01:14:46,491 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:14:46,491 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2780 states and 3370 transitions.
[2020-11-25 01:14:46,500 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,509 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2780 states to 2771 states and 3361 transitions.
[2020-11-25 01:14:46,510 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 722
[2020-11-25 01:14:46,510 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 722
[2020-11-25 01:14:46,510 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2771 states and 3361 transitions.
[2020-11-25 01:14:46,513 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:46,513 INFO  L728         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:14:46,515 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2771 states and 3361 transitions.
[2020-11-25 01:14:46,539 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2771 to 2771.
[2020-11-25 01:14:46,539 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2771 states.
[2020-11-25 01:14:46,543 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2771 states to 2771 states and 3361 transitions.
[2020-11-25 01:14:46,543 INFO  L751         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:14:46,543 INFO  L631         BuchiCegarLoop]: Abstraction has 2771 states and 3361 transitions.
[2020-11-25 01:14:46,543 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:14:46,544 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2771 states and 3361 transitions.
[2020-11-25 01:14:46,550 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,550 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:46,550 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:46,552 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:46,552 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND TRUE   !(c_s174 >= a_s174)
[L1829]              revert := true;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND TRUE   revert
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:46,555 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,555 INFO  L82        PathProgramCache]: Analyzing trace with hash -819148042, now seen corresponding path program 1 times
[2020-11-25 01:14:46,556 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,566 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:46,631 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-25 01:14:46,632 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:46,632 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:46,632 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:46,633 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:46,633 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:46,633 INFO  L87              Difference]: Start difference. First operand 2771 states and 3361 transitions. cyclomatic complexity: 592 Second operand 3 states.
[2020-11-25 01:14:46,684 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:46,685 INFO  L93              Difference]: Finished difference Result 3265 states and 3789 transitions.
[2020-11-25 01:14:46,685 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:46,685 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3265 states and 3789 transitions.
[2020-11-25 01:14:46,692 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:46,703 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3265 states to 2992 states and 3455 transitions.
[2020-11-25 01:14:46,703 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 775
[2020-11-25 01:14:46,703 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 807
[2020-11-25 01:14:46,703 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2992 states and 3455 transitions.
[2020-11-25 01:14:46,706 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:46,707 INFO  L728         BuchiCegarLoop]: Abstraction has 2992 states and 3455 transitions.
[2020-11-25 01:14:46,709 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2992 states and 3455 transitions.
[2020-11-25 01:14:46,727 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2992 to 2566.
[2020-11-25 01:14:46,727 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2566 states.
[2020-11-25 01:14:46,731 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2566 states to 2566 states and 2927 transitions.
[2020-11-25 01:14:46,731 INFO  L751         BuchiCegarLoop]: Abstraction has 2566 states and 2927 transitions.
[2020-11-25 01:14:46,731 INFO  L631         BuchiCegarLoop]: Abstraction has 2566 states and 2927 transitions.
[2020-11-25 01:14:46,731 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:14:46,731 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2566 states and 2927 transitions.
[2020-11-25 01:14:46,734 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:46,734 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:46,734 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:46,736 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:46,736 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND TRUE   __exception
[L514]               __tmp__Balance := Balance;
[L515]               __tmp__DType := DType;
[L516]               __tmp__Alloc := Alloc;
[L517]               __tmp__balance_ADDR := balance_ADDR;
[L518]               __tmp__M_Ref_int := M_Ref_int;
[L519]               __tmp__sum__balances0 := sum__balances0;
[L520]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]               __tmp__sum__allowed1 := sum__allowed1;
[L523]               __tmp__Length := Length;
[L524]               __tmp__now := now;
[L525]               __tmp___balances_ERC20 := _balances_ERC20;
[L526]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE   __tmp__DType[this] == BNS
[L2042]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]              __var_4 := null;
[L2254]  COND TRUE   !(to_s422 != null)
[L2255]              revert := true;
[L2042]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE   revert
[L531]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]               assume revert || gas < 0;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND TRUE   __exception
[L514]               __tmp__Balance := Balance;
[L515]               __tmp__DType := DType;
[L516]               __tmp__Alloc := Alloc;
[L517]               __tmp__balance_ADDR := balance_ADDR;
[L518]               __tmp__M_Ref_int := M_Ref_int;
[L519]               __tmp__sum__balances0 := sum__balances0;
[L520]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]               __tmp__sum__allowed1 := sum__allowed1;
[L523]               __tmp__Length := Length;
[L524]               __tmp__now := now;
[L525]               __tmp___balances_ERC20 := _balances_ERC20;
[L526]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE   __tmp__DType[this] == BNS
[L2042]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]              __var_4 := null;
[L2254]  COND TRUE   !(to_s422 != null)
[L2255]              revert := true;
[L2042]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE   revert
[L531]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]               assume revert || gas < 0;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:46,739 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,739 INFO  L82        PathProgramCache]: Analyzing trace with hash 1341097720, now seen corresponding path program 1 times
[2020-11-25 01:14:46,740 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,759 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:46,782 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:46,848 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,848 INFO  L82        PathProgramCache]: Analyzing trace with hash -444918144, now seen corresponding path program 1 times
[2020-11-25 01:14:46,849 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,854 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:46,860 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:46,868 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:46,868 INFO  L82        PathProgramCache]: Analyzing trace with hash -172772567, now seen corresponding path program 1 times
[2020-11-25 01:14:46,869 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:46,888 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:46,908 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 01:14:47,121 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 144
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2473 to 4943
[2020-11-25 01:14:47,269 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 102 DAG size of output: 96
[2020-11-25 01:14:47,408 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 236
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 6037 to 12073
[2020-11-25 01:14:47,979 WARN  L188               SmtUtils]: Spent 554.00 ms on a formula simplification. DAG size of input: 196 DAG size of output: 196
[2020-11-25 01:14:48,690 WARN  L188               SmtUtils]: Spent 708.00 ms on a formula simplification. DAG size of input: 248 DAG size of output: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:14:48,865 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification. DAG size of input: 148 DAG size of output: 142
[2020-11-25 01:14:49,047 WARN  L188               SmtUtils]: Spent 179.00 ms on a formula simplification that was a NOOP. DAG size: 281
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 01:14:49,361 WARN  L188               SmtUtils]: Spent 307.00 ms on a formula simplification. DAG size of input: 224 DAG size of output: 224
[2020-11-25 01:14:49,515 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification that was a NOOP. DAG size: 224
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 01:14:49,640 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 131
[2020-11-25 01:14:49,648 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 01:14:50,222 WARN  L188               SmtUtils]: Spent 199.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 191
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 01:14:50,663 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 236
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 01:14:51,092 WARN  L188               SmtUtils]: Spent 423.00 ms on a formula simplification. DAG size of input: 196 DAG size of output: 196
[2020-11-25 01:14:51,718 WARN  L188               SmtUtils]: Spent 623.00 ms on a formula simplification. DAG size of input: 247 DAG size of output: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:14:51,865 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 143
[2020-11-25 01:14:51,986 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:14:52,286 WARN  L188               SmtUtils]: Spent 294.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 225
[2020-11-25 01:14:53,029 WARN  L188               SmtUtils]: Spent 742.00 ms on a formula simplification. DAG size of input: 393 DAG size of output: 380
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-25 01:14:53,201 WARN  L188               SmtUtils]: Spent 160.00 ms on a formula simplification. DAG size of input: 169 DAG size of output: 165
[2020-11-25 01:14:53,359 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification that was a NOOP. DAG size: 258
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 01:14:53,595 WARN  L188               SmtUtils]: Spent 232.00 ms on a formula simplification. DAG size of input: 165 DAG size of output: 165
[2020-11-25 01:14:53,887 WARN  L188               SmtUtils]: Spent 290.00 ms on a formula simplification. DAG size of input: 260 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 01:14:54,379 WARN  L188               SmtUtils]: Spent 486.00 ms on a formula simplification. DAG size of input: 280 DAG size of output: 271
[2020-11-25 01:14:54,392 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:54,410 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:54,422 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:54 BasicIcfg
[2020-11-25 01:14:54,422 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:14:54,422 INFO  L168              Benchmark]: Toolchain (without parser) took 11936.09 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 1.0 GB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -154.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,423 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,423 INFO  L168              Benchmark]: Boogie Preprocessor took 110.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,423 INFO  L168              Benchmark]: UtopiaSpecLang took 73.43 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,424 INFO  L168              Benchmark]: Boogie Printer took 17.80 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,424 INFO  L168              Benchmark]: RCFGBuilder took 838.48 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 784.9 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,425 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.95 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 775.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,425 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1518.44 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 775.9 MB in the beginning and 933.9 MB in the end (delta: -158.0 MB). Peak memory consumption was 158.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,425 INFO  L168              Benchmark]: BlockEncodingV2 took 139.59 ms. Allocated memory is still 1.2 GB. Free memory was 933.9 MB in the beginning and 861.4 MB in the end (delta: 72.5 MB). Peak memory consumption was 72.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,426 INFO  L168              Benchmark]: BuchiAutomizer took 9193.02 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 814.2 MB). Free memory was 861.4 MB in the beginning and 1.1 GB in the end (delta: -228.2 MB). Peak memory consumption was 808.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:54,429 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4096 locations, 7561 edges
  - StatisticsResult: Encoded RCFG
    4016 locations, 7344 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 110.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 73.43 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.80 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 838.48 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 784.9 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.95 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 775.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1518.44 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 775.9 MB in the beginning and 933.9 MB in the end (delta: -158.0 MB). Peak memory consumption was 158.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 139.59 ms. Allocated memory is still 1.2 GB. Free memory was 933.9 MB in the beginning and 861.4 MB in the end (delta: 72.5 MB). Peak memory consumption was 72.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9193.02 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 814.2 MB). Free memory was 861.4 MB in the beginning and 1.1 GB in the end (delta: -228.2 MB). Peak memory consumption was 808.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1601 locations, 2302 edges
  - StatisticsResult: BuchiProgram size
    4096 locations, 7561 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 2566 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.1s and 5 iterations.  TraceHistogramMax:5. Analysis of lassos took 7.9s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 920 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2772 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12206 SDtfs, 6391 SDslu, 20022 SDs, 0 SdLazy, 1467 SolverSat, 1750 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(250000000000000017) = (new BNS)({from : 250000000000000009});
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
ERC20(250000000000000017).transferFrom~address~address~uint256.gas(3979002)({from : 250000000000000001, from : 0, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L511]              havoc __exception;
[L512]              revert := false;
[L513]   COND TRUE  __exception
[L514]              __tmp__Balance := Balance;
[L515]              __tmp__DType := DType;
[L516]              __tmp__Alloc := Alloc;
[L517]              __tmp__balance_ADDR := balance_ADDR;
[L518]              __tmp__M_Ref_int := M_Ref_int;
[L519]              __tmp__sum__balances0 := sum__balances0;
[L520]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]              __tmp__sum__allowed1 := sum__allowed1;
[L523]              __tmp__Length := Length;
[L524]              __tmp__now := now;
[L525]              __tmp___balances_ERC20 := _balances_ERC20;
[L526]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE  __tmp__DType[this] == BNS
[L2042]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]             __var_4 := null;
[L2254]  COND TRUE  !(to_s422 != null)
[L2255]             revert := true;
[L2042]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE  revert
[L531]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]              assume revert || gas < 0;
[L4483]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);

Loop:
ERC20(250000000000000017).transferFrom~address~address~uint256.gas(3979001)({from : 250000000000000011, from : 0, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != from_s322 || p2 != msgsender_MSG) && from_s322 == to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L511]              havoc __exception;
[L512]              revert := false;
[L513]   COND TRUE  __exception
[L514]              __tmp__Balance := Balance;
[L515]              __tmp__DType := DType;
[L516]              __tmp__Alloc := Alloc;
[L517]              __tmp__balance_ADDR := balance_ADDR;
[L518]              __tmp__M_Ref_int := M_Ref_int;
[L519]              __tmp__sum__balances0 := sum__balances0;
[L520]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]              __tmp__sum__allowed1 := sum__allowed1;
[L523]              __tmp__Length := Length;
[L524]              __tmp__now := now;
[L525]              __tmp___balances_ERC20 := _balances_ERC20;
[L526]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE  __tmp__DType[this] == BNS
[L2042]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]             __var_4 := null;
[L2254]  COND TRUE  !(to_s422 != null)
[L2255]             revert := true;
[L2042]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE  revert
[L531]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]              assume revert || gas < 0;
[L4483]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
