This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:01:52,619 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:01:52,620 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:01:52,631 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:01:52,631 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:01:52,632 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:01:52,633 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:01:52,634 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:01:52,635 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:01:52,636 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:01:52,637 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:01:52,637 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:01:52,638 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:01:52,638 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:01:52,639 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:01:52,640 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:01:52,640 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:01:52,642 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:01:52,643 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:01:52,644 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:01:52,645 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:01:52,645 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:01:52,647 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:01:52,647 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:01:52,647 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:01:52,648 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:01:52,648 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:01:52,649 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:01:52,649 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:01:52,649 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:01:52,649 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:01:52,650 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:01:52,650 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:01:52,651 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:01:52,651 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:01:52,652 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:01:52,652 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:01:52,652 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:01:52,652 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:01:52,653 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:01:52,653 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:01:52,654 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:01:52,661 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:01:52,661 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:01:52,662 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:01:52,662 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:01:52,662 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:01:52,663 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:01:52,663 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:01:52,663 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:01:52,663 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:01:52,664 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:01:52,664 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:01:52,665 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:01:52,665 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:01:52,686 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:01:52,700 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:01:52,702 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:01:52,703 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:01:52,704 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:01:52,704 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl
[2020-11-25 15:01:52,704 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl'
[2020-11-25 15:01:52,810 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:01:52,811 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:01:52,812 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:01:52,812 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:01:52,812 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:01:52,828 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,830 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,863 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,864 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,889 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,904 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,916 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,930 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:01:52,930 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:01:52,931 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:01:52,933 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:01:52,936 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/1) ...
[2020-11-25 15:01:52,956 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:52,961 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:52,969 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:52,979 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s481 && p1!=_to_s481 ) && ( p2!=_from_s481 || p3!=msg.sender ) ) && _from_s481!=_to_s481 ) && _value_s481<=balances_BasicToken[this][_from_s481] ) && _value_s481<=allowed_StandardToken[this][_from_s481][msg.sender] ) && ( balances_BasicToken[this][_to_s481] + _value_s481 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s481>=0 ) && _value_s481<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s481]>=0 ) && balances_BasicToken[this][_to_s481]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s481]>=0 ) && balances_BasicToken[this][_from_s481]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s481][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s481][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:01:52,983 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_BasicToken[this][_from_s481]==( ( old(balances_BasicToken[this][_from_s481]) ) - _value_s481 ) ) && balances_BasicToken[this][_to_s481]==( ( old(balances_BasicToken[this][_to_s481]) ) + _value_s481 ) ) && allowed_StandardToken[this][_from_s481][msg.sender]==( ( old(allowed_StandardToken[this][_from_s481][msg.sender]) ) - _value_s481 ) ) && totalSupply_ERC20Basic[this]==( old(totalSupply_ERC20Basic[this]) ) ) && balances_BasicToken[this][p1]==( old(balances_BasicToken[this][p1]) ) ) && allowed_StandardToken[this][p2][p3]==( old(allowed_StandardToken[this][p2][p3]) ) ) && allowedAddresses_BasicToken[this]==( old(allowedAddresses_BasicToken[this]) ) ) && lockedAddresses_BasicToken[this]==( old(lockedAddresses_BasicToken[this]) ) ) && locked_BasicToken[this]==( old(locked_BasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s481,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]]
[2020-11-25 15:01:52,990 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:52,990 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StandardToken0) ==> ( <>AP(success_transferFrom_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:01:53,004 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:53 PropertyContainer
[2020-11-25 15:01:53,004 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:01:53,005 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:01:53,005 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:01:53,005 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:01:53,006 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/2) ...
[2020-11-25 15:01:53,006 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:01:53,006 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:01:53,025 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:53" (2/2) ...
[2020-11-25 15:01:53,026 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:01:53,026 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:01:53,026 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:01:53,026 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:01:53,027 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/2) ...
[2020-11-25 15:01:53,082 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:01:53,082 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:53,082 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:01:53,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 15:01:53,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 15:01:53,083 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:53,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:53,084 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 15:01:53,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 15:01:53,084 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:53,084 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:53,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:53,084 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:53,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 15:01:53,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:53,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:53,085 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:53,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:53,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:53,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:53,086 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:53,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken
[2020-11-25 15:01:53,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:01:53,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:01:53,087 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 15:01:53,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:53,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:53,088 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:53,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:53,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:53,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU
[2020-11-25 15:01:53,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU
[2020-11-25 15:01:53,089 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU
[2020-11-25 15:01:53,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU
[2020-11-25 15:01:53,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU
[2020-11-25 15:01:53,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU
[2020-11-25 15:01:53,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:01:53,090 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 15:01:53,091 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ECU
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:53,092 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 15:01:53,093 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:53,094 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:53,095 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__success
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:01:53,096 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:53,097 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__success
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__fail
[2020-11-25 15:01:53,098 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__success
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__success
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__success
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__success
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:01:53,099 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:53,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:53,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:53,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:53,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:53,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:53,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:53,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:53,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__fail
[2020-11-25 15:01:53,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__success
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__fail
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__success
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__fail
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__success
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__fail
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__success
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__fail
[2020-11-25 15:01:53,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__success
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:01:53,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:53,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:53,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:53,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ECU
[2020-11-25 15:01:53,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:01:53,112 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:01:53,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:01:53,383 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:53,383 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:53,384 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:53,672 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:54,077 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:01:54,077 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 15:01:54,080 INFO  L202        PluginConnector]: Adding new model ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:54 BoogieIcfgContainer
[2020-11-25 15:01:54,080 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:53" (2/2) ...
[2020-11-25 15:01:54,080 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:01:54,080 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4d42aa57 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:54, skipping insertion in model container
[2020-11-25 15:01:54,080 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:01:54,080 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:54,081 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:01:54,082 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:01:54,082 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/3) ...
[2020-11-25 15:01:54,082 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@18b4a486 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:54, skipping insertion in model container
[2020-11-25 15:01:54,082 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:53" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:01:54,119 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:54 NWAContainer
[2020-11-25 15:01:54,119 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:54,119 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:54,119 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:01:54,120 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:01:54,121 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:54" (3/4) ...
[2020-11-25 15:01:54,121 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@57511bd4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:54, skipping insertion in model container
[2020-11-25 15:01:54,122 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:54" (4/4) ...
[2020-11-25 15:01:54,124 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:01:54,129 INFO  L110   BuchiProductObserver]: Initial RCFG 2508 locations, 3479 edges
[2020-11-25 15:01:54,129 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:01:54,141 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:01:56,133 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:01:56,142 INFO  L110   BuchiProductObserver]: BuchiProgram size 6266 locations, 11471 edges
[2020-11-25 15:01:56,142 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:56 BoogieIcfgContainer
[2020-11-25 15:01:56,142 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:56,142 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:01:56,142 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:01:56,144 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:01:56,144 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:56" (1/1) ...
[2020-11-25 15:01:56,275 INFO  L313           BlockEncoder]: Initial Icfg 6266 locations, 11471 edges
[2020-11-25 15:01:56,275 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:01:56,276 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:56,276 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:01:56,277 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:01:56,292 INFO  L70    emoveInfeasibleEdges]: Removed 93 edges and 19 locations because of local infeasibility
[2020-11-25 15:01:56,308 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 15:01:56,323 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:01:56,328 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:01:56,332 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:01:56,333 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:01:56,336 INFO  L313           BlockEncoder]: Encoded RCFG 6204 locations, 11314 edges
[2020-11-25 15:01:56,337 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:56 BasicIcfg
[2020-11-25 15:01:56,337 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:01:56,337 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:01:56,337 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:01:56,339 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:01:56,340 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,340 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:52" (1/6) ...
[2020-11-25 15:01:56,341 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1c366fff and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:56, skipping insertion in model container
[2020-11-25 15:01:56,341 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,341 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:53" (2/6) ...
[2020-11-25 15:01:56,341 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1c366fff and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:56, skipping insertion in model container
[2020-11-25 15:01:56,342 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,342 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:54" (3/6) ...
[2020-11-25 15:01:56,342 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1c366fff and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:01:56, skipping insertion in model container
[2020-11-25 15:01:56,342 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,342 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:54" (4/6) ...
[2020-11-25 15:01:56,342 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1c366fff and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:56, skipping insertion in model container
[2020-11-25 15:01:56,342 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,342 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:56" (5/6) ...
[2020-11-25 15:01:56,342 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1c366fff and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:01:56, skipping insertion in model container
[2020-11-25 15:01:56,343 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:56,343 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:56" (6/6) ...
[2020-11-25 15:01:56,344 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transferfrom-normal.bpl_BEv2
[2020-11-25 15:01:56,375 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:01:56,375 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:01:56,376 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:01:56,376 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:01:56,376 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:01:56,376 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:01:56,376 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:01:56,376 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:01:56,376 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:01:56,427 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6204 states.
[2020-11-25 15:01:56,483 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:56,483 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:56,483 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:56,490 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:56,490 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:56,490 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:01:56,490 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6204 states.
[2020-11-25 15:01:56,515 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:56,515 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:56,516 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:56,517 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:56,517 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7235]              assume null == 0;
[L7236]  CALL        call this := FreshRefGenerator__success();
[L3066]              havoc newRef;
[L3067]              assume Alloc[newRef] == false;
[L3068]              Alloc[newRef] := true;
[L3069]              assume newRef != null;
[L7236]  RET         call this := FreshRefGenerator__success();
[L7237]              assume now >= 0;
[L7238]              assume DType[this] == ECU;
[L7239]              assume msgvalue_MSG == 0;
[L7240]              gas := gas - 53000;
[L7241]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1881]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L4152]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4153]  COND TRUE   revert
[L1881]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]              assume !revert && gas >= 0;
[L7241]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7242]              assume !revert && gas >= 0;

Loop:
[L7245]  CALL        call CorralChoice_ECU(this);
[L7029]              havoc msgsender_MSG;
[L7030]              havoc msgvalue_MSG;
[L7031]              havoc choice;
[L7032]              havoc __ret_0_owner;
[L7033]              havoc newOwner_s146;
[L7034]              havoc __ret_0_totalSupply;
[L7035]              havoc _owner_s352;
[L7036]              havoc balance_s352;
[L7037]              havoc _to_s340;
[L7038]              havoc _value_s340;
[L7039]              havoc __ret_0_transfer;
[L7040]              havoc arg745_s0;
[L7041]              havoc __ret_0_allowedAddresses;
[L7042]              havoc arg746_s0;
[L7043]              havoc __ret_0_lockedAddresses;
[L7044]              havoc __ret_0_locked;
[L7045]              havoc _addr_s218;
[L7046]              havoc _allowed_s218;
[L7047]              havoc _addr_s240;
[L7048]              havoc _locked_s240;
[L7049]              havoc _locked_s252;
[L7050]              havoc _addr_s282;
[L7051]              havoc __ret_0_canTransfer;
[L7052]              havoc _owner_s525;
[L7053]              havoc _spender_s525;
[L7054]              havoc remaining_s525;
[L7055]              havoc _from_s481;
[L7056]              havoc _to_s481;
[L7057]              havoc _value_s481;
[L7058]              havoc __ret_0_transferFrom;
[L7059]              havoc _spender_s509;
[L7060]              havoc _value_s509;
[L7061]              havoc __ret_0_approve;
[L7062]              havoc _spender_s566;
[L7063]              havoc _addedValue_s566;
[L7064]              havoc success_s566;
[L7065]              havoc _spender_s626;
[L7066]              havoc _subtractedValue_s626;
[L7067]              havoc success_s626;
[L7068]              havoc _value_s692;
[L7069]              havoc __ret_0_name;
[L7070]              havoc __ret_0_symbol;
[L7071]              havoc __ret_0_decimals;
[L7072]              havoc __ret_0_initialSupply;
[L7073]              havoc tmpNow;
[L7074]              havoc gas;
[L7075]              assume gas > 4000000 && gas <= 8000000;
[L7076]              tmpNow := now;
[L7077]              havoc now;
[L7078]              assume now > tmpNow;
[L7079]              assume msgsender_MSG != null;
[L7080]              assume DType[msgsender_MSG] != SafeMath;
[L7081]              assume DType[msgsender_MSG] != Ownable;
[L7082]              assume DType[msgsender_MSG] != ERC20Basic;
[L7083]              assume DType[msgsender_MSG] != BasicToken;
[L7084]              assume DType[msgsender_MSG] != ERC20;
[L7085]              assume DType[msgsender_MSG] != StandardToken;
[L7086]              assume DType[msgsender_MSG] != BurnableToken;
[L7087]              assume DType[msgsender_MSG] != ECU;
[L7088]              Alloc[msgsender_MSG] := true;
[L7089]  COND TRUE   choice == 22
[L7090]              gas := gas - 21000;
[L7091]  COND FALSE  !(gas >= 0)
[L7245]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:56,531 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:56,532 INFO  L82        PathProgramCache]: Analyzing trace with hash -1250172211, now seen corresponding path program 1 times
[2020-11-25 15:01:56,535 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:56,584 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:56,633 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:56,635 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:56,636 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:01:57,105 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:57,114 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:01:57,114 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:01:57,115 INFO  L87              Difference]: Start difference. First operand 6204 states. Second operand 3 states.
[2020-11-25 15:01:57,423 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:57,423 INFO  L93              Difference]: Finished difference Result 3451 states and 3892 transitions.
[2020-11-25 15:01:57,423 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:01:57,425 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3451 states and 3892 transitions.
[2020-11-25 15:01:57,446 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:57,471 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3451 states to 3447 states and 3884 transitions.
[2020-11-25 15:01:57,472 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:01:57,474 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1027
[2020-11-25 15:01:57,475 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3447 states and 3884 transitions.
[2020-11-25 15:01:57,482 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:57,482 INFO  L728         BuchiCegarLoop]: Abstraction has 3447 states and 3884 transitions.
[2020-11-25 15:01:57,498 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3447 states and 3884 transitions.
[2020-11-25 15:01:57,552 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3447 to 3447.
[2020-11-25 15:01:57,552 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3447 states.
[2020-11-25 15:01:57,559 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3447 states to 3447 states and 3884 transitions.
[2020-11-25 15:01:57,561 INFO  L751         BuchiCegarLoop]: Abstraction has 3447 states and 3884 transitions.
[2020-11-25 15:01:57,561 INFO  L631         BuchiCegarLoop]: Abstraction has 3447 states and 3884 transitions.
[2020-11-25 15:01:57,561 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:01:57,561 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3447 states and 3884 transitions.
[2020-11-25 15:01:57,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:57,570 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:57,570 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:57,572 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:57,572 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7235]              assume null == 0;
[L7236]  CALL        call this := FreshRefGenerator__success();
[L3066]              havoc newRef;
[L3067]              assume Alloc[newRef] == false;
[L3068]              Alloc[newRef] := true;
[L3069]              assume newRef != null;
[L7236]  RET         call this := FreshRefGenerator__success();
[L7237]              assume now >= 0;
[L7238]              assume DType[this] == ECU;
[L7239]              assume msgvalue_MSG == 0;
[L7240]              gas := gas - 53000;
[L7241]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1881]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L4152]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4153]  COND TRUE   revert
[L1881]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]              assume !revert && gas >= 0;
[L7241]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7242]              assume !revert && gas >= 0;
[L7245]  CALL        call CorralChoice_ECU(this);
[L7029]              havoc msgsender_MSG;
[L7030]              havoc msgvalue_MSG;
[L7031]              havoc choice;
[L7032]              havoc __ret_0_owner;
[L7033]              havoc newOwner_s146;
[L7034]              havoc __ret_0_totalSupply;
[L7035]              havoc _owner_s352;
[L7036]              havoc balance_s352;
[L7037]              havoc _to_s340;
[L7038]              havoc _value_s340;
[L7039]              havoc __ret_0_transfer;
[L7040]              havoc arg745_s0;
[L7041]              havoc __ret_0_allowedAddresses;
[L7042]              havoc arg746_s0;
[L7043]              havoc __ret_0_lockedAddresses;
[L7044]              havoc __ret_0_locked;
[L7045]              havoc _addr_s218;
[L7046]              havoc _allowed_s218;
[L7047]              havoc _addr_s240;
[L7048]              havoc _locked_s240;
[L7049]              havoc _locked_s252;
[L7050]              havoc _addr_s282;
[L7051]              havoc __ret_0_canTransfer;
[L7052]              havoc _owner_s525;
[L7053]              havoc _spender_s525;
[L7054]              havoc remaining_s525;
[L7055]              havoc _from_s481;
[L7056]              havoc _to_s481;
[L7057]              havoc _value_s481;
[L7058]              havoc __ret_0_transferFrom;
[L7059]              havoc _spender_s509;
[L7060]              havoc _value_s509;
[L7061]              havoc __ret_0_approve;
[L7062]              havoc _spender_s566;
[L7063]              havoc _addedValue_s566;
[L7064]              havoc success_s566;
[L7065]              havoc _spender_s626;
[L7066]              havoc _subtractedValue_s626;
[L7067]              havoc success_s626;
[L7068]              havoc _value_s692;
[L7069]              havoc __ret_0_name;
[L7070]              havoc __ret_0_symbol;
[L7071]              havoc __ret_0_decimals;
[L7072]              havoc __ret_0_initialSupply;
[L7073]              havoc tmpNow;
[L7074]              havoc gas;
[L7075]              assume gas > 4000000 && gas <= 8000000;
[L7076]              tmpNow := now;
[L7077]              havoc now;
[L7078]              assume now > tmpNow;
[L7079]              assume msgsender_MSG != null;
[L7080]              assume DType[msgsender_MSG] != SafeMath;
[L7081]              assume DType[msgsender_MSG] != Ownable;
[L7082]              assume DType[msgsender_MSG] != ERC20Basic;
[L7083]              assume DType[msgsender_MSG] != BasicToken;
[L7084]              assume DType[msgsender_MSG] != ERC20;
[L7085]              assume DType[msgsender_MSG] != StandardToken;
[L7086]              assume DType[msgsender_MSG] != BurnableToken;
[L7087]              assume DType[msgsender_MSG] != ECU;
[L7088]              Alloc[msgsender_MSG] := true;
[L7089]  COND FALSE  !(choice == 22)
[L7095]  COND FALSE  !(choice == 21)
[L7101]  COND FALSE  !(choice == 20)
[L7107]  COND FALSE  !(choice == 19)
[L7113]  COND FALSE  !(choice == 18)
[L7120]  COND FALSE  !(choice == 17)
[L7126]  COND FALSE  !(choice == 16)
[L7132]  COND FALSE  !(choice == 15)
[L7138]  COND FALSE  !(choice == 14)
[L7144]  COND FALSE  !(choice == 13)
[L7150]  COND FALSE  !(choice == 12)
[L7156]  COND FALSE  !(choice == 11)
[L7162]  COND FALSE  !(choice == 10)
[L7168]  COND TRUE   choice == 9
[L7169]              gas := gas - 21000;
[L7170]  COND TRUE   gas >= 0
[L7171]              assume _value_s481 >= 0 && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7172]              assume msgvalue_MSG == 0;
[L7173]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1339]              havoc __exception;
[L1340]              revert := false;
[L1341]  COND FALSE  !(__exception)
[L1370]  CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3788]              __var_6 := null;
[L3789]  COND TRUE   !(_to_s481 != null)
[L3790]              revert := true;
[L1370]  RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1371]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s481] == old(balances_BasicToken[this][_from_s481]) - _value_s481) && balances_BasicToken[this][_to_s481] == old(balances_BasicToken[this][_to_s481]) + _value_s481) && allowed_StandardToken[this][_from_s481][msgsender_MSG] == old(allowed_StandardToken[this][_from_s481][msgsender_MSG]) - _value_s481) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7173]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L7245]  RET         call CorralChoice_ECU(this);

Loop:
[L7245]  CALL        call CorralChoice_ECU(this);
[L7029]              havoc msgsender_MSG;
[L7030]              havoc msgvalue_MSG;
[L7031]              havoc choice;
[L7032]              havoc __ret_0_owner;
[L7033]              havoc newOwner_s146;
[L7034]              havoc __ret_0_totalSupply;
[L7035]              havoc _owner_s352;
[L7036]              havoc balance_s352;
[L7037]              havoc _to_s340;
[L7038]              havoc _value_s340;
[L7039]              havoc __ret_0_transfer;
[L7040]              havoc arg745_s0;
[L7041]              havoc __ret_0_allowedAddresses;
[L7042]              havoc arg746_s0;
[L7043]              havoc __ret_0_lockedAddresses;
[L7044]              havoc __ret_0_locked;
[L7045]              havoc _addr_s218;
[L7046]              havoc _allowed_s218;
[L7047]              havoc _addr_s240;
[L7048]              havoc _locked_s240;
[L7049]              havoc _locked_s252;
[L7050]              havoc _addr_s282;
[L7051]              havoc __ret_0_canTransfer;
[L7052]              havoc _owner_s525;
[L7053]              havoc _spender_s525;
[L7054]              havoc remaining_s525;
[L7055]              havoc _from_s481;
[L7056]              havoc _to_s481;
[L7057]              havoc _value_s481;
[L7058]              havoc __ret_0_transferFrom;
[L7059]              havoc _spender_s509;
[L7060]              havoc _value_s509;
[L7061]              havoc __ret_0_approve;
[L7062]              havoc _spender_s566;
[L7063]              havoc _addedValue_s566;
[L7064]              havoc success_s566;
[L7065]              havoc _spender_s626;
[L7066]              havoc _subtractedValue_s626;
[L7067]              havoc success_s626;
[L7068]              havoc _value_s692;
[L7069]              havoc __ret_0_name;
[L7070]              havoc __ret_0_symbol;
[L7071]              havoc __ret_0_decimals;
[L7072]              havoc __ret_0_initialSupply;
[L7073]              havoc tmpNow;
[L7074]              havoc gas;
[L7075]              assume gas > 4000000 && gas <= 8000000;
[L7076]              tmpNow := now;
[L7077]              havoc now;
[L7078]              assume now > tmpNow;
[L7079]              assume msgsender_MSG != null;
[L7080]              assume DType[msgsender_MSG] != SafeMath;
[L7081]              assume DType[msgsender_MSG] != Ownable;
[L7082]              assume DType[msgsender_MSG] != ERC20Basic;
[L7083]              assume DType[msgsender_MSG] != BasicToken;
[L7084]              assume DType[msgsender_MSG] != ERC20;
[L7085]              assume DType[msgsender_MSG] != StandardToken;
[L7086]              assume DType[msgsender_MSG] != BurnableToken;
[L7087]              assume DType[msgsender_MSG] != ECU;
[L7088]              Alloc[msgsender_MSG] := true;
[L7089]  COND FALSE  !(choice == 22)
[L7095]  COND FALSE  !(choice == 21)
[L7101]  COND FALSE  !(choice == 20)
[L7107]  COND FALSE  !(choice == 19)
[L7113]  COND FALSE  !(choice == 18)
[L7120]  COND FALSE  !(choice == 17)
[L7126]  COND FALSE  !(choice == 16)
[L7132]  COND FALSE  !(choice == 15)
[L7138]  COND FALSE  !(choice == 14)
[L7144]  COND FALSE  !(choice == 13)
[L7150]  COND FALSE  !(choice == 12)
[L7156]  COND FALSE  !(choice == 11)
[L7162]  COND FALSE  !(choice == 10)
[L7168]  COND TRUE   choice == 9
[L7169]              gas := gas - 21000;
[L7170]  COND TRUE   gas >= 0
[L7171]              assume _value_s481 >= 0 && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7172]              assume msgvalue_MSG == 0;
[L7173]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1339]              havoc __exception;
[L1340]              revert := false;
[L1341]  COND FALSE  !(__exception)
[L1370]  CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3788]              __var_6 := null;
[L3789]  COND TRUE   !(_to_s481 != null)
[L3790]              revert := true;
[L1370]  RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1371]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s481] == old(balances_BasicToken[this][_from_s481]) - _value_s481) && balances_BasicToken[this][_to_s481] == old(balances_BasicToken[this][_to_s481]) + _value_s481) && allowed_StandardToken[this][_from_s481][msgsender_MSG] == old(allowed_StandardToken[this][_from_s481][msgsender_MSG]) - _value_s481) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7173]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L7245]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:57,577 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:57,577 INFO  L82        PathProgramCache]: Analyzing trace with hash 405886084, now seen corresponding path program 1 times
[2020-11-25 15:01:57,578 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:57,592 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:57,616 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:57,617 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:57,617 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:57,618 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:57,618 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:57,618 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:57,618 INFO  L87              Difference]: Start difference. First operand 3447 states and 3884 transitions. cyclomatic complexity: 439 Second operand 4 states.
[2020-11-25 15:01:58,136 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:58,137 INFO  L93              Difference]: Finished difference Result 4635 states and 5264 transitions.
[2020-11-25 15:01:58,137 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:58,138 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4635 states and 5264 transitions.
[2020-11-25 15:01:58,163 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:01:58,191 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4635 states to 4539 states and 5156 transitions.
[2020-11-25 15:01:58,191 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1337
[2020-11-25 15:01:58,192 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1337
[2020-11-25 15:01:58,193 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4539 states and 5156 transitions.
[2020-11-25 15:01:58,204 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:58,205 INFO  L728         BuchiCegarLoop]: Abstraction has 4539 states and 5156 transitions.
[2020-11-25 15:01:58,210 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4539 states and 5156 transitions.
[2020-11-25 15:01:58,254 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4539 to 3447.
[2020-11-25 15:01:58,254 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3447 states.
[2020-11-25 15:01:58,258 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3447 states to 3447 states and 3740 transitions.
[2020-11-25 15:01:58,258 INFO  L751         BuchiCegarLoop]: Abstraction has 3447 states and 3740 transitions.
[2020-11-25 15:01:58,258 INFO  L631         BuchiCegarLoop]: Abstraction has 3447 states and 3740 transitions.
[2020-11-25 15:01:58,259 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:01:58,259 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3447 states and 3740 transitions.
[2020-11-25 15:01:58,266 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:58,267 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:58,267 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:58,271 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:58,271 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7235]              assume null == 0;
[L7236]  CALL        call this := FreshRefGenerator__success();
[L3066]              havoc newRef;
[L3067]              assume Alloc[newRef] == false;
[L3068]              Alloc[newRef] := true;
[L3069]              assume newRef != null;
[L7236]  RET         call this := FreshRefGenerator__success();
[L7237]              assume now >= 0;
[L7238]              assume DType[this] == ECU;
[L7239]              assume msgvalue_MSG == 0;
[L7240]              gas := gas - 53000;
[L7241]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1881]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L4152]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4153]  COND FALSE  !(revert)
[L4156]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L4156]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  COND FALSE  !(revert)
[L4160]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L4160]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4161]  COND FALSE  !(revert)
[L4164]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L4164]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4165]  COND FALSE  !(revert)
[L4168]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3697]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3698]  COND FALSE  !(revert)
[L3701]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3701]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3702]  COND FALSE  !(revert)
[L3705]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3705]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3706]  COND FALSE  !(revert)
[L3709]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L3709]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3713]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3666]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3667]              sum_allowed3[this] := 0;
[L3713]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L4168]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4169]  COND FALSE  !(revert)
[L4172]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3993]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  COND FALSE  !(revert)
[L3997]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3997]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L4001]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3697]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3698]  COND FALSE  !(revert)
[L3701]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3701]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3702]  COND FALSE  !(revert)
[L3705]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3705]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3706]  COND FALSE  !(revert)
[L3709]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L3709]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3713]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3666]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3667]              sum_allowed3[this] := 0;
[L3713]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3958]              assume msgsender_MSG != null;
[L3959]              Balance[this] := 0;
[L4013]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4172]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4173]  COND FALSE  !(revert)
[L4176]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4100]              assume msgsender_MSG != null;
[L4101]              Balance[this] := 0;
[L4102]              name_ECU[this] := -2027621617;
[L4103]              symbol_ECU[this] := 1342424742;
[L4104]              decimals_ECU[this] := 18;
[L4105]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4106]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4108]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4109]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4110]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4111]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4112]              assert { :EventEmitted "Transfer_ECU" } true;
[L4113]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4176]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4177]  COND FALSE  !(revert)
[L1881]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]              assume !revert && gas >= 0;
[L7241]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7242]              assume !revert && gas >= 0;
[L7245]  CALL        call CorralChoice_ECU(this);
[L7029]              havoc msgsender_MSG;
[L7030]              havoc msgvalue_MSG;
[L7031]              havoc choice;
[L7032]              havoc __ret_0_owner;
[L7033]              havoc newOwner_s146;
[L7034]              havoc __ret_0_totalSupply;
[L7035]              havoc _owner_s352;
[L7036]              havoc balance_s352;
[L7037]              havoc _to_s340;
[L7038]              havoc _value_s340;
[L7039]              havoc __ret_0_transfer;
[L7040]              havoc arg745_s0;
[L7041]              havoc __ret_0_allowedAddresses;
[L7042]              havoc arg746_s0;
[L7043]              havoc __ret_0_lockedAddresses;
[L7044]              havoc __ret_0_locked;
[L7045]              havoc _addr_s218;
[L7046]              havoc _allowed_s218;
[L7047]              havoc _addr_s240;
[L7048]              havoc _locked_s240;
[L7049]              havoc _locked_s252;
[L7050]              havoc _addr_s282;
[L7051]              havoc __ret_0_canTransfer;
[L7052]              havoc _owner_s525;
[L7053]              havoc _spender_s525;
[L7054]              havoc remaining_s525;
[L7055]              havoc _from_s481;
[L7056]              havoc _to_s481;
[L7057]              havoc _value_s481;
[L7058]              havoc __ret_0_transferFrom;
[L7059]              havoc _spender_s509;
[L7060]              havoc _value_s509;
[L7061]              havoc __ret_0_approve;
[L7062]              havoc _spender_s566;
[L7063]              havoc _addedValue_s566;
[L7064]              havoc success_s566;
[L7065]              havoc _spender_s626;
[L7066]              havoc _subtractedValue_s626;
[L7067]              havoc success_s626;
[L7068]              havoc _value_s692;
[L7069]              havoc __ret_0_name;
[L7070]              havoc __ret_0_symbol;
[L7071]              havoc __ret_0_decimals;
[L7072]              havoc __ret_0_initialSupply;
[L7073]              havoc tmpNow;
[L7074]              havoc gas;
[L7075]              assume gas > 4000000 && gas <= 8000000;
[L7076]              tmpNow := now;
[L7077]              havoc now;
[L7078]              assume now > tmpNow;
[L7079]              assume msgsender_MSG != null;
[L7080]              assume DType[msgsender_MSG] != SafeMath;
[L7081]              assume DType[msgsender_MSG] != Ownable;
[L7082]              assume DType[msgsender_MSG] != ERC20Basic;
[L7083]              assume DType[msgsender_MSG] != BasicToken;
[L7084]              assume DType[msgsender_MSG] != ERC20;
[L7085]              assume DType[msgsender_MSG] != StandardToken;
[L7086]              assume DType[msgsender_MSG] != BurnableToken;
[L7087]              assume DType[msgsender_MSG] != ECU;
[L7088]              Alloc[msgsender_MSG] := true;
[L7089]  COND FALSE  !(choice == 22)
[L7095]  COND FALSE  !(choice == 21)
[L7101]  COND FALSE  !(choice == 20)
[L7107]  COND FALSE  !(choice == 19)
[L7113]  COND FALSE  !(choice == 18)
[L7120]  COND FALSE  !(choice == 17)
[L7126]  COND FALSE  !(choice == 16)
[L7132]  COND FALSE  !(choice == 15)
[L7138]  COND FALSE  !(choice == 14)
[L7144]  COND FALSE  !(choice == 13)
[L7150]  COND FALSE  !(choice == 12)
[L7156]  COND FALSE  !(choice == 11)
[L7162]  COND FALSE  !(choice == 10)
[L7168]  COND TRUE   choice == 9
[L7169]              gas := gas - 21000;
[L7170]  COND TRUE   gas >= 0
[L7171]              assume _value_s481 >= 0 && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7172]              assume msgvalue_MSG == 0;
[L7173]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1339]              havoc __exception;
[L1340]              revert := false;
[L1341]  COND TRUE   __exception
[L1342]              __tmp__Balance := Balance;
[L1343]              __tmp__DType := DType;
[L1344]              __tmp__Alloc := Alloc;
[L1345]              __tmp__balance_ADDR := balance_ADDR;
[L1346]              __tmp__M_Ref_int := M_Ref_int;
[L1347]              __tmp__sum_balances0 := sum_balances0;
[L1348]              __tmp__M_Ref_bool := M_Ref_bool;
[L1349]              __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1350]              __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1351]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1352]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1353]              __tmp__sum_allowed3 := sum_allowed3;
[L1354]              __tmp__Length := Length;
[L1355]              __tmp__now := now;
[L1356]              __tmp__owner_Ownable := owner_Ownable;
[L1357]              __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1358]              __tmp__balances_BasicToken := balances_BasicToken;
[L1359]              __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1360]              __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1361]              __tmp__locked_BasicToken := locked_BasicToken;
[L1362]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1363]              __tmp__name_ECU := name_ECU;
[L1364]              __tmp__symbol_ECU := symbol_ECU;
[L1365]              __tmp__decimals_ECU := decimals_ECU;
[L1366]              __tmp__initialSupply_ECU := initialSupply_ECU;
[L1367]  CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3727]              __var_6 := null;
[L3728]  COND TRUE   !(_to_s481 != null)
[L3729]              revert := true;
[L1367]  RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1368]              assume revert || gas < 0;
[L7173]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L7245]  RET         call CorralChoice_ECU(this);

Loop:
[L7245]  CALL        call CorralChoice_ECU(this);
[L7029]              havoc msgsender_MSG;
[L7030]              havoc msgvalue_MSG;
[L7031]              havoc choice;
[L7032]              havoc __ret_0_owner;
[L7033]              havoc newOwner_s146;
[L7034]              havoc __ret_0_totalSupply;
[L7035]              havoc _owner_s352;
[L7036]              havoc balance_s352;
[L7037]              havoc _to_s340;
[L7038]              havoc _value_s340;
[L7039]              havoc __ret_0_transfer;
[L7040]              havoc arg745_s0;
[L7041]              havoc __ret_0_allowedAddresses;
[L7042]              havoc arg746_s0;
[L7043]              havoc __ret_0_lockedAddresses;
[L7044]              havoc __ret_0_locked;
[L7045]              havoc _addr_s218;
[L7046]              havoc _allowed_s218;
[L7047]              havoc _addr_s240;
[L7048]              havoc _locked_s240;
[L7049]              havoc _locked_s252;
[L7050]              havoc _addr_s282;
[L7051]              havoc __ret_0_canTransfer;
[L7052]              havoc _owner_s525;
[L7053]              havoc _spender_s525;
[L7054]              havoc remaining_s525;
[L7055]              havoc _from_s481;
[L7056]              havoc _to_s481;
[L7057]              havoc _value_s481;
[L7058]              havoc __ret_0_transferFrom;
[L7059]              havoc _spender_s509;
[L7060]              havoc _value_s509;
[L7061]              havoc __ret_0_approve;
[L7062]              havoc _spender_s566;
[L7063]              havoc _addedValue_s566;
[L7064]              havoc success_s566;
[L7065]              havoc _spender_s626;
[L7066]              havoc _subtractedValue_s626;
[L7067]              havoc success_s626;
[L7068]              havoc _value_s692;
[L7069]              havoc __ret_0_name;
[L7070]              havoc __ret_0_symbol;
[L7071]              havoc __ret_0_decimals;
[L7072]              havoc __ret_0_initialSupply;
[L7073]              havoc tmpNow;
[L7074]              havoc gas;
[L7075]              assume gas > 4000000 && gas <= 8000000;
[L7076]              tmpNow := now;
[L7077]              havoc now;
[L7078]              assume now > tmpNow;
[L7079]              assume msgsender_MSG != null;
[L7080]              assume DType[msgsender_MSG] != SafeMath;
[L7081]              assume DType[msgsender_MSG] != Ownable;
[L7082]              assume DType[msgsender_MSG] != ERC20Basic;
[L7083]              assume DType[msgsender_MSG] != BasicToken;
[L7084]              assume DType[msgsender_MSG] != ERC20;
[L7085]              assume DType[msgsender_MSG] != StandardToken;
[L7086]              assume DType[msgsender_MSG] != BurnableToken;
[L7087]              assume DType[msgsender_MSG] != ECU;
[L7088]              Alloc[msgsender_MSG] := true;
[L7089]  COND FALSE  !(choice == 22)
[L7095]  COND FALSE  !(choice == 21)
[L7101]  COND FALSE  !(choice == 20)
[L7107]  COND FALSE  !(choice == 19)
[L7113]  COND FALSE  !(choice == 18)
[L7120]  COND FALSE  !(choice == 17)
[L7126]  COND FALSE  !(choice == 16)
[L7132]  COND FALSE  !(choice == 15)
[L7138]  COND FALSE  !(choice == 14)
[L7144]  COND FALSE  !(choice == 13)
[L7150]  COND FALSE  !(choice == 12)
[L7156]  COND FALSE  !(choice == 11)
[L7162]  COND FALSE  !(choice == 10)
[L7168]  COND TRUE   choice == 9
[L7169]              gas := gas - 21000;
[L7170]  COND TRUE   gas >= 0
[L7171]              assume _value_s481 >= 0 && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7172]              assume msgvalue_MSG == 0;
[L7173]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1339]              havoc __exception;
[L1340]              revert := false;
[L1341]  COND TRUE   __exception
[L1342]              __tmp__Balance := Balance;
[L1343]              __tmp__DType := DType;
[L1344]              __tmp__Alloc := Alloc;
[L1345]              __tmp__balance_ADDR := balance_ADDR;
[L1346]              __tmp__M_Ref_int := M_Ref_int;
[L1347]              __tmp__sum_balances0 := sum_balances0;
[L1348]              __tmp__M_Ref_bool := M_Ref_bool;
[L1349]              __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1350]              __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1351]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1352]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1353]              __tmp__sum_allowed3 := sum_allowed3;
[L1354]              __tmp__Length := Length;
[L1355]              __tmp__now := now;
[L1356]              __tmp__owner_Ownable := owner_Ownable;
[L1357]              __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1358]              __tmp__balances_BasicToken := balances_BasicToken;
[L1359]              __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1360]              __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1361]              __tmp__locked_BasicToken := locked_BasicToken;
[L1362]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1363]              __tmp__name_ECU := name_ECU;
[L1364]              __tmp__symbol_ECU := symbol_ECU;
[L1365]              __tmp__decimals_ECU := decimals_ECU;
[L1366]              __tmp__initialSupply_ECU := initialSupply_ECU;
[L1367]  CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3727]              __var_6 := null;
[L3728]  COND TRUE   !(_to_s481 != null)
[L3729]              revert := true;
[L1367]  RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1368]              assume revert || gas < 0;
[L7173]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L7245]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:58,278 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:58,278 INFO  L82        PathProgramCache]: Analyzing trace with hash 1527531954, now seen corresponding path program 1 times
[2020-11-25 15:01:58,279 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:58,324 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:58,360 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:58,500 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:58,500 INFO  L82        PathProgramCache]: Analyzing trace with hash 1600120341, now seen corresponding path program 1 times
[2020-11-25 15:01:58,501 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:58,506 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:58,511 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:58,523 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:58,523 INFO  L82        PathProgramCache]: Analyzing trace with hash -1525054780, now seen corresponding path program 1 times
[2020-11-25 15:01:58,524 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:58,555 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:58,592 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 199 to 397
[2020-11-25 15:01:58,859 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 176
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 15:01:59,148 WARN  L188               SmtUtils]: Spent 246.00 ms on a formula simplification. DAG size of input: 132 DAG size of output: 126
[2020-11-25 15:01:59,350 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification that was a NOOP. DAG size: 306
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7933 to 15859
[2020-11-25 15:02:00,064 WARN  L188               SmtUtils]: Spent 689.00 ms on a formula simplification. DAG size of input: 250 DAG size of output: 250
[2020-11-25 15:02:01,069 WARN  L188               SmtUtils]: Spent 1.00 s on a formula simplification. DAG size of input: 342 DAG size of output: 299
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 15:02:01,390 WARN  L188               SmtUtils]: Spent 290.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 183
[2020-11-25 15:02:01,684 WARN  L188               SmtUtils]: Spent 292.00 ms on a formula simplification that was a NOOP. DAG size: 378
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 15:02:02,364 WARN  L188               SmtUtils]: Spent 670.00 ms on a formula simplification. DAG size of input: 305 DAG size of output: 305
[2020-11-25 15:02:02,686 WARN  L188               SmtUtils]: Spent 319.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 15:02:03,213 WARN  L188               SmtUtils]: Spent 492.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 203
[2020-11-25 15:02:03,223 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-25 15:02:03,874 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 187
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 15:02:04,663 WARN  L188               SmtUtils]: Spent 690.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 314
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 15:02:04,970 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 290
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 15:02:05,368 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 306
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 15:02:06,010 WARN  L188               SmtUtils]: Spent 631.00 ms on a formula simplification. DAG size of input: 250 DAG size of output: 250
[2020-11-25 15:02:06,972 WARN  L188               SmtUtils]: Spent 959.00 ms on a formula simplification. DAG size of input: 341 DAG size of output: 299
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 8713 to 17419
[2020-11-25 15:02:07,221 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 180
[2020-11-25 15:02:07,466 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification that was a NOOP. DAG size: 375
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 15:02:08,049 WARN  L188               SmtUtils]: Spent 574.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 302
[2020-11-25 15:02:09,553 WARN  L188               SmtUtils]: Spent 1.50 s on a formula simplification. DAG size of input: 536 DAG size of output: 524
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 15:02:10,070 WARN  L188               SmtUtils]: Spent 492.00 ms on a formula simplification. DAG size of input: 267 DAG size of output: 248
[2020-11-25 15:02:10,376 WARN  L188               SmtUtils]: Spent 285.00 ms on a formula simplification that was a NOOP. DAG size: 378
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #9: 19937 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19937 to 39869
[2020-11-25 15:02:10,856 WARN  L188               SmtUtils]: Spent 423.00 ms on a formula simplification. DAG size of input: 261 DAG size of output: 238
[2020-11-25 15:02:11,509 WARN  L188               SmtUtils]: Spent 651.00 ms on a formula simplification. DAG size of input: 370 DAG size of output: 369
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #8: 16103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 16103 to 32203
Garbage collection #9: 32203 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 32203 to 64403
Garbage collection #10: 64403 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 64403 to 114377
[2020-11-25 15:02:12,337 WARN  L188               SmtUtils]: Spent 808.00 ms on a formula simplification. DAG size of input: 391 DAG size of output: 364
[2020-11-25 15:02:12,361 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:02:12,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:02:12,406 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:02:12 BasicIcfg
[2020-11-25 15:02:12,406 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:02:12,407 INFO  L168              Benchmark]: Toolchain (without parser) took 19596.24 ms. Allocated memory was 1.0 GB in the beginning and 2.7 GB in the end (delta: 1.7 GB). Free memory was 929.8 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,407 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,407 INFO  L168              Benchmark]: Boogie Preprocessor took 118.57 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,408 INFO  L168              Benchmark]: UtopiaSpecLang took 73.85 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,408 INFO  L168              Benchmark]: Boogie Printer took 21.12 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,409 INFO  L168              Benchmark]: RCFGBuilder took 1054.39 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 53.0 MB). Free memory was 897.6 MB in the beginning and 972.4 MB in the end (delta: -74.8 MB). Peak memory consumption was 186.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,409 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.79 ms. Allocated memory is still 1.1 GB. Free memory was 972.4 MB in the beginning and 965.7 MB in the end (delta: 6.7 MB). Peak memory consumption was 6.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,409 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2022.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 171.4 MB). Free memory was 965.7 MB in the beginning and 776.2 MB in the end (delta: 189.5 MB). Peak memory consumption was 462.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,409 INFO  L168              Benchmark]: BlockEncodingV2 took 194.80 ms. Allocated memory is still 1.3 GB. Free memory was 776.2 MB in the beginning and 681.7 MB in the end (delta: 94.6 MB). Peak memory consumption was 94.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,410 INFO  L168              Benchmark]: BuchiAutomizer took 16069.13 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.4 GB). Free memory was 681.7 MB in the beginning and 2.0 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 15:02:12,412 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6266 locations, 11471 edges
  - StatisticsResult: Encoded RCFG
    6204 locations, 11314 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 118.57 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 73.85 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.12 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1054.39 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 53.0 MB). Free memory was 897.6 MB in the beginning and 972.4 MB in the end (delta: -74.8 MB). Peak memory consumption was 186.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.79 ms. Allocated memory is still 1.1 GB. Free memory was 972.4 MB in the beginning and 965.7 MB in the end (delta: 6.7 MB). Peak memory consumption was 6.7 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2022.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 171.4 MB). Free memory was 965.7 MB in the beginning and 776.2 MB in the end (delta: 189.5 MB). Peak memory consumption was 462.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 194.80 ms. Allocated memory is still 1.3 GB. Free memory was 776.2 MB in the beginning and 681.7 MB in the end (delta: 94.6 MB). Peak memory consumption was 94.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 16069.13 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.4 GB). Free memory was 681.7 MB in the beginning and 2.0 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2508 locations, 3479 edges
  - StatisticsResult: BuchiProgram size
    6266 locations, 11471 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 3447 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 16.0s and 3 iterations.  TraceHistogramMax:12. Analysis of lassos took 14.7s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 2 MinimizatonAttempts, 1092 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3447 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8308 SDtfs, 8375 SDslu, 3543 SDs, 0 SdLazy, 1433 SolverSat, 2024 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(156249729424745236788371263599738454169294664037830711474280024402693969238) = (new ECU)({from : 156249729424745236788371263599738454169294664037830711474280024402693969236});
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1881]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L4152]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4153]  COND FALSE  !(revert)
[L4156]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L4156]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  COND FALSE  !(revert)
[L4160]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L4160]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4161]  COND FALSE  !(revert)
[L4164]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L4164]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4165]  COND FALSE  !(revert)
[L4168]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3697]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3698]  COND FALSE  !(revert)
[L3701]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3701]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3702]  COND FALSE  !(revert)
[L3705]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3705]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3706]  COND FALSE  !(revert)
[L3709]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L3709]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3713]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3666]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3667]              sum_allowed3[this] := 0;
[L3713]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L4168]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4169]  COND FALSE  !(revert)
[L4172]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3993]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  COND FALSE  !(revert)
[L3997]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3997]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L4001]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3697]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3698]  COND FALSE  !(revert)
[L3701]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3641]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3645]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3622]              assume msgsender_MSG != null;
[L3623]              Balance[this] := 0;
[L3645]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3646]  COND FALSE  !(revert)
[L3701]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3702]  COND FALSE  !(revert)
[L3705]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3705]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3706]  COND FALSE  !(revert)
[L3709]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3258]              assume msgsender_MSG != null;
[L3259]              Balance[this] := 0;
[L3260]              totalSupply_ERC20Basic[this] := 0;
[L3274]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3275]  COND FALSE  !(revert)
[L3336]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]  COND FALSE  !(revert)
[L3340]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]              assume msgsender_MSG != null;
[L3181]              Balance[this] := 0;
[L3182]              owner_Ownable[this] := null;
[L3184]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3197]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3198]  COND FALSE  !(revert)
[L3340]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3341]  COND FALSE  !(revert)
[L3344]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3308]              assume msgsender_MSG != null;
[L3309]              Balance[this] := 0;
[L3310]              balances_BasicToken[this] := zeroRefintArr();
[L3311]              sum_balances0[this] := 0;
[L3312]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3314]              locked_BasicToken[this] := true;
[L3344]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3345]  COND FALSE  !(revert)
[L3709]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3713]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3666]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3667]              sum_allowed3[this] := 0;
[L3713]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3958]              assume msgsender_MSG != null;
[L3959]              Balance[this] := 0;
[L4013]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4172]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4173]  COND FALSE  !(revert)
[L4176]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4100]              assume msgsender_MSG != null;
[L4101]              Balance[this] := 0;
[L4102]              name_ECU[this] := -2027621617;
[L4103]              symbol_ECU[this] := 1342424742;
[L4104]              decimals_ECU[this] := 18;
[L4105]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4106]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4108]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4109]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4110]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4111]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4112]              assert { :EventEmitted "Transfer_ECU" } true;
[L4113]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4176]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4177]  COND FALSE  !(revert)
[L1881]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]              assume !revert && gas >= 0;
[L7241]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
StandardToken(156249729424745236788371263599738454169294664037830711474280024402693969238).transferFrom~address~address~uint256.gas(3979002)({from : 156249729424745236788371263599738454169294664037830711474280024402693969243, _from : 19781008330533595146085782002824322930726574509, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_StandardToken0 := true;
[L3]                call_transferFrom_StandardToken0 := false;
[L3]                revert := revert_hold;
[L1339]             havoc __exception;
[L1340]             revert := false;
[L1341]  COND TRUE  __exception
[L1342]             __tmp__Balance := Balance;
[L1343]             __tmp__DType := DType;
[L1344]             __tmp__Alloc := Alloc;
[L1345]             __tmp__balance_ADDR := balance_ADDR;
[L1346]             __tmp__M_Ref_int := M_Ref_int;
[L1347]             __tmp__sum_balances0 := sum_balances0;
[L1348]             __tmp__M_Ref_bool := M_Ref_bool;
[L1349]             __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1350]             __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1351]             __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1352]             __tmp__M_Ref_Ref := M_Ref_Ref;
[L1353]             __tmp__sum_allowed3 := sum_allowed3;
[L1354]             __tmp__Length := Length;
[L1355]             __tmp__now := now;
[L1356]             __tmp__owner_Ownable := owner_Ownable;
[L1357]             __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1358]             __tmp__balances_BasicToken := balances_BasicToken;
[L1359]             __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1360]             __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1361]             __tmp__locked_BasicToken := locked_BasicToken;
[L1362]             __tmp__allowed_StandardToken := allowed_StandardToken;
[L1363]             __tmp__name_ECU := name_ECU;
[L1364]             __tmp__symbol_ECU := symbol_ECU;
[L1365]             __tmp__decimals_ECU := decimals_ECU;
[L1366]             __tmp__initialSupply_ECU := initialSupply_ECU;
[L1367]  CALL       call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3727]             __var_6 := null;
[L3728]  COND TRUE  !(_to_s481 != null)
[L3729]             revert := true;
[L1367]  RET        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1368]             assume revert || gas < 0;
[L7173]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);

Loop:
StandardToken(156249729424745236788371263599738454169294664037830711474280024402693969238).transferFrom~address~address~uint256.gas(3979001)({from : 156249729424745236788371263599738454169294664037830711474280024402693969242, _from : 19781008330533595146085782002824322930726574509, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != _from_s481 && p1 != _to_s481) && (p2 != _from_s481 || p3 != msgsender_MSG)) && _from_s481 != _to_s481) && _value_s481 <= balances_BasicToken[this][_from_s481]) && _value_s481 <= allowed_StandardToken[this][_from_s481][msgsender_MSG]) && balances_BasicToken[this][_to_s481] + _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s481 >= 0) && _value_s481 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s481] >= 0) && balances_BasicToken[this][_to_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s481] >= 0) && balances_BasicToken[this][_from_s481] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s481][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s481][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_StandardToken0 := true;
[L3]                call_transferFrom_StandardToken0 := false;
[L3]                revert := revert_hold;
[L1339]             havoc __exception;
[L1340]             revert := false;
[L1341]  COND TRUE  __exception
[L1342]             __tmp__Balance := Balance;
[L1343]             __tmp__DType := DType;
[L1344]             __tmp__Alloc := Alloc;
[L1345]             __tmp__balance_ADDR := balance_ADDR;
[L1346]             __tmp__M_Ref_int := M_Ref_int;
[L1347]             __tmp__sum_balances0 := sum_balances0;
[L1348]             __tmp__M_Ref_bool := M_Ref_bool;
[L1349]             __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1350]             __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1351]             __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1352]             __tmp__M_Ref_Ref := M_Ref_Ref;
[L1353]             __tmp__sum_allowed3 := sum_allowed3;
[L1354]             __tmp__Length := Length;
[L1355]             __tmp__now := now;
[L1356]             __tmp__owner_Ownable := owner_Ownable;
[L1357]             __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1358]             __tmp__balances_BasicToken := balances_BasicToken;
[L1359]             __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1360]             __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1361]             __tmp__locked_BasicToken := locked_BasicToken;
[L1362]             __tmp__allowed_StandardToken := allowed_StandardToken;
[L1363]             __tmp__name_ECU := name_ECU;
[L1364]             __tmp__symbol_ECU := symbol_ECU;
[L1365]             __tmp__decimals_ECU := decimals_ECU;
[L1366]             __tmp__initialSupply_ECU := initialSupply_ECU;
[L1367]  CALL       call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L3727]             __var_6 := null;
[L3728]  COND TRUE  !(_to_s481 != null)
[L3729]             revert := true;
[L1367]  RET        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);
[L1368]             assume revert || gas < 0;
[L7173]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s481, _to_s481, _value_s481);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
