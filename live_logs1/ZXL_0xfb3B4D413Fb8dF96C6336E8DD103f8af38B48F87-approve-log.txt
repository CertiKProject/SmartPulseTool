This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:38:14,637 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:38:14,639 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:38:14,649 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:38:14,649 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:38:14,650 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:38:14,651 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:38:14,652 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:38:14,653 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:38:14,654 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:38:14,654 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:38:14,655 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:38:14,655 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:38:14,656 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:38:14,657 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:38:14,657 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:38:14,658 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:38:14,659 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:38:14,660 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:38:14,661 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:38:14,662 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:38:14,663 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:38:14,664 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:38:14,664 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:38:14,665 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:38:14,665 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:38:14,665 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:38:14,666 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:38:14,666 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:38:14,666 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:38:14,667 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:38:14,667 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:38:14,668 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:38:14,668 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:38:14,669 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:38:14,669 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:38:14,669 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:38:14,670 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:38:14,670 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:38:14,670 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:38:14,671 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:38:14,671 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:38:14,679 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:38:14,679 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:38:14,680 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:38:14,680 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:38:14,680 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:38:14,680 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:38:14,681 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:38:14,681 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:38:14,682 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:38:14,682 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:38:14,682 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:38:14,682 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:38:14,682 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:38:14,705 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:38:14,718 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:38:14,720 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:38:14,721 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:38:14,722 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:38:14,722 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl
[2020-11-25 11:38:14,722 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl'
[2020-11-25 11:38:14,796 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:38:14,797 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:38:14,797 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:38:14,797 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:38:14,797 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:38:14,814 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,815 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,839 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,840 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,854 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,864 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,873 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,884 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:38:14,884 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:38:14,884 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:38:14,886 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:38:14,890 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/1) ...
[2020-11-25 11:38:14,904 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZXL.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZXL.approve(spender, value), return == true && allowance_ZXL[this][msg.sender][spender] == value &&  totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:14,909 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZXL.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZXL.approve(spender, value), return == true && allowance_ZXL[this][msg.sender][spender] == value &&  totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:14,916 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZXL.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZXL.approve(spender, value), return == true && allowance_ZXL[this][msg.sender][spender] == value &&  totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:14,921 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s221 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s221,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]
[2020-11-25 11:38:14,923 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s221==true && allowance_ZXL[this][msg.sender][_spender_s221]==_value_s221 ) && totalSupply_ZXL[this]==( old(totalSupply_ZXL[this]) ) ) && balanceOf_ZXL[this]==( old(balanceOf_ZXL[this]) ) ) && allowance_ZXL[this][p1][p2]==( old(allowance_ZXL[this][p1][p2]) ) ) && name_ZXL[this]==( old(name_ZXL[this]) ) ) && symbol_ZXL[this]==( old(symbol_ZXL[this]) ) ) && decimals_ZXL[this]==( old(decimals_ZXL[this]) ) ) && owner_ZXL[this]==( old(owner_ZXL[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s221,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ZXL>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],[IdentifierExpression[_spender_s221,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZXL>]]]]]]
[2020-11-25 11:38:14,927 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZXL.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZXL.approve(spender, value), return == true && allowance_ZXL[this][msg.sender][spender] == value &&  totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:14,927 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ZXL0) ==> ( <>AP(success_approve_ZXL0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:38:14,933 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:14 PropertyContainer
[2020-11-25 11:38:14,933 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:38:14,934 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:38:14,934 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:38:14,934 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:38:14,935 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/2) ...
[2020-11-25 11:38:14,935 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:38:14,935 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:38:14,944 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:14" (2/2) ...
[2020-11-25 11:38:14,944 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:38:14,945 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:38:14,945 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:38:14,945 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:38:14,945 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/2) ...
[2020-11-25 11:38:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL
[2020-11-25 11:38:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:14,999 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL
[2020-11-25 11:38:14,999 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL
[2020-11-25 11:38:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL
[2020-11-25 11:38:15,000 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL
[2020-11-25 11:38:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZXL
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:15,001 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:15,002 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:15,003 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:15,004 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:15,004 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:15,004 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:38:15,004 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:15,004 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__success
[2020-11-25 11:38:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZXL
[2020-11-25 11:38:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:38:15,008 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:38:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:38:15,173 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:15,336 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:15,336 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:15,336 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:15,456 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:38:15,457 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 11:38:15,458 INFO  L202        PluginConnector]: Adding new model ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:15 BoogieIcfgContainer
[2020-11-25 11:38:15,458 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:14" (2/2) ...
[2020-11-25 11:38:15,458 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:38:15,459 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4708f4cf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:15, skipping insertion in model container
[2020-11-25 11:38:15,459 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:38:15,459 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:15,459 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:38:15,461 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:38:15,461 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/3) ...
[2020-11-25 11:38:15,461 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6a19aa30 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:15, skipping insertion in model container
[2020-11-25 11:38:15,461 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:38:15,496 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:15 NWAContainer
[2020-11-25 11:38:15,496 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:15,496 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:15,496 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:38:15,497 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:38:15,498 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:15" (3/4) ...
[2020-11-25 11:38:15,499 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@8f43b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:15, skipping insertion in model container
[2020-11-25 11:38:15,499 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:15" (4/4) ...
[2020-11-25 11:38:15,502 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:38:15,505 INFO  L110   BuchiProductObserver]: Initial RCFG 820 locations, 992 edges
[2020-11-25 11:38:15,505 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:38:15,514 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:38:16,419 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:38:16,422 INFO  L110   BuchiProductObserver]: BuchiProgram size 1906 locations, 3188 edges
[2020-11-25 11:38:16,422 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:16 BoogieIcfgContainer
[2020-11-25 11:38:16,422 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:16,422 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:38:16,422 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:38:16,424 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:38:16,424 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:16" (1/1) ...
[2020-11-25 11:38:16,478 INFO  L313           BlockEncoder]: Initial Icfg 1906 locations, 3188 edges
[2020-11-25 11:38:16,478 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:38:16,478 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:16,478 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:38:16,479 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:38:16,486 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 11:38:16,490 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:38:16,495 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:38:16,497 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:38:16,499 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:38:16,499 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:38:16,502 INFO  L313           BlockEncoder]: Encoded RCFG 1888 locations, 3145 edges
[2020-11-25 11:38:16,502 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:16 BasicIcfg
[2020-11-25 11:38:16,502 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:38:16,502 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:38:16,502 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:38:16,504 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:38:16,504 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,504 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:14" (1/6) ...
[2020-11-25 11:38:16,506 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f7f1be6 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:16, skipping insertion in model container
[2020-11-25 11:38:16,506 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,506 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:14" (2/6) ...
[2020-11-25 11:38:16,506 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f7f1be6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:16, skipping insertion in model container
[2020-11-25 11:38:16,506 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,506 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:15" (3/6) ...
[2020-11-25 11:38:16,507 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f7f1be6 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:38:16, skipping insertion in model container
[2020-11-25 11:38:16,507 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,507 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:15" (4/6) ...
[2020-11-25 11:38:16,507 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f7f1be6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:16, skipping insertion in model container
[2020-11-25 11:38:16,507 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,507 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:16" (5/6) ...
[2020-11-25 11:38:16,507 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7f7f1be6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:38:16, skipping insertion in model container
[2020-11-25 11:38:16,507 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:16,507 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:16" (6/6) ...
[2020-11-25 11:38:16,508 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_approve.bpl_BEv2
[2020-11-25 11:38:16,542 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:38:16,542 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:38:16,542 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:38:16,542 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:38:16,542 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:38:16,542 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:38:16,542 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:38:16,542 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:38:16,542 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:38:16,560 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1888 states.
[2020-11-25 11:38:16,594 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:16,594 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:16,594 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:16,604 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:16,604 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:16,604 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:38:16,604 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1888 states.
[2020-11-25 11:38:16,614 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:16,614 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:16,615 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:16,616 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:16,616 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZXL0 := false;
[L3]                 call_approve_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND TRUE   choice == 12
[L2104]              gas := gas - 21000;
[L2105]  COND FALSE  !(gas >= 0)
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:16,630 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:16,630 INFO  L82        PathProgramCache]: Analyzing trace with hash 344551521, now seen corresponding path program 1 times
[2020-11-25 11:38:16,633 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:16,657 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:16,691 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:16,693 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:16,694 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:38:16,698 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:16,710 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:38:16,710 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:38:16,712 INFO  L87              Difference]: Start difference. First operand 1888 states. Second operand 3 states.
[2020-11-25 11:38:16,956 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:16,957 INFO  L93              Difference]: Finished difference Result 1518 states and 1653 transitions.
[2020-11-25 11:38:16,957 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:38:16,958 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1518 states and 1653 transitions.
[2020-11-25 11:38:16,969 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:16,983 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1518 states to 1516 states and 1649 transitions.
[2020-11-25 11:38:16,984 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:38:16,986 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 707
[2020-11-25 11:38:16,987 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1516 states and 1649 transitions.
[2020-11-25 11:38:16,992 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:16,992 INFO  L728         BuchiCegarLoop]: Abstraction has 1516 states and 1649 transitions.
[2020-11-25 11:38:17,009 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1516 states and 1649 transitions.
[2020-11-25 11:38:17,043 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1516 to 1516.
[2020-11-25 11:38:17,043 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1516 states.
[2020-11-25 11:38:17,047 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1516 states to 1516 states and 1649 transitions.
[2020-11-25 11:38:17,048 INFO  L751         BuchiCegarLoop]: Abstraction has 1516 states and 1649 transitions.
[2020-11-25 11:38:17,048 INFO  L631         BuchiCegarLoop]: Abstraction has 1516 states and 1649 transitions.
[2020-11-25 11:38:17,048 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:38:17,048 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1516 states and 1649 transitions.
[2020-11-25 11:38:17,054 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:17,055 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:17,055 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:17,057 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:17,057 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZXL0 := false;
[L3]                 call_approve_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1327]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1328]              allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1329]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1330]              success_s221 := true;
[L338]   RET         call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L339]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s221 == true && allowance_ZXL[this][msgsender_MSG][_spender_s221] == _value_s221) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1327]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1328]              allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1329]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1330]              success_s221 := true;
[L338]   RET         call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L339]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s221 == true && allowance_ZXL[this][msgsender_MSG][_spender_s221] == _value_s221) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:17,063 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:17,063 INFO  L82        PathProgramCache]: Analyzing trace with hash -846925447, now seen corresponding path program 1 times
[2020-11-25 11:38:17,064 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:17,100 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:17,229 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:17,229 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:17,229 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 11:38:17,231 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:17,231 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 11:38:17,231 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 11:38:17,231 INFO  L87              Difference]: Start difference. First operand 1516 states and 1649 transitions. cyclomatic complexity: 135 Second operand 13 states.
[2020-11-25 11:38:18,367 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:18,368 INFO  L93              Difference]: Finished difference Result 1653 states and 1808 transitions.
[2020-11-25 11:38:18,368 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 11:38:18,368 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1653 states and 1808 transitions.
[2020-11-25 11:38:18,377 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 11:38:18,385 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1653 states to 1653 states and 1808 transitions.
[2020-11-25 11:38:18,385 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 772
[2020-11-25 11:38:18,386 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 772
[2020-11-25 11:38:18,386 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1653 states and 1808 transitions.
[2020-11-25 11:38:18,389 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:18,389 INFO  L728         BuchiCegarLoop]: Abstraction has 1653 states and 1808 transitions.
[2020-11-25 11:38:18,391 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1653 states and 1808 transitions.
[2020-11-25 11:38:18,413 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1653 to 1623.
[2020-11-25 11:38:18,413 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1623 states.
[2020-11-25 11:38:18,417 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1623 states to 1623 states and 1769 transitions.
[2020-11-25 11:38:18,417 INFO  L751         BuchiCegarLoop]: Abstraction has 1623 states and 1769 transitions.
[2020-11-25 11:38:18,417 INFO  L631         BuchiCegarLoop]: Abstraction has 1623 states and 1769 transitions.
[2020-11-25 11:38:18,417 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:38:18,418 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1623 states and 1769 transitions.
[2020-11-25 11:38:18,424 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:38:18,425 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:18,425 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:18,428 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:18,428 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZXL0 := false;
[L3]                 call_approve_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND TRUE   __exception
[L317]               __tmp__Balance := Balance;
[L318]               __tmp__DType := DType;
[L319]               __tmp__Alloc := Alloc;
[L320]               __tmp__balance_ADDR := balance_ADDR;
[L321]               __tmp__M_Ref_int := M_Ref_int;
[L322]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L323]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L324]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L325]               __tmp__sum_allowance1 := sum_allowance1;
[L326]               __tmp__Length := Length;
[L327]               __tmp__now := now;
[L328]               __tmp__name_ZXL := name_ZXL;
[L329]               __tmp__symbol_ZXL := symbol_ZXL;
[L330]               __tmp__decimals_ZXL := decimals_ZXL;
[L331]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L332]               __tmp__owner_ZXL := owner_ZXL;
[L333]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L334]               __tmp__allowance_ZXL := allowance_ZXL;
[L335]   CALL        call success_s221 := approve~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1318]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1319]              __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1320]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1321]              success_s221 := true;
[L335]   RET         call success_s221 := approve~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L336]               assume revert || gas < 0;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND TRUE   __exception
[L317]               __tmp__Balance := Balance;
[L318]               __tmp__DType := DType;
[L319]               __tmp__Alloc := Alloc;
[L320]               __tmp__balance_ADDR := balance_ADDR;
[L321]               __tmp__M_Ref_int := M_Ref_int;
[L322]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L323]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L324]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L325]               __tmp__sum_allowance1 := sum_allowance1;
[L326]               __tmp__Length := Length;
[L327]               __tmp__now := now;
[L328]               __tmp__name_ZXL := name_ZXL;
[L329]               __tmp__symbol_ZXL := symbol_ZXL;
[L330]               __tmp__decimals_ZXL := decimals_ZXL;
[L331]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L332]               __tmp__owner_ZXL := owner_ZXL;
[L333]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L334]               __tmp__allowance_ZXL := allowance_ZXL;
[L335]   CALL        call success_s221 := approve~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1318]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1319]              __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1320]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1321]              success_s221 := true;
[L335]   RET         call success_s221 := approve~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L336]               assume revert || gas < 0;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:18,434 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:18,435 INFO  L82        PathProgramCache]: Analyzing trace with hash 878984583, now seen corresponding path program 1 times
[2020-11-25 11:38:18,436 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:18,450 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:18,476 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:18,476 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:18,476 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 11:38:18,477 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:18,477 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 11:38:18,477 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 11:38:18,477 INFO  L87              Difference]: Start difference. First operand 1623 states and 1769 transitions. cyclomatic complexity: 150 Second operand 5 states.
[2020-11-25 11:38:18,725 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:18,726 INFO  L93              Difference]: Finished difference Result 2163 states and 2418 transitions.
[2020-11-25 11:38:18,726 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:38:18,726 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2163 states and 2418 transitions.
[2020-11-25 11:38:18,734 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 11:38:18,742 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2163 states to 1583 states and 1828 transitions.
[2020-11-25 11:38:18,742 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 759
[2020-11-25 11:38:18,742 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 759
[2020-11-25 11:38:18,742 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1583 states and 1828 transitions.
[2020-11-25 11:38:18,745 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:18,745 INFO  L728         BuchiCegarLoop]: Abstraction has 1583 states and 1828 transitions.
[2020-11-25 11:38:18,746 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1583 states and 1828 transitions.
[2020-11-25 11:38:18,760 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1583 to 1067.
[2020-11-25 11:38:18,760 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1067 states.
[2020-11-25 11:38:18,762 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1067 states to 1067 states and 1170 transitions.
[2020-11-25 11:38:18,762 INFO  L751         BuchiCegarLoop]: Abstraction has 1067 states and 1170 transitions.
[2020-11-25 11:38:18,762 INFO  L631         BuchiCegarLoop]: Abstraction has 1067 states and 1170 transitions.
[2020-11-25 11:38:18,762 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:38:18,762 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1067 states and 1170 transitions.
[2020-11-25 11:38:18,764 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:18,764 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:18,764 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:18,765 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:18,766 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZXL0 := false;
[L3]                 call_approve_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s221);
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1327]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1328]              allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1329]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1330]              success_s221 := true;
[L338]   RET         call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L339]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s221 == true && allowance_ZXL[this][msgsender_MSG][_spender_s221] == _value_s221) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1327]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1328]              allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1329]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1330]              success_s221 := true;
[L338]   RET         call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L339]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s221 == true && allowance_ZXL[this][msgsender_MSG][_spender_s221] == _value_s221) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND FALSE  !(choice == 5)
[L2153]  COND TRUE   choice == 4
[L2154]              gas := gas - 21000;
[L2155]  COND TRUE   gas >= 0
[L2156]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2157]              assume msgvalue_MSG == 0;
[L2158]  CALL        call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s221;
[L3]                 call_approve_ZXL0 := true;
[L3]                 call_approve_ZXL0 := false;
[L3]                 revert := revert_hold;
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L1327]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1328]              allowance_ZXL[this][msgsender_MSG][_spender_s221] := _value_s221;
[L1329]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_ZXL[this][msgsender_MSG][_spender_s221];
[L1330]              success_s221 := true;
[L338]   RET         call success_s221 := approve~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L339]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s221 == true && allowance_ZXL[this][msgsender_MSG][_spender_s221] == _value_s221) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2158]  RET         call success_s221 := approve~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _spender_s221, _value_s221);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:18,768 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:18,768 INFO  L82        PathProgramCache]: Analyzing trace with hash -232149789, now seen corresponding path program 1 times
[2020-11-25 11:38:18,769 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:18,788 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:18,839 INFO  L134       CoverageAnalysis]: Checked inductivity of 60 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 56 trivial. 0 not checked.
[2020-11-25 11:38:18,839 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:18,839 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 11:38:18,840 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:18,840 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:38:18,840 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:38:18,840 INFO  L87              Difference]: Start difference. First operand 1067 states and 1170 transitions. cyclomatic complexity: 106 Second operand 7 states.
[2020-11-25 11:38:18,979 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:18,979 INFO  L93              Difference]: Finished difference Result 586 states and 637 transitions.
[2020-11-25 11:38:18,980 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:38:18,980 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 586 states and 637 transitions.
[2020-11-25 11:38:18,982 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:38:18,982 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 586 states to 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:38:18,983 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:38:18,983 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:18,983 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:38:18,983 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:38:18,983 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:38:18,983 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:38:18,987 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:38:18 BasicIcfg
[2020-11-25 11:38:18,987 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:38:18,987 INFO  L168              Benchmark]: Toolchain (without parser) took 4191.15 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 290.5 MB). Free memory was 945.9 MB in the beginning and 871.8 MB in the end (delta: 74.1 MB). Peak memory consumption was 364.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,989 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,989 INFO  L168              Benchmark]: Boogie Preprocessor took 86.93 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,989 INFO  L168              Benchmark]: UtopiaSpecLang took 49.22 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,990 INFO  L168              Benchmark]: Boogie Printer took 10.64 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,990 INFO  L168              Benchmark]: RCFGBuilder took 514.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 876.1 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,990 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,991 INFO  L168              Benchmark]: BÃ¼chi Program Product took 925.82 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 867.2 MB in the beginning and 887.3 MB in the end (delta: -20.2 MB). Peak memory consumption was 151.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,991 INFO  L168              Benchmark]: BlockEncodingV2 took 79.53 ms. Allocated memory is still 1.1 GB. Free memory was 887.3 MB in the beginning and 843.3 MB in the end (delta: 44.0 MB). Peak memory consumption was 44.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,992 INFO  L168              Benchmark]: BuchiAutomizer took 2484.74 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 234.4 MB). Free memory was 843.3 MB in the beginning and 871.8 MB in the end (delta: -28.5 MB). Peak memory consumption was 205.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:18,995 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1906 locations, 3188 edges
  - StatisticsResult: Encoded RCFG
    1888 locations, 3145 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 86.93 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.22 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.64 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 514.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 876.1 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 925.82 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 867.2 MB in the beginning and 887.3 MB in the end (delta: -20.2 MB). Peak memory consumption was 151.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 79.53 ms. Allocated memory is still 1.1 GB. Free memory was 887.3 MB in the beginning and 843.3 MB in the end (delta: 44.0 MB). Peak memory consumption was 44.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2484.74 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 234.4 MB). Free memory was 843.3 MB in the beginning and 871.8 MB in the end (delta: -28.5 MB). Peak memory consumption was 205.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    820 locations, 992 edges
  - StatisticsResult: BuchiProgram size
    1906 locations, 3188 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.2s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 546 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1623 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5683 SDtfs, 6501 SDslu, 9178 SDs, 0 SdLazy, 11281 SolverSat, 1443 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_ZXL0) ==> ( <>(success_approve_ZXL0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
