This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:13:01,775 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:13:01,776 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:13:01,787 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:13:01,787 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:13:01,787 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:13:01,788 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:13:01,790 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:13:01,791 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:13:01,792 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:13:01,793 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:13:01,793 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:13:01,794 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:13:01,794 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:13:01,795 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:13:01,796 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:13:01,796 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:13:01,797 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:13:01,799 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:13:01,800 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:13:01,801 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:13:01,802 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:13:01,804 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:13:01,804 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:13:01,804 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:13:01,805 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:13:01,805 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:13:01,806 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:13:01,806 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:13:01,806 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:13:01,807 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:13:01,807 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:13:01,808 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:13:01,808 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:13:01,809 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:13:01,809 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:13:01,809 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:13:01,810 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:13:01,810 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:13:01,810 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:13:01,811 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:13:01,811 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:13:01,820 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:13:01,820 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:13:01,821 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:13:01,821 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:13:01,821 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:13:01,821 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:13:01,821 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:13:01,822 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:13:01,822 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:13:01,822 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:13:01,822 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:13:01,822 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:13:01,822 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:13:01,823 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:13:01,823 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:13:01,824 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:13:01,824 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:13:01,824 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:13:01,824 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:13:01,848 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:13:01,860 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:13:01,864 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:13:01,866 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:13:01,867 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:13:01,867 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl
[2020-11-25 08:13:01,868 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl'
[2020-11-25 08:13:01,971 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:13:01,972 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:13:01,973 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:13:01,973 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:13:01,973 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:13:01,990 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:01,992 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,041 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,042 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,072 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,085 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,097 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,116 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:13:02,117 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:13:02,117 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:13:02,119 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:13:02,123 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/1) ...
[2020-11-25 08:13:02,144 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.totalSupply, _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.totalSupply, return == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_USDX[this] == old(aSBlock_USDX[this]) && aEBlock_USDX[this] == old(aEBlock_USDX[this]) && aCap_USDX[this] == old(aCap_USDX[this]) && aTot_USDX[this] == old(aTot_USDX[this]) && aAmt_USDX[this] == old(aAmt_USDX[this]) && sSBlock_USDX[this] == old(sSBlock_USDX[this]) && sEBlock_USDX[this] == old(sEBlock_USDX[this]) && sCap_USDX[this] == old(sCap_USDX[this]) && sTot_USDX[this] == old(sTot_USDX[this]) && sChunk_USDX[this] == old(sChunk_USDX[this]) && sPrice_USDX[this] == old(sPrice_USDX[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 08:13:02,150 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.totalSupply, _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.totalSupply, return == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_USDX[this] == old(aSBlock_USDX[this]) && aEBlock_USDX[this] == old(aEBlock_USDX[this]) && aCap_USDX[this] == old(aCap_USDX[this]) && aTot_USDX[this] == old(aTot_USDX[this]) && aAmt_USDX[this] == old(aAmt_USDX[this]) && sSBlock_USDX[this] == old(sSBlock_USDX[this]) && sEBlock_USDX[this] == old(sEBlock_USDX[this]) && sCap_USDX[this] == old(sCap_USDX[this]) && sTot_USDX[this] == old(sTot_USDX[this]) && sChunk_USDX[this] == old(sChunk_USDX[this]) && sPrice_USDX[this] == old(sPrice_USDX[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 08:13:02,158 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.totalSupply, _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.totalSupply, return == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_USDX[this] == old(aSBlock_USDX[this]) && aEBlock_USDX[this] == old(aEBlock_USDX[this]) && aCap_USDX[this] == old(aCap_USDX[this]) && aTot_USDX[this] == old(aTot_USDX[this]) && aAmt_USDX[this] == old(aAmt_USDX[this]) && sSBlock_USDX[this] == old(sSBlock_USDX[this]) && sEBlock_USDX[this] == old(sEBlock_USDX[this]) && sCap_USDX[this] == old(sCap_USDX[this]) && sTot_USDX[this] == old(sTot_USDX[this]) && sChunk_USDX[this] == old(sChunk_USDX[this]) && sPrice_USDX[this] == old(sPrice_USDX[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 08:13:02,165 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_TokenERC20[this]>=0 && _totalSupply_TokenERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 08:13:02,170 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && balances_TokenERC20[this]==( old(balances_TokenERC20[this]) ) ) && allowed_TokenERC20[this]==( old(allowed_TokenERC20[this]) ) ) && aSBlock_USDX[this]==( old(aSBlock_USDX[this]) ) ) && aEBlock_USDX[this]==( old(aEBlock_USDX[this]) ) ) && aCap_USDX[this]==( old(aCap_USDX[this]) ) ) && aTot_USDX[this]==( old(aTot_USDX[this]) ) ) && aAmt_USDX[this]==( old(aAmt_USDX[this]) ) ) && sSBlock_USDX[this]==( old(sSBlock_USDX[this]) ) ) && sEBlock_USDX[this]==( old(sEBlock_USDX[this]) ) ) && sCap_USDX[this]==( old(sCap_USDX[this]) ) ) && sTot_USDX[this]==( old(sTot_USDX[this]) ) ) && sChunk_USDX[this]==( old(sChunk_USDX[this]) ) ) && sPrice_USDX[this]==( old(sPrice_USDX[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_TokenERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice_USDX,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_TokenERC20>]]]]]]
[2020-11-25 08:13:02,177 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.totalSupply, _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.totalSupply, return == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_USDX[this] == old(aSBlock_USDX[this]) && aEBlock_USDX[this] == old(aEBlock_USDX[this]) && aCap_USDX[this] == old(aCap_USDX[this]) && aTot_USDX[this] == old(aTot_USDX[this]) && aAmt_USDX[this] == old(aAmt_USDX[this]) && sSBlock_USDX[this] == old(sSBlock_USDX[this]) && sEBlock_USDX[this] == old(sEBlock_USDX[this]) && sCap_USDX[this] == old(sCap_USDX[this]) && sTot_USDX[this] == old(sTot_USDX[this]) && sChunk_USDX[this] == old(sChunk_USDX[this]) && sPrice_USDX[this] == old(sPrice_USDX[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 08:13:02,178 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_TokenERC200) ==> ( <>AP(success_totalSupply_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:13:02,192 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:13:02 PropertyContainer
[2020-11-25 08:13:02,193 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:13:02,193 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:13:02,193 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:13:02,193 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:13:02,194 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/2) ...
[2020-11-25 08:13:02,194 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:13:02,195 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:13:02,216 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:13:02" (2/2) ...
[2020-11-25 08:13:02,216 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:13:02,216 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:13:02,216 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:13:02,216 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:13:02,217 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/2) ...
[2020-11-25 08:13:02,272 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:13:02,272 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:13:02,272 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 08:13:02,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 08:13:02,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 08:13:02,273 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 08:13:02,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 08:13:02,274 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 08:13:02,275 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 08:13:02,275 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 08:13:02,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 08:13:02,275 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 08:13:02,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 08:13:02,275 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 08:13:02,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 08:13:02,275 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 08:13:02,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 08:13:02,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 08:13:02,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 08:13:02,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 08:13:02,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 08:13:02,276 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 08:13:02,277 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 08:13:02,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 08:13:02,277 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 08:13:02,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 08:13:02,277 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__success
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 08:13:02,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 08:13:02,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 08:13:02,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure USDX_USDX_NoBaseCtor__success
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure USDX_USDX
[2020-11-25 08:13:02,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDX_USDX
[2020-11-25 08:13:02,278 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_USDX
[2020-11-25 08:13:02,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_USDX
[2020-11-25 08:13:02,279 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_USDX
[2020-11-25 08:13:02,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_USDX
[2020-11-25 08:13:02,279 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_USDX
[2020-11-25 08:13:02,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_USDX
[2020-11-25 08:13:02,279 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_USDX
[2020-11-25 08:13:02,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_USDX
[2020-11-25 08:13:02,279 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX
[2020-11-25 08:13:02,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX
[2020-11-25 08:13:02,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_USDX
[2020-11-25 08:13:02,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_USDX
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_USDX__success
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_USDX
[2020-11-25 08:13:02,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_USDX
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_USDX
[2020-11-25 08:13:02,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_USDX
[2020-11-25 08:13:02,280 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_USDX
[2020-11-25 08:13:02,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_USDX
[2020-11-25 08:13:02,281 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_USDX
[2020-11-25 08:13:02,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_USDX
[2020-11-25 08:13:02,281 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_USDX
[2020-11-25 08:13:02,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_USDX
[2020-11-25 08:13:02,281 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_USDX
[2020-11-25 08:13:02,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_USDX
[2020-11-25 08:13:02,281 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_USDX
[2020-11-25 08:13:02,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_USDX
[2020-11-25 08:13:02,281 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_USDX
[2020-11-25 08:13:02,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_USDX
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_USDX
[2020-11-25 08:13:02,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_USDX
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_USDX
[2020-11-25 08:13:02,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_USDX
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_USDX
[2020-11-25 08:13:02,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_USDX
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:13:02,282 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 08:13:02,283 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USDX
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,284 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 08:13:02,285 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 08:13:02,286 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,287 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__fail
[2020-11-25 08:13:02,288 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure USDX_USDX_NoBaseCtor__fail
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure USDX_USDX__success
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure USDX_USDX__fail
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_USDX__success
[2020-11-25 08:13:02,289 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_USDX__fail
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_USDX__success
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_USDX__fail
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_USDX__success
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_USDX__fail
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_USDX__success
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_USDX__fail
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX__success
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX__fail
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX__success
[2020-11-25 08:13:02,290 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_USDX__success
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_USDX__success
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_USDX__success
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_USDX__success
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_USDX__success
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_USDX__fail
[2020-11-25 08:13:02,291 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_USDX__fail
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_USDX__fail
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_USDX__fail
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_USDX__fail
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_USDX__fail
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_USDX__success
[2020-11-25 08:13:02,292 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_USDX__fail
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_USDX__success
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_USDX__fail
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:13:02,293 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 08:13:02,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 08:13:02,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 08:13:02,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 08:13:02,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 08:13:02,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__fail
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDX_USDX_NoBaseCtor__fail
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDX_USDX_NoBaseCtor__success
[2020-11-25 08:13:02,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDX_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDX_USDX__success
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_USDX__success
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_USDX__success
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_USDX__success
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_USDX__success
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX__fail
[2020-11-25 08:13:02,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX__fail
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_USDX__fail
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_USDX__fail
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_USDX__fail
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_USDX__fail
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_USDX__success
[2020-11-25 08:13:02,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_USDX__fail
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_USDX__success
[2020-11-25 08:13:02,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_USDX__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_USDX__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_USDX__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_USDX__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_USDX__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_USDX__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:13:02,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 08:13:02,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USDX
[2020-11-25 08:13:02,304 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:13:02,304 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:13:02,304 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:13:02,991 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:13:02,991 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:13:02,992 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:13:03,296 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:13:03,296 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 08:13:03,299 INFO  L202        PluginConnector]: Adding new model USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:13:03 BoogieIcfgContainer
[2020-11-25 08:13:03,299 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:13:02" (2/2) ...
[2020-11-25 08:13:03,299 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:13:03,299 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@53167275 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:13:03, skipping insertion in model container
[2020-11-25 08:13:03,300 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:13:03,300 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:13:03,300 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:13:03,301 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:13:03,301 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/3) ...
[2020-11-25 08:13:03,302 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@12d0101c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:13:03, skipping insertion in model container
[2020-11-25 08:13:03,302 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:13:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:13:03,343 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:13:03 NWAContainer
[2020-11-25 08:13:03,343 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:13:03,343 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:13:03,343 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:13:03,344 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:13:03,345 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:13:03" (3/4) ...
[2020-11-25 08:13:03,346 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4d9d7404 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:13:03, skipping insertion in model container
[2020-11-25 08:13:03,346 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:13:03" (4/4) ...
[2020-11-25 08:13:03,349 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:13:03,356 INFO  L110   BuchiProductObserver]: Initial RCFG 3566 locations, 4642 edges
[2020-11-25 08:13:03,356 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:13:03,369 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:13:05,143 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:13:05,153 INFO  L110   BuchiProductObserver]: BuchiProgram size 8358 locations, 14611 edges
[2020-11-25 08:13:05,154 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:13:05 BoogieIcfgContainer
[2020-11-25 08:13:05,154 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:13:05,154 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:13:05,154 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:13:05,155 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:13:05,156 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:13:05" (1/1) ...
[2020-11-25 08:13:05,266 INFO  L313           BlockEncoder]: Initial Icfg 8358 locations, 14611 edges
[2020-11-25 08:13:05,266 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:13:05,266 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:13:05,266 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:13:05,267 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:13:05,281 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 15 locations because of local infeasibility
[2020-11-25 08:13:05,292 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 08:13:05,307 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:13:05,312 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:13:05,317 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:13:05,318 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:13:05,322 INFO  L313           BlockEncoder]: Encoded RCFG 8302 locations, 14466 edges
[2020-11-25 08:13:05,322 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:13:05 BasicIcfg
[2020-11-25 08:13:05,322 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:13:05,323 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:13:05,323 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:13:05,324 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:13:05,324 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,324 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:13:01" (1/6) ...
[2020-11-25 08:13:05,326 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67b8e472 and model type USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:13:05, skipping insertion in model container
[2020-11-25 08:13:05,326 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,326 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:13:02" (2/6) ...
[2020-11-25 08:13:05,326 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67b8e472 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:13:05, skipping insertion in model container
[2020-11-25 08:13:05,326 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,326 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:13:03" (3/6) ...
[2020-11-25 08:13:05,326 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67b8e472 and model type USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:13:05, skipping insertion in model container
[2020-11-25 08:13:05,327 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,327 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:13:03" (4/6) ...
[2020-11-25 08:13:05,327 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67b8e472 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:13:05, skipping insertion in model container
[2020-11-25 08:13:05,327 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,327 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:13:05" (5/6) ...
[2020-11-25 08:13:05,327 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67b8e472 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:13:05, skipping insertion in model container
[2020-11-25 08:13:05,327 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:13:05,327 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:13:05" (6/6) ...
[2020-11-25 08:13:05,328 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USDX_0xbec4a69d6a5fbcb2303c13d24ea1a51a6f19bd12_totalsupply.bpl_BEv2
[2020-11-25 08:13:05,354 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:13:05,354 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:13:05,354 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:13:05,354 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:13:05,354 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:13:05,354 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:13:05,354 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:13:05,354 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:13:05,354 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:13:05,405 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8302 states.
[2020-11-25 08:13:05,472 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:05,472 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:05,473 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:05,479 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:05,479 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:05,480 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:13:05,480 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8302 states.
[2020-11-25 08:13:05,514 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:05,515 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:05,515 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:05,516 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:05,516 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND TRUE   revert
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND FALSE  !(gas >= 0)
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:05,530 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:05,530 INFO  L82        PathProgramCache]: Analyzing trace with hash 299280274, now seen corresponding path program 1 times
[2020-11-25 08:13:05,534 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:05,553 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:05,580 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:13:05,581 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:13:05,581 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 08:13:06,026 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:06,034 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 08:13:06,035 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 08:13:06,036 INFO  L87              Difference]: Start difference. First operand 8302 states. Second operand 3 states.
[2020-11-25 08:13:06,384 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:06,384 INFO  L93              Difference]: Finished difference Result 8500 states and 14392 transitions.
[2020-11-25 08:13:06,385 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 08:13:06,387 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8500 states and 14392 transitions.
[2020-11-25 08:13:06,460 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:13:06,557 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8500 states to 8500 states and 14392 transitions.
[2020-11-25 08:13:06,558 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 08:13:06,560 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 396
[2020-11-25 08:13:06,561 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8500 states and 14392 transitions.
[2020-11-25 08:13:06,585 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:06,585 INFO  L728         BuchiCegarLoop]: Abstraction has 8500 states and 14392 transitions.
[2020-11-25 08:13:06,605 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8500 states and 14392 transitions.
[2020-11-25 08:13:06,720 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8500 to 7552.
[2020-11-25 08:13:06,720 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7552 states.
[2020-11-25 08:13:06,736 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7552 states to 7552 states and 12709 transitions.
[2020-11-25 08:13:06,737 INFO  L751         BuchiCegarLoop]: Abstraction has 7552 states and 12709 transitions.
[2020-11-25 08:13:06,737 INFO  L631         BuchiCegarLoop]: Abstraction has 7552 states and 12709 transitions.
[2020-11-25 08:13:06,737 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:13:06,737 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7552 states and 12709 transitions.
[2020-11-25 08:13:06,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:06,748 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:06,748 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:06,749 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:06,749 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                success_totalSupply_TokenERC200 := false;
[L2]                call_totalSupply_TokenERC200 := false;
[L2]     CALL       call main();
[L7672]             assume null == 0;
[L7673]  CALL       call this := FreshRefGenerator__success();
[L4050]             havoc newRef;
[L4051]             assume Alloc[newRef] == false;
[L4052]             Alloc[newRef] := true;
[L4053]             assume newRef != null;
[L7673]  RET        call this := FreshRefGenerator__success();
[L7674]             assume now >= 0;
[L7675]             assume DType[this] == USDX;
[L7676]             assume msgvalue_MSG == 0;
[L7677]             gas := gas - 53000;
[L7678]  CALL       call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL       call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL       call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]             assume msgsender_MSG != null;
[L4172]             Balance[this] := 0;
[L4186]  RET        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND TRUE  revert
[L4740]  RET        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND TRUE  revert
[L7678]  RET        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]             assume !revert && gas >= 0;

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND FALSE  !(gas >= 0)
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:06,752 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:06,752 INFO  L82        PathProgramCache]: Analyzing trace with hash -380778096, now seen corresponding path program 1 times
[2020-11-25 08:13:06,753 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:06,757 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:06,764 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:13:06,764 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:13:06,764 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-25 08:13:06,765 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:06,765 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 08:13:06,765 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 08:13:06,765 INFO  L87              Difference]: Start difference. First operand 7552 states and 12709 transitions. cyclomatic complexity: 5163 Second operand 3 states.
[2020-11-25 08:13:06,936 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:06,936 INFO  L93              Difference]: Finished difference Result 8500 states and 14128 transitions.
[2020-11-25 08:13:06,937 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 08:13:06,937 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8500 states and 14128 transitions.
[2020-11-25 08:13:06,970 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:13:07,021 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8500 states to 8188 states and 13616 transitions.
[2020-11-25 08:13:07,022 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 372
[2020-11-25 08:13:07,023 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 372
[2020-11-25 08:13:07,023 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8188 states and 13616 transitions.
[2020-11-25 08:13:07,036 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:07,036 INFO  L728         BuchiCegarLoop]: Abstraction has 8188 states and 13616 transitions.
[2020-11-25 08:13:07,045 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8188 states and 13616 transitions.
[2020-11-25 08:13:07,121 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8188 to 7292.
[2020-11-25 08:13:07,122 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7292 states.
[2020-11-25 08:13:07,135 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7292 states to 7292 states and 12006 transitions.
[2020-11-25 08:13:07,136 INFO  L751         BuchiCegarLoop]: Abstraction has 7292 states and 12006 transitions.
[2020-11-25 08:13:07,136 INFO  L631         BuchiCegarLoop]: Abstraction has 7292 states and 12006 transitions.
[2020-11-25 08:13:07,136 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:13:07,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7292 states and 12006 transitions.
[2020-11-25 08:13:07,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:07,147 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:07,147 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:07,148 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:07,148 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND FALSE  !(gas >= 0)
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:07,152 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:07,152 INFO  L82        PathProgramCache]: Analyzing trace with hash -1956045162, now seen corresponding path program 1 times
[2020-11-25 08:13:07,153 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:07,162 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:07,183 INFO  L134       CoverageAnalysis]: Checked inductivity of 9 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 08:13:07,183 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:13:07,183 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:13:07,183 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:07,184 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:13:07,184 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:13:07,184 INFO  L87              Difference]: Start difference. First operand 7292 states and 12006 transitions. cyclomatic complexity: 4720 Second operand 4 states.
[2020-11-25 08:13:07,777 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:07,777 INFO  L93              Difference]: Finished difference Result 7184 states and 8268 transitions.
[2020-11-25 08:13:07,777 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:13:07,777 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7184 states and 8268 transitions.
[2020-11-25 08:13:07,790 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:07,805 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7184 states to 7184 states and 8268 transitions.
[2020-11-25 08:13:07,806 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 243
[2020-11-25 08:13:07,806 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 243
[2020-11-25 08:13:07,806 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7184 states and 8268 transitions.
[2020-11-25 08:13:07,811 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:07,811 INFO  L728         BuchiCegarLoop]: Abstraction has 7184 states and 8268 transitions.
[2020-11-25 08:13:07,817 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7184 states and 8268 transitions.
[2020-11-25 08:13:07,856 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7184 to 7184.
[2020-11-25 08:13:07,856 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7184 states.
[2020-11-25 08:13:07,862 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7184 states to 7184 states and 8268 transitions.
[2020-11-25 08:13:07,863 INFO  L751         BuchiCegarLoop]: Abstraction has 7184 states and 8268 transitions.
[2020-11-25 08:13:07,863 INFO  L631         BuchiCegarLoop]: Abstraction has 7184 states and 8268 transitions.
[2020-11-25 08:13:07,863 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:13:07,863 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7184 states and 8268 transitions.
[2020-11-25 08:13:07,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:07,869 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:07,869 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:07,871 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:07,871 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:07,874 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:07,875 INFO  L82        PathProgramCache]: Analyzing trace with hash -110834929, now seen corresponding path program 1 times
[2020-11-25 08:13:07,875 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:07,895 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:08,113 INFO  L134       CoverageAnalysis]: Checked inductivity of 23 backedges. 6 proven. 7 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 08:13:08,113 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 08:13:08,114 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [20] total 20
[2020-11-25 08:13:08,114 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:08,114 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 08:13:08,114 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=42, Invalid=378, Unknown=0, NotChecked=0, Total=420
[2020-11-25 08:13:08,114 INFO  L87              Difference]: Start difference. First operand 7184 states and 8268 transitions. cyclomatic complexity: 1090 Second operand 21 states.
[2020-11-25 08:13:14,961 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:14,961 INFO  L93              Difference]: Finished difference Result 7403 states and 8511 transitions.
[2020-11-25 08:13:14,961 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 08:13:14,961 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7403 states and 8511 transitions.
[2020-11-25 08:13:14,972 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 08:13:14,997 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7403 states to 7403 states and 8511 transitions.
[2020-11-25 08:13:14,997 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 277
[2020-11-25 08:13:14,997 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 277
[2020-11-25 08:13:14,997 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7403 states and 8511 transitions.
[2020-11-25 08:13:15,001 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:15,001 INFO  L728         BuchiCegarLoop]: Abstraction has 7403 states and 8511 transitions.
[2020-11-25 08:13:15,007 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7403 states and 8511 transitions.
[2020-11-25 08:13:15,049 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7403 to 7355.
[2020-11-25 08:13:15,050 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7355 states.
[2020-11-25 08:13:15,056 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7355 states to 7355 states and 8456 transitions.
[2020-11-25 08:13:15,056 INFO  L751         BuchiCegarLoop]: Abstraction has 7355 states and 8456 transitions.
[2020-11-25 08:13:15,056 INFO  L631         BuchiCegarLoop]: Abstraction has 7355 states and 8456 transitions.
[2020-11-25 08:13:15,056 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 08:13:15,057 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7355 states and 8456 transitions.
[2020-11-25 08:13:15,063 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 08:13:15,063 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:15,063 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:15,065 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:15,065 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND TRUE   __exception
[L827]               __tmp__Balance := Balance;
[L828]               __tmp__DType := DType;
[L829]               __tmp__Alloc := Alloc;
[L830]               __tmp__balance_ADDR := balance_ADDR;
[L831]               __tmp__M_Ref_int := M_Ref_int;
[L832]               __tmp__sum_balances0 := sum_balances0;
[L833]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L834]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L835]               __tmp__sum_allowed1 := sum_allowed1;
[L836]               __tmp__Length := Length;
[L837]               __tmp__now := now;
[L838]               __tmp__owner_Owned := owner_Owned;
[L839]               __tmp__newOwner_Owned := newOwner_Owned;
[L840]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L841]               __tmp__name_TokenERC20 := name_TokenERC20;
[L842]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L843]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L844]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L845]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L846]               __tmp__aSBlock_USDX := aSBlock_USDX;
[L847]               __tmp__aEBlock_USDX := aEBlock_USDX;
[L848]               __tmp__aCap_USDX := aCap_USDX;
[L849]               __tmp__aTot_USDX := aTot_USDX;
[L850]               __tmp__aAmt_USDX := aAmt_USDX;
[L851]               __tmp__sSBlock_USDX := sSBlock_USDX;
[L852]               __tmp__sEBlock_USDX := sEBlock_USDX;
[L853]               __tmp__sCap_USDX := sCap_USDX;
[L854]               __tmp__sTot_USDX := sTot_USDX;
[L855]               __tmp__sChunk_USDX := sChunk_USDX;
[L856]               __tmp__sPrice_USDX := sPrice_USDX;
[L857]   CALL        call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4418]              __var_4 := null;
[L4419]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4108]  COND TRUE   !(b_s45 <= a_s45)
[L4109]              revert := true;
[L4419]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4420]  COND TRUE   revert
[L857]   RET         call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L858]               assume revert || gas < 0;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

Loop:
[L7682]  CALL       call CorralChoice_USDX(this);
[L7381]             havoc msgsender_MSG;
[L7382]             havoc msgvalue_MSG;
[L7383]             havoc choice;
[L7384]             havoc __ret_0_totalSupply;
[L7385]             havoc tokenOwner_s338;
[L7386]             havoc balance_s338;
[L7387]             havoc tokenOwner_s484;
[L7388]             havoc spender_s484;
[L7389]             havoc remaining_s484;
[L7390]             havoc to_s381;
[L7391]             havoc tokens_s381;
[L7392]             havoc success_s381;
[L7393]             havoc spender_s409;
[L7394]             havoc tokens_s409;
[L7395]             havoc success_s409;
[L7396]             havoc from_s468;
[L7397]             havoc to_s468;
[L7398]             havoc tokens_s468;
[L7399]             havoc success_s468;
[L7400]             havoc __ret_0_owner;
[L7401]             havoc __ret_0_newOwner;
[L7402]             havoc _newOwner_s217;
[L7403]             havoc __ret_0_symbol;
[L7404]             havoc __ret_0_name;
[L7405]             havoc __ret_0_decimals;
[L7406]             havoc spender_s527;
[L7407]             havoc tokens_s527;
[L7408]             havoc data_s527;
[L7409]             havoc success_s527;
[L7410]             havoc __ret_0_aSBlock;
[L7411]             havoc __ret_0_aEBlock;
[L7412]             havoc __ret_0_aCap;
[L7413]             havoc __ret_0_aTot;
[L7414]             havoc __ret_0_aAmt;
[L7415]             havoc __ret_0_sSBlock;
[L7416]             havoc __ret_0_sEBlock;
[L7417]             havoc __ret_0_sCap;
[L7418]             havoc __ret_0_sTot;
[L7419]             havoc __ret_0_sChunk;
[L7420]             havoc __ret_0_sPrice;
[L7421]             havoc _refer_s687;
[L7422]             havoc success_s687;
[L7423]             havoc _refer_s847;
[L7424]             havoc success_s847;
[L7425]             havoc StartBlock_s868;
[L7426]             havoc EndBlock_s868;
[L7427]             havoc DropCap_s868;
[L7428]             havoc DropCount_s868;
[L7429]             havoc DropAmount_s868;
[L7430]             havoc StartBlock_s892;
[L7431]             havoc EndBlock_s892;
[L7432]             havoc SaleCap_s892;
[L7433]             havoc SaleCount_s892;
[L7434]             havoc ChunkSize_s892;
[L7435]             havoc SalePrice_s892;
[L7436]             havoc _aSBlock_s926;
[L7437]             havoc _aEBlock_s926;
[L7438]             havoc _aAmt_s926;
[L7439]             havoc _aCap_s926;
[L7440]             havoc _sSBlock_s966;
[L7441]             havoc _sEBlock_s966;
[L7442]             havoc _sChunk_s966;
[L7443]             havoc _sPrice_s966;
[L7444]             havoc _sCap_s966;
[L7445]             havoc tmpNow;
[L7446]             havoc gas;
[L7447]             assume gas > 4000000 && gas <= 8000000;
[L7448]             tmpNow := now;
[L7449]             havoc now;
[L7450]             assume now > tmpNow;
[L7451]             assume msgsender_MSG != null;
[L7452]             assume DType[msgsender_MSG] != SafeMath;
[L7453]             assume DType[msgsender_MSG] != ERC20Interface;
[L7454]             assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]             assume DType[msgsender_MSG] != Owned;
[L7456]             assume DType[msgsender_MSG] != TokenERC20;
[L7457]             assume DType[msgsender_MSG] != USDX;
[L7458]             Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE  choice == 32
[L7460]             gas := gas - 21000;
[L7461]  COND TRUE  gas >= 0
[L7462]             assume msgvalue_MSG == 0;
[L7463]  CALL       call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_totalSupply_TokenERC200 := true;
[L2]                call_totalSupply_TokenERC200 := false;
[L2]                revert := revert_hold;
[L824]              havoc __exception;
[L825]              revert := false;
[L826]   COND TRUE  __exception
[L827]              __tmp__Balance := Balance;
[L828]              __tmp__DType := DType;
[L829]              __tmp__Alloc := Alloc;
[L830]              __tmp__balance_ADDR := balance_ADDR;
[L831]              __tmp__M_Ref_int := M_Ref_int;
[L832]              __tmp__sum_balances0 := sum_balances0;
[L833]              __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L834]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L835]              __tmp__sum_allowed1 := sum_allowed1;
[L836]              __tmp__Length := Length;
[L837]              __tmp__now := now;
[L838]              __tmp__owner_Owned := owner_Owned;
[L839]              __tmp__newOwner_Owned := newOwner_Owned;
[L840]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L841]              __tmp__name_TokenERC20 := name_TokenERC20;
[L842]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L843]              __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L844]              __tmp__balances_TokenERC20 := balances_TokenERC20;
[L845]              __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L846]              __tmp__aSBlock_USDX := aSBlock_USDX;
[L847]              __tmp__aEBlock_USDX := aEBlock_USDX;
[L848]              __tmp__aCap_USDX := aCap_USDX;
[L849]              __tmp__aTot_USDX := aTot_USDX;
[L850]              __tmp__aAmt_USDX := aAmt_USDX;
[L851]              __tmp__sSBlock_USDX := sSBlock_USDX;
[L852]              __tmp__sEBlock_USDX := sEBlock_USDX;
[L853]              __tmp__sCap_USDX := sCap_USDX;
[L854]              __tmp__sTot_USDX := sTot_USDX;
[L855]              __tmp__sChunk_USDX := sChunk_USDX;
[L856]              __tmp__sPrice_USDX := sPrice_USDX;
[L857]   CALL       call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4418]             __var_4 := null;
[L4419]  CALL       call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4108]  COND TRUE  !(b_s45 <= a_s45)
[L4109]             revert := true;
[L4419]  RET        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4420]  COND TRUE  revert
[L857]   RET        call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L858]              assume revert || gas < 0;
[L7463]  RET        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET        call CorralChoice_USDX(this);

[2020-11-25 08:13:15,069 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:15,069 INFO  L82        PathProgramCache]: Analyzing trace with hash 1416768940, now seen corresponding path program 1 times
[2020-11-25 08:13:15,069 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:15,079 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:15,199 INFO  L134       CoverageAnalysis]: Checked inductivity of 23 backedges. 6 proven. 7 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 08:13:15,200 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 08:13:15,200 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [20] total 20
[2020-11-25 08:13:15,200 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:15,200 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 08:13:15,200 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=43, Invalid=377, Unknown=0, NotChecked=0, Total=420
[2020-11-25 08:13:15,201 INFO  L87              Difference]: Start difference. First operand 7355 states and 8456 transitions. cyclomatic complexity: 1109 Second operand 21 states.
[2020-11-25 08:13:18,734 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:18,734 INFO  L93              Difference]: Finished difference Result 7411 states and 8519 transitions.
[2020-11-25 08:13:18,735 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 08:13:18,735 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7411 states and 8519 transitions.
[2020-11-25 08:13:18,755 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 08:13:18,774 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7411 states to 7411 states and 8519 transitions.
[2020-11-25 08:13:18,774 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 287
[2020-11-25 08:13:18,775 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 287
[2020-11-25 08:13:18,775 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7411 states and 8519 transitions.
[2020-11-25 08:13:18,780 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:18,780 INFO  L728         BuchiCegarLoop]: Abstraction has 7411 states and 8519 transitions.
[2020-11-25 08:13:18,787 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7411 states and 8519 transitions.
[2020-11-25 08:13:18,834 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7411 to 7366.
[2020-11-25 08:13:18,834 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7366 states.
[2020-11-25 08:13:18,843 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7366 states to 7366 states and 8468 transitions.
[2020-11-25 08:13:18,843 INFO  L751         BuchiCegarLoop]: Abstraction has 7366 states and 8468 transitions.
[2020-11-25 08:13:18,843 INFO  L631         BuchiCegarLoop]: Abstraction has 7366 states and 8468 transitions.
[2020-11-25 08:13:18,844 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 08:13:18,844 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7366 states and 8468 transitions.
[2020-11-25 08:13:18,852 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 08:13:18,853 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:18,853 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:18,854 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:18,855 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND TRUE   __exception
[L827]               __tmp__Balance := Balance;
[L828]               __tmp__DType := DType;
[L829]               __tmp__Alloc := Alloc;
[L830]               __tmp__balance_ADDR := balance_ADDR;
[L831]               __tmp__M_Ref_int := M_Ref_int;
[L832]               __tmp__sum_balances0 := sum_balances0;
[L833]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L834]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L835]               __tmp__sum_allowed1 := sum_allowed1;
[L836]               __tmp__Length := Length;
[L837]               __tmp__now := now;
[L838]               __tmp__owner_Owned := owner_Owned;
[L839]               __tmp__newOwner_Owned := newOwner_Owned;
[L840]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L841]               __tmp__name_TokenERC20 := name_TokenERC20;
[L842]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L843]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L844]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L845]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L846]               __tmp__aSBlock_USDX := aSBlock_USDX;
[L847]               __tmp__aEBlock_USDX := aEBlock_USDX;
[L848]               __tmp__aCap_USDX := aCap_USDX;
[L849]               __tmp__aTot_USDX := aTot_USDX;
[L850]               __tmp__aAmt_USDX := aAmt_USDX;
[L851]               __tmp__sSBlock_USDX := sSBlock_USDX;
[L852]               __tmp__sEBlock_USDX := sEBlock_USDX;
[L853]               __tmp__sCap_USDX := sCap_USDX;
[L854]               __tmp__sTot_USDX := sTot_USDX;
[L855]               __tmp__sChunk_USDX := sChunk_USDX;
[L856]               __tmp__sPrice_USDX := sPrice_USDX;
[L857]   CALL        call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4418]              __var_4 := null;
[L4419]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4108]  COND FALSE  !(!(b_s45 <= a_s45))
[L4112]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4419]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4420]  COND FALSE  !(revert)
[L4423]              __ret_0_ := __var_3;
[L857]   RET         call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L858]               assume revert || gas < 0;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND TRUE   __exception
[L827]               __tmp__Balance := Balance;
[L828]               __tmp__DType := DType;
[L829]               __tmp__Alloc := Alloc;
[L830]               __tmp__balance_ADDR := balance_ADDR;
[L831]               __tmp__M_Ref_int := M_Ref_int;
[L832]               __tmp__sum_balances0 := sum_balances0;
[L833]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L834]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L835]               __tmp__sum_allowed1 := sum_allowed1;
[L836]               __tmp__Length := Length;
[L837]               __tmp__now := now;
[L838]               __tmp__owner_Owned := owner_Owned;
[L839]               __tmp__newOwner_Owned := newOwner_Owned;
[L840]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L841]               __tmp__name_TokenERC20 := name_TokenERC20;
[L842]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L843]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L844]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L845]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L846]               __tmp__aSBlock_USDX := aSBlock_USDX;
[L847]               __tmp__aEBlock_USDX := aEBlock_USDX;
[L848]               __tmp__aCap_USDX := aCap_USDX;
[L849]               __tmp__aTot_USDX := aTot_USDX;
[L850]               __tmp__aAmt_USDX := aAmt_USDX;
[L851]               __tmp__sSBlock_USDX := sSBlock_USDX;
[L852]               __tmp__sEBlock_USDX := sEBlock_USDX;
[L853]               __tmp__sCap_USDX := sCap_USDX;
[L854]               __tmp__sTot_USDX := sTot_USDX;
[L855]               __tmp__sChunk_USDX := sChunk_USDX;
[L856]               __tmp__sPrice_USDX := sPrice_USDX;
[L857]   CALL        call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4418]              __var_4 := null;
[L4419]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4108]  COND FALSE  !(!(b_s45 <= a_s45))
[L4112]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4419]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_TokenERC20[this], __tmp__balances_TokenERC20[this][null]);
[L4420]  COND FALSE  !(revert)
[L4423]              __ret_0_ := __var_3;
[L857]   RET         call __ret_0_ := totalSupply_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L858]               assume revert || gas < 0;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:18,859 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:18,859 INFO  L82        PathProgramCache]: Analyzing trace with hash -1496620764, now seen corresponding path program 1 times
[2020-11-25 08:13:18,860 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:18,872 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:13:18,905 INFO  L134       CoverageAnalysis]: Checked inductivity of 23 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 23 trivial. 0 not checked.
[2020-11-25 08:13:18,906 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:13:18,906 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 08:13:18,906 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:13:18,906 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 08:13:18,906 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 08:13:18,906 INFO  L87              Difference]: Start difference. First operand 7366 states and 8468 transitions. cyclomatic complexity: 1110 Second operand 5 states.
[2020-11-25 08:13:20,215 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:13:20,215 INFO  L93              Difference]: Finished difference Result 8757 states and 10072 transitions.
[2020-11-25 08:13:20,216 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 08:13:20,216 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8757 states and 10072 transitions.
[2020-11-25 08:13:20,233 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 08:13:20,248 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8757 states to 7185 states and 8340 transitions.
[2020-11-25 08:13:20,248 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 275
[2020-11-25 08:13:20,249 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 275
[2020-11-25 08:13:20,249 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7185 states and 8340 transitions.
[2020-11-25 08:13:20,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:13:20,254 INFO  L728         BuchiCegarLoop]: Abstraction has 7185 states and 8340 transitions.
[2020-11-25 08:13:20,258 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7185 states and 8340 transitions.
[2020-11-25 08:13:20,288 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7185 to 5813.
[2020-11-25 08:13:20,288 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5813 states.
[2020-11-25 08:13:20,293 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5813 states to 5813 states and 6682 transitions.
[2020-11-25 08:13:20,293 INFO  L751         BuchiCegarLoop]: Abstraction has 5813 states and 6682 transitions.
[2020-11-25 08:13:20,293 INFO  L631         BuchiCegarLoop]: Abstraction has 5813 states and 6682 transitions.
[2020-11-25 08:13:20,294 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 08:13:20,294 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5813 states and 6682 transitions.
[2020-11-25 08:13:20,299 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:13:20,299 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:13:20,299 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:13:20,300 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:13:20,300 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_TokenERC200 := false;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]     CALL        call main();
[L7672]              assume null == 0;
[L7673]  CALL        call this := FreshRefGenerator__success();
[L4050]              havoc newRef;
[L4051]              assume Alloc[newRef] == false;
[L4052]              Alloc[newRef] := true;
[L4053]              assume newRef != null;
[L7673]  RET         call this := FreshRefGenerator__success();
[L7674]              assume now >= 0;
[L7675]              assume DType[this] == USDX;
[L7676]              assume msgvalue_MSG == 0;
[L7677]              gas := gas - 53000;
[L7678]  CALL        call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
[L7679]              assume !revert && gas >= 0;
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND FALSE  !(choice == 32)
[L7465]  COND FALSE  !(choice == 31)
[L7471]  COND FALSE  !(choice == 30)
[L7477]  COND TRUE   choice == 29
[L7478]              gas := gas - 21000;
[L7479]  COND TRUE   gas >= 0
[L7480]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7481]              assume msgvalue_MSG == 0;
[L7482]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L978]               havoc __exception;
[L979]               revert := false;
[L980]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4478]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4478]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4479]  COND FALSE  !(revert)
[L4482]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L4483]              balances_TokenERC20[this][msgsender_MSG] := __var_5;
[L4484]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L4485]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4099]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4100]  COND FALSE  !(!(c_s23 >= a_s23))
[L4485]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4486]  COND FALSE  !(revert)
[L4489]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L4490]              balances_TokenERC20[this][to_s381] := __var_6;
[L4491]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L4492]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4493]              success_s381 := true;
[L1014]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1015]              assume !revert && gas >= 0;
[L7482]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L7682]  RET         call CorralChoice_USDX(this);
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

Loop:
[L7682]  CALL        call CorralChoice_USDX(this);
[L7381]              havoc msgsender_MSG;
[L7382]              havoc msgvalue_MSG;
[L7383]              havoc choice;
[L7384]              havoc __ret_0_totalSupply;
[L7385]              havoc tokenOwner_s338;
[L7386]              havoc balance_s338;
[L7387]              havoc tokenOwner_s484;
[L7388]              havoc spender_s484;
[L7389]              havoc remaining_s484;
[L7390]              havoc to_s381;
[L7391]              havoc tokens_s381;
[L7392]              havoc success_s381;
[L7393]              havoc spender_s409;
[L7394]              havoc tokens_s409;
[L7395]              havoc success_s409;
[L7396]              havoc from_s468;
[L7397]              havoc to_s468;
[L7398]              havoc tokens_s468;
[L7399]              havoc success_s468;
[L7400]              havoc __ret_0_owner;
[L7401]              havoc __ret_0_newOwner;
[L7402]              havoc _newOwner_s217;
[L7403]              havoc __ret_0_symbol;
[L7404]              havoc __ret_0_name;
[L7405]              havoc __ret_0_decimals;
[L7406]              havoc spender_s527;
[L7407]              havoc tokens_s527;
[L7408]              havoc data_s527;
[L7409]              havoc success_s527;
[L7410]              havoc __ret_0_aSBlock;
[L7411]              havoc __ret_0_aEBlock;
[L7412]              havoc __ret_0_aCap;
[L7413]              havoc __ret_0_aTot;
[L7414]              havoc __ret_0_aAmt;
[L7415]              havoc __ret_0_sSBlock;
[L7416]              havoc __ret_0_sEBlock;
[L7417]              havoc __ret_0_sCap;
[L7418]              havoc __ret_0_sTot;
[L7419]              havoc __ret_0_sChunk;
[L7420]              havoc __ret_0_sPrice;
[L7421]              havoc _refer_s687;
[L7422]              havoc success_s687;
[L7423]              havoc _refer_s847;
[L7424]              havoc success_s847;
[L7425]              havoc StartBlock_s868;
[L7426]              havoc EndBlock_s868;
[L7427]              havoc DropCap_s868;
[L7428]              havoc DropCount_s868;
[L7429]              havoc DropAmount_s868;
[L7430]              havoc StartBlock_s892;
[L7431]              havoc EndBlock_s892;
[L7432]              havoc SaleCap_s892;
[L7433]              havoc SaleCount_s892;
[L7434]              havoc ChunkSize_s892;
[L7435]              havoc SalePrice_s892;
[L7436]              havoc _aSBlock_s926;
[L7437]              havoc _aEBlock_s926;
[L7438]              havoc _aAmt_s926;
[L7439]              havoc _aCap_s926;
[L7440]              havoc _sSBlock_s966;
[L7441]              havoc _sEBlock_s966;
[L7442]              havoc _sChunk_s966;
[L7443]              havoc _sPrice_s966;
[L7444]              havoc _sCap_s966;
[L7445]              havoc tmpNow;
[L7446]              havoc gas;
[L7447]              assume gas > 4000000 && gas <= 8000000;
[L7448]              tmpNow := now;
[L7449]              havoc now;
[L7450]              assume now > tmpNow;
[L7451]              assume msgsender_MSG != null;
[L7452]              assume DType[msgsender_MSG] != SafeMath;
[L7453]              assume DType[msgsender_MSG] != ERC20Interface;
[L7454]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7455]              assume DType[msgsender_MSG] != Owned;
[L7456]              assume DType[msgsender_MSG] != TokenERC20;
[L7457]              assume DType[msgsender_MSG] != USDX;
[L7458]              Alloc[msgsender_MSG] := true;
[L7459]  COND TRUE   choice == 32
[L7460]              gas := gas - 21000;
[L7461]  COND TRUE   gas >= 0
[L7462]              assume msgvalue_MSG == 0;
[L7463]  CALL        call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);
[L7682]  RET         call CorralChoice_USDX(this);

[2020-11-25 08:13:20,304 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:20,304 INFO  L82        PathProgramCache]: Analyzing trace with hash 1377374341, now seen corresponding path program 1 times
[2020-11-25 08:13:20,305 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:20,331 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:20,362 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:20,433 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:20,433 INFO  L82        PathProgramCache]: Analyzing trace with hash -714219371, now seen corresponding path program 1 times
[2020-11-25 08:13:20,433 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:20,438 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:20,443 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:20,455 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:13:20,455 INFO  L82        PathProgramCache]: Analyzing trace with hash 357096593, now seen corresponding path program 1 times
[2020-11-25 08:13:20,456 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:13:20,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:20,546 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 08:13:21,113 WARN  L188               SmtUtils]: Spent 231.00 ms on a formula simplification. DAG size of input: 251 DAG size of output: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 08:13:21,348 WARN  L188               SmtUtils]: Spent 179.00 ms on a formula simplification that was a NOOP. DAG size: 407
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 10513 to 21023
[2020-11-25 08:13:21,480 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 333
[2020-11-25 08:13:21,595 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 333
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 08:13:21,646 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
[2020-11-25 08:13:22,024 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 218 DAG size of output: 212
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 08:13:22,258 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 95 DAG size of output: 94
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
[2020-11-25 08:13:22,506 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification. DAG size of input: 222 DAG size of output: 217
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 08:13:22,787 WARN  L188               SmtUtils]: Spent 211.00 ms on a formula simplification. DAG size of input: 267 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 08:13:23,039 WARN  L188               SmtUtils]: Spent 205.00 ms on a formula simplification that was a NOOP. DAG size: 416
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10513 to 21023
[2020-11-25 08:13:23,178 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 08:13:23,437 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification. DAG size of input: 250 DAG size of output: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 08:13:23,653 WARN  L188               SmtUtils]: Spent 182.00 ms on a formula simplification that was a NOOP. DAG size: 407
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10513 to 21023
[2020-11-25 08:13:28,978 WARN  L188               SmtUtils]: Spent 5.22 s on a formula simplification. DAG size of input: 770 DAG size of output: 762
Garbage collection #1: 311 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 311 to 619
Garbage collection #2: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #3: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #4: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #5: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #6: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #7: 19763 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19763 to 39521
Garbage collection #8: 39521 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 39521 to 79039
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 08:13:29,473 WARN  L188               SmtUtils]: Spent 467.00 ms on a formula simplification that was a NOOP. DAG size: 313
[2020-11-25 08:13:30,315 WARN  L188               SmtUtils]: Spent 813.00 ms on a formula simplification that was a NOOP. DAG size: 433
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 08:13:30,699 WARN  L188               SmtUtils]: Spent 376.00 ms on a formula simplification that was a NOOP. DAG size: 313
[2020-11-25 08:13:32,572 WARN  L188               SmtUtils]: Spent 1.87 s on a formula simplification. DAG size of input: 435 DAG size of output: 434
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 08:13:33,465 WARN  L188               SmtUtils]: Spent 889.00 ms on a formula simplification that was a NOOP. DAG size: 430
[2020-11-25 08:13:33,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:33,511 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:13:33,520 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:13:33 BasicIcfg
[2020-11-25 08:13:33,520 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:13:33,520 INFO  L168              Benchmark]: Toolchain (without parser) took 31549.02 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.5 GB). Free memory was 929.8 MB in the beginning and 1.5 GB in the end (delta: -550.5 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,521 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.28 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,521 INFO  L168              Benchmark]: Boogie Preprocessor took 143.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,521 INFO  L168              Benchmark]: UtopiaSpecLang took 76.01 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,521 INFO  L168              Benchmark]: Boogie Printer took 22.94 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,522 INFO  L168              Benchmark]: RCFGBuilder took 1083.36 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 897.6 MB in the beginning and 1.0 GB in the end (delta: -108.7 MB). Peak memory consumption was 187.5 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,522 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.44 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,523 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1810.47 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 158.9 MB). Free memory was 1.0 GB in the beginning and 927.4 MB in the end (delta: 75.5 MB). Peak memory consumption was 516.3 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,523 INFO  L168              Benchmark]: BlockEncodingV2 took 168.38 ms. Allocated memory is still 1.3 GB. Free memory was 927.4 MB in the beginning and 823.4 MB in the end (delta: 104.0 MB). Peak memory consumption was 104.0 MB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,523 INFO  L168              Benchmark]: BuchiAutomizer took 28197.57 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 823.4 MB in the beginning and 1.5 GB in the end (delta: -657.0 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 08:13:33,526 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    8358 locations, 14611 edges
  - StatisticsResult: Encoded RCFG
    8302 locations, 14466 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.28 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 143.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 76.01 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.94 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1083.36 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 897.6 MB in the beginning and 1.0 GB in the end (delta: -108.7 MB). Peak memory consumption was 187.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.44 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1810.47 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 158.9 MB). Free memory was 1.0 GB in the beginning and 927.4 MB in the end (delta: 75.5 MB). Peak memory consumption was 516.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 168.38 ms. Allocated memory is still 1.3 GB. Free memory was 927.4 MB in the beginning and 823.4 MB in the end (delta: 104.0 MB). Peak memory consumption was 104.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 28197.57 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 823.4 MB in the beginning and 1.5 GB in the end (delta: -657.0 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3566 locations, 4642 edges
  - StatisticsResult: BuchiProgram size
    8358 locations, 14611 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 21 locations. The remainder module has 5813 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 28.1s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 14.1s. Construction of modules took 9.6s. BÃ¼chi inclusion checks took 3.1s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.4s AutomataMinimizationTime, 6 MinimizatonAttempts, 3309 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.3s Buchi closure took 0.0s. Biggest automaton had 7552 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 56834 SDtfs, 49447 SDslu, 114344 SDs, 0 SdLazy, 183375 SolverSat, 8861 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 9.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279878) = (new USDX)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873});
[L4740]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4740]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  COND FALSE  !(revert)
[L4744]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4744]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4745]  COND FALSE  !(revert)
[L4748]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume msgsender_MSG != null;
[L4172]              Balance[this] := 0;
[L4186]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4400]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  COND FALSE  !(revert)
[L4404]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4256]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4238]              assume msgsender_MSG != null;
[L4239]              Balance[this] := 0;
[L4240]              owner_Owned[this] := null;
[L4241]              newOwner_Owned[this] := null;
[L4243]              owner_Owned[this] := msgsender_MSG;
[L4256]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  COND FALSE  !(revert)
[L4404]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4358]              assume msgsender_MSG != null;
[L4359]              Balance[this] := 0;
[L4360]              symbol_TokenERC20[this] := 795806508;
[L4361]              name_TokenERC20[this] := 795806508;
[L4362]              decimals_TokenERC20[this] := 0;
[L4363]              _totalSupply_TokenERC20[this] := 0;
[L4364]              balances_TokenERC20[this] := zeroRefintArr();
[L4365]              sum_balances0[this] := 0;
[L4366]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4367]              sum_allowed1[this] := 0;
[L4369]              symbol_TokenERC20[this] := -1403127613;
[L4370]              name_TokenERC20[this] := -1403127613;
[L4371]              decimals_TokenERC20[this] := 0;
[L4372]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              _totalSupply_TokenERC20[this] := nonlinearMul(3486784401 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4375]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4376]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4377]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4408]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4748]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4749]  COND FALSE  !(revert)
[L4752]  CALL        call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4702]              assume msgsender_MSG != null;
[L4703]              Balance[this] := 0;
[L4704]              aSBlock_USDX[this] := 0;
[L4705]              aEBlock_USDX[this] := 0;
[L4706]              aCap_USDX[this] := 0;
[L4707]              aTot_USDX[this] := 0;
[L4708]              aAmt_USDX[this] := 0;
[L4709]              sSBlock_USDX[this] := 0;
[L4710]              sEBlock_USDX[this] := 0;
[L4711]              sCap_USDX[this] := 0;
[L4712]              sTot_USDX[this] := 0;
[L4713]              sChunk_USDX[this] := 0;
[L4714]              sPrice_USDX[this] := 0;
[L4752]  RET         call USDX_USDX_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4753]  COND FALSE  !(revert)
[L7678]  RET         call USDX_USDX__success(this, msgsender_MSG, msgvalue_MSG);
TokenERC20(231584178474632390847141970017375815706539969331281128078915168015826259279878).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873, to : 0, tokens : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L978]               havoc __exception;
[L979]               revert := false;
[L980]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4478]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4478]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4479]  COND FALSE  !(revert)
[L4482]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L4483]              balances_TokenERC20[this][msgsender_MSG] := __var_5;
[L4484]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L4485]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4099]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4100]  COND FALSE  !(!(c_s23 >= a_s23))
[L4485]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4486]  COND FALSE  !(revert)
[L4489]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L4490]              balances_TokenERC20[this][to_s381] := __var_6;
[L4491]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L4492]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4493]              success_s381 := true;
[L1014]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1015]              assume !revert && gas >= 0;
[L7482]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
TokenERC20(231584178474632390847141970017375815706539969331281128078915168015826259279878).totalSupply.gas(3979003)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279884});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);

Loop:
TokenERC20(231584178474632390847141970017375815706539969331281128078915168015826259279878).totalSupply.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279885});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_TokenERC20[this] >= 0 && _totalSupply_TokenERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_TokenERC200 := true;
[L2]                 call_totalSupply_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L860]   CALL        call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4431]              __var_4 := null;
[L4432]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4117]  COND FALSE  !(!(b_s45 <= a_s45))
[L4121]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4432]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_TokenERC20[this], balances_TokenERC20[this][null]);
[L4433]  COND FALSE  !(revert)
[L4436]              __ret_0_ := __var_3;
[L860]   RET         call __ret_0_ := totalSupply_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L861]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((__ret_0_ == _totalSupply_TokenERC20[this] && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_USDX[this] == old(aSBlock_USDX[this])) && aEBlock_USDX[this] == old(aEBlock_USDX[this])) && aCap_USDX[this] == old(aCap_USDX[this])) && aTot_USDX[this] == old(aTot_USDX[this])) && aAmt_USDX[this] == old(aAmt_USDX[this])) && sSBlock_USDX[this] == old(sSBlock_USDX[this])) && sEBlock_USDX[this] == old(sEBlock_USDX[this])) && sCap_USDX[this] == old(sCap_USDX[this])) && sTot_USDX[this] == old(sTot_USDX[this])) && sChunk_USDX[this] == old(sChunk_USDX[this])) && sPrice_USDX[this] == old(sPrice_USDX[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L7463]  RET         call __ret_0_totalSupply := totalSupply_TokenERC20(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
