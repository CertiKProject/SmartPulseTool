This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:52:27,382 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:52:27,383 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:52:27,391 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:52:27,391 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:52:27,391 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:52:27,392 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:52:27,394 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:52:27,395 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:52:27,396 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:52:27,396 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:52:27,397 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:52:27,397 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:52:27,398 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:52:27,399 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:52:27,399 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:52:27,400 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:52:27,401 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:52:27,402 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:52:27,403 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:52:27,404 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:52:27,404 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:52:27,405 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:52:27,406 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:52:27,406 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:52:27,406 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:52:27,406 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:52:27,407 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:52:27,407 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:52:27,407 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:52:27,407 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:52:27,408 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:52:27,408 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:52:27,408 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:52:27,409 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:52:27,409 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:52:27,409 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:52:27,409 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:52:27,409 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:52:27,410 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:52:27,410 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:52:27,410 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:52:27,415 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:52:27,415 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:52:27,416 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:52:27,416 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:52:27,416 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:52:27,416 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:52:27,416 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:52:27,417 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:52:27,417 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:52:27,417 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:52:27,418 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:52:27,418 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:52:27,436 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:52:27,448 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:52:27,450 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:52:27,451 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:52:27,452 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:52:27,452 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl
[2020-11-25 01:52:27,452 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl'
[2020-11-25 01:52:27,538 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:52:27,539 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:52:27,540 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:52:27,540 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:52:27,540 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:52:27,556 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,558 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,588 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,589 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,609 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,618 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,626 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,635 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:52:27,636 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:52:27,636 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:52:27,638 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:52:27,642 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/1) ...
[2020-11-25 01:52:27,658 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_TokenERC20[this][from] || value > allowance_TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transferFrom)))
[2020-11-25 01:52:27,664 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_TokenERC20[this][from] || value > allowance_TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transferFrom)))
[2020-11-25 01:52:27,671 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_TokenERC20[this][from] || value > allowance_TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transferFrom)))
[2020-11-25 01:52:27,678 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s261==_to_s261 && ( _value_s261>balanceOf_TokenERC20[this][_from_s261] || _value_s261>allowance_TokenERC20[this][_from_s261][msg.sender] ) ) && _value_s261>=0 ) && _value_s261<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s261]>=0 ) && balanceOf_TokenERC20[this][_to_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s261]>=0 ) && balanceOf_TokenERC20[this][_from_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s261][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s261][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:52:27,684 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_TokenERC20[this][from] || value > allowance_TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transferFrom)))
[2020-11-25 01:52:27,684 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(fail_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:52:27,694 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:27 PropertyContainer
[2020-11-25 01:52:27,695 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:52:27,695 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:52:27,695 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:52:27,695 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:52:27,696 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/2) ...
[2020-11-25 01:52:27,696 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:52:27,697 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:52:27,713 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:27" (2/2) ...
[2020-11-25 01:52:27,714 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:52:27,714 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:52:27,714 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:52:27,714 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:52:27,715 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/2) ...
[2020-11-25 01:52:27,769 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 01:52:27,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 01:52:27,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 01:52:27,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 01:52:27,770 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 01:52:27,771 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 01:52:27,771 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 01:52:27,771 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 01:52:27,771 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 01:52:27,771 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 01:52:27,771 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,772 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 01:52:27,772 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 01:52:27,772 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 01:52:27,773 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 01:52:27,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 01:52:27,773 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 01:52:27,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 01:52:27,773 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 01:52:27,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 01:52:27,773 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 01:52:27,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 01:52:27,773 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 01:52:27,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 01:52:27,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 01:52:27,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 01:52:27,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken
[2020-11-25 01:52:27,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,774 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken
[2020-11-25 01:52:27,775 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:52:27,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyAdvancedToken
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 01:52:27,777 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 01:52:27,778 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,779 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 01:52:27,780 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken__success
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,781 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken__success
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken__fail
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken__success
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken__fail
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken__success
[2020-11-25 01:52:27,782 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken__success
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken__success
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:52:27,783 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:52:27,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:52:27,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:52:27,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 01:52:27,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 01:52:27,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 01:52:27,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 01:52:27,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 01:52:27,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken__success
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken__success
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken__success
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken__fail
[2020-11-25 01:52:27,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:52:27,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyAdvancedToken
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:52:27,790 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:52:27,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:52:28,183 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:28,183 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:28,500 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:52:28,500 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:52:28,502 INFO  L202        PluginConnector]: Adding new model MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:28 BoogieIcfgContainer
[2020-11-25 01:52:28,502 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:27" (2/2) ...
[2020-11-25 01:52:28,502 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:52:28,502 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@15a45be2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:28, skipping insertion in model container
[2020-11-25 01:52:28,502 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:52:28,503 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:28,503 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:52:28,504 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:52:28,504 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/3) ...
[2020-11-25 01:52:28,505 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6372cdaa and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:28, skipping insertion in model container
[2020-11-25 01:52:28,505 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:27" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:52:28,546 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:28 NWAContainer
[2020-11-25 01:52:28,546 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:28,546 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:28,546 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:52:28,547 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:52:28,549 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:28" (3/4) ...
[2020-11-25 01:52:28,550 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@9bf27d3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:28, skipping insertion in model container
[2020-11-25 01:52:28,550 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:28" (4/4) ...
[2020-11-25 01:52:28,554 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:52:28,558 INFO  L110   BuchiProductObserver]: Initial RCFG 2318 locations, 3067 edges
[2020-11-25 01:52:28,559 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:52:28,570 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:52:30,001 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:52:30,008 INFO  L110   BuchiProductObserver]: BuchiProgram size 5478 locations, 9660 edges
[2020-11-25 01:52:30,008 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:30 BoogieIcfgContainer
[2020-11-25 01:52:30,008 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:30,009 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:52:30,009 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:52:30,010 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:52:30,010 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:30" (1/1) ...
[2020-11-25 01:52:30,099 INFO  L313           BlockEncoder]: Initial Icfg 5478 locations, 9660 edges
[2020-11-25 01:52:30,099 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:52:30,099 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:30,100 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:52:30,100 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:52:30,113 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 11 locations because of local infeasibility
[2020-11-25 01:52:30,120 INFO  L70        RemoveSinkStates]: Removed 82 edges and 46 locations by removing sink states
[2020-11-25 01:52:30,135 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:52:30,138 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:52:30,142 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:52:30,142 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:52:30,145 INFO  L313           BlockEncoder]: Encoded RCFG 5397 locations, 9459 edges
[2020-11-25 01:52:30,146 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:30 BasicIcfg
[2020-11-25 01:52:30,146 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:52:30,146 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:52:30,146 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:52:30,149 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:52:30,149 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,149 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:27" (1/6) ...
[2020-11-25 01:52:30,151 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70489597 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:30, skipping insertion in model container
[2020-11-25 01:52:30,151 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,151 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:27" (2/6) ...
[2020-11-25 01:52:30,151 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70489597 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:30, skipping insertion in model container
[2020-11-25 01:52:30,151 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,152 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:28" (3/6) ...
[2020-11-25 01:52:30,152 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70489597 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:30, skipping insertion in model container
[2020-11-25 01:52:30,152 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,152 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:28" (4/6) ...
[2020-11-25 01:52:30,152 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70489597 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:30, skipping insertion in model container
[2020-11-25 01:52:30,152 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,153 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:30" (5/6) ...
[2020-11-25 01:52:30,153 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70489597 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:52:30, skipping insertion in model container
[2020-11-25 01:52:30,153 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:30,153 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:30" (6/6) ...
[2020-11-25 01:52:30,154 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self-fail.bpl_BEv2
[2020-11-25 01:52:30,188 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:52:30,188 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:52:30,188 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:52:30,188 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:52:30,188 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:52:30,188 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:52:30,188 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:52:30,188 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:52:30,189 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:52:30,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5397 states.
[2020-11-25 01:52:30,287 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:30,288 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:30,288 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:30,295 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:30,295 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:30,295 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:52:30,295 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5397 states.
[2020-11-25 01:52:30,318 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:30,319 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:30,319 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:30,320 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:30,320 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_TokenERC200 := false;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND TRUE   revert
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND TRUE   choice == 22
[L4746]              gas := gas - 21000;
[L4747]  COND FALSE  !(gas >= 0)
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:52:30,333 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:30,333 INFO  L82        PathProgramCache]: Analyzing trace with hash 1975044871, now seen corresponding path program 1 times
[2020-11-25 01:52:30,337 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:30,357 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:30,394 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:30,396 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:30,397 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:30,400 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:30,677 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:30,677 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:30,678 INFO  L87              Difference]: Start difference. First operand 5397 states. Second operand 4 states.
[2020-11-25 01:52:31,257 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:31,257 INFO  L93              Difference]: Finished difference Result 4603 states and 5547 transitions.
[2020-11-25 01:52:31,257 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:31,258 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4603 states and 5547 transitions.
[2020-11-25 01:52:31,283 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:31,313 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4603 states to 4601 states and 5543 transitions.
[2020-11-25 01:52:31,314 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 01:52:31,315 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 168
[2020-11-25 01:52:31,315 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4601 states and 5543 transitions.
[2020-11-25 01:52:31,325 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:31,326 INFO  L728         BuchiCegarLoop]: Abstraction has 4601 states and 5543 transitions.
[2020-11-25 01:52:31,343 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4601 states and 5543 transitions.
[2020-11-25 01:52:31,413 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4601 to 4601.
[2020-11-25 01:52:31,414 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4601 states.
[2020-11-25 01:52:31,425 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4601 states to 4601 states and 5543 transitions.
[2020-11-25 01:52:31,426 INFO  L751         BuchiCegarLoop]: Abstraction has 4601 states and 5543 transitions.
[2020-11-25 01:52:31,426 INFO  L631         BuchiCegarLoop]: Abstraction has 4601 states and 5543 transitions.
[2020-11-25 01:52:31,426 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:52:31,426 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4601 states and 5543 transitions.
[2020-11-25 01:52:31,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:31,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:31,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:31,440 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:31,441 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_TokenERC200 := false;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND TRUE   !(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L2755]              revert := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND TRUE   !(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L2755]              revert := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:52:31,445 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:31,445 INFO  L82        PathProgramCache]: Analyzing trace with hash 1692563051, now seen corresponding path program 1 times
[2020-11-25 01:52:31,446 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:31,457 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:31,482 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:31,482 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:31,482 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:31,484 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:31,484 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:31,484 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:31,484 INFO  L87              Difference]: Start difference. First operand 4601 states and 5543 transitions. cyclomatic complexity: 948 Second operand 4 states.
[2020-11-25 01:52:32,647 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:32,647 INFO  L93              Difference]: Finished difference Result 5694 states and 6668 transitions.
[2020-11-25 01:52:32,647 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:32,647 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5694 states and 6668 transitions.
[2020-11-25 01:52:32,665 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:32,688 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5694 states to 5446 states and 6366 transitions.
[2020-11-25 01:52:32,688 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 225
[2020-11-25 01:52:32,688 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 225
[2020-11-25 01:52:32,689 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5446 states and 6366 transitions.
[2020-11-25 01:52:32,694 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:32,694 INFO  L728         BuchiCegarLoop]: Abstraction has 5446 states and 6366 transitions.
[2020-11-25 01:52:32,699 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5446 states and 6366 transitions.
[2020-11-25 01:52:32,747 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5446 to 4952.
[2020-11-25 01:52:32,747 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4952 states.
[2020-11-25 01:52:32,753 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4952 states to 4952 states and 5761 transitions.
[2020-11-25 01:52:32,753 INFO  L751         BuchiCegarLoop]: Abstraction has 4952 states and 5761 transitions.
[2020-11-25 01:52:32,753 INFO  L631         BuchiCegarLoop]: Abstraction has 4952 states and 5761 transitions.
[2020-11-25 01:52:32,753 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:52:32,754 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4952 states and 5761 transitions.
[2020-11-25 01:52:32,784 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:32,784 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:32,784 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:32,786 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:32,786 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_TokenERC200 := false;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := -914773036;
[L2599]              symbol_TokenERC20[this] := -914773036;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_MyAdvancedToken[this] := 0;
[L3016]              buyPrice_MyAdvancedToken[this] := 0;
[L3017]              frozenAccount_MyAdvancedToken[this] := zeroRefboolArr();
[L3047]  RET         call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L2758]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2759]              allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2760]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2761]  COND TRUE   DType[this] == MyAdvancedToken
[L2762]  CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3088]              __var_6 := null;
[L3089]  COND FALSE  !(!(_to_s522 != null))
[L3093]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L3097]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L3101]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_from_s522])
[L3105]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_to_s522])
[L3109]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L3110]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3111]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L3112]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L3113]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3114]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L3115]              assert { :EventEmitted "Transfer_MyAdvancedToken" } true;
[L2762]  RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2763]  COND FALSE  !(revert)
[L2774]              success_s261 := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L2758]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2759]              allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2760]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2761]  COND TRUE   DType[this] == MyAdvancedToken
[L2762]  CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3088]              __var_6 := null;
[L3089]  COND FALSE  !(!(_to_s522 != null))
[L3093]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L3097]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L3101]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_from_s522])
[L3105]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_to_s522])
[L3109]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L3110]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3111]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L3112]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L3113]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3114]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L3115]              assert { :EventEmitted "Transfer_MyAdvancedToken" } true;
[L2762]  RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2763]  COND FALSE  !(revert)
[L2774]              success_s261 := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:52:32,811 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:32,812 INFO  L82        PathProgramCache]: Analyzing trace with hash -735644084, now seen corresponding path program 1 times
[2020-11-25 01:52:32,812 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:32,829 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:32,902 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:32,903 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:32,903 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 01:52:32,903 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:32,903 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-25 01:52:32,903 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=66, Unknown=0, NotChecked=0, Total=90
[2020-11-25 01:52:32,903 INFO  L87              Difference]: Start difference. First operand 4952 states and 5761 transitions. cyclomatic complexity: 815 Second operand 10 states.
[2020-11-25 01:52:34,877 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:34,878 INFO  L93              Difference]: Finished difference Result 5112 states and 5940 transitions.
[2020-11-25 01:52:34,878 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 01:52:34,878 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5112 states and 5940 transitions.
[2020-11-25 01:52:34,886 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:34,900 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5112 states to 5112 states and 5940 transitions.
[2020-11-25 01:52:34,900 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 248
[2020-11-25 01:52:34,901 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 248
[2020-11-25 01:52:34,901 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5112 states and 5940 transitions.
[2020-11-25 01:52:34,905 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:34,905 INFO  L728         BuchiCegarLoop]: Abstraction has 5112 states and 5940 transitions.
[2020-11-25 01:52:34,908 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5112 states and 5940 transitions.
[2020-11-25 01:52:34,940 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5112 to 4810.
[2020-11-25 01:52:34,940 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4810 states.
[2020-11-25 01:52:34,944 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4810 states to 4810 states and 5580 transitions.
[2020-11-25 01:52:34,944 INFO  L751         BuchiCegarLoop]: Abstraction has 4810 states and 5580 transitions.
[2020-11-25 01:52:34,944 INFO  L631         BuchiCegarLoop]: Abstraction has 4810 states and 5580 transitions.
[2020-11-25 01:52:34,944 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:52:34,944 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4810 states and 5580 transitions.
[2020-11-25 01:52:34,949 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:34,949 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:34,949 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:34,950 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:34,951 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_TokenERC200 := false;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := -914773036;
[L2599]              symbol_TokenERC20[this] := -914773036;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_MyAdvancedToken[this] := 0;
[L3016]              buyPrice_MyAdvancedToken[this] := 0;
[L3017]              frozenAccount_MyAdvancedToken[this] := zeroRefboolArr();
[L3047]  RET         call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L2758]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2759]              allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2760]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2761]  COND FALSE  !(DType[this] == MyAdvancedToken)
[L2766]  COND TRUE   DType[this] == TokenERC20
[L2767]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2664]              __var_2 := null;
[L2665]  COND FALSE  !(!(_to_s202 != null))
[L2669]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L2673]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L2677]              previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2678]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L2679]              balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2680]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L2681]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L2682]              balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2683]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L2684]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L2685]              assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L2767]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2768]  COND FALSE  !(revert)
[L2774]              success_s261 := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND FALSE  !(choice == 14)
[L4800]  COND TRUE   choice == 13
[L4801]              gas := gas - 21000;
[L4802]  COND TRUE   gas >= 0
[L4803]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4804]              assume msgvalue_MSG == 0;
[L4805]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s261 == _to_s261 && (_value_s261 > balanceOf_TokenERC20[this][_from_s261] || _value_s261 > allowance_TokenERC20[this][_from_s261][msgsender_MSG])) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_TokenERC200 := true;
[L2]                 call_transferFrom_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L489]               havoc __exception;
[L490]               revert := false;
[L491]   COND FALSE  !(__exception)
[L518]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2754]  COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L2758]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2759]              allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2760]              sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L2761]  COND FALSE  !(DType[this] == MyAdvancedToken)
[L2766]  COND TRUE   DType[this] == TokenERC20
[L2767]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2664]              __var_2 := null;
[L2665]  COND FALSE  !(!(_to_s202 != null))
[L2669]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L2673]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L2677]              previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2678]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L2679]              balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2680]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L2681]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L2682]              balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2683]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L2684]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L2685]              assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L2767]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L2768]  COND FALSE  !(revert)
[L2774]              success_s261 := true;
[L518]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L519]               assume !revert && gas >= 0;
[L4805]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:52:34,953 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:34,954 INFO  L82        PathProgramCache]: Analyzing trace with hash 1881983454, now seen corresponding path program 1 times
[2020-11-25 01:52:34,954 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:34,962 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:34,988 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:34,989 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:34,989 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:52:34,989 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:34,989 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 01:52:34,989 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 01:52:34,989 INFO  L87              Difference]: Start difference. First operand 4810 states and 5580 transitions. cyclomatic complexity: 776 Second operand 6 states.
[2020-11-25 01:52:35,028 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:35,029 INFO  L93              Difference]: Finished difference Result 2589 states and 2981 transitions.
[2020-11-25 01:52:35,029 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 01:52:35,029 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2589 states and 2981 transitions.
[2020-11-25 01:52:35,032 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:52:35,032 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2589 states to 0 states and 0 transitions.
[2020-11-25 01:52:35,032 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:52:35,032 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:52:35,032 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:52:35,032 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:35,032 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:35,033 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:35,033 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:35,033 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:52:35,033 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:52:35,033 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:52:35,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:52:35,036 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:35 BasicIcfg
[2020-11-25 01:52:35,036 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:52:35,036 INFO  L168              Benchmark]: Toolchain (without parser) took 7497.48 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 633.9 MB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -241.8 MB). Peak memory consumption was 392.0 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,037 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,037 INFO  L168              Benchmark]: Boogie Preprocessor took 95.72 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,037 INFO  L168              Benchmark]: UtopiaSpecLang took 59.08 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,038 INFO  L168              Benchmark]: Boogie Printer took 18.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,038 INFO  L168              Benchmark]: RCFGBuilder took 788.40 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 784.9 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,038 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.30 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 781.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,039 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1462.10 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.3 MB). Free memory was 781.3 MB in the beginning and 947.6 MB in the end (delta: -166.3 MB). Peak memory consumption was 172.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,039 INFO  L168              Benchmark]: BlockEncodingV2 took 137.27 ms. Allocated memory is still 1.2 GB. Free memory was 947.6 MB in the beginning and 870.2 MB in the end (delta: 77.4 MB). Peak memory consumption was 77.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,039 INFO  L168              Benchmark]: BuchiAutomizer took 4889.74 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 433.6 MB). Free memory was 870.2 MB in the beginning and 1.2 GB in the end (delta: -306.8 MB). Peak memory consumption was 126.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:35,042 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5478 locations, 9660 edges
  - StatisticsResult: Encoded RCFG
    5397 locations, 9459 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 95.72 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.08 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 788.40 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 784.9 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.30 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 781.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1462.10 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.3 MB). Free memory was 781.3 MB in the beginning and 947.6 MB in the end (delta: -166.3 MB). Peak memory consumption was 172.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.27 ms. Allocated memory is still 1.2 GB. Free memory was 947.6 MB in the beginning and 870.2 MB in the end (delta: 77.4 MB). Peak memory consumption was 77.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4889.74 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 433.6 MB). Free memory was 870.2 MB in the beginning and 1.2 GB in the end (delta: -306.8 MB). Peak memory consumption was 126.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2318 locations, 3067 edges
  - StatisticsResult: BuchiProgram size
    5478 locations, 9660 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 10 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.8s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 2.9s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 796 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4952 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19488 SDtfs, 16434 SDslu, 30647 SDs, 0 SdLazy, 26295 SolverSat, 3233 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_TokenERC200) ==> ( <>(fail_transferFrom_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
