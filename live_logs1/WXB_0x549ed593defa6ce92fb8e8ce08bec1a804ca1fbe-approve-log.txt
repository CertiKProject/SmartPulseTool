This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:49:56,051 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:49:56,052 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:49:56,062 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:49:56,063 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:49:56,063 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:49:56,064 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:49:56,066 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:49:56,067 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:49:56,068 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:49:56,068 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:49:56,068 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:49:56,069 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:49:56,070 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:49:56,071 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:49:56,071 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:49:56,072 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:49:56,073 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:49:56,074 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:49:56,075 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:49:56,076 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:49:56,077 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:49:56,078 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:49:56,078 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:49:56,078 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:49:56,079 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:49:56,079 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:49:56,080 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:49:56,080 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:49:56,080 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:49:56,081 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:49:56,081 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:49:56,081 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:49:56,082 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:49:56,083 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:49:56,083 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:49:56,083 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:49:56,083 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:49:56,083 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:49:56,084 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:49:56,085 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:49:56,085 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:49:56,093 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:49:56,094 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:49:56,095 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:49:56,095 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:49:56,095 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:49:56,095 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:49:56,095 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:49:56,095 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:49:56,096 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:49:56,096 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:49:56,096 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:49:56,096 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:49:56,096 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:49:56,096 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:49:56,097 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:49:56,098 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:49:56,098 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:49:56,098 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:49:56,098 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:49:56,098 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:49:56,098 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:49:56,119 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:49:56,130 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:49:56,133 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:49:56,134 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:49:56,135 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:49:56,136 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl
[2020-11-25 08:49:56,136 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl'
[2020-11-25 08:49:56,193 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:49:56,194 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:49:56,195 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:49:56,195 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:49:56,195 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:49:56,211 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,212 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,236 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,236 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,249 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,255 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,259 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,264 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:49:56,265 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:49:56,266 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:49:56,267 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:49:56,271 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/1) ...
[2020-11-25 08:49:56,282 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WXB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(WXB.approve(spender, value), return == true && approach_WXB[this][msg.sender][spender] == value &&  totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:56,287 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WXB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(WXB.approve(spender, value), return == true && approach_WXB[this][msg.sender][spender] == value &&  totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:56,294 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WXB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(WXB.approve(spender, value), return == true && approach_WXB[this][msg.sender][spender] == value &&  totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:56,298 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s352 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s352,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]
[2020-11-25 08:49:56,301 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && approach_WXB[this][msg.sender][_spender_s352]==_val_s352 ) && totalSupply_WXB[this]==( old(totalSupply_WXB[this]) ) ) && holders_WXB[this]==( old(holders_WXB[this]) ) ) && approach_WXB[this][p1][p2]==( old(approach_WXB[this][p1][p2]) ) ) && decimals_WXB[this]==( old(decimals_WXB[this]) ) ) && symbol_WXB[this]==( old(symbol_WXB[this]) ) ) && name_WXB[this]==( old(name_WXB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_WXB>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],[IdentifierExpression[_spender_s352,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],IdentifierExpression[_val_s352,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_WXB>]]]]]]
[2020-11-25 08:49:56,304 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WXB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(WXB.approve(spender, value), return == true && approach_WXB[this][msg.sender][spender] == value &&  totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:56,304 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_WXB0) ==> ( <>AP(success_approve_WXB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:49:56,309 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:56 PropertyContainer
[2020-11-25 08:49:56,309 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:49:56,309 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:49:56,309 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:49:56,310 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:49:56,310 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/2) ...
[2020-11-25 08:49:56,310 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:49:56,311 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:49:56,318 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:56" (2/2) ...
[2020-11-25 08:49:56,318 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:49:56,318 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:49:56,318 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:49:56,318 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:49:56,319 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/2) ...
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 08:49:56,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 08:49:56,370 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB
[2020-11-25 08:49:56,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__success
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB
[2020-11-25 08:49:56,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB
[2020-11-25 08:49:56,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB
[2020-11-25 08:49:56,371 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:49:56,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB
[2020-11-25 08:49:56,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB
[2020-11-25 08:49:56,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB
[2020-11-25 08:49:56,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB
[2020-11-25 08:49:56,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB
[2020-11-25 08:49:56,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB
[2020-11-25 08:49:56,372 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB
[2020-11-25 08:49:56,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WXB
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:49:56,373 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__success
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__fail
[2020-11-25 08:49:56,374 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__success
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__success
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__success
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__success
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:49:56,375 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:49:56,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:49:56,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:49:56,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:49:56,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:49:56,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__success
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__fail
[2020-11-25 08:49:56,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__success
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WXB
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:49:56,378 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:49:56,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:49:56,438 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:56,438 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:56,440 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:56,525 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:56,799 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:49:56,800 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 08:49:56,801 INFO  L202        PluginConnector]: Adding new model WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:56 BoogieIcfgContainer
[2020-11-25 08:49:56,801 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:56" (2/2) ...
[2020-11-25 08:49:56,801 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:49:56,802 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@33878f10 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:56, skipping insertion in model container
[2020-11-25 08:49:56,802 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:49:56,802 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:49:56,802 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:49:56,803 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:49:56,804 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/3) ...
[2020-11-25 08:49:56,804 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4e5e04f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:56, skipping insertion in model container
[2020-11-25 08:49:56,804 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:56" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:49:56,839 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:56 NWAContainer
[2020-11-25 08:49:56,839 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:49:56,839 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:49:56,839 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:49:56,840 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:49:56,841 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:56" (3/4) ...
[2020-11-25 08:49:56,841 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@797af6ad and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:56, skipping insertion in model container
[2020-11-25 08:49:56,842 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:56" (4/4) ...
[2020-11-25 08:49:56,845 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:49:56,847 INFO  L110   BuchiProductObserver]: Initial RCFG 659 locations, 787 edges
[2020-11-25 08:49:56,847 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:49:56,857 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:49:57,775 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:49:57,777 INFO  L110   BuchiProductObserver]: BuchiProgram size 1526 locations, 2546 edges
[2020-11-25 08:49:57,778 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:57 BoogieIcfgContainer
[2020-11-25 08:49:57,778 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:49:57,778 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:49:57,778 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:49:57,780 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:49:57,781 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:57" (1/1) ...
[2020-11-25 08:49:57,826 INFO  L313           BlockEncoder]: Initial Icfg 1526 locations, 2546 edges
[2020-11-25 08:49:57,826 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:49:57,827 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:49:57,827 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:49:57,828 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:49:57,835 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 08:49:57,839 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 08:49:57,845 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:49:57,847 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:49:57,848 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:49:57,848 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:49:57,851 INFO  L313           BlockEncoder]: Encoded RCFG 1508 locations, 2503 edges
[2020-11-25 08:49:57,851 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:49:57 BasicIcfg
[2020-11-25 08:49:57,851 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:49:57,852 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:49:57,852 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:49:57,854 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:49:57,854 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,854 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:56" (1/6) ...
[2020-11-25 08:49:57,856 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5a09517e and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:57, skipping insertion in model container
[2020-11-25 08:49:57,856 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,856 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:56" (2/6) ...
[2020-11-25 08:49:57,857 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5a09517e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:57, skipping insertion in model container
[2020-11-25 08:49:57,857 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,857 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:56" (3/6) ...
[2020-11-25 08:49:57,857 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5a09517e and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:49:57, skipping insertion in model container
[2020-11-25 08:49:57,857 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,857 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:56" (4/6) ...
[2020-11-25 08:49:57,857 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5a09517e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:57, skipping insertion in model container
[2020-11-25 08:49:57,857 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,858 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:57" (5/6) ...
[2020-11-25 08:49:57,858 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5a09517e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:49:57, skipping insertion in model container
[2020-11-25 08:49:57,858 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:57,858 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:49:57" (6/6) ...
[2020-11-25 08:49:57,859 INFO  L404   chiAutomizerObserver]: Analyzing ICFG WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_approve.bpl_BEv2
[2020-11-25 08:49:57,897 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:49:57,897 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:49:57,898 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:49:57,898 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:49:57,898 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:49:57,898 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:49:57,898 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:49:57,898 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:49:57,898 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:49:57,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1508 states.
[2020-11-25 08:49:57,958 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:57,958 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:57,958 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:57,967 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:57,967 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:57,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:49:57,967 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1508 states.
[2020-11-25 08:49:57,978 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:57,978 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:57,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:57,980 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:57,980 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_WXB0 := false;
[L3]                 call_approve_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1760]              assume null == 0;
[L1761]  CALL        call this := FreshRefGenerator__success();
[L882]               havoc newRef;
[L883]               assume Alloc[newRef] == false;
[L884]               Alloc[newRef] := true;
[L885]               assume newRef != null;
[L1761]  RET         call this := FreshRefGenerator__success();
[L1762]              assume now >= 0;
[L1763]              assume DType[this] == WXB;
[L1764]              assume msgvalue_MSG == 0;
[L1765]              gas := gas - 53000;
[L1766]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L899]               assume msgsender_MSG != null;
[L900]               Balance[this] := 0;
[L914]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L915]   COND FALSE  !(revert)
[L986]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L987]   COND TRUE   revert
[L167]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L168]               assume !revert && gas >= 0;
[L1766]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1767]              assume !revert && gas >= 0;

Loop:
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND TRUE   choice == 9
[L1696]              gas := gas - 21000;
[L1697]  COND FALSE  !(gas >= 0)
[L1770]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:57,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:57,997 INFO  L82        PathProgramCache]: Analyzing trace with hash -519987020, now seen corresponding path program 1 times
[2020-11-25 08:49:58,002 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:58,021 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:58,067 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:58,069 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:58,069 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:49:58,073 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:58,154 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:49:58,154 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:49:58,156 INFO  L87              Difference]: Start difference. First operand 1508 states. Second operand 4 states.
[2020-11-25 08:49:58,348 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:58,348 INFO  L93              Difference]: Finished difference Result 1147 states and 1244 transitions.
[2020-11-25 08:49:58,348 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:49:58,349 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1147 states and 1244 transitions.
[2020-11-25 08:49:58,355 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:58,367 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1147 states to 1137 states and 1224 transitions.
[2020-11-25 08:49:58,369 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 08:49:58,373 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 501
[2020-11-25 08:49:58,374 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1137 states and 1224 transitions.
[2020-11-25 08:49:58,380 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:58,380 INFO  L728         BuchiCegarLoop]: Abstraction has 1137 states and 1224 transitions.
[2020-11-25 08:49:58,398 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1137 states and 1224 transitions.
[2020-11-25 08:49:58,426 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1137 to 1137.
[2020-11-25 08:49:58,427 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1137 states.
[2020-11-25 08:49:58,430 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1137 states to 1137 states and 1224 transitions.
[2020-11-25 08:49:58,431 INFO  L751         BuchiCegarLoop]: Abstraction has 1137 states and 1224 transitions.
[2020-11-25 08:49:58,431 INFO  L631         BuchiCegarLoop]: Abstraction has 1137 states and 1224 transitions.
[2020-11-25 08:49:58,431 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:49:58,431 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1137 states and 1224 transitions.
[2020-11-25 08:49:58,436 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:58,437 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:58,437 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:58,439 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:58,439 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_WXB0 := false;
[L3]                 call_approve_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1760]              assume null == 0;
[L1761]  CALL        call this := FreshRefGenerator__success();
[L882]               havoc newRef;
[L883]               assume Alloc[newRef] == false;
[L884]               Alloc[newRef] := true;
[L885]               assume newRef != null;
[L1761]  RET         call this := FreshRefGenerator__success();
[L1762]              assume now >= 0;
[L1763]              assume DType[this] == WXB;
[L1764]              assume msgvalue_MSG == 0;
[L1765]              gas := gas - 53000;
[L1766]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L899]               assume msgsender_MSG != null;
[L900]               Balance[this] := 0;
[L914]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L915]   COND FALSE  !(revert)
[L986]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L987]   COND TRUE   revert
[L167]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L168]               assume !revert && gas >= 0;
[L1766]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1767]              assume !revert && gas >= 0;
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND FALSE  !(__exception)
[L377]   CALL        call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1128]  COND TRUE   !(holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1129]              revert := true;
[L377]   RET         call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L378]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && approach_WXB[this][msgsender_MSG][_spender_s352] == _val_s352) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

Loop:
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND FALSE  !(__exception)
[L377]   CALL        call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1128]  COND TRUE   !(holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1129]              revert := true;
[L377]   RET         call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L378]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && approach_WXB[this][msgsender_MSG][_spender_s352] == _val_s352) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:58,443 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:58,443 INFO  L82        PathProgramCache]: Analyzing trace with hash -780858732, now seen corresponding path program 1 times
[2020-11-25 08:49:58,444 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:58,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:58,475 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:58,475 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:58,475 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:49:58,477 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:58,477 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:49:58,477 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:49:58,477 INFO  L87              Difference]: Start difference. First operand 1137 states and 1224 transitions. cyclomatic complexity: 89 Second operand 4 states.
[2020-11-25 08:49:58,673 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:58,673 INFO  L93              Difference]: Finished difference Result 1657 states and 1884 transitions.
[2020-11-25 08:49:58,674 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:49:58,674 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1657 states and 1884 transitions.
[2020-11-25 08:49:58,685 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:49:58,696 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1657 states to 1623 states and 1846 transitions.
[2020-11-25 08:49:58,696 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 744
[2020-11-25 08:49:58,697 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 744
[2020-11-25 08:49:58,697 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1623 states and 1846 transitions.
[2020-11-25 08:49:58,700 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:58,700 INFO  L728         BuchiCegarLoop]: Abstraction has 1623 states and 1846 transitions.
[2020-11-25 08:49:58,702 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1623 states and 1846 transitions.
[2020-11-25 08:49:58,719 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1623 to 1127.
[2020-11-25 08:49:58,719 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1127 states.
[2020-11-25 08:49:58,722 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1127 states to 1127 states and 1198 transitions.
[2020-11-25 08:49:58,723 INFO  L751         BuchiCegarLoop]: Abstraction has 1127 states and 1198 transitions.
[2020-11-25 08:49:58,723 INFO  L631         BuchiCegarLoop]: Abstraction has 1127 states and 1198 transitions.
[2020-11-25 08:49:58,723 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:49:58,723 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1127 states and 1198 transitions.
[2020-11-25 08:49:58,727 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:58,728 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:58,728 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:58,730 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:58,730 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_WXB0 := false;
[L3]                 call_approve_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1760]              assume null == 0;
[L1761]  CALL        call this := FreshRefGenerator__success();
[L882]               havoc newRef;
[L883]               assume Alloc[newRef] == false;
[L884]               Alloc[newRef] := true;
[L885]               assume newRef != null;
[L1761]  RET         call this := FreshRefGenerator__success();
[L1762]              assume now >= 0;
[L1763]              assume DType[this] == WXB;
[L1764]              assume msgvalue_MSG == 0;
[L1765]              gas := gas - 53000;
[L1766]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L899]               assume msgsender_MSG != null;
[L900]               Balance[this] := 0;
[L914]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L915]   COND FALSE  !(revert)
[L986]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L987]   COND FALSE  !(revert)
[L990]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L949]               assume msgsender_MSG != null;
[L950]               Balance[this] := 0;
[L951]               totalSupply_WXB[this] := 0;
[L952]               decimals_WXB[this] := 0;
[L953]               symbol_WXB[this] := 1199276259;
[L954]               name_WXB[this] := 1199276259;
[L955]               approach_WXB[this] := zeroRefRefintArr();
[L956]               sum_approach0[this] := 0;
[L957]               holders_WXB[this] := zeroRefintArr();
[L958]               sum_holders1[this] := 0;
[L960]               name_WXB[this] := -1225396598;
[L961]               symbol_WXB[this] := 397088534;
[L962]               decimals_WXB[this] := 18;
[L963]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L965]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L966]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L967]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L990]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L991]   COND FALSE  !(revert)
[L167]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L168]               assume !revert && gas >= 0;
[L1766]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1767]              assume !revert && gas >= 0;
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND FALSE  !(__exception)
[L377]   CALL        call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1128]  COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s352))
[L1132]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] - approach_WXB[this][msgsender_MSG][_spender_s352];
[L1133]              approach_WXB[this][msgsender_MSG][_spender_s352] := _val_s352;
[L1134]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] + approach_WXB[this][msgsender_MSG][_spender_s352];
[L1135]              assert { :EventEmitted "Approval_WXB" } true;
[L1136]              __ret_0_ := true;
[L377]   RET         call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L378]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && approach_WXB[this][msgsender_MSG][_spender_s352] == _val_s352) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

Loop:
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND FALSE  !(__exception)
[L377]   CALL        call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1128]  COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s352))
[L1132]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] - approach_WXB[this][msgsender_MSG][_spender_s352];
[L1133]              approach_WXB[this][msgsender_MSG][_spender_s352] := _val_s352;
[L1134]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] + approach_WXB[this][msgsender_MSG][_spender_s352];
[L1135]              assert { :EventEmitted "Approval_WXB" } true;
[L1136]              __ret_0_ := true;
[L377]   RET         call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L378]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && approach_WXB[this][msgsender_MSG][_spender_s352] == _val_s352) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this][p1][p2] == old(approach_WXB[this][p1][p2])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:58,734 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:58,734 INFO  L82        PathProgramCache]: Analyzing trace with hash 429466096, now seen corresponding path program 1 times
[2020-11-25 08:49:58,735 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:58,766 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:58,882 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:58,883 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:58,883 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 08:49:58,883 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:58,883 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 08:49:58,884 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 08:49:58,884 INFO  L87              Difference]: Start difference. First operand 1127 states and 1198 transitions. cyclomatic complexity: 73 Second operand 13 states.
[2020-11-25 08:49:59,771 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:59,771 INFO  L93              Difference]: Finished difference Result 1234 states and 1327 transitions.
[2020-11-25 08:49:59,771 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 08:49:59,771 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1234 states and 1327 transitions.
[2020-11-25 08:49:59,776 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 08:49:59,781 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1234 states to 1234 states and 1327 transitions.
[2020-11-25 08:49:59,781 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 546
[2020-11-25 08:49:59,782 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 546
[2020-11-25 08:49:59,782 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1234 states and 1327 transitions.
[2020-11-25 08:49:59,783 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:59,783 INFO  L728         BuchiCegarLoop]: Abstraction has 1234 states and 1327 transitions.
[2020-11-25 08:49:59,784 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1234 states and 1327 transitions.
[2020-11-25 08:49:59,796 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1234 to 1205.
[2020-11-25 08:49:59,796 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1205 states.
[2020-11-25 08:49:59,798 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1205 states to 1205 states and 1289 transitions.
[2020-11-25 08:49:59,798 INFO  L751         BuchiCegarLoop]: Abstraction has 1205 states and 1289 transitions.
[2020-11-25 08:49:59,798 INFO  L631         BuchiCegarLoop]: Abstraction has 1205 states and 1289 transitions.
[2020-11-25 08:49:59,798 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:49:59,799 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1205 states and 1289 transitions.
[2020-11-25 08:49:59,801 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 08:49:59,802 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:59,802 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:59,803 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:59,803 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_WXB0 := false;
[L3]                 call_approve_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1760]              assume null == 0;
[L1761]  CALL        call this := FreshRefGenerator__success();
[L882]               havoc newRef;
[L883]               assume Alloc[newRef] == false;
[L884]               Alloc[newRef] := true;
[L885]               assume newRef != null;
[L1761]  RET         call this := FreshRefGenerator__success();
[L1762]              assume now >= 0;
[L1763]              assume DType[this] == WXB;
[L1764]              assume msgvalue_MSG == 0;
[L1765]              gas := gas - 53000;
[L1766]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L899]               assume msgsender_MSG != null;
[L900]               Balance[this] := 0;
[L914]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L915]   COND FALSE  !(revert)
[L986]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L987]   COND FALSE  !(revert)
[L990]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L949]               assume msgsender_MSG != null;
[L950]               Balance[this] := 0;
[L951]               totalSupply_WXB[this] := 0;
[L952]               decimals_WXB[this] := 0;
[L953]               symbol_WXB[this] := 1199276259;
[L954]               name_WXB[this] := 1199276259;
[L955]               approach_WXB[this] := zeroRefRefintArr();
[L956]               sum_approach0[this] := 0;
[L957]               holders_WXB[this] := zeroRefintArr();
[L958]               sum_holders1[this] := 0;
[L960]               name_WXB[this] := -1225396598;
[L961]               symbol_WXB[this] := 397088534;
[L962]               decimals_WXB[this] := 18;
[L963]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L965]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L966]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L967]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L990]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L991]   COND FALSE  !(revert)
[L167]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L168]               assume !revert && gas >= 0;
[L1766]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1767]              assume !revert && gas >= 0;
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND TRUE   __exception
[L357]               __tmp__Balance := Balance;
[L358]               __tmp__DType := DType;
[L359]               __tmp__Alloc := Alloc;
[L360]               __tmp__balance_ADDR := balance_ADDR;
[L361]               __tmp__M_Ref_int := M_Ref_int;
[L362]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L363]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L364]               __tmp__sum_approach0 := sum_approach0;
[L365]               __tmp__sum_holders1 := sum_holders1;
[L366]               __tmp__Length := Length;
[L367]               __tmp__now := now;
[L368]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L369]               __tmp__decimals_WXB := decimals_WXB;
[L370]               __tmp__symbol_WXB := symbol_WXB;
[L371]               __tmp__name_WXB := name_WXB;
[L372]               __tmp__approach_WXB := approach_WXB;
[L373]               __tmp__holders_WXB := holders_WXB;
[L374]   CALL        call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1115]  COND TRUE   !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1116]              revert := true;
[L374]   RET         call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L375]               assume revert || gas < 0;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

Loop:
[L1770]  CALL        call CorralChoice_WXB(this);
[L1663]              havoc msgsender_MSG;
[L1664]              havoc msgvalue_MSG;
[L1665]              havoc choice;
[L1666]              havoc _from_s315;
[L1667]              havoc _to_s315;
[L1668]              havoc _val_s315;
[L1669]              havoc __ret_0_transferFrom;
[L1670]              havoc _to_s213;
[L1671]              havoc _val_s213;
[L1672]              havoc __ret_0_transfer;
[L1673]              havoc _own_s139;
[L1674]              havoc __ret_0_balanceOf;
[L1675]              havoc _owner_s368;
[L1676]              havoc _spender_s368;
[L1677]              havoc __ret_0_allowance;
[L1678]              havoc _spender_s352;
[L1679]              havoc _val_s352;
[L1680]              havoc __ret_0_approve;
[L1681]              havoc __ret_0_totalSupply;
[L1682]              havoc __ret_0_decimals;
[L1683]              havoc __ret_0_symbol;
[L1684]              havoc __ret_0_name;
[L1685]              havoc tmpNow;
[L1686]              havoc gas;
[L1687]              assume gas > 4000000 && gas <= 8000000;
[L1688]              tmpNow := now;
[L1689]              havoc now;
[L1690]              assume now > tmpNow;
[L1691]              assume msgsender_MSG != null;
[L1692]              assume DType[msgsender_MSG] != ERC20;
[L1693]              assume DType[msgsender_MSG] != WXB;
[L1694]              Alloc[msgsender_MSG] := true;
[L1695]  COND FALSE  !(choice == 9)
[L1702]  COND FALSE  !(choice == 8)
[L1709]  COND FALSE  !(choice == 7)
[L1715]  COND FALSE  !(choice == 6)
[L1721]  COND TRUE   choice == 5
[L1722]              gas := gas - 21000;
[L1723]  COND TRUE   gas >= 0
[L1724]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1725]              assume msgvalue_MSG == 0;
[L1726]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                 call_approve_WXB0 := true;
[L3]                 call_approve_WXB0 := false;
[L3]                 revert := revert_hold;
[L354]               havoc __exception;
[L355]               revert := false;
[L356]   COND TRUE   __exception
[L357]               __tmp__Balance := Balance;
[L358]               __tmp__DType := DType;
[L359]               __tmp__Alloc := Alloc;
[L360]               __tmp__balance_ADDR := balance_ADDR;
[L361]               __tmp__M_Ref_int := M_Ref_int;
[L362]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L363]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L364]               __tmp__sum_approach0 := sum_approach0;
[L365]               __tmp__sum_holders1 := sum_holders1;
[L366]               __tmp__Length := Length;
[L367]               __tmp__now := now;
[L368]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L369]               __tmp__decimals_WXB := decimals_WXB;
[L370]               __tmp__symbol_WXB := symbol_WXB;
[L371]               __tmp__name_WXB := name_WXB;
[L372]               __tmp__approach_WXB := approach_WXB;
[L373]               __tmp__holders_WXB := holders_WXB;
[L374]   CALL        call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1115]  COND TRUE   !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1116]              revert := true;
[L374]   RET         call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L375]               assume revert || gas < 0;
[L1726]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1770]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:59,806 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:59,806 INFO  L82        PathProgramCache]: Analyzing trace with hash -67103371, now seen corresponding path program 1 times
[2020-11-25 08:49:59,807 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:59,819 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:49:59,829 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:49:59,865 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:59,865 INFO  L82        PathProgramCache]: Analyzing trace with hash 333665015, now seen corresponding path program 1 times
[2020-11-25 08:49:59,866 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:59,869 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:49:59,873 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:49:59,880 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:59,881 INFO  L82        PathProgramCache]: Analyzing trace with hash 1600949763, now seen corresponding path program 1 times
[2020-11-25 08:49:59,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:59,892 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:49:59,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-25 08:50:00,521 WARN  L188               SmtUtils]: Spent 337.00 ms on a formula simplification. DAG size of input: 169 DAG size of output: 169
[2020-11-25 08:50:00,968 WARN  L188               SmtUtils]: Spent 444.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9883 to 19763
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
[2020-11-25 08:50:01,134 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 118
[2020-11-25 08:50:01,236 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 08:50:01,495 WARN  L188               SmtUtils]: Spent 248.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 200
[2020-11-25 08:50:01,626 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification that was a NOOP. DAG size: 200
Garbage collection #1: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 08:50:01,794 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification. DAG size of input: 136 DAG size of output: 114
[2020-11-25 08:50:01,802 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-25 08:50:02,420 WARN  L188               SmtUtils]: Spent 222.00 ms on a formula simplification. DAG size of input: 169 DAG size of output: 169
[2020-11-25 08:50:02,765 WARN  L188               SmtUtils]: Spent 342.00 ms on a formula simplification. DAG size of input: 218 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 08:50:02,965 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 251
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 08:50:03,286 WARN  L188               SmtUtils]: Spent 314.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 198
[2020-11-25 08:50:03,920 WARN  L188               SmtUtils]: Spent 632.00 ms on a formula simplification. DAG size of input: 370 DAG size of output: 366
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 08:50:04,334 WARN  L188               SmtUtils]: Spent 400.00 ms on a formula simplification. DAG size of input: 177 DAG size of output: 169
[2020-11-25 08:50:04,563 WARN  L188               SmtUtils]: Spent 217.00 ms on a formula simplification that was a NOOP. DAG size: 262
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 08:50:04,901 WARN  L188               SmtUtils]: Spent 327.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 169
[2020-11-25 08:50:05,378 WARN  L188               SmtUtils]: Spent 475.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 263
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 08:50:05,949 WARN  L188               SmtUtils]: Spent 563.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 258
[2020-11-25 08:50:05,960 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:05,977 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:05,984 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:50:05 BasicIcfg
[2020-11-25 08:50:05,984 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:50:05,985 INFO  L168              Benchmark]: Toolchain (without parser) took 9791.02 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 895.0 MB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -649.0 MB). Peak memory consumption was 922.9 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,985 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,985 INFO  L168              Benchmark]: Boogie Preprocessor took 69.91 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,986 INFO  L168              Benchmark]: UtopiaSpecLang took 43.81 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,986 INFO  L168              Benchmark]: Boogie Printer took 8.73 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,986 INFO  L168              Benchmark]: RCFGBuilder took 483.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,986 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,987 INFO  L168              Benchmark]: BÃ¼chi Program Product took 938.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 53.0 MB). Free memory was 877.9 MB in the beginning and 945.4 MB in the end (delta: -67.5 MB). Peak memory consumption was 160.9 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,988 INFO  L168              Benchmark]: BlockEncodingV2 took 73.13 ms. Allocated memory is still 1.1 GB. Free memory was 942.0 MB in the beginning and 910.4 MB in the end (delta: 31.6 MB). Peak memory consumption was 31.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,988 INFO  L168              Benchmark]: BuchiAutomizer took 8132.72 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 842.0 MB). Free memory was 910.4 MB in the beginning and 1.6 GB in the end (delta: -679.1 MB). Peak memory consumption was 839.8 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:05,991 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1526 locations, 2546 edges
  - StatisticsResult: Encoded RCFG
    1508 locations, 2503 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 69.91 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 43.81 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.73 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 483.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 938.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 53.0 MB). Free memory was 877.9 MB in the beginning and 945.4 MB in the end (delta: -67.5 MB). Peak memory consumption was 160.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 73.13 ms. Allocated memory is still 1.1 GB. Free memory was 942.0 MB in the beginning and 910.4 MB in the end (delta: 31.6 MB). Peak memory consumption was 31.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8132.72 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 842.0 MB). Free memory was 910.4 MB in the beginning and 1.6 GB in the end (delta: -679.1 MB). Peak memory consumption was 839.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    659 locations, 787 edges
  - StatisticsResult: BuchiProgram size
    1526 locations, 2546 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 1205 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.0s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 6.4s. Construction of modules took 0.9s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 525 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1205 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4081 SDtfs, 3794 SDslu, 6916 SDs, 0 SdLazy, 7995 SolverSat, 731 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639954) = (new WXB)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639950});
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L899]               assume msgsender_MSG != null;
[L900]               Balance[this] := 0;
[L914]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L915]   COND FALSE  !(revert)
[L986]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L987]   COND FALSE  !(revert)
[L990]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L949]               assume msgsender_MSG != null;
[L950]               Balance[this] := 0;
[L951]               totalSupply_WXB[this] := 0;
[L952]               decimals_WXB[this] := 0;
[L953]               symbol_WXB[this] := 1199276259;
[L954]               name_WXB[this] := 1199276259;
[L955]               approach_WXB[this] := zeroRefRefintArr();
[L956]               sum_approach0[this] := 0;
[L957]               holders_WXB[this] := zeroRefintArr();
[L958]               sum_holders1[this] := 0;
[L960]               name_WXB[this] := -1225396598;
[L961]               symbol_WXB[this] := 397088534;
[L962]               decimals_WXB[this] := 18;
[L963]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L965]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L966]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L967]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L990]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L991]   COND FALSE  !(revert)
[L167]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L168]               assume !revert && gas >= 0;
[L1766]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
WXB(115792089237316195423570985008687907853269984665640564039457584007913129639954).approve~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639950, _spender : 115792089237316195423570985008687907853269984665640564039457584007913129639955, _val : 7});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                call_approve_WXB0 := true;
[L3]                call_approve_WXB0 := false;
[L3]                revert := revert_hold;
[L354]              havoc __exception;
[L355]              revert := false;
[L356]   COND TRUE  __exception
[L357]              __tmp__Balance := Balance;
[L358]              __tmp__DType := DType;
[L359]              __tmp__Alloc := Alloc;
[L360]              __tmp__balance_ADDR := balance_ADDR;
[L361]              __tmp__M_Ref_int := M_Ref_int;
[L362]              __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L363]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L364]              __tmp__sum_approach0 := sum_approach0;
[L365]              __tmp__sum_holders1 := sum_holders1;
[L366]              __tmp__Length := Length;
[L367]              __tmp__now := now;
[L368]              __tmp__totalSupply_WXB := totalSupply_WXB;
[L369]              __tmp__decimals_WXB := decimals_WXB;
[L370]              __tmp__symbol_WXB := symbol_WXB;
[L371]              __tmp__name_WXB := name_WXB;
[L372]              __tmp__approach_WXB := approach_WXB;
[L373]              __tmp__holders_WXB := holders_WXB;
[L374]   CALL       call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1115]  COND TRUE  !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1116]             revert := true;
[L374]   RET        call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L375]              assume revert || gas < 0;
[L1726]  RET        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);

Loop:
WXB(115792089237316195423570985008687907853269984665640564039457584007913129639954).approve~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639950, _spender : 115792089237316195423570985008687907853269984665640564039457584007913129639952, _val : 7});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != _spender_s352;
[L3]                call_approve_WXB0 := true;
[L3]                call_approve_WXB0 := false;
[L3]                revert := revert_hold;
[L354]              havoc __exception;
[L355]              revert := false;
[L356]   COND TRUE  __exception
[L357]              __tmp__Balance := Balance;
[L358]              __tmp__DType := DType;
[L359]              __tmp__Alloc := Alloc;
[L360]              __tmp__balance_ADDR := balance_ADDR;
[L361]              __tmp__M_Ref_int := M_Ref_int;
[L362]              __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L363]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L364]              __tmp__sum_approach0 := sum_approach0;
[L365]              __tmp__sum_holders1 := sum_holders1;
[L366]              __tmp__Length := Length;
[L367]              __tmp__now := now;
[L368]              __tmp__totalSupply_WXB := totalSupply_WXB;
[L369]              __tmp__decimals_WXB := decimals_WXB;
[L370]              __tmp__symbol_WXB := symbol_WXB;
[L371]              __tmp__name_WXB := name_WXB;
[L372]              __tmp__approach_WXB := approach_WXB;
[L373]              __tmp__holders_WXB := holders_WXB;
[L374]   CALL       call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1115]  COND TRUE  !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s352)
[L1116]             revert := true;
[L374]   RET        call __ret_0_ := approve~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L375]              assume revert || gas < 0;
[L1726]  RET        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
