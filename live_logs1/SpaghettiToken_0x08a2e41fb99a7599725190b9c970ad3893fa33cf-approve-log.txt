This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 04:15:01,093 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 04:15:01,095 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 04:15:01,106 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 04:15:01,106 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 04:15:01,107 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 04:15:01,108 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 04:15:01,109 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 04:15:01,111 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 04:15:01,112 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 04:15:01,112 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 04:15:01,112 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 04:15:01,113 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 04:15:01,114 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 04:15:01,115 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 04:15:01,115 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 04:15:01,116 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 04:15:01,117 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 04:15:01,118 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 04:15:01,119 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 04:15:01,120 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 04:15:01,121 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 04:15:01,122 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 04:15:01,122 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 04:15:01,123 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 04:15:01,123 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 04:15:01,123 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 04:15:01,124 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 04:15:01,124 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 04:15:01,125 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 04:15:01,125 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 04:15:01,126 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 04:15:01,126 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 04:15:01,127 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 04:15:01,127 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 04:15:01,127 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 04:15:01,128 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 04:15:01,128 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 04:15:01,128 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 04:15:01,129 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 04:15:01,129 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 04:15:01,130 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 04:15:01,139 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 04:15:01,140 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 04:15:01,141 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 04:15:01,141 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 04:15:01,141 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 04:15:01,141 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 04:15:01,141 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 04:15:01,141 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 04:15:01,141 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 04:15:01,141 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 04:15:01,142 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 04:15:01,142 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 04:15:01,143 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 04:15:01,143 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 04:15:01,163 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 04:15:01,173 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 04:15:01,176 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 04:15:01,178 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 04:15:01,178 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 04:15:01,179 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl
[2020-11-25 04:15:01,179 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl'
[2020-11-25 04:15:01,241 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 04:15:01,242 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 04:15:01,242 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 04:15:01,243 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 04:15:01,243 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 04:15:01,259 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,260 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,281 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,282 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,296 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,302 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,306 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,312 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 04:15:01,313 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 04:15:01,313 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 04:15:01,315 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 04:15:01,319 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/1) ...
[2020-11-25 04:15:01,331 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiToken.approve(spender, value), return == true && allowance_SpaghettiToken[this][msg.sender][spender] == value &&  totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-25 04:15:01,336 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiToken.approve(spender, value), return == true && allowance_SpaghettiToken[this][msg.sender][spender] == value &&  totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-25 04:15:01,343 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiToken.approve(spender, value), return == true && allowance_SpaghettiToken[this][msg.sender][spender] == value &&  totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-25 04:15:01,348 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=guy_s177 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[guy_s177,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]
[2020-11-25 04:15:01,350 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && allowance_SpaghettiToken[this][msg.sender][guy_s177]==wad_s177 ) && totalSupply_SpaghettiToken[this]==( old(totalSupply_SpaghettiToken[this]) ) ) && balanceOf_SpaghettiToken[this]==( old(balanceOf_SpaghettiToken[this]) ) ) && allowance_SpaghettiToken[this][p1][p2]==( old(allowance_SpaghettiToken[this][p1][p2]) ) ) && symbol_SpaghettiToken[this]==( old(symbol_SpaghettiToken[this]) ) ) && decimals_SpaghettiToken[this]==( old(decimals_SpaghettiToken[this]) ) ) && name_SpaghettiToken[this]==( old(name_SpaghettiToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_SpaghettiToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],[IdentifierExpression[guy_s177,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],IdentifierExpression[wad_s177,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiToken>]]]]]]
[2020-11-25 04:15:01,354 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiToken.approve(spender, value), return == true && allowance_SpaghettiToken[this][msg.sender][spender] == value &&  totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-25 04:15:01,354 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_SpaghettiToken0) ==> ( <>AP(success_approve_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 04:15:01,359 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:15:01 PropertyContainer
[2020-11-25 04:15:01,360 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 04:15:01,360 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 04:15:01,360 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 04:15:01,360 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 04:15:01,361 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/2) ...
[2020-11-25 04:15:01,361 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 04:15:01,361 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 04:15:01,368 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:15:01" (2/2) ...
[2020-11-25 04:15:01,369 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 04:15:01,369 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 04:15:01,369 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 04:15:01,369 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 04:15:01,370 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/2) ...
[2020-11-25 04:15:01,420 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 04:15:01,420 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 04:15:01,420 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 04:15:01,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__success
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,421 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,422 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-25 04:15:01,422 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 04:15:01,423 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__fail
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken__success
[2020-11-25 04:15:01,424 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-25 04:15:01,425 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken__success
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken__success
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken__success
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 04:15:01,426 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 04:15:01,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 04:15:01,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 04:15:01,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 04:15:01,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__fail
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__success
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken__fail
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken__success
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-25 04:15:01,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-25 04:15:01,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-25 04:15:01,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-25 04:15:01,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-25 04:15:01,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-25 04:15:01,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-25 04:15:01,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken__fail
[2020-11-25 04:15:01,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken__success
[2020-11-25 04:15:01,432 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken__fail
[2020-11-25 04:15:01,432 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken__success
[2020-11-25 04:15:01,432 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken__fail
[2020-11-25 04:15:01,432 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken__success
[2020-11-25 04:15:01,432 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 04:15:01,433 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 04:15:01,434 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 04:15:01,434 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-25 04:15:01,434 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 04:15:01,434 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 04:15:01,434 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 04:15:01,583 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 04:15:01,772 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 04:15:01,772 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 04:15:01,773 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 04:15:01,901 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 04:15:01,901 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 04:15:01,903 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:15:01 BoogieIcfgContainer
[2020-11-25 04:15:01,903 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:15:01" (2/2) ...
[2020-11-25 04:15:01,903 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 04:15:01,903 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@ccf3c4e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:15:01, skipping insertion in model container
[2020-11-25 04:15:01,904 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 04:15:01,904 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 04:15:01,904 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 04:15:01,906 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 04:15:01,907 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/3) ...
[2020-11-25 04:15:01,907 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@224ac5dd and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:15:01, skipping insertion in model container
[2020-11-25 04:15:01,908 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:15:01" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 04:15:01,951 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:15:01 NWAContainer
[2020-11-25 04:15:01,951 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 04:15:01,951 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 04:15:01,951 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 04:15:01,952 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 04:15:01,953 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:15:01" (3/4) ...
[2020-11-25 04:15:01,954 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@51dbe7f1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:15:01, skipping insertion in model container
[2020-11-25 04:15:01,954 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:15:01" (4/4) ...
[2020-11-25 04:15:01,958 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 04:15:01,961 INFO  L110   BuchiProductObserver]: Initial RCFG 746 locations, 936 edges
[2020-11-25 04:15:01,961 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 04:15:01,971 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 04:15:02,874 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 04:15:02,876 INFO  L110   BuchiProductObserver]: BuchiProgram size 1780 locations, 3022 edges
[2020-11-25 04:15:02,876 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:15:02 BoogieIcfgContainer
[2020-11-25 04:15:02,876 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 04:15:02,877 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 04:15:02,877 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 04:15:02,878 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 04:15:02,878 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:15:02" (1/1) ...
[2020-11-25 04:15:02,918 INFO  L313           BlockEncoder]: Initial Icfg 1780 locations, 3022 edges
[2020-11-25 04:15:02,918 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 04:15:02,918 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 04:15:02,919 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 04:15:02,919 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 04:15:02,928 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-25 04:15:02,938 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 04:15:02,946 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 04:15:02,949 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 04:15:02,950 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 04:15:02,951 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 04:15:02,954 INFO  L313           BlockEncoder]: Encoded RCFG 1742 locations, 2919 edges
[2020-11-25 04:15:02,954 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:15:02 BasicIcfg
[2020-11-25 04:15:02,954 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 04:15:02,955 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 04:15:02,955 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 04:15:02,957 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 04:15:02,958 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,958 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:15:01" (1/6) ...
[2020-11-25 04:15:02,959 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13ff6a46 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:15:02, skipping insertion in model container
[2020-11-25 04:15:02,959 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,960 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:15:01" (2/6) ...
[2020-11-25 04:15:02,960 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13ff6a46 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:15:02, skipping insertion in model container
[2020-11-25 04:15:02,960 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,960 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:15:01" (3/6) ...
[2020-11-25 04:15:02,960 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13ff6a46 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:15:02, skipping insertion in model container
[2020-11-25 04:15:02,960 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,960 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:15:01" (4/6) ...
[2020-11-25 04:15:02,960 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13ff6a46 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:15:02, skipping insertion in model container
[2020-11-25 04:15:02,961 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,961 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:15:02" (5/6) ...
[2020-11-25 04:15:02,961 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13ff6a46 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:15:02, skipping insertion in model container
[2020-11-25 04:15:02,961 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 04:15:02,961 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:15:02" (6/6) ...
[2020-11-25 04:15:02,962 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_approve.bpl_BEv2
[2020-11-25 04:15:03,000 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 04:15:03,001 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 04:15:03,001 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 04:15:03,001 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 04:15:03,001 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 04:15:03,001 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 04:15:03,001 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 04:15:03,001 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 04:15:03,002 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 04:15:03,024 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1742 states.
[2020-11-25 04:15:03,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 04:15:03,062 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:03,062 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:03,072 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:03,072 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:03,072 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 04:15:03,072 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1742 states.
[2020-11-25 04:15:03,082 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 04:15:03,082 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:03,082 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:03,083 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:03,084 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiToken0 := false;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2017]              assume null == 0;
[L2018]  CALL        call this := FreshRefGenerator__success();
[L965]               havoc newRef;
[L966]               assume Alloc[newRef] == false;
[L967]               Alloc[newRef] := true;
[L968]               assume newRef != null;
[L2018]  RET         call this := FreshRefGenerator__success();
[L2019]              assume now >= 0;
[L2020]              assume DType[this] == SpaghettiToken;
[L2021]              assume msgvalue_MSG == 0;
[L2022]              gas := gas - 53000;
[L2023]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L168]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               assume msgsender_MSG != null;
[L983]               Balance[this] := 0;
[L997]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1112]  COND TRUE   revert
[L168]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L169]               assume !revert && gas >= 0;
[L2023]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2024]              assume !revert && gas >= 0;

Loop:
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND TRUE   choice == 10
[L1946]              gas := gas - 21000;
[L1947]  COND FALSE  !(gas >= 0)
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 04:15:03,097 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 04:15:03,097 INFO  L82        PathProgramCache]: Analyzing trace with hash 1035838481, now seen corresponding path program 1 times
[2020-11-25 04:15:03,103 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 04:15:03,120 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 04:15:03,162 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 04:15:03,164 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 04:15:03,164 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 04:15:03,167 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 04:15:03,282 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 04:15:03,283 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 04:15:03,285 INFO  L87              Difference]: Start difference. First operand 1742 states. Second operand 3 states.
[2020-11-25 04:15:03,433 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 04:15:03,433 INFO  L93              Difference]: Finished difference Result 1381 states and 1526 transitions.
[2020-11-25 04:15:03,433 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 04:15:03,435 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1381 states and 1526 transitions.
[2020-11-25 04:15:03,444 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 04:15:03,458 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1381 states to 1381 states and 1526 transitions.
[2020-11-25 04:15:03,459 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 04:15:03,461 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 418
[2020-11-25 04:15:03,462 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1381 states and 1526 transitions.
[2020-11-25 04:15:03,468 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 04:15:03,469 INFO  L728         BuchiCegarLoop]: Abstraction has 1381 states and 1526 transitions.
[2020-11-25 04:15:03,485 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1381 states and 1526 transitions.
[2020-11-25 04:15:03,520 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1381 to 1381.
[2020-11-25 04:15:03,520 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1381 states.
[2020-11-25 04:15:03,524 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1381 states to 1381 states and 1526 transitions.
[2020-11-25 04:15:03,525 INFO  L751         BuchiCegarLoop]: Abstraction has 1381 states and 1526 transitions.
[2020-11-25 04:15:03,525 INFO  L631         BuchiCegarLoop]: Abstraction has 1381 states and 1526 transitions.
[2020-11-25 04:15:03,525 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 04:15:03,525 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1381 states and 1526 transitions.
[2020-11-25 04:15:03,530 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 04:15:03,530 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:03,530 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:03,533 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:03,533 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiToken0 := false;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2017]              assume null == 0;
[L2018]  CALL        call this := FreshRefGenerator__success();
[L965]               havoc newRef;
[L966]               assume Alloc[newRef] == false;
[L967]               Alloc[newRef] := true;
[L968]               assume newRef != null;
[L2018]  RET         call this := FreshRefGenerator__success();
[L2019]              assume now >= 0;
[L2020]              assume DType[this] == SpaghettiToken;
[L2021]              assume msgvalue_MSG == 0;
[L2022]              gas := gas - 53000;
[L2023]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L168]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               assume msgsender_MSG != null;
[L983]               Balance[this] := 0;
[L997]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1112]  COND TRUE   revert
[L168]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L169]               assume !revert && gas >= 0;
[L2023]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2024]              assume !revert && gas >= 0;
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 04:15:03,538 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 04:15:03,539 INFO  L82        PathProgramCache]: Analyzing trace with hash 1776644799, now seen corresponding path program 1 times
[2020-11-25 04:15:03,540 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 04:15:03,553 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 04:15:03,584 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 04:15:03,584 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 04:15:03,584 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 04:15:03,585 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 04:15:03,586 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 04:15:03,586 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 04:15:03,586 INFO  L87              Difference]: Start difference. First operand 1381 states and 1526 transitions. cyclomatic complexity: 147 Second operand 4 states.
[2020-11-25 04:15:03,858 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 04:15:03,858 INFO  L93              Difference]: Finished difference Result 1999 states and 2272 transitions.
[2020-11-25 04:15:03,858 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 04:15:03,859 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1999 states and 2272 transitions.
[2020-11-25 04:15:03,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 04:15:03,883 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1999 states to 1935 states and 2196 transitions.
[2020-11-25 04:15:03,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 563
[2020-11-25 04:15:03,884 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 577
[2020-11-25 04:15:03,884 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1935 states and 2196 transitions.
[2020-11-25 04:15:03,888 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 04:15:03,888 INFO  L728         BuchiCegarLoop]: Abstraction has 1935 states and 2196 transitions.
[2020-11-25 04:15:03,890 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1935 states and 2196 transitions.
[2020-11-25 04:15:03,911 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1935 to 1498.
[2020-11-25 04:15:03,911 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1498 states.
[2020-11-25 04:15:03,915 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1498 states to 1498 states and 1627 transitions.
[2020-11-25 04:15:03,915 INFO  L751         BuchiCegarLoop]: Abstraction has 1498 states and 1627 transitions.
[2020-11-25 04:15:03,915 INFO  L631         BuchiCegarLoop]: Abstraction has 1498 states and 1627 transitions.
[2020-11-25 04:15:03,915 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 04:15:03,915 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1498 states and 1627 transitions.
[2020-11-25 04:15:03,919 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 04:15:03,920 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:03,920 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:03,921 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:03,921 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiToken0 := false;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2017]              assume null == 0;
[L2018]  CALL        call this := FreshRefGenerator__success();
[L965]               havoc newRef;
[L966]               assume Alloc[newRef] == false;
[L967]               Alloc[newRef] := true;
[L968]               assume newRef != null;
[L2018]  RET         call this := FreshRefGenerator__success();
[L2019]              assume now >= 0;
[L2020]              assume DType[this] == SpaghettiToken;
[L2021]              assume msgvalue_MSG == 0;
[L2022]              gas := gas - 53000;
[L2023]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L168]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               assume msgsender_MSG != null;
[L983]               Balance[this] := 0;
[L997]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1112]  COND FALSE  !(revert)
[L1115]  CALL        call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_SpaghettiToken[this] := 0;
[L1083]              balanceOf_SpaghettiToken[this] := zeroRefintArr();
[L1084]              sum_balanceOf0[this] := 0;
[L1085]              allowance_SpaghettiToken[this] := zeroRefRefintArr();
[L1086]              sum_allowance1[this] := 0;
[L1087]              symbol_SpaghettiToken[this] := 2010503932;
[L1088]              decimals_SpaghettiToken[this] := 18;
[L1089]              name_SpaghettiToken[this] := 408148383;
[L1091]              totalSupply_SpaghettiToken[this] := 15000000000000000000000000;
[L1092]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][chef_s113];
[L1093]              balanceOf_SpaghettiToken[this][chef_s113] := 15000000000000000000000000;
[L1094]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][chef_s113];
[L1115]  RET         call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1116]  COND FALSE  !(revert)
[L168]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L169]               assume !revert && gas >= 0;
[L2023]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2024]              assume !revert && gas >= 0;
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 04:15:03,925 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 04:15:03,925 INFO  L82        PathProgramCache]: Analyzing trace with hash 55391786, now seen corresponding path program 1 times
[2020-11-25 04:15:03,926 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 04:15:03,950 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 04:15:04,074 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 04:15:04,075 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 04:15:04,075 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 04:15:04,075 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 04:15:04,075 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 04:15:04,076 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 04:15:04,076 INFO  L87              Difference]: Start difference. First operand 1498 states and 1627 transitions. cyclomatic complexity: 131 Second operand 13 states.
[2020-11-25 04:15:04,956 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 04:15:04,956 INFO  L93              Difference]: Finished difference Result 1695 states and 1867 transitions.
[2020-11-25 04:15:04,956 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 04:15:04,957 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1695 states and 1867 transitions.
[2020-11-25 04:15:04,963 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 04:15:04,969 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1695 states to 1695 states and 1867 transitions.
[2020-11-25 04:15:04,970 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 547
[2020-11-25 04:15:04,971 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 547
[2020-11-25 04:15:04,971 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1695 states and 1867 transitions.
[2020-11-25 04:15:04,972 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 04:15:04,973 INFO  L728         BuchiCegarLoop]: Abstraction has 1695 states and 1867 transitions.
[2020-11-25 04:15:04,974 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1695 states and 1867 transitions.
[2020-11-25 04:15:04,990 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1695 to 1664.
[2020-11-25 04:15:04,991 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1664 states.
[2020-11-25 04:15:04,994 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1664 states to 1664 states and 1822 transitions.
[2020-11-25 04:15:04,994 INFO  L751         BuchiCegarLoop]: Abstraction has 1664 states and 1822 transitions.
[2020-11-25 04:15:04,994 INFO  L631         BuchiCegarLoop]: Abstraction has 1664 states and 1822 transitions.
[2020-11-25 04:15:04,994 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 04:15:04,994 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1664 states and 1822 transitions.
[2020-11-25 04:15:04,997 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 04:15:04,997 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:04,997 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:04,998 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:04,998 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiToken0 := false;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2017]              assume null == 0;
[L2018]  CALL        call this := FreshRefGenerator__success();
[L965]               havoc newRef;
[L966]               assume Alloc[newRef] == false;
[L967]               Alloc[newRef] := true;
[L968]               assume newRef != null;
[L2018]  RET         call this := FreshRefGenerator__success();
[L2019]              assume now >= 0;
[L2020]              assume DType[this] == SpaghettiToken;
[L2021]              assume msgvalue_MSG == 0;
[L2022]              gas := gas - 53000;
[L2023]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L168]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               assume msgsender_MSG != null;
[L983]               Balance[this] := 0;
[L997]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1112]  COND FALSE  !(revert)
[L1115]  CALL        call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_SpaghettiToken[this] := 0;
[L1083]              balanceOf_SpaghettiToken[this] := zeroRefintArr();
[L1084]              sum_balanceOf0[this] := 0;
[L1085]              allowance_SpaghettiToken[this] := zeroRefRefintArr();
[L1086]              sum_allowance1[this] := 0;
[L1087]              symbol_SpaghettiToken[this] := 2010503932;
[L1088]              decimals_SpaghettiToken[this] := 18;
[L1089]              name_SpaghettiToken[this] := 408148383;
[L1091]              totalSupply_SpaghettiToken[this] := 15000000000000000000000000;
[L1092]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][chef_s113];
[L1093]              balanceOf_SpaghettiToken[this][chef_s113] := 15000000000000000000000000;
[L1094]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][chef_s113];
[L1115]  RET         call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1116]  COND FALSE  !(revert)
[L168]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L169]               assume !revert && gas >= 0;
[L2023]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2024]              assume !revert && gas >= 0;
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND TRUE   __exception
[L252]               __tmp__Balance := Balance;
[L253]               __tmp__DType := DType;
[L254]               __tmp__Alloc := Alloc;
[L255]               __tmp__balance_ADDR := balance_ADDR;
[L256]               __tmp__M_Ref_int := M_Ref_int;
[L257]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L258]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L259]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L260]               __tmp__sum_allowance1 := sum_allowance1;
[L261]               __tmp__Length := Length;
[L262]               __tmp__now := now;
[L263]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L264]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L265]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L266]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L267]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L268]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L269]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1149]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1150]              __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1151]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1152]              __ret_0_ := true;
[L269]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L270]               assume revert || gas < 0;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND TRUE   __exception
[L252]               __tmp__Balance := Balance;
[L253]               __tmp__DType := DType;
[L254]               __tmp__Alloc := Alloc;
[L255]               __tmp__balance_ADDR := balance_ADDR;
[L256]               __tmp__M_Ref_int := M_Ref_int;
[L257]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L258]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L259]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L260]               __tmp__sum_allowance1 := sum_allowance1;
[L261]               __tmp__Length := Length;
[L262]               __tmp__now := now;
[L263]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L264]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L265]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L266]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L267]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L268]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L269]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1149]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1150]              __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1151]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1152]              __ret_0_ := true;
[L269]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L270]               assume revert || gas < 0;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 04:15:05,001 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 04:15:05,001 INFO  L82        PathProgramCache]: Analyzing trace with hash -8618633, now seen corresponding path program 1 times
[2020-11-25 04:15:05,002 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 04:15:05,008 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 04:15:05,025 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 04:15:05,025 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 04:15:05,025 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 04:15:05,026 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 04:15:05,026 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 04:15:05,026 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 04:15:05,026 INFO  L87              Difference]: Start difference. First operand 1664 states and 1822 transitions. cyclomatic complexity: 162 Second operand 5 states.
[2020-11-25 04:15:05,195 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 04:15:05,195 INFO  L93              Difference]: Finished difference Result 2067 states and 2328 transitions.
[2020-11-25 04:15:05,195 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 04:15:05,195 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2067 states and 2328 transitions.
[2020-11-25 04:15:05,201 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 04:15:05,206 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2067 states to 1548 states and 1805 transitions.
[2020-11-25 04:15:05,207 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 367
[2020-11-25 04:15:05,207 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 367
[2020-11-25 04:15:05,207 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1548 states and 1805 transitions.
[2020-11-25 04:15:05,208 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 04:15:05,208 INFO  L728         BuchiCegarLoop]: Abstraction has 1548 states and 1805 transitions.
[2020-11-25 04:15:05,209 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1548 states and 1805 transitions.
[2020-11-25 04:15:05,218 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1548 to 1013.
[2020-11-25 04:15:05,218 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1013 states.
[2020-11-25 04:15:05,219 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1013 states to 1013 states and 1107 transitions.
[2020-11-25 04:15:05,219 INFO  L751         BuchiCegarLoop]: Abstraction has 1013 states and 1107 transitions.
[2020-11-25 04:15:05,219 INFO  L631         BuchiCegarLoop]: Abstraction has 1013 states and 1107 transitions.
[2020-11-25 04:15:05,219 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 04:15:05,219 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1013 states and 1107 transitions.
[2020-11-25 04:15:05,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 04:15:05,221 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 04:15:05,221 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 04:15:05,222 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 04:15:05,222 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiToken0 := false;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2017]              assume null == 0;
[L2018]  CALL        call this := FreshRefGenerator__success();
[L965]               havoc newRef;
[L966]               assume Alloc[newRef] == false;
[L967]               Alloc[newRef] := true;
[L968]               assume newRef != null;
[L2018]  RET         call this := FreshRefGenerator__success();
[L2019]              assume now >= 0;
[L2020]              assume DType[this] == SpaghettiToken;
[L2021]              assume msgvalue_MSG == 0;
[L2022]              gas := gas - 53000;
[L2023]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L168]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               assume msgsender_MSG != null;
[L983]               Balance[this] := 0;
[L997]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1112]  COND FALSE  !(revert)
[L1115]  CALL        call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_SpaghettiToken[this] := 0;
[L1083]              balanceOf_SpaghettiToken[this] := zeroRefintArr();
[L1084]              sum_balanceOf0[this] := 0;
[L1085]              allowance_SpaghettiToken[this] := zeroRefRefintArr();
[L1086]              sum_allowance1[this] := 0;
[L1087]              symbol_SpaghettiToken[this] := 2010503932;
[L1088]              decimals_SpaghettiToken[this] := 18;
[L1089]              name_SpaghettiToken[this] := 408148383;
[L1091]              totalSupply_SpaghettiToken[this] := 15000000000000000000000000;
[L1092]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][chef_s113];
[L1093]              balanceOf_SpaghettiToken[this][chef_s113] := 15000000000000000000000000;
[L1094]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][chef_s113];
[L1115]  RET         call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1116]  COND FALSE  !(revert)
[L168]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L169]               assume !revert && gas >= 0;
[L2023]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2024]              assume !revert && gas >= 0;
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND TRUE   choice == 4
[L1982]              gas := gas - 21000;
[L1983]  COND TRUE   gas >= 0
[L1984]              assume msgvalue_MSG == 0;
[L1985]  CALL        call __ret_0_approve := approve~address_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s149);
[L197]               havoc __exception;
[L198]               revert := false;
[L199]   COND FALSE  !(__exception)
[L220]   CALL        call __ret_0_ := approve~address_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s149);
[L1138]              __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1139]  CALL        call __var_1 := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s149, -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L1139]  RET         call __var_1 := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s149, -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1140]  COND FALSE  !(revert)
[L1143]              __ret_0_ := __var_1;
[L220]   RET         call __ret_0_ := approve~address_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s149);
[L221]               assume !revert && gas >= 0;
[L1985]  RET         call __ret_0_approve := approve~address_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s149);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2027]  CALL        call CorralChoice_SpaghettiToken(this);
[L1911]              havoc msgsender_MSG;
[L1912]              havoc msgvalue_MSG;
[L1913]              havoc choice;
[L1914]              havoc __ret_0_totalSupply;
[L1915]              havoc arg329_s0;
[L1916]              havoc __ret_0_balanceOf;
[L1917]              havoc arg330_s0;
[L1918]              havoc arg331_s0;
[L1919]              havoc __ret_0_allowance;
[L1920]              havoc __ret_0_symbol;
[L1921]              havoc __ret_0_decimals;
[L1922]              havoc __ret_0_name;
[L1923]              havoc chef_s113;
[L1924]              havoc guy_s149;
[L1925]              havoc __ret_0_approve;
[L1926]              havoc guy_s177;
[L1927]              havoc wad_s177;
[L1928]              havoc dst_s194;
[L1929]              havoc wad_s194;
[L1930]              havoc __ret_0_transfer;
[L1931]              havoc src_s309;
[L1932]              havoc dst_s309;
[L1933]              havoc wad_s309;
[L1934]              havoc __ret_0_transferFrom;
[L1935]              havoc tmpNow;
[L1936]              havoc gas;
[L1937]              assume gas > 4000000 && gas <= 8000000;
[L1938]              tmpNow := now;
[L1939]              havoc now;
[L1940]              assume now > tmpNow;
[L1941]              assume msgsender_MSG != null;
[L1942]              assume DType[msgsender_MSG] != DSMath;
[L1943]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1944]              Alloc[msgsender_MSG] := true;
[L1945]  COND FALSE  !(choice == 10)
[L1951]  COND FALSE  !(choice == 9)
[L1957]  COND FALSE  !(choice == 8)
[L1963]  COND FALSE  !(choice == 7)
[L1969]  COND FALSE  !(choice == 6)
[L1975]  COND FALSE  !(choice == 5)
[L1981]  COND FALSE  !(choice == 4)
[L1987]  COND TRUE   choice == 3
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume wad_s177 >= 0 && wad_s177 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s177;
[L3]                 call_approve_SpaghettiToken0 := true;
[L3]                 call_approve_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L1158]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1159]              allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] := wad_s177;
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiToken[this][msgsender_MSG][guy_s177];
[L1161]              assert { :EventEmitted "Approval_SpaghettiToken" } true;
[L1162]              __ret_0_ := true;
[L272]   RET         call __ret_0_ := approve~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L273]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][msgsender_MSG][guy_s177] == wad_s177) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, guy_s177, wad_s177);
[L2027]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 04:15:05,225 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 04:15:05,225 INFO  L82        PathProgramCache]: Analyzing trace with hash 1128295850, now seen corresponding path program 1 times
[2020-11-25 04:15:05,225 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 04:15:05,238 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 04:15:05,316 INFO  L134       CoverageAnalysis]: Checked inductivity of 43 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 43 trivial. 0 not checked.
[2020-11-25 04:15:05,316 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 04:15:05,316 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 04:15:05,317 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 04:15:05,317 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 04:15:05,317 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 04:15:05,317 INFO  L87              Difference]: Start difference. First operand 1013 states and 1107 transitions. cyclomatic complexity: 97 Second operand 7 states.
[2020-11-25 04:15:05,497 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 04:15:05,497 INFO  L93              Difference]: Finished difference Result 581 states and 630 transitions.
[2020-11-25 04:15:05,497 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 04:15:05,497 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 581 states and 630 transitions.
[2020-11-25 04:15:05,498 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 04:15:05,499 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 581 states to 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 04:15:05,499 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 04:15:05,499 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 04:15:05,499 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 04:15:05,499 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 04:15:05,499 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 04:15:05,499 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 04:15:05,502 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:15:05 BasicIcfg
[2020-11-25 04:15:05,502 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 04:15:05,503 INFO  L168              Benchmark]: Toolchain (without parser) took 4261.18 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 277.3 MB). Free memory was 945.9 MB in the beginning and 825.0 MB in the end (delta: 121.0 MB). Peak memory consumption was 398.3 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,503 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,504 INFO  L168              Benchmark]: Boogie Preprocessor took 69.93 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,504 INFO  L168              Benchmark]: UtopiaSpecLang took 47.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,504 INFO  L168              Benchmark]: Boogie Printer took 8.86 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,505 INFO  L168              Benchmark]: RCFGBuilder took 534.93 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,505 INFO  L168              Benchmark]: UtopiaLTL2Aut took 46.88 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,505 INFO  L168              Benchmark]: BÃ¼chi Program Product took 925.33 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 867.2 MB in the beginning and 922.1 MB in the end (delta: -54.9 MB). Peak memory consumption was 151.3 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,505 INFO  L168              Benchmark]: BlockEncodingV2 took 77.88 ms. Allocated memory is still 1.1 GB. Free memory was 922.1 MB in the beginning and 883.9 MB in the end (delta: 38.2 MB). Peak memory consumption was 38.2 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,506 INFO  L168              Benchmark]: BuchiAutomizer took 2547.46 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 217.1 MB). Free memory was 883.9 MB in the beginning and 825.0 MB in the end (delta: 58.9 MB). Peak memory consumption was 276.0 MB. Max. memory is 15.3 GB.
[2020-11-25 04:15:05,508 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1780 locations, 3022 edges
  - StatisticsResult: Encoded RCFG
    1742 locations, 2919 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 69.93 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.86 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 534.93 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 46.88 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 925.33 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 867.2 MB in the beginning and 922.1 MB in the end (delta: -54.9 MB). Peak memory consumption was 151.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 77.88 ms. Allocated memory is still 1.1 GB. Free memory was 922.1 MB in the beginning and 883.9 MB in the end (delta: 38.2 MB). Peak memory consumption was 38.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2547.46 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 217.1 MB). Free memory was 883.9 MB in the beginning and 825.0 MB in the end (delta: 58.9 MB). Peak memory consumption was 276.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    746 locations, 936 edges
  - StatisticsResult: BuchiProgram size
    1780 locations, 3022 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.5s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.2s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1003 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1664 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7099 SDtfs, 7661 SDslu, 10274 SDs, 0 SdLazy, 10727 SolverSat, 1522 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_SpaghettiToken0) ==> ( <>(success_approve_SpaghettiToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
