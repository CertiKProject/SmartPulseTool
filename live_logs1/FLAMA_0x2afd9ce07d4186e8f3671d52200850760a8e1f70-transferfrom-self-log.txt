This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:32:43,778 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:32:43,779 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:32:43,789 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:32:43,790 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:32:43,790 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:32:43,791 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:32:43,793 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:32:43,794 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:32:43,795 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:32:43,795 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:32:43,796 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:32:43,796 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:32:43,797 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:32:43,798 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:32:43,798 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:32:43,799 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:32:43,800 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:32:43,801 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:32:43,802 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:32:43,803 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:32:43,804 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:32:43,805 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:32:43,805 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:32:43,806 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:32:43,806 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:32:43,806 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:32:43,807 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:32:43,807 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:32:43,807 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:32:43,808 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:32:43,808 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:32:43,809 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:32:43,809 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:32:43,810 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:32:43,810 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:32:43,810 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:32:43,811 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:32:43,811 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:32:43,812 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:32:43,812 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:32:43,812 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:32:43,820 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:32:43,820 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:32:43,821 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:32:43,821 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:32:43,821 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:32:43,821 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:32:43,822 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:32:43,822 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:32:43,823 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:32:43,823 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:32:43,823 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:32:43,823 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:32:43,823 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:32:43,843 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:32:43,852 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:32:43,855 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:32:43,856 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:32:43,856 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:32:43,857 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl
[2020-11-25 16:32:43,857 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl'
[2020-11-25 16:32:43,926 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:32:43,927 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:32:43,927 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:32:43,927 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:32:43,927 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:32:43,943 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:43,945 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:43,978 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:43,978 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:43,995 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:44,002 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:44,007 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:44,015 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:32:44,016 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:32:44,016 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:32:44,018 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:32:44,021 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/1) ...
[2020-11-25 16:32:44,038 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(FLAMA.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_FLAMA[this][from] && value <= _allowed_FLAMA[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][from] >= 0 &&  _balances_FLAMA[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_FLAMA[this][from][msg.sender] >= 0 && _allowed_FLAMA[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transferFrom(from, to, value), return == true && _allowed_FLAMA[this][from][msg.sender] == old(_allowed_FLAMA[this][from][msg.sender]) - value && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:32:44,043 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(FLAMA.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_FLAMA[this][from] && value <= _allowed_FLAMA[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][from] >= 0 &&  _balances_FLAMA[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_FLAMA[this][from][msg.sender] >= 0 && _allowed_FLAMA[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transferFrom(from, to, value), return == true && _allowed_FLAMA[this][from][msg.sender] == old(_allowed_FLAMA[this][from][msg.sender]) - value && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:32:44,051 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(FLAMA.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_FLAMA[this][from] && value <= _allowed_FLAMA[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][from] >= 0 &&  _balances_FLAMA[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_FLAMA[this][from][msg.sender] >= 0 && _allowed_FLAMA[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transferFrom(from, to, value), return == true && _allowed_FLAMA[this][from][msg.sender] == old(_allowed_FLAMA[this][from][msg.sender]) - value && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:32:44,059 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s416 || p2!=msg.sender ) && from_s416==to_s416 ) && value_s416<=_balances_FLAMA[this][from_s416] ) && value_s416<=_allowed_FLAMA[this][from_s416][msg.sender] ) && value_s416>=0 ) && value_s416<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][to_s416]>=0 ) && _balances_FLAMA[this][to_s416]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][from_s416]>=0 ) && _balances_FLAMA[this][from_s416]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_FLAMA[this][from_s416][msg.sender]>=0 ) && _allowed_FLAMA[this][from_s416][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>],IdentifierExpression[to_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[to_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[to_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:32:44,062 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowed_FLAMA[this][from_s416][msg.sender]==( ( old(_allowed_FLAMA[this][from_s416][msg.sender]) ) - value_s416 ) ) && _totalSupply_FLAMA[this]==( old(_totalSupply_FLAMA[this]) ) ) && _balances_FLAMA[this]==( old(_balances_FLAMA[this]) ) ) && _allowed_FLAMA[this][p1][p2]==( old(_allowed_FLAMA[this][p1][p2]) ) ) && _name_FLAMA[this]==( old(_name_FLAMA[this]) ) ) && _symbol_FLAMA[this]==( old(_symbol_FLAMA[this]) ) ) && _decimals_FLAMA[this]==( old(_decimals_FLAMA[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_FLAMA>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[from_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]],IdentifierExpression[value_s416,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_FLAMA>]]]]]]
[2020-11-25 16:32:44,066 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(FLAMA.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_FLAMA[this][from] && value <= _allowed_FLAMA[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][from] >= 0 &&  _balances_FLAMA[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_FLAMA[this][from][msg.sender] >= 0 && _allowed_FLAMA[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transferFrom(from, to, value), return == true && _allowed_FLAMA[this][from][msg.sender] == old(_allowed_FLAMA[this][from][msg.sender]) - value && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:32:44,066 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_FLAMA0) ==> ( <>AP(success_transferFrom_FLAMA0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:32:44,076 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:32:44 PropertyContainer
[2020-11-25 16:32:44,076 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:32:44,076 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:32:44,076 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:32:44,077 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:32:44,078 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/2) ...
[2020-11-25 16:32:44,078 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:32:44,078 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:32:44,089 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:32:44" (2/2) ...
[2020-11-25 16:32:44,089 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:32:44,089 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:32:44,090 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:32:44,090 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:32:44,090 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/2) ...
[2020-11-25 16:32:44,145 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:32:44,145 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:32:44,145 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:32:44,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:32:44,145 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,145 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:32:44,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:32:44,146 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:32:44,147 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:32:44,147 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA
[2020-11-25 16:32:44,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA
[2020-11-25 16:32:44,147 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA_NoBaseCtor__success
[2020-11-25 16:32:44,148 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA
[2020-11-25 16:32:44,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA
[2020-11-25 16:32:44,148 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA
[2020-11-25 16:32:44,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA
[2020-11-25 16:32:44,148 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA
[2020-11-25 16:32:44,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA
[2020-11-25 16:32:44,148 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA
[2020-11-25 16:32:44,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA
[2020-11-25 16:32:44,148 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA
[2020-11-25 16:32:44,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA
[2020-11-25 16:32:44,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA
[2020-11-25 16:32:44,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_FLAMA__success
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FLAMA
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:32:44,150 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA__success
[2020-11-25 16:32:44,151 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA_NoBaseCtor__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA__success
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA__success
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA__success
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA__success
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__success
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__fail
[2020-11-25 16:32:44,152 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__fail
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__fail
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:32:44,153 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:32:44,154 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:32:44,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:32:44,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA__fail
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA_NoBaseCtor__fail
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA_NoBaseCtor__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA__fail
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA__fail
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA__success
[2020-11-25 16:32:44,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__success
[2020-11-25 16:32:44,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__success
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-25 16:32:44,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_FLAMA__fail
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_FLAMA__success
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FLAMA
[2020-11-25 16:32:44,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:32:44,160 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:32:44,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:32:44,336 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:32:44,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:32:44,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:32:44,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:32:44,683 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:32:44,683 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 16:32:44,685 INFO  L202        PluginConnector]: Adding new model FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:32:44 BoogieIcfgContainer
[2020-11-25 16:32:44,685 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:32:44" (2/2) ...
[2020-11-25 16:32:44,685 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:32:44,686 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7b0f4384 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:32:44, skipping insertion in model container
[2020-11-25 16:32:44,686 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:32:44,686 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:32:44,686 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:32:44,688 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:32:44,688 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/3) ...
[2020-11-25 16:32:44,688 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@e7396a9 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:32:44, skipping insertion in model container
[2020-11-25 16:32:44,688 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:32:44" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:32:44,727 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:32:44 NWAContainer
[2020-11-25 16:32:44,727 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:32:44,727 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:32:44,728 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:32:44,728 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:32:44,729 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:32:44" (3/4) ...
[2020-11-25 16:32:44,730 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@29fcb0f0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:32:44, skipping insertion in model container
[2020-11-25 16:32:44,730 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:32:44" (4/4) ...
[2020-11-25 16:32:44,733 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:32:44,736 INFO  L110   BuchiProductObserver]: Initial RCFG 962 locations, 1207 edges
[2020-11-25 16:32:44,736 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:32:44,749 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:32:45,624 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:32:45,627 INFO  L110   BuchiProductObserver]: BuchiProgram size 2308 locations, 3910 edges
[2020-11-25 16:32:45,627 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:32:45 BoogieIcfgContainer
[2020-11-25 16:32:45,627 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:32:45,627 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:32:45,627 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:32:45,629 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:32:45,629 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:32:45" (1/1) ...
[2020-11-25 16:32:45,678 INFO  L313           BlockEncoder]: Initial Icfg 2308 locations, 3910 edges
[2020-11-25 16:32:45,678 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:32:45,679 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:32:45,679 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:32:45,679 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:32:45,687 INFO  L70    emoveInfeasibleEdges]: Removed 42 edges and 9 locations because of local infeasibility
[2020-11-25 16:32:45,692 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 16:32:45,698 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:32:45,700 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:32:45,702 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:32:45,702 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:32:45,705 INFO  L313           BlockEncoder]: Encoded RCFG 2280 locations, 3840 edges
[2020-11-25 16:32:45,705 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:32:45 BasicIcfg
[2020-11-25 16:32:45,705 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:32:45,705 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:32:45,705 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:32:45,708 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:32:45,708 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,708 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:32:43" (1/6) ...
[2020-11-25 16:32:45,710 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@612419fe and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:32:45, skipping insertion in model container
[2020-11-25 16:32:45,710 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,710 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:32:44" (2/6) ...
[2020-11-25 16:32:45,710 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@612419fe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:32:45, skipping insertion in model container
[2020-11-25 16:32:45,710 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,710 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:32:44" (3/6) ...
[2020-11-25 16:32:45,710 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@612419fe and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:32:45, skipping insertion in model container
[2020-11-25 16:32:45,710 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,710 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:32:44" (4/6) ...
[2020-11-25 16:32:45,710 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@612419fe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:32:45, skipping insertion in model container
[2020-11-25 16:32:45,710 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,710 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:32:45" (5/6) ...
[2020-11-25 16:32:45,711 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@612419fe and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:32:45, skipping insertion in model container
[2020-11-25 16:32:45,711 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:32:45,711 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:32:45" (6/6) ...
[2020-11-25 16:32:45,712 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transferfrom-self.bpl_BEv2
[2020-11-25 16:32:45,745 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:32:45,745 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:32:45,745 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:32:45,745 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:32:45,745 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:32:45,745 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:32:45,746 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:32:45,746 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:32:45,746 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:32:45,766 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2280 states.
[2020-11-25 16:32:45,808 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:45,808 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:32:45,808 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:32:45,817 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:45,817 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:45,817 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:32:45,817 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2280 states.
[2020-11-25 16:32:45,829 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:45,829 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:32:45,829 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:32:45,831 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:45,831 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_FLAMA0 := false;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2581]              assume null == 0;
[L2582]  CALL        call this := FreshRefGenerator__success();
[L1183]              havoc newRef;
[L1184]              assume Alloc[newRef] == false;
[L1185]              Alloc[newRef] := true;
[L1186]              assume newRef != null;
[L2582]  RET         call this := FreshRefGenerator__success();
[L2583]              assume now >= 0;
[L2584]              assume DType[this] == FLAMA;
[L2585]              assume msgvalue_MSG == 0;
[L2586]              gas := gas - 53000;
[L2587]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L262]               havoc __exception;
[L263]               revert := false;
[L264]   COND FALSE  !(__exception)
[L285]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1453]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1356]              assume msgsender_MSG != null;
[L1357]              Balance[this] := 0;
[L1371]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1372]  COND FALSE  !(revert)
[L1453]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]  COND TRUE   revert
[L285]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L286]               assume !revert && gas >= 0;
[L2587]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2588]              assume !revert && gas >= 0;

Loop:
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND TRUE   choice == 12
[L2492]              gas := gas - 21000;
[L2493]  COND FALSE  !(gas >= 0)
[L2591]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:32:45,845 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:45,845 INFO  L82        PathProgramCache]: Analyzing trace with hash 451418603, now seen corresponding path program 1 times
[2020-11-25 16:32:45,849 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:45,868 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:32:45,912 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:32:45,914 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:32:45,914 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:32:45,919 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:32:46,033 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:32:46,034 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:32:46,036 INFO  L87              Difference]: Start difference. First operand 2280 states. Second operand 4 states.
[2020-11-25 16:32:46,354 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:32:46,355 INFO  L93              Difference]: Finished difference Result 1811 states and 2024 transitions.
[2020-11-25 16:32:46,355 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:32:46,357 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1811 states and 2024 transitions.
[2020-11-25 16:32:46,369 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:46,386 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1811 states to 1811 states and 2024 transitions.
[2020-11-25 16:32:46,387 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:32:46,389 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 528
[2020-11-25 16:32:46,390 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1811 states and 2024 transitions.
[2020-11-25 16:32:46,396 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:32:46,396 INFO  L728         BuchiCegarLoop]: Abstraction has 1811 states and 2024 transitions.
[2020-11-25 16:32:46,413 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1811 states and 2024 transitions.
[2020-11-25 16:32:46,452 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1811 to 1811.
[2020-11-25 16:32:46,453 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1811 states.
[2020-11-25 16:32:46,457 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1811 states to 1811 states and 2024 transitions.
[2020-11-25 16:32:46,458 INFO  L751         BuchiCegarLoop]: Abstraction has 1811 states and 2024 transitions.
[2020-11-25 16:32:46,458 INFO  L631         BuchiCegarLoop]: Abstraction has 1811 states and 2024 transitions.
[2020-11-25 16:32:46,458 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:32:46,458 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1811 states and 2024 transitions.
[2020-11-25 16:32:46,465 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:46,465 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:32:46,465 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:32:46,468 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:46,468 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_FLAMA0 := false;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2581]              assume null == 0;
[L2582]  CALL        call this := FreshRefGenerator__success();
[L1183]              havoc newRef;
[L1184]              assume Alloc[newRef] == false;
[L1185]              Alloc[newRef] := true;
[L1186]              assume newRef != null;
[L2582]  RET         call this := FreshRefGenerator__success();
[L2583]              assume now >= 0;
[L2584]              assume DType[this] == FLAMA;
[L2585]              assume msgvalue_MSG == 0;
[L2586]              gas := gas - 53000;
[L2587]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L262]               havoc __exception;
[L263]               revert := false;
[L264]   COND FALSE  !(__exception)
[L285]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1453]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1356]              assume msgsender_MSG != null;
[L1357]              Balance[this] := 0;
[L1371]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1372]  COND FALSE  !(revert)
[L1453]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]  COND TRUE   revert
[L285]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L286]               assume !revert && gas >= 0;
[L2587]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2588]              assume !revert && gas >= 0;
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L745]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1607]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1292]  COND TRUE   !(b_s82 <= a_s82)
[L1293]              revert := true;
[L1607]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1608]  COND TRUE   revert
[L745]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L746]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_FLAMA[this][from_s416][msgsender_MSG] == old(_allowed_FLAMA[this][from_s416][msgsender_MSG]) - value_s416) && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L3]                 revert := revert_hold;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L745]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1607]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1292]  COND TRUE   !(b_s82 <= a_s82)
[L1293]              revert := true;
[L1607]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1608]  COND TRUE   revert
[L745]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L746]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_FLAMA[this][from_s416][msgsender_MSG] == old(_allowed_FLAMA[this][from_s416][msgsender_MSG]) - value_s416) && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this][p1][p2] == old(_allowed_FLAMA[this][p1][p2])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L3]                 revert := revert_hold;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:32:46,472 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:46,472 INFO  L82        PathProgramCache]: Analyzing trace with hash 265108147, now seen corresponding path program 1 times
[2020-11-25 16:32:46,473 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:46,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:32:46,511 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:32:46,512 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:32:46,512 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:32:46,513 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:32:46,513 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:32:46,513 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:32:46,514 INFO  L87              Difference]: Start difference. First operand 1811 states and 2024 transitions. cyclomatic complexity: 215 Second operand 4 states.
[2020-11-25 16:32:46,869 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:32:46,869 INFO  L93              Difference]: Finished difference Result 2713 states and 3084 transitions.
[2020-11-25 16:32:46,870 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:32:46,870 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2713 states and 3084 transitions.
[2020-11-25 16:32:46,881 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:32:46,892 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2713 states to 2567 states and 2916 transitions.
[2020-11-25 16:32:46,892 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 729
[2020-11-25 16:32:46,894 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 750
[2020-11-25 16:32:46,894 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2567 states and 2916 transitions.
[2020-11-25 16:32:46,897 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:32:46,898 INFO  L728         BuchiCegarLoop]: Abstraction has 2567 states and 2916 transitions.
[2020-11-25 16:32:46,899 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2567 states and 2916 transitions.
[2020-11-25 16:32:46,919 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2567 to 1873.
[2020-11-25 16:32:46,920 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1873 states.
[2020-11-25 16:32:46,922 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1873 states to 1873 states and 2022 transitions.
[2020-11-25 16:32:46,922 INFO  L751         BuchiCegarLoop]: Abstraction has 1873 states and 2022 transitions.
[2020-11-25 16:32:46,923 INFO  L631         BuchiCegarLoop]: Abstraction has 1873 states and 2022 transitions.
[2020-11-25 16:32:46,923 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:32:46,923 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1873 states and 2022 transitions.
[2020-11-25 16:32:46,926 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:46,926 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:32:46,926 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:32:46,928 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:46,928 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_FLAMA0 := false;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2581]              assume null == 0;
[L2582]  CALL        call this := FreshRefGenerator__success();
[L1183]              havoc newRef;
[L1184]              assume Alloc[newRef] == false;
[L1185]              Alloc[newRef] := true;
[L1186]              assume newRef != null;
[L2582]  RET         call this := FreshRefGenerator__success();
[L2583]              assume now >= 0;
[L2584]              assume DType[this] == FLAMA;
[L2585]              assume msgvalue_MSG == 0;
[L2586]              gas := gas - 53000;
[L2587]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L262]               havoc __exception;
[L263]               revert := false;
[L264]   COND FALSE  !(__exception)
[L285]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1453]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1356]              assume msgsender_MSG != null;
[L1357]              Balance[this] := 0;
[L1371]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1372]  COND FALSE  !(revert)
[L1453]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]  COND FALSE  !(revert)
[L1457]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1419]              assume msgsender_MSG != null;
[L1420]              Balance[this] := 0;
[L1421]              _name_FLAMA[this] := 965843050;
[L1422]              _symbol_FLAMA[this] := 965843050;
[L1423]              _decimals_FLAMA[this] := 0;
[L1424]              _totalSupply_FLAMA[this] := 0;
[L1425]              _balances_FLAMA[this] := zeroRefintArr();
[L1426]              sum__balances0[this] := 0;
[L1427]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1428]              sum__allowed1[this] := 0;
[L1430]              _name_FLAMA[this] := name_s264;
[L1431]              _symbol_FLAMA[this] := symbol_s264;
[L1432]              _decimals_FLAMA[this] := decimals_s264;
[L1433]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1434]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1435]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1436]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1457]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1458]  COND FALSE  !(revert)
[L285]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L286]               assume !revert && gas >= 0;
[L2587]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2588]              assume !revert && gas >= 0;
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND TRUE   !(b_s82 <= a_s82)
[L1281]              revert := true;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND TRUE   !(b_s82 <= a_s82)
[L1281]              revert := true;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:32:46,931 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:46,931 INFO  L82        PathProgramCache]: Analyzing trace with hash 1840571985, now seen corresponding path program 1 times
[2020-11-25 16:32:46,932 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:46,944 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:32:46,997 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:32:46,998 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:32:46,998 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:32:46,999 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:32:46,999 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:32:46,999 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:32:46,999 INFO  L87              Difference]: Start difference. First operand 1873 states and 2022 transitions. cyclomatic complexity: 151 Second operand 7 states.
[2020-11-25 16:32:47,871 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:32:47,871 INFO  L93              Difference]: Finished difference Result 2027 states and 2190 transitions.
[2020-11-25 16:32:47,873 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 16:32:47,873 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2027 states and 2190 transitions.
[2020-11-25 16:32:47,883 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:32:47,895 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2027 states to 2027 states and 2190 transitions.
[2020-11-25 16:32:47,895 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 618
[2020-11-25 16:32:47,896 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 618
[2020-11-25 16:32:47,896 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2027 states and 2190 transitions.
[2020-11-25 16:32:47,899 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:32:47,899 INFO  L728         BuchiCegarLoop]: Abstraction has 2027 states and 2190 transitions.
[2020-11-25 16:32:47,901 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2027 states and 2190 transitions.
[2020-11-25 16:32:47,924 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2027 to 1925.
[2020-11-25 16:32:47,924 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1925 states.
[2020-11-25 16:32:47,927 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1925 states to 1925 states and 2078 transitions.
[2020-11-25 16:32:47,927 INFO  L751         BuchiCegarLoop]: Abstraction has 1925 states and 2078 transitions.
[2020-11-25 16:32:47,927 INFO  L631         BuchiCegarLoop]: Abstraction has 1925 states and 2078 transitions.
[2020-11-25 16:32:47,927 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:32:47,927 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1925 states and 2078 transitions.
[2020-11-25 16:32:47,932 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:32:47,933 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:32:47,933 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:32:47,936 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:32:47,936 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_FLAMA0 := false;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2581]              assume null == 0;
[L2582]  CALL        call this := FreshRefGenerator__success();
[L1183]              havoc newRef;
[L1184]              assume Alloc[newRef] == false;
[L1185]              Alloc[newRef] := true;
[L1186]              assume newRef != null;
[L2582]  RET         call this := FreshRefGenerator__success();
[L2583]              assume now >= 0;
[L2584]              assume DType[this] == FLAMA;
[L2585]              assume msgvalue_MSG == 0;
[L2586]              gas := gas - 53000;
[L2587]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L262]               havoc __exception;
[L263]               revert := false;
[L264]   COND FALSE  !(__exception)
[L285]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1453]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1356]              assume msgsender_MSG != null;
[L1357]              Balance[this] := 0;
[L1371]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1372]  COND FALSE  !(revert)
[L1453]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]  COND FALSE  !(revert)
[L1457]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1419]              assume msgsender_MSG != null;
[L1420]              Balance[this] := 0;
[L1421]              _name_FLAMA[this] := 965843050;
[L1422]              _symbol_FLAMA[this] := 965843050;
[L1423]              _decimals_FLAMA[this] := 0;
[L1424]              _totalSupply_FLAMA[this] := 0;
[L1425]              _balances_FLAMA[this] := zeroRefintArr();
[L1426]              sum__balances0[this] := 0;
[L1427]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1428]              sum__allowed1[this] := 0;
[L1430]              _name_FLAMA[this] := name_s264;
[L1431]              _symbol_FLAMA[this] := symbol_s264;
[L1432]              _decimals_FLAMA[this] := decimals_s264;
[L1433]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1434]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1435]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1436]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1457]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1458]  COND FALSE  !(revert)
[L285]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L286]               assume !revert && gas >= 0;
[L2587]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2588]              assume !revert && gas >= 0;
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND FALSE  !(!(b_s82 <= a_s82))
[L1284]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1285]              __ret_0_ := c_s82;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND FALSE  !(revert)
[L1593]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] - __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1594]              __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG] := __var_2;
[L1595]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] + __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1596]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1713]              __var_7 := null;
[L1714]  COND TRUE   !(to_s598 != null)
[L1715]              revert := true;
[L1596]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1597]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2591]  CALL        call CorralChoice_FLAMA(this);
[L2447]              havoc msgsender_MSG;
[L2448]              havoc msgvalue_MSG;
[L2449]              havoc choice;
[L2450]              havoc __ret_0_totalSupply;
[L2451]              havoc owner_s308;
[L2452]              havoc __ret_0_balanceOf;
[L2453]              havoc owner_s324;
[L2454]              havoc spender_s324;
[L2455]              havoc __ret_0_allowance;
[L2456]              havoc to_s343;
[L2457]              havoc value_s343;
[L2458]              havoc __ret_0_transfer;
[L2459]              havoc spender_s379;
[L2460]              havoc value_s379;
[L2461]              havoc __ret_0_approve;
[L2462]              havoc from_s416;
[L2463]              havoc to_s416;
[L2464]              havoc value_s416;
[L2465]              havoc __ret_0_transferFrom;
[L2466]              havoc value_s229;
[L2467]              havoc name_s264;
[L2468]              havoc symbol_s264;
[L2469]              havoc decimals_s264;
[L2470]              havoc totalSupply_s264;
[L2471]              havoc __ret_0_name;
[L2472]              havoc __ret_0_symbol;
[L2473]              havoc __ret_0_decimals;
[L2474]              havoc spender_s466;
[L2475]              havoc addedValue_s466;
[L2476]              havoc __ret_0_increaseAllowance;
[L2477]              havoc spender_s516;
[L2478]              havoc subtractedValue_s516;
[L2479]              havoc __ret_0_decreaseAllowance;
[L2480]              havoc tmpNow;
[L2481]              havoc gas;
[L2482]              assume gas > 4000000 && gas <= 8000000;
[L2483]              tmpNow := now;
[L2484]              havoc now;
[L2485]              assume now > tmpNow;
[L2486]              assume msgsender_MSG != null;
[L2487]              assume DType[msgsender_MSG] != SafeMath;
[L2488]              assume DType[msgsender_MSG] != IERC20;
[L2489]              assume DType[msgsender_MSG] != FLAMA;
[L2490]              Alloc[msgsender_MSG] := true;
[L2491]  COND FALSE  !(choice == 12)
[L2497]  COND FALSE  !(choice == 11)
[L2503]  COND FALSE  !(choice == 10)
[L2509]  COND FALSE  !(choice == 9)
[L2516]  COND FALSE  !(choice == 8)
[L2523]  COND TRUE   choice == 7
[L2524]              gas := gas - 21000;
[L2525]  COND TRUE   gas >= 0
[L2526]              assume value_s416 >= 0 && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2527]              assume msgvalue_MSG == 0;
[L2528]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND FALSE  !(!(b_s82 <= a_s82))
[L1284]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1285]              __ret_0_ := c_s82;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND FALSE  !(revert)
[L1593]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] - __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1594]              __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG] := __var_2;
[L1595]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] + __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1596]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1713]              __var_7 := null;
[L1714]  COND TRUE   !(to_s598 != null)
[L1715]              revert := true;
[L1596]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1597]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L2591]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:32:47,939 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:47,939 INFO  L82        PathProgramCache]: Analyzing trace with hash -93860986, now seen corresponding path program 1 times
[2020-11-25 16:32:47,940 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:47,954 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:32:47,972 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:32:48,031 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:48,032 INFO  L82        PathProgramCache]: Analyzing trace with hash -1549300286, now seen corresponding path program 1 times
[2020-11-25 16:32:48,032 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:48,040 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:32:48,047 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:32:48,062 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:32:48,062 INFO  L82        PathProgramCache]: Analyzing trace with hash -824765603, now seen corresponding path program 1 times
[2020-11-25 16:32:48,063 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:32:48,083 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:32:48,105 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 16:32:48,667 WARN  L188               SmtUtils]: Spent 273.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 16:32:48,951 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-25 16:32:49,207 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification that was a NOOP. DAG size: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 16:32:50,100 WARN  L188               SmtUtils]: Spent 876.00 ms on a formula simplification. DAG size of input: 211 DAG size of output: 211
[2020-11-25 16:32:51,021 WARN  L188               SmtUtils]: Spent 917.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 245
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 10559 to 21107
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 16:32:51,285 WARN  L188               SmtUtils]: Spent 236.00 ms on a formula simplification. DAG size of input: 154 DAG size of output: 148
[2020-11-25 16:32:51,484 WARN  L188               SmtUtils]: Spent 197.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 16:32:52,002 WARN  L188               SmtUtils]: Spent 511.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 228
[2020-11-25 16:32:52,248 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification that was a NOOP. DAG size: 228
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 16:32:54,255 WARN  L188               SmtUtils]: Spent 1.99 s on a formula simplification. DAG size of input: 185 DAG size of output: 162
[2020-11-25 16:32:54,266 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 16:32:54,601 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 16:32:54,731 WARN  L188               SmtUtils]: Spent 121.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-25 16:32:54,870 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
[2020-11-25 16:32:55,593 WARN  L188               SmtUtils]: Spent 717.00 ms on a formula simplification. DAG size of input: 211 DAG size of output: 211
[2020-11-25 16:32:56,582 WARN  L188               SmtUtils]: Spent 986.00 ms on a formula simplification. DAG size of input: 263 DAG size of output: 245
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 16:32:57,307 WARN  L188               SmtUtils]: Spent 710.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 170
[2020-11-25 16:32:57,864 WARN  L188               SmtUtils]: Spent 556.00 ms on a formula simplification that was a NOOP. DAG size: 309
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 16:32:58,785 WARN  L188               SmtUtils]: Spent 901.00 ms on a formula simplification. DAG size of input: 268 DAG size of output: 235
[2020-11-25 16:32:59,753 WARN  L188               SmtUtils]: Spent 965.00 ms on a formula simplification. DAG size of input: 407 DAG size of output: 396
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 16:33:00,055 WARN  L188               SmtUtils]: Spent 282.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 175
[2020-11-25 16:33:00,241 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 16:33:00,465 WARN  L188               SmtUtils]: Spent 219.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 172
[2020-11-25 16:33:00,811 WARN  L188               SmtUtils]: Spent 345.00 ms on a formula simplification. DAG size of input: 267 DAG size of output: 266
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 16:33:02,653 WARN  L188               SmtUtils]: Spent 1.84 s on a formula simplification. DAG size of input: 297 DAG size of output: 279
[2020-11-25 16:33:02,672 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:33:02,691 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:33:02,699 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:33:02 BasicIcfg
[2020-11-25 16:33:02,699 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:33:02,699 INFO  L168              Benchmark]: Toolchain (without parser) took 18773.37 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 945.9 MB in the beginning and 2.2 GB in the end (delta: -1.3 GB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,700 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,700 INFO  L168              Benchmark]: Boogie Preprocessor took 88.24 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,700 INFO  L168              Benchmark]: UtopiaSpecLang took 60.52 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,701 INFO  L168              Benchmark]: Boogie Printer took 12.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,701 INFO  L168              Benchmark]: RCFGBuilder took 596.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,701 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.46 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,701 INFO  L168              Benchmark]: BÃ¼chi Program Product took 899.57 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 856.5 MB in the beginning and 855.4 MB in the end (delta: 1.1 MB). Peak memory consumption was 141.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,702 INFO  L168              Benchmark]: BlockEncodingV2 took 77.86 ms. Allocated memory is still 1.1 GB. Free memory was 855.4 MB in the beginning and 814.0 MB in the end (delta: 41.4 MB). Peak memory consumption was 41.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,702 INFO  L168              Benchmark]: BuchiAutomizer took 16993.70 ms. Allocated memory was 1.1 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 814.0 MB in the beginning and 2.2 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 16:33:02,704 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2308 locations, 3910 edges
  - StatisticsResult: Encoded RCFG
    2280 locations, 3840 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 88.24 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.52 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 596.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.46 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 899.57 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 856.5 MB in the beginning and 855.4 MB in the end (delta: 1.1 MB). Peak memory consumption was 141.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 77.86 ms. Allocated memory is still 1.1 GB. Free memory was 855.4 MB in the beginning and 814.0 MB in the end (delta: 41.4 MB). Peak memory consumption was 41.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 16993.70 ms. Allocated memory was 1.1 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 814.0 MB in the beginning and 2.2 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    962 locations, 1207 edges
  - StatisticsResult: BuchiProgram size
    2308 locations, 3910 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 1925 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 16.9s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 14.9s. Construction of modules took 1.2s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 796 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1925 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6439 SDtfs, 6220 SDslu, 8722 SDs, 0 SdLazy, 4690 SolverSat, 1279 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(965843065) = (new FLAMA)({from : 965843062, name : 965843057, symbol : 965843058, decimals : 965843067, totalSupply : (- 1)});
[L262]               havoc __exception;
[L263]               revert := false;
[L264]   COND FALSE  !(__exception)
[L285]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1453]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1356]              assume msgsender_MSG != null;
[L1357]              Balance[this] := 0;
[L1371]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1372]  COND FALSE  !(revert)
[L1453]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]  COND FALSE  !(revert)
[L1457]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1419]              assume msgsender_MSG != null;
[L1420]              Balance[this] := 0;
[L1421]              _name_FLAMA[this] := 965843050;
[L1422]              _symbol_FLAMA[this] := 965843050;
[L1423]              _decimals_FLAMA[this] := 0;
[L1424]              _totalSupply_FLAMA[this] := 0;
[L1425]              _balances_FLAMA[this] := zeroRefintArr();
[L1426]              sum__balances0[this] := 0;
[L1427]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1428]              sum__allowed1[this] := 0;
[L1430]              _name_FLAMA[this] := name_s264;
[L1431]              _symbol_FLAMA[this] := symbol_s264;
[L1432]              _decimals_FLAMA[this] := decimals_s264;
[L1433]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1434]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1435]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1436]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1457]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1458]  COND FALSE  !(revert)
[L285]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L286]               assume !revert && gas >= 0;
[L2587]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
FLAMA(965843065).transferFrom~address~address~uint256.gas(3979002)({from : 965843051, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND FALSE  !(!(b_s82 <= a_s82))
[L1284]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1285]              __ret_0_ := c_s82;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND FALSE  !(revert)
[L1593]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] - __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1594]              __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG] := __var_2;
[L1595]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] + __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1596]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1713]              __var_7 := null;
[L1714]  COND TRUE   !(to_s598 != null)
[L1715]              revert := true;
[L1596]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1597]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);

Loop:
FLAMA(965843065).transferFrom~address~address~uint256.gas(3979001)({from : 965843051, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s416 || p2 != msgsender_MSG) && from_s416 == to_s416) && value_s416 <= _balances_FLAMA[this][from_s416]) && value_s416 <= _allowed_FLAMA[this][from_s416][msgsender_MSG]) && value_s416 >= 0) && value_s416 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s416] >= 0) && _balances_FLAMA[this][to_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][from_s416] >= 0) && _balances_FLAMA[this][from_s416] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_FLAMA[this][from_s416][msgsender_MSG] >= 0) && _allowed_FLAMA[this][from_s416][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_FLAMA0 := true;
[L3]                 call_transferFrom_FLAMA0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp___name_FLAMA := _name_FLAMA;
[L737]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L738]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L739]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L740]               __tmp___balances_FLAMA := _balances_FLAMA;
[L741]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L742]   CALL        call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1589]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1280]  COND FALSE  !(!(b_s82 <= a_s82))
[L1284]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1285]              __ret_0_ := c_s82;
[L1589]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG], value_s416);
[L1590]  COND FALSE  !(revert)
[L1593]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] - __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1594]              __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG] := __var_2;
[L1595]              __tmp__sum__allowed1[from_s416] := __tmp__sum__allowed1[from_s416] + __tmp___allowed_FLAMA[this][from_s416][msgsender_MSG];
[L1596]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1713]              __var_7 := null;
[L1714]  COND TRUE   !(to_s598 != null)
[L1715]              revert := true;
[L1596]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L1597]  COND TRUE   revert
[L742]   RET         call __ret_0_ := transferFrom~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);
[L743]               assume revert || gas < 0;
[L2528]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, from_s416, to_s416, value_s416);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
