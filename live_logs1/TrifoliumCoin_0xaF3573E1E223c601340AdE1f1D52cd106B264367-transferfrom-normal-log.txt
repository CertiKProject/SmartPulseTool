This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:21:42,813 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:21:42,815 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:21:42,825 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:21:42,825 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:21:42,826 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:21:42,827 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:21:42,829 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:21:42,830 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:21:42,831 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:21:42,831 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:21:42,832 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:21:42,833 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:21:42,834 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:21:42,835 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:21:42,835 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:21:42,836 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:21:42,837 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:21:42,839 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:21:42,840 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:21:42,841 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:21:42,841 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:21:42,843 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:21:42,843 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:21:42,843 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:21:42,844 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:21:42,844 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:21:42,845 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:21:42,845 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:21:42,845 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:21:42,846 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:21:42,846 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:21:42,847 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:21:42,847 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:21:42,848 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:21:42,848 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:21:42,849 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:21:42,849 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:21:42,849 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:21:42,850 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:21:42,850 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:21:42,851 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:21:42,858 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:21:42,859 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:21:42,859 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:21:42,860 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:21:42,860 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:21:42,860 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:21:42,861 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:21:42,861 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:21:42,862 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:21:42,862 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:21:42,862 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:21:42,862 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:21:42,885 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:21:42,898 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:21:42,901 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:21:42,902 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:21:42,903 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:21:42,903 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl
[2020-11-25 06:21:42,903 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl'
[2020-11-25 06:21:42,999 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:21:43,000 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:21:43,001 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:21:43,001 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:21:43,001 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:21:43,018 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,019 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,054 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,055 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,081 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,095 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,105 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,114 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:21:43,115 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:21:43,115 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:21:43,117 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:21:43,121 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/1) ...
[2020-11-25 06:21:43,142 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TrifoliumCoin.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && balances_TrifoliumCoin[this][from] == old(balances_TrifoliumCoin[this][from]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:21:43,148 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TrifoliumCoin.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && balances_TrifoliumCoin[this][from] == old(balances_TrifoliumCoin[this][from]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:21:43,156 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TrifoliumCoin.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && balances_TrifoliumCoin[this][from] == old(balances_TrifoliumCoin[this][from]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:21:43,165 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s458 && p1!=to_s458 ) && ( p2!=from_s458 || p3!=msg.sender ) ) && from_s458!=to_s458 ) && tokens_s458<=balances_TrifoliumCoin[this][from_s458] ) && tokens_s458<=allowed_TrifoliumCoin[this][from_s458][msg.sender] ) && ( balances_TrifoliumCoin[this][to_s458] + tokens_s458 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s458>=0 ) && tokens_s458<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][to_s458]>=0 ) && balances_TrifoliumCoin[this][to_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][from_s458]>=0 ) && balances_TrifoliumCoin[this][from_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_TrifoliumCoin[this][from_s458][msg.sender]>=0 ) && allowed_TrifoliumCoin[this][from_s458][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:21:43,169 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s458==true && balances_TrifoliumCoin[this][from_s458]==( ( old(balances_TrifoliumCoin[this][from_s458]) ) - tokens_s458 ) ) && balances_TrifoliumCoin[this][to_s458]==( ( old(balances_TrifoliumCoin[this][to_s458]) ) + tokens_s458 ) ) && allowed_TrifoliumCoin[this][from_s458][msg.sender]==( ( old(allowed_TrifoliumCoin[this][from_s458][msg.sender]) ) - tokens_s458 ) ) && _totalSupply_TrifoliumCoin[this]==( old(_totalSupply_TrifoliumCoin[this]) ) ) && balances_TrifoliumCoin[this][p1]==( old(balances_TrifoliumCoin[this][p1]) ) ) && allowed_TrifoliumCoin[this][p2][p3]==( old(allowed_TrifoliumCoin[this][p2][p3]) ) ) && symbol_TrifoliumCoin[this]==( old(symbol_TrifoliumCoin[this]) ) ) && name_TrifoliumCoin[this]==( old(name_TrifoliumCoin[this]) ) ) && decimals_TrifoliumCoin[this]==( old(decimals_TrifoliumCoin[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s458,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]]
[2020-11-25 06:21:43,174 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TrifoliumCoin.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && balances_TrifoliumCoin[this][from] == old(balances_TrifoliumCoin[this][from]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:21:43,174 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TrifoliumCoin0) ==> ( <>AP(success_transferFrom_TrifoliumCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:21:43,182 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:21:43 PropertyContainer
[2020-11-25 06:21:43,182 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:21:43,183 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:21:43,183 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:21:43,183 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:21:43,184 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/2) ...
[2020-11-25 06:21:43,184 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:21:43,184 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:21:43,198 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:21:43" (2/2) ...
[2020-11-25 06:21:43,199 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:21:43,199 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:21:43,199 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:21:43,199 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:21:43,200 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/2) ...
[2020-11-25 06:21:43,254 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:21:43,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:21:43,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:21:43,254 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:21:43,254 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:21:43,254 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:21:43,255 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:21:43,255 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 06:21:43,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:21:43,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 06:21:43,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 06:21:43,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 06:21:43,257 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 06:21:43,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 06:21:43,258 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 06:21:43,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 06:21:43,258 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 06:21:43,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 06:21:43,258 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:21:43,258 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:21:43,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:21:43,258 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:21:43,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,259 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:21:43,260 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin
[2020-11-25 06:21:43,260 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 06:21:43,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 06:21:43,262 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,263 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:21:43,264 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 06:21:43,265 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:21:43,266 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:21:43,267 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__success
[2020-11-25 06:21:43,268 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:21:43,269 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 06:21:43,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:21:43,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:21:43,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:21:43,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:21:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:21:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:21:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:21:43,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:21:43,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:21:43,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:21:43,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:21:43,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:21:43,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:21:43,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:21:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:21:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:21:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:21:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:21:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 06:21:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 06:21:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:21:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 06:21:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 06:21:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 06:21:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 06:21:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 06:21:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 06:21:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 06:21:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:21:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:21:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:21:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:21:43,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:21:43,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:21:43,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:21:43,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:21:43,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__fail
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:21:43,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 06:21:43,282 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:21:43,283 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:21:43,283 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:21:43,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:21:43,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:21:43,605 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:21:43,695 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:21:43,953 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:21:43,953 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 06:21:43,955 INFO  L202        PluginConnector]: Adding new model TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:21:43 BoogieIcfgContainer
[2020-11-25 06:21:43,955 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:21:43" (2/2) ...
[2020-11-25 06:21:43,955 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:21:43,955 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6be14d23 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:21:43, skipping insertion in model container
[2020-11-25 06:21:43,955 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:21:43,956 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:21:43,956 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:21:43,957 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:21:43,957 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/3) ...
[2020-11-25 06:21:43,957 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4fdb25ba and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:21:43, skipping insertion in model container
[2020-11-25 06:21:43,958 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:21:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:21:43,991 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:21:43 NWAContainer
[2020-11-25 06:21:43,992 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:21:43,992 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:21:43,992 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:21:43,993 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:21:43,993 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:21:43" (3/4) ...
[2020-11-25 06:21:43,994 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1f50c974 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:21:43, skipping insertion in model container
[2020-11-25 06:21:43,994 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:21:43" (4/4) ...
[2020-11-25 06:21:43,997 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:21:44,001 INFO  L110   BuchiProductObserver]: Initial RCFG 1566 locations, 1978 edges
[2020-11-25 06:21:44,001 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:21:44,012 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:21:45,460 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:21:45,465 INFO  L110   BuchiProductObserver]: BuchiProgram size 3724 locations, 6408 edges
[2020-11-25 06:21:45,465 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:21:45 BoogieIcfgContainer
[2020-11-25 06:21:45,465 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:21:45,466 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:21:45,466 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:21:45,467 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:21:45,468 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:21:45" (1/1) ...
[2020-11-25 06:21:45,552 INFO  L313           BlockEncoder]: Initial Icfg 3724 locations, 6408 edges
[2020-11-25 06:21:45,552 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:21:45,553 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:21:45,553 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:21:45,553 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:21:45,566 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 06:21:45,579 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 06:21:45,595 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:21:45,599 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:21:45,603 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:21:45,604 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:21:45,610 INFO  L313           BlockEncoder]: Encoded RCFG 3664 locations, 6248 edges
[2020-11-25 06:21:45,610 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:21:45 BasicIcfg
[2020-11-25 06:21:45,611 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:21:45,611 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:21:45,611 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:21:45,614 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:21:45,614 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,614 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:21:42" (1/6) ...
[2020-11-25 06:21:45,617 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fd51aeb and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:21:45, skipping insertion in model container
[2020-11-25 06:21:45,617 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,617 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:21:43" (2/6) ...
[2020-11-25 06:21:45,617 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fd51aeb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:21:45, skipping insertion in model container
[2020-11-25 06:21:45,617 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,617 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:21:43" (3/6) ...
[2020-11-25 06:21:45,618 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fd51aeb and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:21:45, skipping insertion in model container
[2020-11-25 06:21:45,618 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,618 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:21:43" (4/6) ...
[2020-11-25 06:21:45,618 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fd51aeb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:21:45, skipping insertion in model container
[2020-11-25 06:21:45,618 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,618 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:21:45" (5/6) ...
[2020-11-25 06:21:45,618 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fd51aeb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:21:45, skipping insertion in model container
[2020-11-25 06:21:45,618 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:21:45,618 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:21:45" (6/6) ...
[2020-11-25 06:21:45,620 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-normal.bpl_BEv2
[2020-11-25 06:21:45,660 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:21:45,660 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:21:45,660 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:21:45,660 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:21:45,660 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:21:45,660 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:21:45,661 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:21:45,661 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:21:45,661 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:21:45,700 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3664 states.
[2020-11-25 06:21:45,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:45,755 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:45,755 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:45,765 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:45,765 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:45,765 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:21:45,765 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3664 states.
[2020-11-25 06:21:45,787 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:45,787 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:45,788 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:45,790 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:45,790 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:45,807 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:45,807 INFO  L82        PathProgramCache]: Analyzing trace with hash 268295708, now seen corresponding path program 1 times
[2020-11-25 06:21:45,811 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:45,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:45,872 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:21:45,874 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:45,874 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:21:46,074 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:46,085 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:21:46,086 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:21:46,087 INFO  L87              Difference]: Start difference. First operand 3664 states. Second operand 4 states.
[2020-11-25 06:21:46,987 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:46,987 INFO  L93              Difference]: Finished difference Result 3930 states and 6339 transitions.
[2020-11-25 06:21:46,987 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:21:46,989 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3930 states and 6339 transitions.
[2020-11-25 06:21:47,014 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 06:21:47,049 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3930 states to 3810 states and 6164 transitions.
[2020-11-25 06:21:47,050 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 06:21:47,054 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1383
[2020-11-25 06:21:47,055 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3810 states and 6164 transitions.
[2020-11-25 06:21:47,068 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:47,068 INFO  L728         BuchiCegarLoop]: Abstraction has 3810 states and 6164 transitions.
[2020-11-25 06:21:47,085 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3810 states and 6164 transitions.
[2020-11-25 06:21:47,142 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3810 to 2746.
[2020-11-25 06:21:47,142 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2746 states.
[2020-11-25 06:21:47,149 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2746 states to 2746 states and 4193 transitions.
[2020-11-25 06:21:47,150 INFO  L751         BuchiCegarLoop]: Abstraction has 2746 states and 4193 transitions.
[2020-11-25 06:21:47,150 INFO  L631         BuchiCegarLoop]: Abstraction has 2746 states and 4193 transitions.
[2020-11-25 06:21:47,150 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:21:47,150 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2746 states and 4193 transitions.
[2020-11-25 06:21:47,157 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:47,157 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:47,157 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:47,158 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:47,158 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:47,161 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:47,161 INFO  L82        PathProgramCache]: Analyzing trace with hash 2139976137, now seen corresponding path program 1 times
[2020-11-25 06:21:47,162 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:47,168 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:47,192 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:21:47,192 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:47,192 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:21:47,193 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:47,193 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:21:47,193 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:21:47,194 INFO  L87              Difference]: Start difference. First operand 2746 states and 4193 transitions. cyclomatic complexity: 1449 Second operand 4 states.
[2020-11-25 06:21:47,723 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:47,723 INFO  L93              Difference]: Finished difference Result 2553 states and 2738 transitions.
[2020-11-25 06:21:47,723 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:21:47,724 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2553 states and 2738 transitions.
[2020-11-25 06:21:47,732 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:47,739 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2553 states to 2553 states and 2738 transitions.
[2020-11-25 06:21:47,739 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 880
[2020-11-25 06:21:47,739 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 880
[2020-11-25 06:21:47,739 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2553 states and 2738 transitions.
[2020-11-25 06:21:47,741 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:47,741 INFO  L728         BuchiCegarLoop]: Abstraction has 2553 states and 2738 transitions.
[2020-11-25 06:21:47,744 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2553 states and 2738 transitions.
[2020-11-25 06:21:47,761 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2553 to 2553.
[2020-11-25 06:21:47,761 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2553 states.
[2020-11-25 06:21:47,764 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2553 states to 2553 states and 2738 transitions.
[2020-11-25 06:21:47,764 INFO  L751         BuchiCegarLoop]: Abstraction has 2553 states and 2738 transitions.
[2020-11-25 06:21:47,764 INFO  L631         BuchiCegarLoop]: Abstraction has 2553 states and 2738 transitions.
[2020-11-25 06:21:47,764 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:21:47,764 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2553 states and 2738 transitions.
[2020-11-25 06:21:47,769 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:47,770 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:47,770 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:47,772 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:47,772 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:47,777 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:47,777 INFO  L82        PathProgramCache]: Analyzing trace with hash 1393741102, now seen corresponding path program 1 times
[2020-11-25 06:21:47,778 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:47,793 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:47,989 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:21:47,989 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:47,990 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 06:21:47,990 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:47,990 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 06:21:47,991 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 06:21:47,991 INFO  L87              Difference]: Start difference. First operand 2553 states and 2738 transitions. cyclomatic complexity: 187 Second operand 15 states.
[2020-11-25 06:21:49,721 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:49,721 INFO  L93              Difference]: Finished difference Result 2789 states and 3023 transitions.
[2020-11-25 06:21:49,721 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:21:49,721 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2789 states and 3023 transitions.
[2020-11-25 06:21:49,729 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:21:49,737 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2789 states to 2789 states and 3023 transitions.
[2020-11-25 06:21:49,737 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 971
[2020-11-25 06:21:49,737 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 971
[2020-11-25 06:21:49,737 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2789 states and 3023 transitions.
[2020-11-25 06:21:49,740 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:49,740 INFO  L728         BuchiCegarLoop]: Abstraction has 2789 states and 3023 transitions.
[2020-11-25 06:21:49,742 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2789 states and 3023 transitions.
[2020-11-25 06:21:49,762 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2789 to 2706.
[2020-11-25 06:21:49,762 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2706 states.
[2020-11-25 06:21:49,765 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2706 states to 2706 states and 2908 transitions.
[2020-11-25 06:21:49,766 INFO  L751         BuchiCegarLoop]: Abstraction has 2706 states and 2908 transitions.
[2020-11-25 06:21:49,766 INFO  L631         BuchiCegarLoop]: Abstraction has 2706 states and 2908 transitions.
[2020-11-25 06:21:49,766 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:21:49,766 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2706 states and 2908 transitions.
[2020-11-25 06:21:49,770 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:21:49,770 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:49,770 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:49,773 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:49,773 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume a_s23 >= 0 && a_s23 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume b_s23 >= 0 && b_s23 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4115]              assume msgvalue_MSG == 0;
[L4116]  CALL        call c_s23 := safeAdd~uint256~uint256_SafeMath(this, msgsender_MSG, msgvalue_MSG, a_s23, b_s23);
[L123]               havoc __exception;
[L124]               revert := false;
[L125]   COND TRUE   __exception
[L126]               __tmp__Balance := Balance;
[L127]               __tmp__DType := DType;
[L128]               __tmp__Alloc := Alloc;
[L129]               __tmp__balance_ADDR := balance_ADDR;
[L130]               __tmp__M_Ref_int := M_Ref_int;
[L131]               __tmp__sum_balances0 := sum_balances0;
[L132]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L133]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L134]               __tmp__sum_allowed1 := sum_allowed1;
[L135]               __tmp__Length := Length;
[L136]               __tmp__now := now;
[L137]               __tmp__owner_Owned := owner_Owned;
[L138]               __tmp__newOwner_Owned := newOwner_Owned;
[L139]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L140]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L141]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L142]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L143]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L144]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L145]   CALL        call c_s23 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s23, b_s23);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L145]   RET         call c_s23 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s23, b_s23);
[L146]               assume revert || gas < 0;
[L4116]  RET         call c_s23 := safeAdd~uint256~uint256_SafeMath(this, msgsender_MSG, msgvalue_MSG, a_s23, b_s23);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:49,776 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:49,776 INFO  L82        PathProgramCache]: Analyzing trace with hash -1198848182, now seen corresponding path program 1 times
[2020-11-25 06:21:49,777 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:49,836 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:51,107 WARN  L188               SmtUtils]: Spent 240.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 110
[2020-11-25 06:21:51,384 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 138 DAG size of output: 94
[2020-11-25 06:21:51,557 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification. DAG size of input: 139 DAG size of output: 95
[2020-11-25 06:21:51,735 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification. DAG size of input: 141 DAG size of output: 103
[2020-11-25 06:21:52,062 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-25 06:21:52,062 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:21:52,062 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [29] total 29
[2020-11-25 06:21:52,063 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:52,063 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 30 interpolants.
[2020-11-25 06:21:52,063 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=78, Invalid=792, Unknown=0, NotChecked=0, Total=870
[2020-11-25 06:21:52,063 INFO  L87              Difference]: Start difference. First operand 2706 states and 2908 transitions. cyclomatic complexity: 206 Second operand 30 states.
[2020-11-25 06:21:58,562 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 122 DAG size of output: 112
[2020-11-25 06:22:04,237 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:04,237 INFO  L93              Difference]: Finished difference Result 2774 states and 3019 transitions.
[2020-11-25 06:22:04,238 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 31 states. 
[2020-11-25 06:22:04,238 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2774 states and 3019 transitions.
[2020-11-25 06:22:04,243 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 06:22:04,250 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2774 states to 2774 states and 3019 transitions.
[2020-11-25 06:22:04,250 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 987
[2020-11-25 06:22:04,250 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 987
[2020-11-25 06:22:04,250 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2774 states and 3019 transitions.
[2020-11-25 06:22:04,253 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:04,253 INFO  L728         BuchiCegarLoop]: Abstraction has 2774 states and 3019 transitions.
[2020-11-25 06:22:04,257 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2774 states and 3019 transitions.
[2020-11-25 06:22:04,280 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2774 to 2757.
[2020-11-25 06:22:04,280 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2757 states.
[2020-11-25 06:22:04,284 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2757 states to 2757 states and 2974 transitions.
[2020-11-25 06:22:04,284 INFO  L751         BuchiCegarLoop]: Abstraction has 2757 states and 2974 transitions.
[2020-11-25 06:22:04,284 INFO  L631         BuchiCegarLoop]: Abstraction has 2757 states and 2974 transitions.
[2020-11-25 06:22:04,284 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:22:04,284 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2757 states and 2974 transitions.
[2020-11-25 06:22:04,289 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:04,289 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:04,289 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:04,290 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:04,290 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:04,293 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:04,294 INFO  L82        PathProgramCache]: Analyzing trace with hash -1692274622, now seen corresponding path program 1 times
[2020-11-25 06:22:04,294 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:04,302 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:04,363 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 06:22:04,363 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:04,363 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 06:22:04,363 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:04,363 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 06:22:04,363 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=156, Unknown=0, NotChecked=0, Total=182
[2020-11-25 06:22:04,364 INFO  L87              Difference]: Start difference. First operand 2757 states and 2974 transitions. cyclomatic complexity: 223 Second operand 14 states.
[2020-11-25 06:22:05,610 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:05,610 INFO  L93              Difference]: Finished difference Result 2841 states and 3112 transitions.
[2020-11-25 06:22:05,611 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:22:05,611 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2841 states and 3112 transitions.
[2020-11-25 06:22:05,616 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 06:22:05,623 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2841 states to 2841 states and 3112 transitions.
[2020-11-25 06:22:05,623 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 996
[2020-11-25 06:22:05,623 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 996
[2020-11-25 06:22:05,623 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2841 states and 3112 transitions.
[2020-11-25 06:22:05,626 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:05,626 INFO  L728         BuchiCegarLoop]: Abstraction has 2841 states and 3112 transitions.
[2020-11-25 06:22:05,628 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2841 states and 3112 transitions.
[2020-11-25 06:22:05,644 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2841 to 2757.
[2020-11-25 06:22:05,644 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2757 states.
[2020-11-25 06:22:05,646 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2757 states to 2757 states and 2974 transitions.
[2020-11-25 06:22:05,646 INFO  L751         BuchiCegarLoop]: Abstraction has 2757 states and 2974 transitions.
[2020-11-25 06:22:05,647 INFO  L631         BuchiCegarLoop]: Abstraction has 2757 states and 2974 transitions.
[2020-11-25 06:22:05,647 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 06:22:05,647 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2757 states and 2974 transitions.
[2020-11-25 06:22:05,649 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:05,650 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:05,650 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:05,651 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:05,651 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:05,654 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:05,654 INFO  L82        PathProgramCache]: Analyzing trace with hash -1639212561, now seen corresponding path program 1 times
[2020-11-25 06:22:05,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:05,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:05,768 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 06:22:05,768 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:05,768 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-25 06:22:05,768 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:05,768 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-25 06:22:05,769 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=36, Invalid=270, Unknown=0, NotChecked=0, Total=306
[2020-11-25 06:22:05,769 INFO  L87              Difference]: Start difference. First operand 2757 states and 2974 transitions. cyclomatic complexity: 223 Second operand 18 states.
[2020-11-25 06:22:08,247 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:08,247 INFO  L93              Difference]: Finished difference Result 2877 states and 3195 transitions.
[2020-11-25 06:22:08,247 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 06:22:08,248 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2877 states and 3195 transitions.
[2020-11-25 06:22:08,253 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 12
[2020-11-25 06:22:08,260 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2877 states to 2877 states and 3195 transitions.
[2020-11-25 06:22:08,260 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1013
[2020-11-25 06:22:08,260 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1013
[2020-11-25 06:22:08,261 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2877 states and 3195 transitions.
[2020-11-25 06:22:08,263 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:08,263 INFO  L728         BuchiCegarLoop]: Abstraction has 2877 states and 3195 transitions.
[2020-11-25 06:22:08,265 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2877 states and 3195 transitions.
[2020-11-25 06:22:08,281 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2877 to 2783.
[2020-11-25 06:22:08,282 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2783 states.
[2020-11-25 06:22:08,284 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2783 states to 2783 states and 3027 transitions.
[2020-11-25 06:22:08,284 INFO  L751         BuchiCegarLoop]: Abstraction has 2783 states and 3027 transitions.
[2020-11-25 06:22:08,284 INFO  L631         BuchiCegarLoop]: Abstraction has 2783 states and 3027 transitions.
[2020-11-25 06:22:08,284 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 06:22:08,284 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2783 states and 3027 transitions.
[2020-11-25 06:22:08,287 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:22:08,287 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:08,287 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:08,289 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:08,289 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND FALSE  !(revert)
[L2437]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][to_s458];
[L2438]              __tmp__balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2439]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][to_s458];
[L2440]              success_s458 := true;
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND FALSE  !(revert)
[L2437]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][to_s458];
[L2438]              __tmp__balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2439]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][to_s458];
[L2440]              success_s458 := true;
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:08,292 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:08,292 INFO  L82        PathProgramCache]: Analyzing trace with hash -137167933, now seen corresponding path program 1 times
[2020-11-25 06:22:08,292 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:08,301 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:08,324 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 06:22:08,324 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:08,324 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 06:22:08,324 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:08,324 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 06:22:08,325 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 06:22:08,325 INFO  L87              Difference]: Start difference. First operand 2783 states and 3027 transitions. cyclomatic complexity: 252 Second operand 5 states.
[2020-11-25 06:22:08,645 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:08,645 INFO  L93              Difference]: Finished difference Result 3527 states and 4068 transitions.
[2020-11-25 06:22:08,645 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:22:08,645 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3527 states and 4068 transitions.
[2020-11-25 06:22:08,655 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 24
[2020-11-25 06:22:08,664 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3527 states to 2718 states and 3256 transitions.
[2020-11-25 06:22:08,664 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 775
[2020-11-25 06:22:08,664 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 775
[2020-11-25 06:22:08,664 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2718 states and 3256 transitions.
[2020-11-25 06:22:08,668 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:08,668 INFO  L728         BuchiCegarLoop]: Abstraction has 2718 states and 3256 transitions.
[2020-11-25 06:22:08,669 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2718 states and 3256 transitions.
[2020-11-25 06:22:08,687 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2718 to 1964.
[2020-11-25 06:22:08,688 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1964 states.
[2020-11-25 06:22:08,689 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1964 states to 1964 states and 2151 transitions.
[2020-11-25 06:22:08,690 INFO  L751         BuchiCegarLoop]: Abstraction has 1964 states and 2151 transitions.
[2020-11-25 06:22:08,690 INFO  L631         BuchiCegarLoop]: Abstraction has 1964 states and 2151 transitions.
[2020-11-25 06:22:08,690 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 06:22:08,690 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1964 states and 2151 transitions.
[2020-11-25 06:22:08,692 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:08,692 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:08,692 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:08,693 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:08,693 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:08,697 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:08,697 INFO  L82        PathProgramCache]: Analyzing trace with hash -1285968162, now seen corresponding path program 1 times
[2020-11-25 06:22:08,698 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:08,740 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:09,358 INFO  L134       CoverageAnalysis]: Checked inductivity of 73 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 71 trivial. 0 not checked.
[2020-11-25 06:22:09,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:22:09,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [25] total 25
[2020-11-25 06:22:09,359 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:09,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 26 interpolants.
[2020-11-25 06:22:09,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=59, Invalid=591, Unknown=0, NotChecked=0, Total=650
[2020-11-25 06:22:09,359 INFO  L87              Difference]: Start difference. First operand 1964 states and 2151 transitions. cyclomatic complexity: 194 Second operand 26 states.
[2020-11-25 06:22:13,718 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:13,719 INFO  L93              Difference]: Finished difference Result 1967 states and 2151 transitions.
[2020-11-25 06:22:13,719 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 06:22:13,719 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1967 states and 2151 transitions.
[2020-11-25 06:22:13,722 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:13,727 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1967 states to 1967 states and 2151 transitions.
[2020-11-25 06:22:13,727 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 607
[2020-11-25 06:22:13,727 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 607
[2020-11-25 06:22:13,727 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1967 states and 2151 transitions.
[2020-11-25 06:22:13,729 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:13,729 INFO  L728         BuchiCegarLoop]: Abstraction has 1967 states and 2151 transitions.
[2020-11-25 06:22:13,731 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1967 states and 2151 transitions.
[2020-11-25 06:22:13,740 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1967 to 1964.
[2020-11-25 06:22:13,740 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1964 states.
[2020-11-25 06:22:13,742 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1964 states to 1964 states and 2148 transitions.
[2020-11-25 06:22:13,742 INFO  L751         BuchiCegarLoop]: Abstraction has 1964 states and 2148 transitions.
[2020-11-25 06:22:13,742 INFO  L631         BuchiCegarLoop]: Abstraction has 1964 states and 2148 transitions.
[2020-11-25 06:22:13,742 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 06:22:13,742 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1964 states and 2148 transitions.
[2020-11-25 06:22:13,744 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:13,744 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:13,744 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:13,745 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:13,745 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:13,748 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:13,748 INFO  L82        PathProgramCache]: Analyzing trace with hash -1957328958, now seen corresponding path program 1 times
[2020-11-25 06:22:13,748 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:13,757 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:13,871 INFO  L134       CoverageAnalysis]: Checked inductivity of 69 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 69 trivial. 0 not checked.
[2020-11-25 06:22:13,871 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:13,871 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:22:13,872 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:13,872 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:22:13,872 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:22:13,872 INFO  L87              Difference]: Start difference. First operand 1964 states and 2148 transitions. cyclomatic complexity: 191 Second operand 7 states.
[2020-11-25 06:22:14,191 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:14,191 INFO  L93              Difference]: Finished difference Result 2036 states and 2267 transitions.
[2020-11-25 06:22:14,192 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 06:22:14,192 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2036 states and 2267 transitions.
[2020-11-25 06:22:14,196 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:22:14,201 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2036 states to 2036 states and 2267 transitions.
[2020-11-25 06:22:14,201 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 640
[2020-11-25 06:22:14,201 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 640
[2020-11-25 06:22:14,201 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2036 states and 2267 transitions.
[2020-11-25 06:22:14,203 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:14,203 INFO  L728         BuchiCegarLoop]: Abstraction has 2036 states and 2267 transitions.
[2020-11-25 06:22:14,205 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2036 states and 2267 transitions.
[2020-11-25 06:22:14,215 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2036 to 1968.
[2020-11-25 06:22:14,215 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1968 states.
[2020-11-25 06:22:14,217 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1968 states to 1968 states and 2152 transitions.
[2020-11-25 06:22:14,217 INFO  L751         BuchiCegarLoop]: Abstraction has 1968 states and 2152 transitions.
[2020-11-25 06:22:14,217 INFO  L631         BuchiCegarLoop]: Abstraction has 1968 states and 2152 transitions.
[2020-11-25 06:22:14,217 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-25 06:22:14,217 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1968 states and 2152 transitions.
[2020-11-25 06:22:14,219 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:14,219 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:14,219 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:14,220 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:14,220 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:14,224 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:14,224 INFO  L82        PathProgramCache]: Analyzing trace with hash -1763873578, now seen corresponding path program 1 times
[2020-11-25 06:22:14,225 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:14,238 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:14,282 INFO  L134       CoverageAnalysis]: Checked inductivity of 72 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 06:22:14,282 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:14,282 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:22:14,282 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:14,283 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:22:14,283 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:22:14,283 INFO  L87              Difference]: Start difference. First operand 1968 states and 2152 transitions. cyclomatic complexity: 191 Second operand 7 states.
[2020-11-25 06:22:14,643 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:14,643 INFO  L93              Difference]: Finished difference Result 2008 states and 2220 transitions.
[2020-11-25 06:22:14,644 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 06:22:14,644 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2008 states and 2220 transitions.
[2020-11-25 06:22:14,650 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:22:14,657 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2008 states to 2008 states and 2220 transitions.
[2020-11-25 06:22:14,657 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 625
[2020-11-25 06:22:14,657 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 625
[2020-11-25 06:22:14,657 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2008 states and 2220 transitions.
[2020-11-25 06:22:14,658 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:14,658 INFO  L728         BuchiCegarLoop]: Abstraction has 2008 states and 2220 transitions.
[2020-11-25 06:22:14,660 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2008 states and 2220 transitions.
[2020-11-25 06:22:14,670 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2008 to 1908.
[2020-11-25 06:22:14,670 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1908 states.
[2020-11-25 06:22:14,672 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1908 states to 1908 states and 2059 transitions.
[2020-11-25 06:22:14,672 INFO  L751         BuchiCegarLoop]: Abstraction has 1908 states and 2059 transitions.
[2020-11-25 06:22:14,672 INFO  L631         BuchiCegarLoop]: Abstraction has 1908 states and 2059 transitions.
[2020-11-25 06:22:14,672 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-25 06:22:14,672 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1908 states and 2059 transitions.
[2020-11-25 06:22:14,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:22:14,674 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:14,674 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:14,675 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:14,675 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:14,678 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:14,678 INFO  L82        PathProgramCache]: Analyzing trace with hash -1267736995, now seen corresponding path program 1 times
[2020-11-25 06:22:14,678 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:14,727 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:15,114 INFO  L134       CoverageAnalysis]: Checked inductivity of 72 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 06:22:15,114 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:22:15,114 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [23] total 23
[2020-11-25 06:22:15,115 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:15,115 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2020-11-25 06:22:15,115 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=56, Invalid=496, Unknown=0, NotChecked=0, Total=552
[2020-11-25 06:22:15,115 INFO  L87              Difference]: Start difference. First operand 1908 states and 2059 transitions. cyclomatic complexity: 154 Second operand 24 states.
[2020-11-25 06:22:19,470 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:19,471 INFO  L93              Difference]: Finished difference Result 1993 states and 2168 transitions.
[2020-11-25 06:22:19,471 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 29 states. 
[2020-11-25 06:22:19,471 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1993 states and 2168 transitions.
[2020-11-25 06:22:19,474 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:22:19,478 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1993 states to 1993 states and 2168 transitions.
[2020-11-25 06:22:19,478 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 607
[2020-11-25 06:22:19,478 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 607
[2020-11-25 06:22:19,478 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1993 states and 2168 transitions.
[2020-11-25 06:22:19,480 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:19,480 INFO  L728         BuchiCegarLoop]: Abstraction has 1993 states and 2168 transitions.
[2020-11-25 06:22:19,481 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1993 states and 2168 transitions.
[2020-11-25 06:22:19,489 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1993 to 1933.
[2020-11-25 06:22:19,489 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1933 states.
[2020-11-25 06:22:19,491 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1933 states to 1933 states and 2101 transitions.
[2020-11-25 06:22:19,491 INFO  L751         BuchiCegarLoop]: Abstraction has 1933 states and 2101 transitions.
[2020-11-25 06:22:19,491 INFO  L631         BuchiCegarLoop]: Abstraction has 1933 states and 2101 transitions.
[2020-11-25 06:22:19,491 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-25 06:22:19,491 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1933 states and 2101 transitions.
[2020-11-25 06:22:19,493 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:22:19,493 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:19,493 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:19,495 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:19,495 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:19,498 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:19,498 INFO  L82        PathProgramCache]: Analyzing trace with hash -805721860, now seen corresponding path program 1 times
[2020-11-25 06:22:19,499 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:19,514 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:22:19,636 INFO  L134       CoverageAnalysis]: Checked inductivity of 72 backedges. 3 proven. 0 refuted. 0 times theorem prover too weak. 69 trivial. 0 not checked.
[2020-11-25 06:22:19,636 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:22:19,636 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-25 06:22:19,636 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:22:19,636 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-25 06:22:19,636 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=40, Invalid=340, Unknown=0, NotChecked=0, Total=380
[2020-11-25 06:22:19,636 INFO  L87              Difference]: Start difference. First operand 1933 states and 2101 transitions. cyclomatic complexity: 174 Second operand 20 states.
[2020-11-25 06:22:21,259 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:22:21,259 INFO  L93              Difference]: Finished difference Result 2006 states and 2203 transitions.
[2020-11-25 06:22:21,259 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 22 states. 
[2020-11-25 06:22:21,259 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2006 states and 2203 transitions.
[2020-11-25 06:22:21,262 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:22:21,266 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2006 states to 2006 states and 2203 transitions.
[2020-11-25 06:22:21,266 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 617
[2020-11-25 06:22:21,267 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 617
[2020-11-25 06:22:21,267 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2006 states and 2203 transitions.
[2020-11-25 06:22:21,268 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:22:21,268 INFO  L728         BuchiCegarLoop]: Abstraction has 2006 states and 2203 transitions.
[2020-11-25 06:22:21,269 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2006 states and 2203 transitions.
[2020-11-25 06:22:21,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2006 to 1916.
[2020-11-25 06:22:21,278 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1916 states.
[2020-11-25 06:22:21,279 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1916 states to 1916 states and 2077 transitions.
[2020-11-25 06:22:21,279 INFO  L751         BuchiCegarLoop]: Abstraction has 1916 states and 2077 transitions.
[2020-11-25 06:22:21,279 INFO  L631         BuchiCegarLoop]: Abstraction has 1916 states and 2077 transitions.
[2020-11-25 06:22:21,279 INFO  L445         BuchiCegarLoop]: ======== Iteration 13============
[2020-11-25 06:22:21,279 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1916 states and 2077 transitions.
[2020-11-25 06:22:21,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:22:21,281 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:22:21,281 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:22:21,282 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:22:21,282 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s458 && p1 != to_s458) && (p2 != from_s458 || p3 != msgsender_MSG)) && from_s458 != to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s458] + tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s458 == true && balances_TrifoliumCoin[this][from_s458] == old(balances_TrifoliumCoin[this][from_s458]) - tokens_s458) && balances_TrifoliumCoin[this][to_s458] == old(balances_TrifoliumCoin[this][to_s458]) + tokens_s458) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && allowed_TrifoliumCoin[this][p2][p3] == old(allowed_TrifoliumCoin[this][p2][p3])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:22:21,285 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:22:21,285 INFO  L82        PathProgramCache]: Analyzing trace with hash 727225231, now seen corresponding path program 1 times
[2020-11-25 06:22:21,286 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:22:21,324 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
Received shutdown request...
[2020-11-25 06:36:41,705 FATAL L265        ToolchainWalker]: An unrecoverable error occured during an interaction with an SMT solver:
de.uni_freiburg.informatik.ultimate.logic.SMTLIBException: Timeout exceeded
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$IntegerInterpolator.interpolate(Interpolator.java:1432)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$MixedLAInterpolator.convert(Interpolator.java:1288)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.cacheConvert(TermTransformer.java:131)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.access$0(TermTransformer.java:127)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer$Convert.walk(TermTransformer.java:79)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:122)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:113)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.transform(TermTransformer.java:253)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.mixedPivotLA(Interpolator.java:1478)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.combine(Interpolator.java:359)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.access$2(Interpolator.java:328)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$CombineInterpolants.walk(Interpolator.java:153)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:122)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:113)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.interpolate(Interpolator.java:220)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.getInterpolants(Interpolator.java:201)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.smtlib2.SMTInterpol.getInterpolants(SMTInterpol.java:919)
	at de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.managedscript.ManagedScript.getInterpolants(ManagedScript.java:200)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.computeCraigInterpolants(NestedInterpolantsBuilder.java:303)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.<init>(NestedInterpolantsBuilder.java:167)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.<init>(NestedInterpolantsBuilder.java:182)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.computeInterpolantsTree(InterpolatingTraceCheckCraig.java:271)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.computeInterpolants(InterpolatingTraceCheckCraig.java:207)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.<init>(InterpolatingTraceCheckCraig.java:109)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.constructCraig(TraceCheckConstructor.java:211)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.constructTraceCheck(TraceCheckConstructor.java:183)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.get(TraceCheckConstructor.java:165)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.FixedRefinementStrategy.getTraceCheck(FixedRefinementStrategy.java:134)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.BaseRefinementStrategy.checkFeasibility(BaseRefinementStrategy.java:223)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.BaseRefinementStrategy.executeStrategy(BaseRefinementStrategy.java:197)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceAbstractionRefinementEngine.<init>(TraceAbstractionRefinementEngine.java:70)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkFeasibilityAndComputeInterpolants(LassoCheck.java:1126)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkStemFeasibility(LassoCheck.java:1080)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.<init>(LassoCheck.java:994)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.<init>(LassoCheck.java:276)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiCegarLoop.iterate(BuchiCegarLoop.java:479)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.doTerminationAnalysis(BuchiAutomizerObserver.java:153)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.finish(BuchiAutomizerObserver.java:413)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runObserver(PluginConnector.java:168)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runTool(PluginConnector.java:151)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.run(PluginConnector.java:128)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.executePluginConnector(ToolchainWalker.java:232)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.processPlugin(ToolchainWalker.java:226)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walkUnprotected(ToolchainWalker.java:142)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walk(ToolchainWalker.java:104)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainManager$Toolchain.processToolchain(ToolchainManager.java:317)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.toolchain.DefaultToolchainJob.run(DefaultToolchainJob.java:145)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
[2020-11-25 06:36:41,706 INFO  L168              Benchmark]: Toolchain (without parser) took 898706.98 ms. Allocated memory was 1.0 GB in the beginning and 6.6 GB in the end (delta: 5.5 GB). Free memory was 935.2 MB in the beginning and 1.8 GB in the end (delta: -849.3 MB). Peak memory consumption was 6.3 GB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,707 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,707 INFO  L168              Benchmark]: Boogie Preprocessor took 113.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,708 INFO  L168              Benchmark]: UtopiaSpecLang took 67.62 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,708 INFO  L168              Benchmark]: Boogie Printer took 16.02 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,708 INFO  L168              Benchmark]: RCFGBuilder took 756.39 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,709 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.18 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.5 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,710 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1473.59 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 194.0 MB). Free memory was 786.5 MB in the beginning and 985.4 MB in the end (delta: -198.9 MB). Peak memory consumption was 163.3 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,710 INFO  L168              Benchmark]: BlockEncodingV2 took 144.98 ms. Allocated memory is still 1.2 GB. Free memory was 985.4 MB in the beginning and 920.3 MB in the end (delta: 65.1 MB). Peak memory consumption was 65.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,710 INFO  L168              Benchmark]: BuchiAutomizer took 896095.23 ms. Allocated memory was 1.2 GB in the beginning and 6.6 GB in the end (delta: 5.3 GB). Free memory was 920.3 MB in the beginning and 1.8 GB in the end (delta: -864.3 MB). Peak memory consumption was 6.1 GB. Max. memory is 15.3 GB.
[2020-11-25 06:36:41,714 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3724 locations, 6408 edges
  - StatisticsResult: Encoded RCFG
    3664 locations, 6248 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 113.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.62 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.02 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 756.39 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.18 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.5 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1473.59 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 194.0 MB). Free memory was 786.5 MB in the beginning and 985.4 MB in the end (delta: -198.9 MB). Peak memory consumption was 163.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 144.98 ms. Allocated memory is still 1.2 GB. Free memory was 985.4 MB in the beginning and 920.3 MB in the end (delta: 65.1 MB). Peak memory consumption was 65.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 896095.23 ms. Allocated memory was 1.2 GB in the beginning and 6.6 GB in the end (delta: 5.3 GB). Free memory was 920.3 MB in the beginning and 1.8 GB in the end (delta: -864.3 MB). Peak memory consumption was 6.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1566 locations, 1978 edges
  - StatisticsResult: BuchiProgram size
    3724 locations, 6408 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer:
  - ExceptionOrErrorResult: SMTLIBException: Timeout exceeded
    de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer: SMTLIBException: Timeout exceeded: de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$IntegerInterpolator.interpolate(Interpolator.java:1432)
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Completed graceful shutdown
