This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:31:01,575 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:31:01,577 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:31:01,587 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:31:01,587 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:31:01,588 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:31:01,589 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:31:01,590 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:31:01,592 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:31:01,592 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:31:01,593 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:31:01,593 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:31:01,594 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:31:01,594 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:31:01,595 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:31:01,596 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:31:01,596 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:31:01,597 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:31:01,599 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:31:01,600 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:31:01,601 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:31:01,601 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:31:01,603 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:31:01,603 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:31:01,603 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:31:01,604 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:31:01,604 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:31:01,605 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:31:01,605 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:31:01,605 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:31:01,606 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:31:01,606 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:31:01,606 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:31:01,607 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:31:01,608 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:31:01,608 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:31:01,608 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:31:01,608 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:31:01,609 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:31:01,609 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:31:01,610 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:31:01,610 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:31:01,617 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:31:01,618 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:31:01,618 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:31:01,619 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:31:01,619 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:31:01,619 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:31:01,620 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:31:01,620 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:31:01,621 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:31:01,621 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:31:01,621 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:31:01,621 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:31:01,646 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:31:01,660 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:31:01,662 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:31:01,664 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:31:01,664 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:31:01,664 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl
[2020-11-25 07:31:01,665 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl'
[2020-11-25 07:31:01,742 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:31:01,743 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:31:01,743 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:31:01,743 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:31:01,743 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:31:01,760 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,762 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,797 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,797 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,821 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,830 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,836 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,845 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:31:01,846 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:31:01,846 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:31:01,848 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:31:01,852 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/1) ...
[2020-11-25 07:31:01,870 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:31:01,876 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:31:01,884 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:31:01,890 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s255 && amount_s255>_balances_ERC20[this][msg.sender] ) && amount_s255>=0 ) && amount_s255<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s255]>=0 ) && _balances_ERC20[this][recipient_s255]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPGT,IdentifierExpression[amount_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s255,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:31:01,896 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:31:01,896 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:31:01,904 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:01 PropertyContainer
[2020-11-25 07:31:01,904 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:31:01,905 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:31:01,905 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:31:01,905 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:31:01,906 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/2) ...
[2020-11-25 07:31:01,906 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:31:01,906 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:31:01,919 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:01" (2/2) ...
[2020-11-25 07:31:01,919 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:31:01,920 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:31:01,920 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:31:01,920 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:31:01,921 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/2) ...
[2020-11-25 07:31:01,973 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:31:01,973 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:31:01,973 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:31:01,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:31:01,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:31:01,974 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:31:01,975 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:31:01,975 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:31:01,975 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:31:01,975 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:01,976 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 07:31:01,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC
[2020-11-25 07:31:01,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:31:01,978 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ULMC
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,979 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:31:01,980 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:31:01,981 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:31:01,982 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__success
[2020-11-25 07:31:01,983 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__fail
[2020-11-25 07:31:01,983 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:31:01,983 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:31:01,983 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:31:01,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:31:01,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:01,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:31:01,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:31:01,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__fail
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:31:01,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ULMC
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:31:01,990 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:31:01,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:31:02,207 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:02,208 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:02,679 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:31:02,680 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:31:02,682 INFO  L202        PluginConnector]: Adding new model ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:02 BoogieIcfgContainer
[2020-11-25 07:31:02,682 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:01" (2/2) ...
[2020-11-25 07:31:02,682 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:31:02,682 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@50f2a70c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:02, skipping insertion in model container
[2020-11-25 07:31:02,682 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:31:02,683 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:31:02,683 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:31:02,684 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:31:02,684 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/3) ...
[2020-11-25 07:31:02,685 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7db1887a and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:02, skipping insertion in model container
[2020-11-25 07:31:02,685 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:01" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:31:02,725 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:02 NWAContainer
[2020-11-25 07:31:02,725 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:31:02,725 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:31:02,725 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:31:02,726 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:31:02,727 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:02" (3/4) ...
[2020-11-25 07:31:02,727 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@20606f6a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:02, skipping insertion in model container
[2020-11-25 07:31:02,728 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:02" (4/4) ...
[2020-11-25 07:31:02,731 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:31:02,734 INFO  L110   BuchiProductObserver]: Initial RCFG 1277 locations, 1754 edges
[2020-11-25 07:31:02,735 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:31:02,746 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:31:04,017 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:31:04,021 INFO  L110   BuchiProductObserver]: BuchiProgram size 3190 locations, 5746 edges
[2020-11-25 07:31:04,021 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:04 BoogieIcfgContainer
[2020-11-25 07:31:04,022 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:31:04,022 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:31:04,022 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:31:04,023 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:31:04,024 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:04" (1/1) ...
[2020-11-25 07:31:04,089 INFO  L313           BlockEncoder]: Initial Icfg 3190 locations, 5746 edges
[2020-11-25 07:31:04,089 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:31:04,090 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:31:04,090 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:31:04,090 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:31:04,099 INFO  L70    emoveInfeasibleEdges]: Removed 105 edges and 14 locations because of local infeasibility
[2020-11-25 07:31:04,105 INFO  L70        RemoveSinkStates]: Removed 134 edges and 76 locations by removing sink states
[2020-11-25 07:31:04,113 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:31:04,115 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:31:04,118 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:31:04,119 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:31:04,122 INFO  L313           BlockEncoder]: Encoded RCFG 3082 locations, 5481 edges
[2020-11-25 07:31:04,123 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:31:04 BasicIcfg
[2020-11-25 07:31:04,123 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:31:04,123 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:31:04,123 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:31:04,125 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:31:04,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:01" (1/6) ...
[2020-11-25 07:31:04,127 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@46619cbb and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:04, skipping insertion in model container
[2020-11-25 07:31:04,127 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,127 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:01" (2/6) ...
[2020-11-25 07:31:04,128 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@46619cbb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:04, skipping insertion in model container
[2020-11-25 07:31:04,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:02" (3/6) ...
[2020-11-25 07:31:04,128 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@46619cbb and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:31:04, skipping insertion in model container
[2020-11-25 07:31:04,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:02" (4/6) ...
[2020-11-25 07:31:04,128 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@46619cbb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:04, skipping insertion in model container
[2020-11-25 07:31:04,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:04" (5/6) ...
[2020-11-25 07:31:04,128 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@46619cbb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:31:04, skipping insertion in model container
[2020-11-25 07:31:04,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:04,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:31:04" (6/6) ...
[2020-11-25 07:31:04,129 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transfer-self-fail.bpl_BEv2
[2020-11-25 07:31:04,163 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:31:04,163 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:31:04,163 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:31:04,163 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:31:04,163 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:31:04,163 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:31:04,163 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:31:04,163 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:31:04,164 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:31:04,189 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3082 states.
[2020-11-25 07:31:04,232 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:04,232 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:04,232 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:04,238 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:04,238 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:04,238 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:31:04,238 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3082 states.
[2020-11-25 07:31:04,250 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:04,251 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:04,251 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:04,252 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:04,252 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND TRUE   revert
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND TRUE   choice == 11
[L3603]              gas := gas - 21000;
[L3604]  COND FALSE  !(gas >= 0)
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:04,266 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:04,266 INFO  L82        PathProgramCache]: Analyzing trace with hash 1824856632, now seen corresponding path program 1 times
[2020-11-25 07:31:04,270 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:04,290 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:04,324 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:31:04,326 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:04,326 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:31:04,329 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:04,473 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:31:04,474 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:31:04,476 INFO  L87              Difference]: Start difference. First operand 3082 states. Second operand 3 states.
[2020-11-25 07:31:04,640 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:04,640 INFO  L93              Difference]: Finished difference Result 1694 states and 1948 transitions.
[2020-11-25 07:31:04,641 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:31:04,642 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1694 states and 1948 transitions.
[2020-11-25 07:31:04,654 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:04,670 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1694 states to 1694 states and 1948 transitions.
[2020-11-25 07:31:04,671 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 07:31:04,673 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 517
[2020-11-25 07:31:04,674 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1694 states and 1948 transitions.
[2020-11-25 07:31:04,681 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:04,681 INFO  L728         BuchiCegarLoop]: Abstraction has 1694 states and 1948 transitions.
[2020-11-25 07:31:04,697 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1694 states and 1948 transitions.
[2020-11-25 07:31:04,734 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1694 to 1694.
[2020-11-25 07:31:04,734 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1694 states.
[2020-11-25 07:31:04,738 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1694 states to 1694 states and 1948 transitions.
[2020-11-25 07:31:04,739 INFO  L751         BuchiCegarLoop]: Abstraction has 1694 states and 1948 transitions.
[2020-11-25 07:31:04,739 INFO  L631         BuchiCegarLoop]: Abstraction has 1694 states and 1948 transitions.
[2020-11-25 07:31:04,740 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:31:04,740 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1694 states and 1948 transitions.
[2020-11-25 07:31:04,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:04,746 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:04,746 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:04,748 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:04,748 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND TRUE   revert
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:04,753 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:04,753 INFO  L82        PathProgramCache]: Analyzing trace with hash -1191367889, now seen corresponding path program 1 times
[2020-11-25 07:31:04,754 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:04,765 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:04,788 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:31:04,789 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:04,789 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:31:04,790 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:04,790 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:31:04,790 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:31:04,791 INFO  L87              Difference]: Start difference. First operand 1694 states and 1948 transitions. cyclomatic complexity: 256 Second operand 3 states.
[2020-11-25 07:31:04,857 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:04,858 INFO  L93              Difference]: Finished difference Result 2260 states and 2624 transitions.
[2020-11-25 07:31:04,858 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:31:04,859 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2260 states and 2624 transitions.
[2020-11-25 07:31:04,870 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:04,883 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2260 states to 2260 states and 2624 transitions.
[2020-11-25 07:31:04,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 673
[2020-11-25 07:31:04,884 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 673
[2020-11-25 07:31:04,884 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2260 states and 2624 transitions.
[2020-11-25 07:31:04,888 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:04,888 INFO  L728         BuchiCegarLoop]: Abstraction has 2260 states and 2624 transitions.
[2020-11-25 07:31:04,891 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2260 states and 2624 transitions.
[2020-11-25 07:31:04,917 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2260 to 1970.
[2020-11-25 07:31:04,917 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1970 states.
[2020-11-25 07:31:04,921 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1970 states to 1970 states and 2278 transitions.
[2020-11-25 07:31:04,922 INFO  L751         BuchiCegarLoop]: Abstraction has 1970 states and 2278 transitions.
[2020-11-25 07:31:04,922 INFO  L631         BuchiCegarLoop]: Abstraction has 1970 states and 2278 transitions.
[2020-11-25 07:31:04,922 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:31:04,922 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1970 states and 2278 transitions.
[2020-11-25 07:31:04,927 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:04,927 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:04,927 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:04,930 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:04,930 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND TRUE   !(account_s478 != null)
[L2015]              revert := true;
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND TRUE   revert
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:04,934 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:04,934 INFO  L82        PathProgramCache]: Analyzing trace with hash -1674403452, now seen corresponding path program 1 times
[2020-11-25 07:31:04,935 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:04,950 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:05,007 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 07:31:05,007 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:31:05,007 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 07:31:05,008 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:05,008 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:31:05,008 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:31:05,008 INFO  L87              Difference]: Start difference. First operand 1970 states and 2278 transitions. cyclomatic complexity: 310 Second operand 7 states.
[2020-11-25 07:31:05,050 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:05,050 INFO  L93              Difference]: Finished difference Result 1978 states and 2285 transitions.
[2020-11-25 07:31:05,050 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:31:05,050 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1978 states and 2285 transitions.
[2020-11-25 07:31:05,059 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:05,068 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1978 states to 1969 states and 2276 transitions.
[2020-11-25 07:31:05,068 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 611
[2020-11-25 07:31:05,069 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 611
[2020-11-25 07:31:05,069 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1969 states and 2276 transitions.
[2020-11-25 07:31:05,071 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:05,072 INFO  L728         BuchiCegarLoop]: Abstraction has 1969 states and 2276 transitions.
[2020-11-25 07:31:05,074 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1969 states and 2276 transitions.
[2020-11-25 07:31:05,092 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1969 to 1969.
[2020-11-25 07:31:05,093 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1969 states.
[2020-11-25 07:31:05,096 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1969 states to 1969 states and 2276 transitions.
[2020-11-25 07:31:05,097 INFO  L751         BuchiCegarLoop]: Abstraction has 1969 states and 2276 transitions.
[2020-11-25 07:31:05,097 INFO  L631         BuchiCegarLoop]: Abstraction has 1969 states and 2276 transitions.
[2020-11-25 07:31:05,097 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:31:05,097 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1969 states and 2276 transitions.
[2020-11-25 07:31:05,102 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:05,102 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:05,102 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:05,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:05,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND FALSE  !(!(account_s478 != null))
[L2018]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND TRUE   !(c_s26 >= a_s26)
[L1448]              revert := true;
[L2018]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2019]  COND TRUE   revert
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND TRUE   revert
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND TRUE   !(sender_s435 != null)
[L1959]              revert := true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND TRUE   revert
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:05,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:05,108 INFO  L82        PathProgramCache]: Analyzing trace with hash 1600980775, now seen corresponding path program 1 times
[2020-11-25 07:31:05,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:05,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:05,156 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 07:31:05,157 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:05,157 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:31:05,157 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:05,157 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:31:05,157 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:31:05,158 INFO  L87              Difference]: Start difference. First operand 1969 states and 2276 transitions. cyclomatic complexity: 309 Second operand 3 states.
[2020-11-25 07:31:05,204 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:05,204 INFO  L93              Difference]: Finished difference Result 2262 states and 2547 transitions.
[2020-11-25 07:31:05,204 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:31:05,205 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2262 states and 2547 transitions.
[2020-11-25 07:31:05,216 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:05,226 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2262 states to 2089 states and 2343 transitions.
[2020-11-25 07:31:05,226 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 623
[2020-11-25 07:31:05,227 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 623
[2020-11-25 07:31:05,227 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2089 states and 2343 transitions.
[2020-11-25 07:31:05,230 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:05,230 INFO  L728         BuchiCegarLoop]: Abstraction has 2089 states and 2343 transitions.
[2020-11-25 07:31:05,233 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2089 states and 2343 transitions.
[2020-11-25 07:31:05,255 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2089 to 1852.
[2020-11-25 07:31:05,256 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1852 states.
[2020-11-25 07:31:05,259 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1852 states to 1852 states and 2050 transitions.
[2020-11-25 07:31:05,259 INFO  L751         BuchiCegarLoop]: Abstraction has 1852 states and 2050 transitions.
[2020-11-25 07:31:05,259 INFO  L631         BuchiCegarLoop]: Abstraction has 1852 states and 2050 transitions.
[2020-11-25 07:31:05,259 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:31:05,259 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1852 states and 2050 transitions.
[2020-11-25 07:31:05,265 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:05,265 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:05,265 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:05,268 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:05,268 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3681]              assume null == 0;
[L3682]  CALL        call this := FreshRefGenerator__success();
[L1393]              havoc newRef;
[L1394]              assume Alloc[newRef] == false;
[L1395]              Alloc[newRef] := true;
[L1396]              assume newRef != null;
[L3682]  RET         call this := FreshRefGenerator__success();
[L3683]              assume now >= 0;
[L3684]              assume DType[this] == ULMC;
[L3685]              assume msgvalue_MSG == 0;
[L3686]              gas := gas - 53000;
[L3687]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L915]               havoc __exception;
[L916]               revert := false;
[L917]   COND FALSE  !(__exception)
[L938]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2359]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2359]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  COND FALSE  !(revert)
[L2363]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1627]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L1627]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  COND FALSE  !(revert)
[L1631]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1603]              assume msgsender_MSG != null;
[L1604]              Balance[this] := 0;
[L1605]              _balances_ERC20[this] := zeroRefintArr();
[L1606]              sum__balances0[this] := 0;
[L1607]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1608]              sum__allowances1[this] := 0;
[L1609]              _totalSupply_ERC20[this] := 0;
[L1631]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1632]  COND FALSE  !(revert)
[L2363]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2364]  COND FALSE  !(revert)
[L2367]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2233]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1581]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1566]              assume msgsender_MSG != null;
[L1567]              Balance[this] := 0;
[L1581]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  COND FALSE  !(revert)
[L2233]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2234]  COND FALSE  !(revert)
[L2237]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2208]              assume msgsender_MSG != null;
[L2209]              Balance[this] := 0;
[L2210]              _name_ERC20Detailed[this] := -930759658;
[L2211]              _symbol_ERC20Detailed[this] := -930759658;
[L2212]              _decimals_ERC20Detailed[this] := 0;
[L2214]              _name_ERC20Detailed[this] := name_s622;
[L2215]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2216]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2237]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2238]  COND FALSE  !(revert)
[L2367]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2368]  COND FALSE  !(revert)
[L2371]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2311]              assume msgsender_MSG != null;
[L2312]              Balance[this] := 0;
[L2314]  COND TRUE   DType[this] == ULMC
[L2315]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2315]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2322]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2323]  COND TRUE   DType[this] == ULMC
[L2324]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2013]              __var_8 := null;
[L2014]  COND FALSE  !(!(account_s478 != null))
[L2018]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2018]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2019]  COND FALSE  !(revert)
[L2022]              _totalSupply_ERC20[this] := __var_9;
[L2023]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L2023]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2024]  COND FALSE  !(revert)
[L2027]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2028]              _balances_ERC20[this][account_s478] := __var_10;
[L2029]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2030]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2324]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2325]  COND FALSE  !(revert)
[L2371]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2372]  COND FALSE  !(revert)
[L938]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L939]               assume !revert && gas >= 0;
[L3687]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3688]              assume !revert && gas >= 0;
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND FALSE  !(!(sender_s435 != null))
[L1962]              __var_5 := null;
[L1963]  COND FALSE  !(!(recipient_s435 != null))
[L1967]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s435], amount_s435);
[L1470]  COND FALSE  !(!(b_s51 <= a_s51))
[L1474]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1475]              __ret_0_ := c_s51;
[L1967]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s435], amount_s435);
[L1968]  COND FALSE  !(revert)
[L1971]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s435];
[L1972]              _balances_ERC20[this][sender_s435] := __var_6;
[L1973]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s435];
[L1974]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s435], amount_s435);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L1974]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s435], amount_s435);
[L1975]  COND FALSE  !(revert)
[L1978]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s435];
[L1979]              _balances_ERC20[this][recipient_s435] := __var_7;
[L1980]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s435];
[L1981]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND FALSE  !(revert)
[L1695]              __ret_0_ := true;
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

Loop:
[L3691]  CALL        call CorralChoice_ULMC(this);
[L3558]              havoc msgsender_MSG;
[L3559]              havoc msgvalue_MSG;
[L3560]              havoc choice;
[L3561]              havoc __ret_0_totalSupply;
[L3562]              havoc account_s236;
[L3563]              havoc __ret_0_balanceOf;
[L3564]              havoc recipient_s255;
[L3565]              havoc amount_s255;
[L3566]              havoc __ret_0_transfer;
[L3567]              havoc owner_s271;
[L3568]              havoc spender_s271;
[L3569]              havoc __ret_0_allowance;
[L3570]              havoc spender_s290;
[L3571]              havoc value_s290;
[L3572]              havoc __ret_0_approve;
[L3573]              havoc sender_s325;
[L3574]              havoc recipient_s325;
[L3575]              havoc amount_s325;
[L3576]              havoc __ret_0_transferFrom;
[L3577]              havoc spender_s352;
[L3578]              havoc addedValue_s352;
[L3579]              havoc __ret_0_increaseAllowance;
[L3580]              havoc spender_s379;
[L3581]              havoc subtractedValue_s379;
[L3582]              havoc __ret_0_decreaseAllowance;
[L3583]              havoc name_s622;
[L3584]              havoc symbol_s622;
[L3585]              havoc decimals_s622;
[L3586]              havoc __ret_0_name;
[L3587]              havoc __ret_0_symbol;
[L3588]              havoc __ret_0_decimals;
[L3589]              havoc tmpNow;
[L3590]              havoc gas;
[L3591]              assume gas > 4000000 && gas <= 8000000;
[L3592]              tmpNow := now;
[L3593]              havoc now;
[L3594]              assume now > tmpNow;
[L3595]              assume msgsender_MSG != null;
[L3596]              assume DType[msgsender_MSG] != SafeMath;
[L3597]              assume DType[msgsender_MSG] != IERC20;
[L3598]              assume DType[msgsender_MSG] != ERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3600]              assume DType[msgsender_MSG] != ULMC;
[L3601]              Alloc[msgsender_MSG] := true;
[L3602]  COND FALSE  !(choice == 11)
[L3608]  COND FALSE  !(choice == 10)
[L3614]  COND TRUE   choice == 9
[L3615]              gas := gas - 21000;
[L3616]  COND TRUE   gas >= 0
[L3617]              assume amount_s255 >= 0 && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3618]              assume msgvalue_MSG == 0;
[L3619]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s255 && amount_s255 > _balances_ERC20[this][msgsender_MSG]) && amount_s255 >= 0) && amount_s255 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s255] >= 0) && _balances_ERC20[this][recipient_s255] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L1682]  COND TRUE   DType[this] == ULMC
[L1683]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1957]              __var_4 := null;
[L1958]  COND FALSE  !(!(sender_s435 != null))
[L1962]              __var_5 := null;
[L1963]  COND FALSE  !(!(recipient_s435 != null))
[L1967]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s435], amount_s435);
[L1470]  COND FALSE  !(!(b_s51 <= a_s51))
[L1474]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1475]              __ret_0_ := c_s51;
[L1967]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s435], amount_s435);
[L1968]  COND FALSE  !(revert)
[L1971]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s435];
[L1972]              _balances_ERC20[this][sender_s435] := __var_6;
[L1973]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s435];
[L1974]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s435], amount_s435);
[L1446]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1447]  COND FALSE  !(!(c_s26 >= a_s26))
[L1451]              __ret_0_ := c_s26;
[L1974]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s435], amount_s435);
[L1975]  COND FALSE  !(revert)
[L1978]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s435];
[L1979]              _balances_ERC20[this][recipient_s435] := __var_7;
[L1980]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s435];
[L1981]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1683]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s255, amount_s255);
[L1684]  COND FALSE  !(revert)
[L1695]              __ret_0_ := true;
[L376]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L377]               assume !revert && gas >= 0;
[L3619]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s255, amount_s255);
[L3691]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:05,273 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:05,273 INFO  L82        PathProgramCache]: Analyzing trace with hash -543705532, now seen corresponding path program 1 times
[2020-11-25 07:31:05,274 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:05,296 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:05,396 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 07:31:05,396 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:05,396 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 07:31:05,397 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:05,397 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 07:31:05,397 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-25 07:31:05,397 INFO  L87              Difference]: Start difference. First operand 1852 states and 2050 transitions. cyclomatic complexity: 200 Second operand 8 states.
[2020-11-25 07:31:05,835 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:05,835 INFO  L93              Difference]: Finished difference Result 1165 states and 1274 transitions.
[2020-11-25 07:31:05,835 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 07:31:05,836 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1165 states and 1274 transitions.
[2020-11-25 07:31:05,839 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:31:05,839 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1165 states to 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:31:05,839 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:31:05,839 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:05,839 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:31:05,839 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:31:05,839 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:31:05,839 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:31:05,842 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:31:05 BasicIcfg
[2020-11-25 07:31:05,842 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:31:05,843 INFO  L168              Benchmark]: Toolchain (without parser) took 4100.71 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 334.0 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -184.3 MB). Peak memory consumption was 149.7 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,844 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,844 INFO  L168              Benchmark]: Boogie Preprocessor took 102.46 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,845 INFO  L168              Benchmark]: UtopiaSpecLang took 58.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,846 INFO  L168              Benchmark]: Boogie Printer took 14.64 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,847 INFO  L168              Benchmark]: RCFGBuilder took 762.67 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,848 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.28 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,849 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1296.60 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.4 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -309.4 MB). Peak memory consumption was 194.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,850 INFO  L168              Benchmark]: BlockEncodingV2 took 101.09 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Peak memory consumption was 55.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,851 INFO  L168              Benchmark]: BuchiAutomizer took 1719.30 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 131.6 MB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: -52.2 MB). Peak memory consumption was 79.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:05,857 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3190 locations, 5746 edges
  - StatisticsResult: Encoded RCFG
    3082 locations, 5481 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 102.46 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.64 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 762.67 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.28 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1296.60 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.4 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -309.4 MB). Peak memory consumption was 194.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 101.09 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Peak memory consumption was 55.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1719.30 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 131.6 MB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: -52.2 MB). Peak memory consumption was 79.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1277 locations, 1754 edges
  - StatisticsResult: BuchiProgram size
    3190 locations, 5746 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 8 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.3s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 527 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1970 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9313 SDtfs, 5210 SDslu, 13873 SDs, 0 SdLazy, 4714 SolverSat, 1273 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
