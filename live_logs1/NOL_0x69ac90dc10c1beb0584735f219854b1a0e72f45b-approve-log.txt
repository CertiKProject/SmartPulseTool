This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:11:17,998 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:11:17,999 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:11:18,010 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:11:18,010 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:11:18,011 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:11:18,011 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:11:18,013 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:11:18,014 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:11:18,015 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:11:18,016 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:11:18,016 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:11:18,017 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:11:18,017 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:11:18,018 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:11:18,019 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:11:18,019 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:11:18,020 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:11:18,022 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:11:18,023 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:11:18,024 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:11:18,024 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:11:18,026 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:11:18,026 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:11:18,026 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:11:18,027 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:11:18,027 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:11:18,028 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:11:18,028 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:11:18,028 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:11:18,028 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:11:18,029 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:11:18,029 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:11:18,030 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:11:18,031 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:11:18,031 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:11:18,031 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:11:18,031 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:11:18,031 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:11:18,032 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:11:18,032 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:11:18,033 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:11:18,040 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:11:18,040 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:11:18,041 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:11:18,041 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:11:18,041 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:11:18,041 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:11:18,041 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:11:18,041 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:11:18,042 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:11:18,042 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:11:18,042 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:11:18,043 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:11:18,043 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:11:18,066 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:11:18,080 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:11:18,083 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:11:18,084 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:11:18,084 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:11:18,085 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl
[2020-11-25 02:11:18,085 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl'
[2020-11-25 02:11:18,166 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:11:18,167 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:11:18,167 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:11:18,167 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:11:18,167 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:11:18,183 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,185 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,214 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,215 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,235 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,245 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,254 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,263 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:11:18,264 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:11:18,264 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:11:18,266 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:11:18,270 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/1) ...
[2020-11-25 02:11:18,286 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 02:11:18,292 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 02:11:18,300 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 02:11:18,307 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s289 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s289,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-25 02:11:18,311 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s289==true && allowance_TokenERC20[this][msg.sender][_spender_s289]==_value_s289 ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && sellPrice_NOL[this]==( old(sellPrice_NOL[this]) ) ) && buyPrice_NOL[this]==( old(buyPrice_NOL[this]) ) ) && frozenAccount_NOL[this]==( old(frozenAccount_NOL[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s289,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[_spender_s289,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s289,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sellPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sellPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-25 02:11:18,316 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 02:11:18,316 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:11:18,326 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:11:18 PropertyContainer
[2020-11-25 02:11:18,327 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:11:18,327 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:11:18,327 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:11:18,327 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:11:18,328 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/2) ...
[2020-11-25 02:11:18,328 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:11:18,329 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:11:18,350 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:11:18" (2/2) ...
[2020-11-25 02:11:18,351 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:11:18,351 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:11:18,352 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:11:18,352 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:11:18,353 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/2) ...
[2020-11-25 02:11:18,417 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:11:18,417 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 02:11:18,418 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 02:11:18,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 02:11:18,418 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 02:11:18,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 02:11:18,419 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 02:11:18,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 02:11:18,419 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:11:18,419 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:11:18,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:11:18,420 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 02:11:18,420 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 02:11:18,420 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 02:11:18,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 02:11:18,421 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,421 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 02:11:18,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 02:11:18,422 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 02:11:18,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 02:11:18,422 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 02:11:18,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 02:11:18,423 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 02:11:18,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 02:11:18,423 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 02:11:18,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 02:11:18,424 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 02:11:18,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 02:11:18,424 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 02:11:18,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 02:11:18,425 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 02:11:18,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 02:11:18,425 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 02:11:18,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 02:11:18,425 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 02:11:18,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 02:11:18,426 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 02:11:18,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 02:11:18,426 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 02:11:18,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 02:11:18,427 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL_NoBaseCtor__success
[2020-11-25 02:11:18,427 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL
[2020-11-25 02:11:18,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL
[2020-11-25 02:11:18,427 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__success
[2020-11-25 02:11:18,428 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL
[2020-11-25 02:11:18,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL
[2020-11-25 02:11:18,428 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL
[2020-11-25 02:11:18,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL
[2020-11-25 02:11:18,428 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL
[2020-11-25 02:11:18,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL
[2020-11-25 02:11:18,428 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL
[2020-11-25 02:11:18,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL
[2020-11-25 02:11:18,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL
[2020-11-25 02:11:18,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL
[2020-11-25 02:11:18,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL
[2020-11-25 02:11:18,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:11:18,429 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_NOL
[2020-11-25 02:11:18,430 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 02:11:18,431 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,432 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 02:11:18,433 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL_NoBaseCtor__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL__success
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL__fail
[2020-11-25 02:11:18,434 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL__success
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL__fail
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL__success
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL__fail
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL__success
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL__fail
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL__success
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL__fail
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL__success
[2020-11-25 02:11:18,435 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL__success
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL__success
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL__success
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:11:18,436 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 02:11:18,436 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:11:18,436 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:11:18,437 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 02:11:18,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL_NoBaseCtor__fail
[2020-11-25 02:11:18,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL_NoBaseCtor__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL__success
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL__fail
[2020-11-25 02:11:18,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL__fail
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL__fail
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL__fail
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL__fail
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:11:18,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 02:11:18,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_NOL
[2020-11-25 02:11:18,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:11:18,444 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:11:18,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:11:18,821 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:11:19,002 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:11:19,003 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:11:19,003 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:11:19,146 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:11:19,146 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 02:11:19,148 INFO  L202        PluginConnector]: Adding new model NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:11:19 BoogieIcfgContainer
[2020-11-25 02:11:19,149 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:11:18" (2/2) ...
[2020-11-25 02:11:19,149 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:11:19,149 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@52ba67c3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:11:19, skipping insertion in model container
[2020-11-25 02:11:19,149 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:11:19,150 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:11:19,150 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:11:19,151 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:11:19,152 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/3) ...
[2020-11-25 02:11:19,152 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@58ed0f4f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:11:19, skipping insertion in model container
[2020-11-25 02:11:19,152 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:11:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:11:19,191 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:11:19 NWAContainer
[2020-11-25 02:11:19,192 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:11:19,192 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:11:19,192 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:11:19,193 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:11:19,194 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:11:19" (3/4) ...
[2020-11-25 02:11:19,194 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@677b0fd0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:11:19, skipping insertion in model container
[2020-11-25 02:11:19,195 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:11:19" (4/4) ...
[2020-11-25 02:11:19,198 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:11:19,203 INFO  L110   BuchiProductObserver]: Initial RCFG 2321 locations, 3071 edges
[2020-11-25 02:11:19,203 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:11:19,216 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:11:20,538 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:11:20,545 INFO  L110   BuchiProductObserver]: BuchiProgram size 5484 locations, 9672 edges
[2020-11-25 02:11:20,546 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:11:20 BoogieIcfgContainer
[2020-11-25 02:11:20,546 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:11:20,546 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:11:20,546 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:11:20,547 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:11:20,548 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:11:20" (1/1) ...
[2020-11-25 02:11:20,633 INFO  L313           BlockEncoder]: Initial Icfg 5484 locations, 9672 edges
[2020-11-25 02:11:20,633 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:11:20,633 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:11:20,633 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:11:20,634 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:11:20,645 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 11 locations because of local infeasibility
[2020-11-25 02:11:20,654 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 02:11:20,666 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:11:20,669 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:11:20,673 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:11:20,674 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:11:20,677 INFO  L313           BlockEncoder]: Encoded RCFG 5428 locations, 9521 edges
[2020-11-25 02:11:20,677 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:11:20 BasicIcfg
[2020-11-25 02:11:20,677 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:11:20,677 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:11:20,678 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:11:20,680 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:11:20,680 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,680 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:11:18" (1/6) ...
[2020-11-25 02:11:20,681 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f346df2 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:11:20, skipping insertion in model container
[2020-11-25 02:11:20,681 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,681 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:11:18" (2/6) ...
[2020-11-25 02:11:20,682 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f346df2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:11:20, skipping insertion in model container
[2020-11-25 02:11:20,682 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,682 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:11:19" (3/6) ...
[2020-11-25 02:11:20,682 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f346df2 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:11:20, skipping insertion in model container
[2020-11-25 02:11:20,682 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,682 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:11:19" (4/6) ...
[2020-11-25 02:11:20,682 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f346df2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:11:20, skipping insertion in model container
[2020-11-25 02:11:20,682 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,682 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:11:20" (5/6) ...
[2020-11-25 02:11:20,683 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f346df2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:11:20, skipping insertion in model container
[2020-11-25 02:11:20,683 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:11:20,683 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:11:20" (6/6) ...
[2020-11-25 02:11:20,684 INFO  L404   chiAutomizerObserver]: Analyzing ICFG NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_approve.bpl_BEv2
[2020-11-25 02:11:20,710 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:11:20,710 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:11:20,710 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:11:20,710 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:11:20,710 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:11:20,710 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:11:20,710 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:11:20,710 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:11:20,711 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:11:20,745 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5428 states.
[2020-11-25 02:11:20,803 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:20,804 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:20,804 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:20,811 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:20,811 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:20,812 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:11:20,812 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5428 states.
[2020-11-25 02:11:20,847 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:20,847 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:20,847 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:20,849 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:20,849 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4899]              assume null == 0;
[L4900]  CALL        call this := FreshRefGenerator__success();
[L2465]              havoc newRef;
[L2466]              assume Alloc[newRef] == false;
[L2467]              Alloc[newRef] := true;
[L2468]              assume newRef != null;
[L4900]  RET         call this := FreshRefGenerator__success();
[L4901]              assume now >= 0;
[L4902]              assume DType[this] == NOL;
[L4903]              assume msgvalue_MSG == 0;
[L4904]              gas := gas - 53000;
[L4905]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1205]              havoc __exception;
[L1206]              revert := false;
[L1207]  COND FALSE  !(__exception)
[L1234]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3040]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2484]              assume msgsender_MSG != null;
[L2485]              Balance[this] := 0;
[L2486]              owner_owned[this] := null;
[L2488]              owner_owned[this] := msgsender_MSG;
[L2501]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L3040]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3041]  COND TRUE   revert
[L1234]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1235]              assume !revert && gas >= 0;
[L4905]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4906]              assume !revert && gas >= 0;

Loop:
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND TRUE   choice == 22
[L4747]              gas := gas - 21000;
[L4748]  COND FALSE  !(gas >= 0)
[L4909]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:11:20,865 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:11:20,865 INFO  L82        PathProgramCache]: Analyzing trace with hash 9553629, now seen corresponding path program 1 times
[2020-11-25 02:11:20,871 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:11:20,903 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:11:20,945 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:11:20,947 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:11:20,947 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:11:21,220 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:11:21,232 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:11:21,232 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:11:21,234 INFO  L87              Difference]: Start difference. First operand 5428 states. Second operand 4 states.
[2020-11-25 02:11:22,755 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:11:22,755 INFO  L93              Difference]: Finished difference Result 6368 states and 10735 transitions.
[2020-11-25 02:11:22,755 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:11:22,757 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6368 states and 10735 transitions.
[2020-11-25 02:11:22,793 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 02:11:22,837 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6368 states to 6118 states and 10314 transitions.
[2020-11-25 02:11:22,838 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 02:11:22,840 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 422
[2020-11-25 02:11:22,840 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6118 states and 10314 transitions.
[2020-11-25 02:11:22,861 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:11:22,862 INFO  L728         BuchiCegarLoop]: Abstraction has 6118 states and 10314 transitions.
[2020-11-25 02:11:22,878 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6118 states and 10314 transitions.
[2020-11-25 02:11:22,966 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6118 to 4938.
[2020-11-25 02:11:22,967 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4938 states.
[2020-11-25 02:11:22,977 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4938 states to 4938 states and 8135 transitions.
[2020-11-25 02:11:22,978 INFO  L751         BuchiCegarLoop]: Abstraction has 4938 states and 8135 transitions.
[2020-11-25 02:11:22,978 INFO  L631         BuchiCegarLoop]: Abstraction has 4938 states and 8135 transitions.
[2020-11-25 02:11:22,978 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:11:22,978 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4938 states and 8135 transitions.
[2020-11-25 02:11:22,990 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:22,991 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:22,991 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:22,992 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:22,992 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4899]              assume null == 0;
[L4900]  CALL        call this := FreshRefGenerator__success();
[L2465]              havoc newRef;
[L2466]              assume Alloc[newRef] == false;
[L2467]              Alloc[newRef] := true;
[L2468]              assume newRef != null;
[L4900]  RET         call this := FreshRefGenerator__success();
[L4901]              assume now >= 0;
[L4902]              assume DType[this] == NOL;
[L4903]              assume msgvalue_MSG == 0;
[L4904]              gas := gas - 53000;
[L4905]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1205]              havoc __exception;
[L1206]              revert := false;
[L1207]  COND FALSE  !(__exception)
[L1234]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3040]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2484]              assume msgsender_MSG != null;
[L2485]              Balance[this] := 0;
[L2486]              owner_owned[this] := null;
[L2488]              owner_owned[this] := msgsender_MSG;
[L2501]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L3040]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3041]  COND FALSE  !(revert)
[L3044]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2629]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2599]              name_TokenERC20[this] := 1234253568;
[L2600]              symbol_TokenERC20[this] := 1234253568;
[L2601]              decimals_TokenERC20[this] := 18;
[L2602]              totalSupply_TokenERC20[this] := 0;
[L2603]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2604]              sum_balanceOf0[this] := 0;
[L2605]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2606]              sum_allowance1[this] := 0;
[L2608]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2610]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2611]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2612]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2613]              name_TokenERC20[this] := tokenName_s124;
[L2614]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2629]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2630]  COND FALSE  !(revert)
[L3044]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3045]  COND FALSE  !(revert)
[L3048]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3014]              assume msgsender_MSG != null;
[L3015]              Balance[this] := 0;
[L3016]              sellPrice_NOL[this] := 0;
[L3017]              buyPrice_NOL[this] := 0;
[L3018]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3048]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3049]  COND FALSE  !(revert)
[L1234]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1235]              assume !revert && gas >= 0;
[L4905]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4906]              assume !revert && gas >= 0;

Loop:
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND TRUE   choice == 22
[L4747]              gas := gas - 21000;
[L4748]  COND FALSE  !(gas >= 0)
[L4909]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:11:22,995 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:11:22,996 INFO  L82        PathProgramCache]: Analyzing trace with hash -2016803518, now seen corresponding path program 1 times
[2020-11-25 02:11:22,996 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:11:23,004 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:11:23,024 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:11:23,025 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:11:23,025 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:11:23,026 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:11:23,026 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:11:23,026 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:11:23,026 INFO  L87              Difference]: Start difference. First operand 4938 states and 8135 transitions. cyclomatic complexity: 3203 Second operand 4 states.
[2020-11-25 02:11:23,829 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:11:23,829 INFO  L93              Difference]: Finished difference Result 4767 states and 5520 transitions.
[2020-11-25 02:11:23,829 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:11:23,830 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4767 states and 5520 transitions.
[2020-11-25 02:11:23,837 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:23,848 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4767 states to 4767 states and 5520 transitions.
[2020-11-25 02:11:23,848 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 174
[2020-11-25 02:11:23,849 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-25 02:11:23,849 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4767 states and 5520 transitions.
[2020-11-25 02:11:23,852 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:11:23,852 INFO  L728         BuchiCegarLoop]: Abstraction has 4767 states and 5520 transitions.
[2020-11-25 02:11:23,856 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4767 states and 5520 transitions.
[2020-11-25 02:11:23,885 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4767 to 4767.
[2020-11-25 02:11:23,885 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4767 states.
[2020-11-25 02:11:23,889 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4767 states to 4767 states and 5520 transitions.
[2020-11-25 02:11:23,890 INFO  L751         BuchiCegarLoop]: Abstraction has 4767 states and 5520 transitions.
[2020-11-25 02:11:23,890 INFO  L631         BuchiCegarLoop]: Abstraction has 4767 states and 5520 transitions.
[2020-11-25 02:11:23,890 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:11:23,890 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4767 states and 5520 transitions.
[2020-11-25 02:11:23,894 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:23,894 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:23,895 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:23,896 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:23,896 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4899]              assume null == 0;
[L4900]  CALL        call this := FreshRefGenerator__success();
[L2465]              havoc newRef;
[L2466]              assume Alloc[newRef] == false;
[L2467]              Alloc[newRef] := true;
[L2468]              assume newRef != null;
[L4900]  RET         call this := FreshRefGenerator__success();
[L4901]              assume now >= 0;
[L4902]              assume DType[this] == NOL;
[L4903]              assume msgvalue_MSG == 0;
[L4904]              gas := gas - 53000;
[L4905]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1205]              havoc __exception;
[L1206]              revert := false;
[L1207]  COND FALSE  !(__exception)
[L1234]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3040]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2484]              assume msgsender_MSG != null;
[L2485]              Balance[this] := 0;
[L2486]              owner_owned[this] := null;
[L2488]              owner_owned[this] := msgsender_MSG;
[L2501]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L3040]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3041]  COND FALSE  !(revert)
[L3044]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2629]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2599]              name_TokenERC20[this] := 1234253568;
[L2600]              symbol_TokenERC20[this] := 1234253568;
[L2601]              decimals_TokenERC20[this] := 18;
[L2602]              totalSupply_TokenERC20[this] := 0;
[L2603]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2604]              sum_balanceOf0[this] := 0;
[L2605]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2606]              sum_allowance1[this] := 0;
[L2608]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2610]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2611]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2612]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2613]              name_TokenERC20[this] := tokenName_s124;
[L2614]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2629]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2630]  COND FALSE  !(revert)
[L3044]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3045]  COND FALSE  !(revert)
[L3048]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3014]              assume msgsender_MSG != null;
[L3015]              Balance[this] := 0;
[L3016]              sellPrice_NOL[this] := 0;
[L3017]              buyPrice_NOL[this] := 0;
[L3018]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3048]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3049]  COND FALSE  !(revert)
[L1234]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1235]              assume !revert && gas >= 0;
[L4905]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4906]              assume !revert && gas >= 0;
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND FALSE  !(__exception)
[L583]   CALL        call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2790]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2791]              allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2792]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2793]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2794]              success_s289 := true;
[L583]   RET         call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L584]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s289 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s289] == _value_s289) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

Loop:
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND FALSE  !(__exception)
[L583]   CALL        call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2790]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2791]              allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2792]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2793]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2794]              success_s289 := true;
[L583]   RET         call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L584]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s289 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s289] == _value_s289) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:11:23,900 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:11:23,900 INFO  L82        PathProgramCache]: Analyzing trace with hash 1768800301, now seen corresponding path program 1 times
[2020-11-25 02:11:23,900 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:11:23,932 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:11:24,047 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:11:24,047 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:11:24,047 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 02:11:24,048 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:11:24,048 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 02:11:24,048 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 02:11:24,048 INFO  L87              Difference]: Start difference. First operand 4767 states and 5520 transitions. cyclomatic complexity: 759 Second operand 14 states.
[2020-11-25 02:11:26,442 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:11:26,442 INFO  L93              Difference]: Finished difference Result 4944 states and 5721 transitions.
[2020-11-25 02:11:26,442 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 02:11:26,442 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4944 states and 5721 transitions.
[2020-11-25 02:11:26,451 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 02:11:26,465 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4944 states to 4944 states and 5721 transitions.
[2020-11-25 02:11:26,465 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 213
[2020-11-25 02:11:26,465 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 213
[2020-11-25 02:11:26,465 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4944 states and 5721 transitions.
[2020-11-25 02:11:26,469 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:11:26,469 INFO  L728         BuchiCegarLoop]: Abstraction has 4944 states and 5721 transitions.
[2020-11-25 02:11:26,473 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4944 states and 5721 transitions.
[2020-11-25 02:11:26,504 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4944 to 4909.
[2020-11-25 02:11:26,505 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4909 states.
[2020-11-25 02:11:26,509 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4909 states to 4909 states and 5677 transitions.
[2020-11-25 02:11:26,509 INFO  L751         BuchiCegarLoop]: Abstraction has 4909 states and 5677 transitions.
[2020-11-25 02:11:26,510 INFO  L631         BuchiCegarLoop]: Abstraction has 4909 states and 5677 transitions.
[2020-11-25 02:11:26,510 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:11:26,510 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4909 states and 5677 transitions.
[2020-11-25 02:11:26,514 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:11:26,515 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:26,515 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:26,517 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:26,517 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4899]              assume null == 0;
[L4900]  CALL        call this := FreshRefGenerator__success();
[L2465]              havoc newRef;
[L2466]              assume Alloc[newRef] == false;
[L2467]              Alloc[newRef] := true;
[L2468]              assume newRef != null;
[L4900]  RET         call this := FreshRefGenerator__success();
[L4901]              assume now >= 0;
[L4902]              assume DType[this] == NOL;
[L4903]              assume msgvalue_MSG == 0;
[L4904]              gas := gas - 53000;
[L4905]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1205]              havoc __exception;
[L1206]              revert := false;
[L1207]  COND FALSE  !(__exception)
[L1234]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3040]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2484]              assume msgsender_MSG != null;
[L2485]              Balance[this] := 0;
[L2486]              owner_owned[this] := null;
[L2488]              owner_owned[this] := msgsender_MSG;
[L2501]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L3040]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3041]  COND FALSE  !(revert)
[L3044]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2629]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2599]              name_TokenERC20[this] := 1234253568;
[L2600]              symbol_TokenERC20[this] := 1234253568;
[L2601]              decimals_TokenERC20[this] := 18;
[L2602]              totalSupply_TokenERC20[this] := 0;
[L2603]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2604]              sum_balanceOf0[this] := 0;
[L2605]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2606]              sum_allowance1[this] := 0;
[L2608]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2610]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2611]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2612]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2613]              name_TokenERC20[this] := tokenName_s124;
[L2614]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2629]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2630]  COND FALSE  !(revert)
[L3044]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3045]  COND FALSE  !(revert)
[L3048]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3014]              assume msgsender_MSG != null;
[L3015]              Balance[this] := 0;
[L3016]              sellPrice_NOL[this] := 0;
[L3017]              buyPrice_NOL[this] := 0;
[L3018]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3048]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3049]  COND FALSE  !(revert)
[L1234]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1235]              assume !revert && gas >= 0;
[L4905]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4906]              assume !revert && gas >= 0;
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND TRUE   __exception
[L557]               __tmp__Balance := Balance;
[L558]               __tmp__DType := DType;
[L559]               __tmp__Alloc := Alloc;
[L560]               __tmp__balance_ADDR := balance_ADDR;
[L561]               __tmp__M_Ref_int := M_Ref_int;
[L562]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L563]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L564]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L565]               __tmp__sum_allowance1 := sum_allowance1;
[L566]               __tmp__M_Ref_bool := M_Ref_bool;
[L567]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L568]               __tmp__Length := Length;
[L569]               __tmp__now := now;
[L570]               __tmp__owner_owned := owner_owned;
[L571]               __tmp__name_TokenERC20 := name_TokenERC20;
[L572]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L573]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L574]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L575]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L576]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L577]               __tmp__sellPrice_NOL := sellPrice_NOL;
[L578]               __tmp__buyPrice_NOL := buyPrice_NOL;
[L579]               __tmp__frozenAccount_NOL := frozenAccount_NOL;
[L580]   CALL        call success_s289 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2781]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2782]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2783]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2784]              success_s289 := true;
[L580]   RET         call success_s289 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L581]               assume revert || gas < 0;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

Loop:
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND TRUE   __exception
[L557]               __tmp__Balance := Balance;
[L558]               __tmp__DType := DType;
[L559]               __tmp__Alloc := Alloc;
[L560]               __tmp__balance_ADDR := balance_ADDR;
[L561]               __tmp__M_Ref_int := M_Ref_int;
[L562]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L563]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L564]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L565]               __tmp__sum_allowance1 := sum_allowance1;
[L566]               __tmp__M_Ref_bool := M_Ref_bool;
[L567]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L568]               __tmp__Length := Length;
[L569]               __tmp__now := now;
[L570]               __tmp__owner_owned := owner_owned;
[L571]               __tmp__name_TokenERC20 := name_TokenERC20;
[L572]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L573]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L574]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L575]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L576]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L577]               __tmp__sellPrice_NOL := sellPrice_NOL;
[L578]               __tmp__buyPrice_NOL := buyPrice_NOL;
[L579]               __tmp__frozenAccount_NOL := frozenAccount_NOL;
[L580]   CALL        call success_s289 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2781]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2782]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2783]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2784]              success_s289 := true;
[L580]   RET         call success_s289 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L581]               assume revert || gas < 0;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:11:26,520 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:11:26,520 INFO  L82        PathProgramCache]: Analyzing trace with hash -1670730748, now seen corresponding path program 1 times
[2020-11-25 02:11:26,520 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:11:26,528 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:11:26,552 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:11:26,552 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:11:26,552 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 02:11:26,552 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:11:26,552 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 02:11:26,553 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 02:11:26,553 INFO  L87              Difference]: Start difference. First operand 4909 states and 5677 transitions. cyclomatic complexity: 776 Second operand 5 states.
[2020-11-25 02:11:27,247 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:11:27,247 INFO  L93              Difference]: Finished difference Result 6021 states and 6974 transitions.
[2020-11-25 02:11:27,247 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 02:11:27,247 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6021 states and 6974 transitions.
[2020-11-25 02:11:27,258 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 02:11:27,271 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6021 states to 5186 states and 6039 transitions.
[2020-11-25 02:11:27,271 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 231
[2020-11-25 02:11:27,271 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 231
[2020-11-25 02:11:27,271 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5186 states and 6039 transitions.
[2020-11-25 02:11:27,275 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:11:27,275 INFO  L728         BuchiCegarLoop]: Abstraction has 5186 states and 6039 transitions.
[2020-11-25 02:11:27,279 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5186 states and 6039 transitions.
[2020-11-25 02:11:27,307 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5186 to 4119.
[2020-11-25 02:11:27,307 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4119 states.
[2020-11-25 02:11:27,311 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4119 states to 4119 states and 4735 transitions.
[2020-11-25 02:11:27,312 INFO  L751         BuchiCegarLoop]: Abstraction has 4119 states and 4735 transitions.
[2020-11-25 02:11:27,312 INFO  L631         BuchiCegarLoop]: Abstraction has 4119 states and 4735 transitions.
[2020-11-25 02:11:27,312 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 02:11:27,312 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4119 states and 4735 transitions.
[2020-11-25 02:11:27,316 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:11:27,316 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:11:27,316 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:11:27,317 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:11:27,317 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4899]              assume null == 0;
[L4900]  CALL        call this := FreshRefGenerator__success();
[L2465]              havoc newRef;
[L2466]              assume Alloc[newRef] == false;
[L2467]              Alloc[newRef] := true;
[L2468]              assume newRef != null;
[L4900]  RET         call this := FreshRefGenerator__success();
[L4901]              assume now >= 0;
[L4902]              assume DType[this] == NOL;
[L4903]              assume msgvalue_MSG == 0;
[L4904]              gas := gas - 53000;
[L4905]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1205]              havoc __exception;
[L1206]              revert := false;
[L1207]  COND FALSE  !(__exception)
[L1234]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3040]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2484]              assume msgsender_MSG != null;
[L2485]              Balance[this] := 0;
[L2486]              owner_owned[this] := null;
[L2488]              owner_owned[this] := msgsender_MSG;
[L2501]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L3040]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3041]  COND FALSE  !(revert)
[L3044]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2629]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2599]              name_TokenERC20[this] := 1234253568;
[L2600]              symbol_TokenERC20[this] := 1234253568;
[L2601]              decimals_TokenERC20[this] := 18;
[L2602]              totalSupply_TokenERC20[this] := 0;
[L2603]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2604]              sum_balanceOf0[this] := 0;
[L2605]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2606]              sum_allowance1[this] := 0;
[L2608]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2610]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2611]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2612]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2613]              name_TokenERC20[this] := tokenName_s124;
[L2614]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2629]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2630]  COND FALSE  !(revert)
[L3044]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3045]  COND FALSE  !(revert)
[L3048]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3014]              assume msgsender_MSG != null;
[L3015]              Balance[this] := 0;
[L3016]              sellPrice_NOL[this] := 0;
[L3017]              buyPrice_NOL[this] := 0;
[L3018]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3048]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3049]  COND FALSE  !(revert)
[L1234]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1235]              assume !revert && gas >= 0;
[L4905]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4906]              assume !revert && gas >= 0;
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s289);
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND FALSE  !(__exception)
[L583]   CALL        call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2790]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2791]              allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2792]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2793]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2794]              success_s289 := true;
[L583]   RET         call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L584]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s289 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s289] == _value_s289) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND FALSE  !(__exception)
[L583]   CALL        call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2790]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2791]              allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2792]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2793]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2794]              success_s289 := true;
[L583]   RET         call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L584]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s289 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s289] == _value_s289) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

Loop:
[L4909]  CALL        call CorralChoice_NOL(this);
[L4684]              havoc msgsender_MSG;
[L4685]              havoc msgvalue_MSG;
[L4686]              havoc choice;
[L4687]              havoc __ret_0_owner;
[L4688]              havoc newOwner_s35;
[L4689]              havoc __ret_0_name;
[L4690]              havoc __ret_0_symbol;
[L4691]              havoc __ret_0_decimals;
[L4692]              havoc __ret_0_totalSupply;
[L4693]              havoc arg662_s0;
[L4694]              havoc __ret_0_balanceOf;
[L4695]              havoc arg663_s0;
[L4696]              havoc arg664_s0;
[L4697]              havoc __ret_0_allowance;
[L4698]              havoc initialSupply_s124;
[L4699]              havoc tokenName_s124;
[L4700]              havoc tokenSymbol_s124;
[L4701]              havoc _to_s221;
[L4702]              havoc _value_s221;
[L4703]              havoc success_s221;
[L4704]              havoc _from_s261;
[L4705]              havoc _to_s261;
[L4706]              havoc _value_s261;
[L4707]              havoc success_s261;
[L4708]              havoc _spender_s289;
[L4709]              havoc _value_s289;
[L4710]              havoc success_s289;
[L4711]              havoc _spender_s327;
[L4712]              havoc _value_s327;
[L4713]              havoc _extraData_s327;
[L4714]              havoc success_s327;
[L4715]              havoc _value_s363;
[L4716]              havoc success_s363;
[L4717]              havoc _from_s418;
[L4718]              havoc _value_s418;
[L4719]              havoc success_s418;
[L4720]              havoc __ret_0_sellPrice;
[L4721]              havoc __ret_0_buyPrice;
[L4722]              havoc arg665_s0;
[L4723]              havoc __ret_0_frozenAccount;
[L4724]              havoc initialSupply_s452;
[L4725]              havoc tokenName_s452;
[L4726]              havoc tokenSymbol_s452;
[L4727]              havoc target_s560;
[L4728]              havoc mintedAmount_s560;
[L4729]              havoc target_s581;
[L4730]              havoc freeze_s581;
[L4731]              havoc newSellPrice_s599;
[L4732]              havoc newBuyPrice_s599;
[L4733]              havoc amount_s659;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != owned;
[L4742]              assume DType[msgsender_MSG] != tokenRecipient;
[L4743]              assume DType[msgsender_MSG] != TokenERC20;
[L4744]              assume DType[msgsender_MSG] != NOL;
[L4745]              Alloc[msgsender_MSG] := true;
[L4746]  COND FALSE  !(choice == 22)
[L4752]  COND FALSE  !(choice == 21)
[L4758]  COND FALSE  !(choice == 20)
[L4764]  COND FALSE  !(choice == 19)
[L4770]  COND FALSE  !(choice == 18)
[L4776]  COND FALSE  !(choice == 17)
[L4782]  COND FALSE  !(choice == 16)
[L4788]  COND FALSE  !(choice == 15)
[L4794]  COND FALSE  !(choice == 14)
[L4801]  COND FALSE  !(choice == 13)
[L4808]  COND TRUE   choice == 12
[L4809]              gas := gas - 21000;
[L4810]  COND TRUE   gas >= 0
[L4811]              assume _value_s289 >= 0 && _value_s289 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4812]              assume msgvalue_MSG == 0;
[L4813]  CALL        call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s289;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L554]               havoc __exception;
[L555]               revert := false;
[L556]   COND FALSE  !(__exception)
[L583]   CALL        call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L2790]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2791]              allowance_TokenERC20[this][msgsender_MSG][_spender_s289] := _value_s289;
[L2792]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s289];
[L2793]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2794]              success_s289 := true;
[L583]   RET         call success_s289 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L584]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s289 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s289] == _value_s289) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4813]  RET         call success_s289 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s289, _value_s289);
[L4909]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:11:27,320 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:11:27,321 INFO  L82        PathProgramCache]: Analyzing trace with hash 437455561, now seen corresponding path program 1 times
[2020-11-25 02:11:27,321 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:11:27,339 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:11:27,403 INFO  L134       CoverageAnalysis]: Checked inductivity of 84 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 80 trivial. 0 not checked.
[2020-11-25 02:11:27,403 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:11:27,403 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 02:11:27,403 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:11:27,403 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 02:11:27,403 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 02:11:27,404 INFO  L87              Difference]: Start difference. First operand 4119 states and 4735 transitions. cyclomatic complexity: 623 Second operand 7 states.
[2020-11-25 02:11:27,939 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:11:27,940 INFO  L93              Difference]: Finished difference Result 2138 states and 2446 transitions.
[2020-11-25 02:11:27,940 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 02:11:27,941 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2138 states and 2446 transitions.
[2020-11-25 02:11:27,951 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:11:27,952 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2138 states to 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 02:11:27,952 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 02:11:27,952 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:11:27,952 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 02:11:27,952 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 02:11:27,952 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:11:27,952 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 02:11:27,955 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:11:27 BasicIcfg
[2020-11-25 02:11:27,956 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:11:27,956 INFO  L168              Benchmark]: Toolchain (without parser) took 9789.93 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 807.4 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -148.1 MB). Peak memory consumption was 659.3 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,957 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,957 INFO  L168              Benchmark]: Boogie Preprocessor took 96.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,957 INFO  L168              Benchmark]: UtopiaSpecLang took 62.68 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,958 INFO  L168              Benchmark]: Boogie Printer took 23.85 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,958 INFO  L168              Benchmark]: RCFGBuilder took 798.11 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.5 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,958 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.00 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,959 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1353.89 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 175.6 MB). Free memory was 775.9 MB in the beginning and 899.3 MB in the end (delta: -123.4 MB). Peak memory consumption was 152.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,959 INFO  L168              Benchmark]: BlockEncodingV2 took 131.31 ms. Allocated memory is still 1.2 GB. Free memory was 899.3 MB in the beginning and 831.4 MB in the end (delta: 67.9 MB). Peak memory consumption was 67.9 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,959 INFO  L168              Benchmark]: BuchiAutomizer took 7278.13 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 631.8 MB). Free memory was 831.4 MB in the beginning and 1.1 GB in the end (delta: -257.3 MB). Peak memory consumption was 374.5 MB. Max. memory is 15.3 GB.
[2020-11-25 02:11:27,962 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5484 locations, 9672 edges
  - StatisticsResult: Encoded RCFG
    5428 locations, 9521 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 62.68 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 23.85 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 798.11 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.5 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.00 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1353.89 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 175.6 MB). Free memory was 775.9 MB in the beginning and 899.3 MB in the end (delta: -123.4 MB). Peak memory consumption was 152.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 131.31 ms. Allocated memory is still 1.2 GB. Free memory was 899.3 MB in the beginning and 831.4 MB in the end (delta: 67.9 MB). Peak memory consumption was 67.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7278.13 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 631.8 MB). Free memory was 831.4 MB in the beginning and 1.1 GB in the end (delta: -257.3 MB). Peak memory consumption was 374.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2321 locations, 3071 edges
  - StatisticsResult: BuchiProgram size
    5484 locations, 9672 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.2s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.6s. Construction of modules took 4.7s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 2282 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4938 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 27304 SDtfs, 30486 SDslu, 39135 SDs, 0 SdLazy, 48201 SolverSat, 5701 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_TokenERC200) ==> ( <>(success_approve_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
