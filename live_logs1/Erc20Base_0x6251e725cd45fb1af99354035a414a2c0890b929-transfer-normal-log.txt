This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:04:18,440 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:04:18,441 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:04:18,451 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:04:18,452 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:04:18,452 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:04:18,453 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:04:18,455 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:04:18,457 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:04:18,457 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:04:18,458 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:04:18,458 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:04:18,459 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:04:18,460 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:04:18,460 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:04:18,461 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:04:18,462 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:04:18,463 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:04:18,464 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:04:18,466 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:04:18,466 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:04:18,467 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:04:18,469 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:04:18,469 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:04:18,469 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:04:18,470 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:04:18,470 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:04:18,471 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:04:18,471 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:04:18,471 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:04:18,472 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:04:18,472 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:04:18,473 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:04:18,473 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:04:18,474 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:04:18,474 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:04:18,475 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:04:18,475 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:04:18,475 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:04:18,476 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:04:18,476 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:04:18,476 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:04:18,484 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:04:18,484 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:04:18,485 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:04:18,485 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:04:18,485 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:04:18,485 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:04:18,485 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:04:18,486 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:04:18,486 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:04:18,486 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:04:18,487 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:04:18,487 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:04:18,508 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:04:18,520 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:04:18,523 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:04:18,524 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:04:18,525 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:04:18,525 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl
[2020-11-25 15:04:18,525 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl'
[2020-11-25 15:04:18,601 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:04:18,602 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:04:18,603 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:04:18,603 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:04:18,603 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:04:18,619 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,621 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,647 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,648 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,667 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,676 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,682 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,692 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:04:18,692 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:04:18,692 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:04:18,694 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:04:18,698 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/1) ...
[2020-11-25 15:04:18,716 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20Token.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_ERC20Token[this][msg.sender] && balances_ERC20Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][to] >= 0 && balances_ERC20Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][msg.sender] >= 0 &&  balances_ERC20Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Token.transfer(to, value), return == true && balances_ERC20Token[this][msg.sender] == old(balances_ERC20Token[this][msg.sender]) - value && balances_ERC20Token[this][to] == old(balances_ERC20Token[this][to]) + value && totalSupply_ERC20[this] == old(totalSupply_ERC20[this]) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this]) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1]) && name_Erc20Base[this] == old(name_Erc20Base[this]) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this]) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this]) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 15:04:18,721 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20Token.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_ERC20Token[this][msg.sender] && balances_ERC20Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][to] >= 0 && balances_ERC20Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][msg.sender] >= 0 &&  balances_ERC20Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Token.transfer(to, value), return == true && balances_ERC20Token[this][msg.sender] == old(balances_ERC20Token[this][msg.sender]) - value && balances_ERC20Token[this][to] == old(balances_ERC20Token[this][to]) + value && totalSupply_ERC20[this] == old(totalSupply_ERC20[this]) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this]) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1]) && name_Erc20Base[this] == old(name_Erc20Base[this]) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this]) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this]) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 15:04:18,731 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20Token.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_ERC20Token[this][msg.sender] && balances_ERC20Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][to] >= 0 && balances_ERC20Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][msg.sender] >= 0 &&  balances_ERC20Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Token.transfer(to, value), return == true && balances_ERC20Token[this][msg.sender] == old(balances_ERC20Token[this][msg.sender]) - value && balances_ERC20Token[this][to] == old(balances_ERC20Token[this][to]) + value && totalSupply_ERC20[this] == old(totalSupply_ERC20[this]) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this]) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1]) && name_Erc20Base[this] == old(name_Erc20Base[this]) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this]) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this]) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 15:04:18,745 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s326 ) && msg.sender!=_to_s326 ) && _value_s326<=balances_ERC20Token[this][msg.sender] ) && ( balances_ERC20Token[this][_to_s326] + _value_s326 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s326>=0 ) && _value_s326<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_ERC20Token[this][_to_s326]>=0 ) && balances_ERC20Token[this][_to_s326]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_ERC20Token[this][msg.sender]>=0 ) && balances_ERC20Token[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>],IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:04:18,748 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_ERC20Token[this][msg.sender]==( ( old(balances_ERC20Token[this][msg.sender]) ) - _value_s326 ) ) && balances_ERC20Token[this][_to_s326]==( ( old(balances_ERC20Token[this][_to_s326]) ) + _value_s326 ) ) && totalSupply_ERC20[this]==( old(totalSupply_ERC20[this]) ) ) && allowed_ERC20Token[this]==( old(allowed_ERC20Token[this]) ) ) && balances_ERC20Token[this][p1]==( old(balances_ERC20Token[this][p1]) ) ) && name_Erc20Base[this]==( old(name_Erc20Base[this]) ) ) && symbol_Erc20Base[this]==( old(symbol_Erc20Base[this]) ) ) && decimals_Erc20Base[this]==( old(decimals_Erc20Base[this]) ) ) && transferable_ERC20Token[this]==( old(transferable_ERC20Token[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20Token>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Erc20Base,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferable_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferable_ERC20Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Token>]]]]]]
[2020-11-25 15:04:18,752 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20Token.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_ERC20Token[this][msg.sender] && balances_ERC20Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][to] >= 0 && balances_ERC20Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_ERC20Token[this][msg.sender] >= 0 &&  balances_ERC20Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Token.transfer(to, value), return == true && balances_ERC20Token[this][msg.sender] == old(balances_ERC20Token[this][msg.sender]) - value && balances_ERC20Token[this][to] == old(balances_ERC20Token[this][to]) + value && totalSupply_ERC20[this] == old(totalSupply_ERC20[this]) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this]) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1]) && name_Erc20Base[this] == old(name_Erc20Base[this]) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this]) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this]) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 15:04:18,752 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC20Token0) ==> ( <>AP(success_transfer_ERC20Token0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:04:18,760 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:04:18 PropertyContainer
[2020-11-25 15:04:18,761 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:04:18,761 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:04:18,761 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:04:18,761 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:04:18,762 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/2) ...
[2020-11-25 15:04:18,762 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:04:18,762 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:04:18,778 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:04:18" (2/2) ...
[2020-11-25 15:04:18,778 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:04:18,779 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:04:18,779 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:04:18,779 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:04:18,780 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/2) ...
[2020-11-25 15:04:18,830 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:04:18,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:04:18,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:04:18,831 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:04:18,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 15:04:18,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 15:04:18,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Token_ERC20Token_NoBaseCtor__success
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Token_ERC20Token
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Token_ERC20Token
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure setTransferable~bool_ERC20Token
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure setTransferable~bool_ERC20Token
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Token
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Token
[2020-11-25 15:04:18,833 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Token
[2020-11-25 15:04:18,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Token
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Token
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Token
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure signature_ERC20Token
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure signature_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Token__success
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferable_ERC20Token
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferable_ERC20Token
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Erc20Base_Erc20Base_NoBaseCtor__success
[2020-11-25 15:04:18,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Erc20Base_Erc20Base
[2020-11-25 15:04:18,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure Erc20Base_Erc20Base
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Erc20Base
[2020-11-25 15:04:18,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Erc20Base
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Erc20Base
[2020-11-25 15:04:18,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Erc20Base
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Erc20Base
[2020-11-25 15:04:18,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Erc20Base
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__success
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:04:18,835 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Token
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Token
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Erc20Base
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:04:18,836 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 15:04:18,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Token_ERC20Token_NoBaseCtor__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Token_ERC20Token__success
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Token_ERC20Token__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure setTransferable~bool_ERC20Token__success
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure setTransferable~bool_ERC20Token__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,838 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Token__success
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Token__fail
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Token__success
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Token__fail
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure signature_ERC20Token__success
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure signature_ERC20Token__fail
[2020-11-25 15:04:18,839 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Token__fail
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure transferable_ERC20Token__success
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure transferable_ERC20Token__fail
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure Erc20Base_Erc20Base_NoBaseCtor__fail
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure Erc20Base_Erc20Base__success
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure Erc20Base_Erc20Base__fail
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Erc20Base__success
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Erc20Base__fail
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Erc20Base__success
[2020-11-25 15:04:18,840 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Erc20Base__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Erc20Base__success
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Erc20Base__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:04:18,841 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__fail
[2020-11-25 15:04:18,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:04:18,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:04:18,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:04:18,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:04:18,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:04:18,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Token_ERC20Token_NoBaseCtor__fail
[2020-11-25 15:04:18,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Token_ERC20Token_NoBaseCtor__success
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Token_ERC20Token__fail
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Token_ERC20Token__success
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure setTransferable~bool_ERC20Token__fail
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure setTransferable~bool_ERC20Token__success
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20Token__fail
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20Token__success
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Token__fail
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20Token__fail
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure signature_ERC20Token__fail
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure signature_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Token__fail
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferable_ERC20Token__fail
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferable_ERC20Token__success
[2020-11-25 15:04:18,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure Erc20Base_Erc20Base_NoBaseCtor__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure Erc20Base_Erc20Base_NoBaseCtor__success
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure Erc20Base_Erc20Base__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure Erc20Base_Erc20Base__success
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Erc20Base__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Erc20Base__success
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Erc20Base__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Erc20Base__success
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Erc20Base__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Erc20Base__success
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:04:18,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__fail
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__success
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:04:18,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Token
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Token
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Erc20Base
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:04:18,849 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:04:18,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:04:19,138 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:04:19,138 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:04:19,139 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:04:19,234 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:04:19,452 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:04:19,452 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 15:04:19,454 INFO  L202        PluginConnector]: Adding new model Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:04:19 BoogieIcfgContainer
[2020-11-25 15:04:19,454 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:04:18" (2/2) ...
[2020-11-25 15:04:19,454 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:04:19,455 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@36a9596 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:04:19, skipping insertion in model container
[2020-11-25 15:04:19,455 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:04:19,455 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:04:19,455 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:04:19,456 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:04:19,456 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/3) ...
[2020-11-25 15:04:19,457 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@87ee025 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:04:19, skipping insertion in model container
[2020-11-25 15:04:19,457 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:04:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:04:19,492 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:04:19 NWAContainer
[2020-11-25 15:04:19,492 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:04:19,492 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:04:19,492 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:04:19,493 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:04:19,494 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:04:19" (3/4) ...
[2020-11-25 15:04:19,494 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@488b067 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:04:19, skipping insertion in model container
[2020-11-25 15:04:19,495 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:04:19" (4/4) ...
[2020-11-25 15:04:19,497 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:04:19,501 INFO  L110   BuchiProductObserver]: Initial RCFG 1322 locations, 1716 edges
[2020-11-25 15:04:19,501 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:04:19,511 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:04:20,931 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:04:20,937 INFO  L110   BuchiProductObserver]: BuchiProgram size 3204 locations, 5609 edges
[2020-11-25 15:04:20,937 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:04:20 BoogieIcfgContainer
[2020-11-25 15:04:20,937 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:04:20,938 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:04:20,938 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:04:20,940 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:04:20,940 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:04:20" (1/1) ...
[2020-11-25 15:04:21,029 INFO  L313           BlockEncoder]: Initial Icfg 3204 locations, 5609 edges
[2020-11-25 15:04:21,030 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:04:21,030 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:04:21,031 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:04:21,031 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:04:21,043 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 13 locations because of local infeasibility
[2020-11-25 15:04:21,051 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 15:04:21,063 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:04:21,069 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:04:21,073 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:04:21,073 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:04:21,079 INFO  L313           BlockEncoder]: Encoded RCFG 3170 locations, 5527 edges
[2020-11-25 15:04:21,079 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:04:21 BasicIcfg
[2020-11-25 15:04:21,079 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:04:21,080 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:04:21,080 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:04:21,082 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:04:21,083 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,083 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:04:18" (1/6) ...
[2020-11-25 15:04:21,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51fce096 and model type Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:04:21, skipping insertion in model container
[2020-11-25 15:04:21,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:04:18" (2/6) ...
[2020-11-25 15:04:21,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51fce096 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:04:21, skipping insertion in model container
[2020-11-25 15:04:21,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:04:19" (3/6) ...
[2020-11-25 15:04:21,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51fce096 and model type Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:04:21, skipping insertion in model container
[2020-11-25 15:04:21,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,086 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:04:19" (4/6) ...
[2020-11-25 15:04:21,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51fce096 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:04:21, skipping insertion in model container
[2020-11-25 15:04:21,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,086 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:04:20" (5/6) ...
[2020-11-25 15:04:21,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@51fce096 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:04:21, skipping insertion in model container
[2020-11-25 15:04:21,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:04:21,087 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:04:21" (6/6) ...
[2020-11-25 15:04:21,088 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Erc20Base_0x6251e725cd45fb1af99354035a414a2c0890b929_transfer-normal.bpl_BEv2
[2020-11-25 15:04:21,128 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:04:21,129 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:04:21,129 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:04:21,129 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:04:21,129 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:04:21,129 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:04:21,129 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:04:21,129 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:04:21,129 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:04:21,166 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3170 states.
[2020-11-25 15:04:21,220 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:04:21,220 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:04:21,220 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:04:21,230 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:21,230 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:21,230 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:04:21,230 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3170 states.
[2020-11-25 15:04:21,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:04:21,248 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:04:21,248 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:04:21,250 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:21,250 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Token0 := false;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3816]              assume null == 0;
[L3817]  CALL        call this := FreshRefGenerator__success();
[L1655]              havoc newRef;
[L1656]              assume Alloc[newRef] == false;
[L1657]              Alloc[newRef] := true;
[L1658]              assume newRef != null;
[L3817]  RET         call this := FreshRefGenerator__success();
[L3818]              assume now >= 0;
[L3819]              assume DType[this] == Erc20Base;
[L3820]              assume msgvalue_MSG == 0;
[L3821]              gas := gas - 53000;
[L3822]  CALL        call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L952]               havoc __exception;
[L953]               revert := false;
[L954]   COND FALSE  !(__exception)
[L977]   CALL        call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2284]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L2284]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND TRUE   revert
[L977]   RET         call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L978]               assume !revert && gas >= 0;
[L3822]  RET         call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L3823]              assume !revert && gas >= 0;

Loop:
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND TRUE   choice == 14
[L3717]              gas := gas - 21000;
[L3718]  COND FALSE  !(gas >= 0)
[L3826]  RET         call CorralChoice_Erc20Base(this);

[2020-11-25 15:04:21,267 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:21,268 INFO  L82        PathProgramCache]: Analyzing trace with hash 1661600436, now seen corresponding path program 1 times
[2020-11-25 15:04:21,272 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:21,294 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:04:21,332 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:04:21,334 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:04:21,335 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:04:21,482 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:04:21,494 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:04:21,495 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:04:21,496 INFO  L87              Difference]: Start difference. First operand 3170 states. Second operand 4 states.
[2020-11-25 15:04:21,818 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:04:21,818 INFO  L93              Difference]: Finished difference Result 1953 states and 2158 transitions.
[2020-11-25 15:04:21,818 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:04:21,820 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1953 states and 2158 transitions.
[2020-11-25 15:04:21,834 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:04:21,851 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1953 states to 1949 states and 2150 transitions.
[2020-11-25 15:04:21,852 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:04:21,854 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 658
[2020-11-25 15:04:21,855 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1949 states and 2150 transitions.
[2020-11-25 15:04:21,862 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:04:21,862 INFO  L728         BuchiCegarLoop]: Abstraction has 1949 states and 2150 transitions.
[2020-11-25 15:04:21,880 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1949 states and 2150 transitions.
[2020-11-25 15:04:21,920 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1949 to 1949.
[2020-11-25 15:04:21,921 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1949 states.
[2020-11-25 15:04:21,927 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1949 states to 1949 states and 2150 transitions.
[2020-11-25 15:04:21,928 INFO  L751         BuchiCegarLoop]: Abstraction has 1949 states and 2150 transitions.
[2020-11-25 15:04:21,928 INFO  L631         BuchiCegarLoop]: Abstraction has 1949 states and 2150 transitions.
[2020-11-25 15:04:21,928 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:04:21,928 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1949 states and 2150 transitions.
[2020-11-25 15:04:21,936 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:04:21,936 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:04:21,936 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:04:21,938 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:21,938 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Token0 := false;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3816]              assume null == 0;
[L3817]  CALL        call this := FreshRefGenerator__success();
[L1655]              havoc newRef;
[L1656]              assume Alloc[newRef] == false;
[L1657]              Alloc[newRef] := true;
[L1658]              assume newRef != null;
[L3817]  RET         call this := FreshRefGenerator__success();
[L3818]              assume now >= 0;
[L3819]              assume DType[this] == Erc20Base;
[L3820]              assume msgvalue_MSG == 0;
[L3821]              gas := gas - 53000;
[L3822]  CALL        call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L952]               havoc __exception;
[L953]               revert := false;
[L954]   COND FALSE  !(__exception)
[L977]   CALL        call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2284]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L2284]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND TRUE   revert
[L977]   RET         call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L978]               assume !revert && gas >= 0;
[L3822]  RET         call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L3823]              assume !revert && gas >= 0;
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1999]  CALL        call canTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3250]  COND FALSE  !(!(transferable_ERC20Token[this] == true))
[L1999]  RET         call canTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L569]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_ERC20Token[this][msgsender_MSG] == old(balances_ERC20Token[this][msgsender_MSG]) - _value_s326) && balances_ERC20Token[this][_to_s326] == old(balances_ERC20Token[this][_to_s326]) + _value_s326) && totalSupply_ERC20[this] == old(totalSupply_ERC20[this])) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this])) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1])) && name_Erc20Base[this] == old(name_Erc20Base[this])) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this])) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this])) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

Loop:
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1999]  CALL        call canTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3250]  COND FALSE  !(!(transferable_ERC20Token[this] == true))
[L1999]  RET         call canTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L569]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_ERC20Token[this][msgsender_MSG] == old(balances_ERC20Token[this][msgsender_MSG]) - _value_s326) && balances_ERC20Token[this][_to_s326] == old(balances_ERC20Token[this][_to_s326]) + _value_s326) && totalSupply_ERC20[this] == old(totalSupply_ERC20[this])) && allowed_ERC20Token[this] == old(allowed_ERC20Token[this])) && balances_ERC20Token[this][p1] == old(balances_ERC20Token[this][p1])) && name_Erc20Base[this] == old(name_Erc20Base[this])) && symbol_Erc20Base[this] == old(symbol_Erc20Base[this])) && decimals_Erc20Base[this] == old(decimals_Erc20Base[this])) && transferable_ERC20Token[this] == old(transferable_ERC20Token[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

[2020-11-25 15:04:21,943 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:21,943 INFO  L82        PathProgramCache]: Analyzing trace with hash 1127448014, now seen corresponding path program 1 times
[2020-11-25 15:04:21,944 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:21,955 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:04:21,979 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:04:21,979 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:04:21,980 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:04:21,981 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:04:21,981 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:04:21,981 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:04:21,982 INFO  L87              Difference]: Start difference. First operand 1949 states and 2150 transitions. cyclomatic complexity: 203 Second operand 4 states.
[2020-11-25 15:04:22,367 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:04:22,367 INFO  L93              Difference]: Finished difference Result 2777 states and 3144 transitions.
[2020-11-25 15:04:22,368 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:04:22,368 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2777 states and 3144 transitions.
[2020-11-25 15:04:22,379 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:04:22,391 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2777 states to 2695 states and 3050 transitions.
[2020-11-25 15:04:22,391 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 906
[2020-11-25 15:04:22,393 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 913
[2020-11-25 15:04:22,393 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2695 states and 3050 transitions.
[2020-11-25 15:04:22,397 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:04:22,397 INFO  L728         BuchiCegarLoop]: Abstraction has 2695 states and 3050 transitions.
[2020-11-25 15:04:22,399 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2695 states and 3050 transitions.
[2020-11-25 15:04:22,420 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2695 to 1955.
[2020-11-25 15:04:22,420 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1955 states.
[2020-11-25 15:04:22,422 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1955 states to 1955 states and 2090 transitions.
[2020-11-25 15:04:22,423 INFO  L751         BuchiCegarLoop]: Abstraction has 1955 states and 2090 transitions.
[2020-11-25 15:04:22,423 INFO  L631         BuchiCegarLoop]: Abstraction has 1955 states and 2090 transitions.
[2020-11-25 15:04:22,423 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:04:22,423 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1955 states and 2090 transitions.
[2020-11-25 15:04:22,426 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:04:22,426 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:04:22,426 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:04:22,428 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:22,428 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Token0 := false;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3816]              assume null == 0;
[L3817]  CALL        call this := FreshRefGenerator__success();
[L1655]              havoc newRef;
[L1656]              assume Alloc[newRef] == false;
[L1657]              Alloc[newRef] := true;
[L1658]              assume newRef != null;
[L3817]  RET         call this := FreshRefGenerator__success();
[L3818]              assume now >= 0;
[L3819]              assume DType[this] == Erc20Base;
[L3820]              assume msgvalue_MSG == 0;
[L3821]              gas := gas - 53000;
[L3822]  CALL        call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L952]               havoc __exception;
[L953]               revert := false;
[L954]   COND FALSE  !(__exception)
[L977]   CALL        call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2284]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L2284]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L1841]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              owner_Owned[this] := null;
[L1828]              owner_Owned[this] := _owner_s185;
[L1841]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1842]  COND FALSE  !(revert)
[L2288]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L2289]  COND FALSE  !(revert)
[L2292]  CALL        call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L1930]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]              assume msgsender_MSG != null;
[L1907]              Balance[this] := 0;
[L1908]              balances_ERC20Token[this] := zeroRefintArr();
[L1909]              sum_balances0[this] := 0;
[L1910]              allowed_ERC20Token[this] := zeroRefRefintArr();
[L1911]              sum_allowed1[this] := 0;
[L1912]              transferable_ERC20Token[this] := true;
[L1934]  RET         call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L2292]  RET         call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  CALL        call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2246]              assume msgsender_MSG != null;
[L2247]              Balance[this] := 0;
[L2248]              name_Erc20Base[this] := -1000343086;
[L2249]              symbol_Erc20Base[this] := -1000343086;
[L2250]              decimals_Erc20Base[this] := 0;
[L2252]              name_Erc20Base[this] := _name_s560;
[L2253]              symbol_Erc20Base[this] := _symbol_s560;
[L2254]              decimals_Erc20Base[this] := _decimals_s560;
[L2255]              totalSupply_ERC20[this] := _totalSupplyCap_s560;
[L2256]              sum_balances0[this] := sum_balances0[this] - balances_ERC20Token[this][_issuer_s560];
[L2257]              balances_ERC20Token[this][_issuer_s560] := _totalSupplyCap_s560;
[L2258]              sum_balances0[this] := sum_balances0[this] + balances_ERC20Token[this][_issuer_s560];
[L2259]              assert { :EventEmitted "Transfer_Erc20Base" } true;
[L2296]  RET         call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2297]  COND FALSE  !(revert)
[L977]   RET         call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L978]               assume !revert && gas >= 0;
[L3822]  RET         call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L3823]              assume !revert && gas >= 0;
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND TRUE   !(__tmp__transferable_ERC20Token[this] == true)
[L3243]              revert := true;
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND TRUE   revert
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

Loop:
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND TRUE   !(__tmp__transferable_ERC20Token[this] == true)
[L3243]              revert := true;
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND TRUE   revert
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

[2020-11-25 15:04:22,432 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:22,432 INFO  L82        PathProgramCache]: Analyzing trace with hash -1776388121, now seen corresponding path program 1 times
[2020-11-25 15:04:22,433 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:22,449 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:04:22,510 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-25 15:04:22,510 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:04:22,510 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 15:04:22,510 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:04:22,510 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 15:04:22,510 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-25 15:04:22,511 INFO  L87              Difference]: Start difference. First operand 1955 states and 2090 transitions. cyclomatic complexity: 137 Second operand 13 states.
[2020-11-25 15:04:23,971 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:04:23,972 INFO  L93              Difference]: Finished difference Result 3279 states and 3600 transitions.
[2020-11-25 15:04:23,972 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 15:04:23,972 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3279 states and 3600 transitions.
[2020-11-25 15:04:23,982 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 15:04:23,991 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3279 states to 3279 states and 3600 transitions.
[2020-11-25 15:04:23,991 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1170
[2020-11-25 15:04:23,992 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1170
[2020-11-25 15:04:23,992 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3279 states and 3600 transitions.
[2020-11-25 15:04:23,996 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:04:23,996 INFO  L728         BuchiCegarLoop]: Abstraction has 3279 states and 3600 transitions.
[2020-11-25 15:04:23,998 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3279 states and 3600 transitions.
[2020-11-25 15:04:24,019 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3279 to 1991.
[2020-11-25 15:04:24,019 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1991 states.
[2020-11-25 15:04:24,021 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1991 states to 1991 states and 2133 transitions.
[2020-11-25 15:04:24,021 INFO  L751         BuchiCegarLoop]: Abstraction has 1991 states and 2133 transitions.
[2020-11-25 15:04:24,021 INFO  L631         BuchiCegarLoop]: Abstraction has 1991 states and 2133 transitions.
[2020-11-25 15:04:24,021 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:04:24,021 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1991 states and 2133 transitions.
[2020-11-25 15:04:24,025 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 15:04:24,025 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:04:24,025 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:04:24,027 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:04:24,027 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Token0 := false;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3816]              assume null == 0;
[L3817]  CALL        call this := FreshRefGenerator__success();
[L1655]              havoc newRef;
[L1656]              assume Alloc[newRef] == false;
[L1657]              Alloc[newRef] := true;
[L1658]              assume newRef != null;
[L3817]  RET         call this := FreshRefGenerator__success();
[L3818]              assume now >= 0;
[L3819]              assume DType[this] == Erc20Base;
[L3820]              assume msgvalue_MSG == 0;
[L3821]              gas := gas - 53000;
[L3822]  CALL        call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L952]               havoc __exception;
[L953]               revert := false;
[L954]   COND FALSE  !(__exception)
[L977]   CALL        call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2284]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L2284]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L1841]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              owner_Owned[this] := null;
[L1828]              owner_Owned[this] := _owner_s185;
[L1841]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1842]  COND FALSE  !(revert)
[L2288]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L2289]  COND FALSE  !(revert)
[L2292]  CALL        call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L1930]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]              assume msgsender_MSG != null;
[L1907]              Balance[this] := 0;
[L1908]              balances_ERC20Token[this] := zeroRefintArr();
[L1909]              sum_balances0[this] := 0;
[L1910]              allowed_ERC20Token[this] := zeroRefRefintArr();
[L1911]              sum_allowed1[this] := 0;
[L1912]              transferable_ERC20Token[this] := true;
[L1934]  RET         call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L2292]  RET         call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  CALL        call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2246]              assume msgsender_MSG != null;
[L2247]              Balance[this] := 0;
[L2248]              name_Erc20Base[this] := -1000343086;
[L2249]              symbol_Erc20Base[this] := -1000343086;
[L2250]              decimals_Erc20Base[this] := 0;
[L2252]              name_Erc20Base[this] := _name_s560;
[L2253]              symbol_Erc20Base[this] := _symbol_s560;
[L2254]              decimals_Erc20Base[this] := _decimals_s560;
[L2255]              totalSupply_ERC20[this] := _totalSupplyCap_s560;
[L2256]              sum_balances0[this] := sum_balances0[this] - balances_ERC20Token[this][_issuer_s560];
[L2257]              balances_ERC20Token[this][_issuer_s560] := _totalSupplyCap_s560;
[L2258]              sum_balances0[this] := sum_balances0[this] + balances_ERC20Token[this][_issuer_s560];
[L2259]              assert { :EventEmitted "Transfer_Erc20Base" } true;
[L2296]  RET         call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2297]  COND FALSE  !(revert)
[L977]   RET         call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L978]               assume !revert && gas >= 0;
[L3822]  RET         call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L3823]              assume !revert && gas >= 0;
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND FALSE  !(!(__tmp__transferable_ERC20Token[this] == true))
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND FALSE  !(revert)
[L1967]              __var_2 := null;
[L1968]  COND TRUE   !(_to_s326 != null)
[L1969]              revert := true;
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

Loop:
[L3826]  CALL        call CorralChoice_Erc20Base(this);
[L3670]              havoc msgsender_MSG;
[L3671]              havoc msgvalue_MSG;
[L3672]              havoc choice;
[L3673]              havoc __ret_0_totalSupply;
[L3674]              havoc _owner_s338;
[L3675]              havoc balance_s338;
[L3676]              havoc _to_s326;
[L3677]              havoc _value_s326;
[L3678]              havoc __ret_0_transfer;
[L3679]              havoc _owner_s489;
[L3680]              havoc _spender_s489;
[L3681]              havoc __ret_0_allowance;
[L3682]              havoc _from_s426;
[L3683]              havoc _to_s426;
[L3684]              havoc _value_s426;
[L3685]              havoc __ret_0_transferFrom;
[L3686]              havoc _spender_s473;
[L3687]              havoc _value_s473;
[L3688]              havoc success_s473;
[L3689]              havoc __ret_0_owner;
[L3690]              havoc _owner_s185;
[L3691]              havoc _owner_s221;
[L3692]              havoc __ret_0_transferable;
[L3693]              havoc _transferable_s264;
[L3694]              havoc __ret_0_signature;
[L3695]              havoc __ret_0_name;
[L3696]              havoc __ret_0_symbol;
[L3697]              havoc __ret_0_decimals;
[L3698]              havoc _issuer_s560;
[L3699]              havoc _name_s560;
[L3700]              havoc _symbol_s560;
[L3701]              havoc _totalSupplyCap_s560;
[L3702]              havoc _decimals_s560;
[L3703]              havoc tmpNow;
[L3704]              havoc gas;
[L3705]              assume gas > 4000000 && gas <= 8000000;
[L3706]              tmpNow := now;
[L3707]              havoc now;
[L3708]              assume now > tmpNow;
[L3709]              assume msgsender_MSG != null;
[L3710]              assume DType[msgsender_MSG] != SafeMath;
[L3711]              assume DType[msgsender_MSG] != ERC20;
[L3712]              assume DType[msgsender_MSG] != Owned;
[L3713]              assume DType[msgsender_MSG] != ERC20Token;
[L3714]              assume DType[msgsender_MSG] != Erc20Base;
[L3715]              Alloc[msgsender_MSG] := true;
[L3716]  COND FALSE  !(choice == 14)
[L3722]  COND FALSE  !(choice == 13)
[L3728]  COND TRUE   choice == 12
[L3729]              gas := gas - 21000;
[L3730]  COND TRUE   gas >= 0
[L3731]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3732]              assume msgvalue_MSG == 0;
[L3733]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND FALSE  !(!(__tmp__transferable_ERC20Token[this] == true))
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND FALSE  !(revert)
[L1967]              __var_2 := null;
[L1968]  COND TRUE   !(_to_s326 != null)
[L1969]              revert := true;
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3826]  RET         call CorralChoice_Erc20Base(this);

[2020-11-25 15:04:24,030 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:24,030 INFO  L82        PathProgramCache]: Analyzing trace with hash 355085427, now seen corresponding path program 1 times
[2020-11-25 15:04:24,031 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:24,054 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:24,070 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:24,115 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:24,116 INFO  L82        PathProgramCache]: Analyzing trace with hash -1335821783, now seen corresponding path program 1 times
[2020-11-25 15:04:24,116 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:24,120 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:24,124 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:24,132 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:04:24,133 INFO  L82        PathProgramCache]: Analyzing trace with hash 2058406519, now seen corresponding path program 1 times
[2020-11-25 15:04:24,134 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:04:24,146 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:24,161 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
[2020-11-25 15:04:24,614 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 189
[2020-11-25 15:04:25,006 WARN  L188               SmtUtils]: Spent 389.00 ms on a formula simplification. DAG size of input: 239 DAG size of output: 227
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 15:04:25,222 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 15:04:25,471 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 15:04:26,104 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 189
[2020-11-25 15:04:26,428 WARN  L188               SmtUtils]: Spent 321.00 ms on a formula simplification. DAG size of input: 238 DAG size of output: 227
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 15:04:26,666 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 15:04:26,787 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 230
[2020-11-25 15:04:27,253 WARN  L188               SmtUtils]: Spent 464.00 ms on a formula simplification. DAG size of input: 423 DAG size of output: 419
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 15:04:27,637 WARN  L188               SmtUtils]: Spent 178.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 276
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 15:04:27,749 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification that was a NOOP. DAG size: 272
[2020-11-25 15:04:27,761 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:27,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:04:27,787 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:04:27 BasicIcfg
[2020-11-25 15:04:27,787 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:04:27,788 INFO  L168              Benchmark]: Toolchain (without parser) took 9186.04 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 922.7 MB). Free memory was 935.2 MB in the beginning and 1.8 GB in the end (delta: -851.4 MB). Peak memory consumption was 904.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,789 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,790 INFO  L168              Benchmark]: Boogie Preprocessor took 89.09 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,791 INFO  L168              Benchmark]: UtopiaSpecLang took 68.48 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,792 INFO  L168              Benchmark]: Boogie Printer took 17.45 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,792 INFO  L168              Benchmark]: RCFGBuilder took 676.12 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,793 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,793 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1445.33 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -307.9 MB). Peak memory consumption was 186.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,794 INFO  L168              Benchmark]: BlockEncodingV2 took 141.79 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 67.3 MB). Peak memory consumption was 67.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,794 INFO  L168              Benchmark]: BuchiAutomizer took 6707.47 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 701.5 MB). Free memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: -743.2 MB). Peak memory consumption was 791.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:04:27,798 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3204 locations, 5609 edges
  - StatisticsResult: Encoded RCFG
    3170 locations, 5527 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.09 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.48 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.45 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 676.12 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.09 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1445.33 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -307.9 MB). Peak memory consumption was 186.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 141.79 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 67.3 MB). Peak memory consumption was 67.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6707.47 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 701.5 MB). Free memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: -743.2 MB). Peak memory consumption was 791.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1322 locations, 1716 edges
  - StatisticsResult: BuchiProgram size
    3204 locations, 5609 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 1991 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.6s and 4 iterations.  TraceHistogramMax:2. Analysis of lassos took 4.0s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2028 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1991 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7373 SDtfs, 8644 SDslu, 10301 SDs, 0 SdLazy, 23462 SolverSat, 1840 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979014) = (new Erc20Base)({from : 3979017, _issuer : 3979003, _name : 3979015, _symbol : 3979004, _totalSupplyCap : 1, _decimals : 3979008});
[L952]               havoc __exception;
[L953]               revert := false;
[L954]   COND FALSE  !(__exception)
[L977]   CALL        call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2284]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L2284]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L1841]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              owner_Owned[this] := null;
[L1828]              owner_Owned[this] := _owner_s185;
[L1841]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _owner_s185);
[L1842]  COND FALSE  !(revert)
[L2288]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560);
[L2289]  COND FALSE  !(revert)
[L2292]  CALL        call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1793]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1777]              assume msgsender_MSG != null;
[L1778]              Balance[this] := 0;
[L1779]              totalSupply_ERC20[this] := 0;
[L1793]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1794]  COND FALSE  !(revert)
[L1930]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]              assume msgsender_MSG != null;
[L1907]              Balance[this] := 0;
[L1908]              balances_ERC20Token[this] := zeroRefintArr();
[L1909]              sum_balances0[this] := 0;
[L1910]              allowed_ERC20Token[this] := zeroRefRefintArr();
[L1911]              sum_allowed1[this] := 0;
[L1912]              transferable_ERC20Token[this] := true;
[L1934]  RET         call ERC20Token_ERC20Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L2292]  RET         call ERC20Token_ERC20Token__success(this, msgsender_MSG, msgvalue_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  CALL        call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2246]              assume msgsender_MSG != null;
[L2247]              Balance[this] := 0;
[L2248]              name_Erc20Base[this] := -1000343086;
[L2249]              symbol_Erc20Base[this] := -1000343086;
[L2250]              decimals_Erc20Base[this] := 0;
[L2252]              name_Erc20Base[this] := _name_s560;
[L2253]              symbol_Erc20Base[this] := _symbol_s560;
[L2254]              decimals_Erc20Base[this] := _decimals_s560;
[L2255]              totalSupply_ERC20[this] := _totalSupplyCap_s560;
[L2256]              sum_balances0[this] := sum_balances0[this] - balances_ERC20Token[this][_issuer_s560];
[L2257]              balances_ERC20Token[this][_issuer_s560] := _totalSupplyCap_s560;
[L2258]              sum_balances0[this] := sum_balances0[this] + balances_ERC20Token[this][_issuer_s560];
[L2259]              assert { :EventEmitted "Transfer_Erc20Base" } true;
[L2296]  RET         call Erc20Base_Erc20Base_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L2297]  COND FALSE  !(revert)
[L977]   RET         call Erc20Base_Erc20Base__success(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
[L978]               assume !revert && gas >= 0;
[L3822]  RET         call Erc20Base_Erc20Base(this, msgsender_MSG, msgvalue_MSG, _issuer_s560, _name_s560, _symbol_s560, _totalSupplyCap_s560, _decimals_s560);
ERC20Token(3979014).transfer~address~uint256.gas(3979002)({from : 3979003, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND FALSE  !(!(__tmp__transferable_ERC20Token[this] == true))
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND FALSE  !(revert)
[L1967]              __var_2 := null;
[L1968]  COND TRUE   !(_to_s326 != null)
[L1969]              revert := true;
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);

Loop:
ERC20Token(3979014).transfer~address~uint256.gas(3979001)({from : 3979003, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_ERC20Token[this][msgsender_MSG]) && balances_ERC20Token[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][_to_s326] >= 0) && balances_ERC20Token[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_ERC20Token[this][msgsender_MSG] >= 0) && balances_ERC20Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Token0 := true;
[L3]                 call_transfer_ERC20Token0 := false;
[L3]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND TRUE   __exception
[L546]               __tmp__Balance := Balance;
[L547]               __tmp__DType := DType;
[L548]               __tmp__Alloc := Alloc;
[L549]               __tmp__balance_ADDR := balance_ADDR;
[L550]               __tmp__M_Ref_int := M_Ref_int;
[L551]               __tmp__sum_balances0 := sum_balances0;
[L552]               __tmp__alloc_allowed_ERC20Token_lvl0 := alloc_allowed_ERC20Token_lvl0;
[L553]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L554]               __tmp__sum_allowed1 := sum_allowed1;
[L555]               __tmp__Length := Length;
[L556]               __tmp__now := now;
[L557]               __tmp__totalSupply_ERC20 := totalSupply_ERC20;
[L558]               __tmp__owner_Owned := owner_Owned;
[L559]               __tmp__balances_ERC20Token := balances_ERC20Token;
[L560]               __tmp__allowed_ERC20Token := allowed_ERC20Token;
[L561]               __tmp__transferable_ERC20Token := transferable_ERC20Token;
[L562]               __tmp__name_Erc20Base := name_Erc20Base;
[L563]               __tmp__symbol_Erc20Base := symbol_Erc20Base;
[L564]               __tmp__decimals_Erc20Base := decimals_Erc20Base;
[L565]   CALL        call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L1963]  CALL        call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3242]  COND FALSE  !(!(__tmp__transferable_ERC20Token[this] == true))
[L1963]  RET         call canTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L1964]  COND FALSE  !(revert)
[L1967]              __var_2 := null;
[L1968]  COND TRUE   !(_to_s326 != null)
[L1969]              revert := true;
[L565]   RET         call __ret_0_ := transfer~address~uint256_ERC20Token__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L566]               assume revert || gas < 0;
[L3733]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Token(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
