This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:16:13,946 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:16:13,947 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:16:13,959 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:16:13,959 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:16:13,960 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:16:13,961 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:16:13,962 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:16:13,964 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:16:13,965 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:16:13,965 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:16:13,966 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:16:13,966 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:16:13,967 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:16:13,968 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:16:13,969 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:16:13,970 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:16:13,971 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:16:13,972 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:16:13,974 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:16:13,974 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:16:13,975 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:16:13,977 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:16:13,977 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:16:13,977 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:16:13,978 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:16:13,978 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:16:13,979 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:16:13,979 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:16:13,979 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:16:13,979 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:16:13,980 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:16:13,981 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:16:13,981 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:16:13,982 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:16:13,982 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:16:13,982 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:16:13,983 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:16:13,983 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:16:13,984 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:16:13,985 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:16:13,985 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:16:13,998 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:16:13,998 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:16:13,999 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:16:14,000 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:16:14,000 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:16:14,000 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:16:14,001 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:16:14,001 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:16:14,002 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:16:14,002 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:16:14,002 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:16:14,002 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:16:14,029 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:16:14,040 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:16:14,043 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:16:14,044 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:16:14,044 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:16:14,045 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl
[2020-11-25 01:16:14,045 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl'
[2020-11-25 01:16:14,126 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:16:14,128 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:16:14,128 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:16:14,128 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:16:14,128 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:16:14,146 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,148 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,183 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,184 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,207 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,217 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,223 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,233 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:16:14,234 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:16:14,234 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:16:14,236 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:16:14,240 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/1) ...
[2020-11-25 01:16:14,257 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]))))
[2020-11-25 01:16:14,263 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]))))
[2020-11-25 01:16:14,270 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]))))
[2020-11-25 01:16:14,277 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s307 ) && msg.sender!=to_s307 ) && value_s307<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][to_s307] + value_s307 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s307>=0 ) && value_s307<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s307]>=0 ) && _balances_ERC20[this][to_s307]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:16:14,280 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - value_s307 ) ) && _balances_ERC20[this][to_s307]==( ( old(_balances_ERC20[this][to_s307]) ) + value_s307 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]]
[2020-11-25 01:16:14,284 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]))))
[2020-11-25 01:16:14,285 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:16:14,293 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:16:14 PropertyContainer
[2020-11-25 01:16:14,293 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:16:14,293 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:16:14,293 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:16:14,293 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:16:14,294 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/2) ...
[2020-11-25 01:16:14,295 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:16:14,295 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:16:14,307 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:16:14" (2/2) ...
[2020-11-25 01:16:14,308 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:16:14,308 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:16:14,308 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:16:14,308 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:16:14,309 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/2) ...
[2020-11-25 01:16:14,361 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:16:14,361 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:16:14,361 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:16:14,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:16:14,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,362 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:16:14,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:16:14,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:16:14,363 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:16:14,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:16:14,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT
[2020-11-25 01:16:14,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT
[2020-11-25 01:16:14,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT
[2020-11-25 01:16:14,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT
[2020-11-25 01:16:14,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT
[2020-11-25 01:16:14,365 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT
[2020-11-25 01:16:14,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT
[2020-11-25 01:16:14,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:16:14,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:16:14,366 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BT
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,367 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:16:14,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:16:14,369 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__success
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__fail
[2020-11-25 01:16:14,370 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:16:14,371 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:16:14,371 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:16:14,371 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:16:14,371 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:16:14,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:16:14,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:16:14,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:16:14,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:16:14,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:16:14,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:16:14,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:16:14,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:16:14,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:16:14,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:16:14,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:16:14,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:16:14,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:16:14,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:16:14,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:16:14,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:16:14,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:16:14,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:16:14,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:16:14,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:16:14,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:16:14,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:16:14,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:16:14,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:16:14,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:16:14,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:16:14,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:16:14,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:16:14,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:16:14,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:16:14,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__fail
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__success
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__fail
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__success
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:16:14,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__success
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__success
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__success
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:16:14,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BT
[2020-11-25 01:16:14,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:16:14,384 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:16:14,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:16:14,574 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:16:14,575 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:16:14,575 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:16:14,797 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:16:15,039 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:16:15,039 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:16:15,041 INFO  L202        PluginConnector]: Adding new model BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:16:15 BoogieIcfgContainer
[2020-11-25 01:16:15,042 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:16:14" (2/2) ...
[2020-11-25 01:16:15,042 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:16:15,042 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@10d64819 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:16:15, skipping insertion in model container
[2020-11-25 01:16:15,042 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:16:15,042 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:16:15,042 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:16:15,044 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:16:15,044 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/3) ...
[2020-11-25 01:16:15,045 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2856afe6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:16:15, skipping insertion in model container
[2020-11-25 01:16:15,045 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:16:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:16:15,083 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:16:15 NWAContainer
[2020-11-25 01:16:15,083 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:16:15,084 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:16:15,084 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:16:15,084 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:16:15,085 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:16:15" (3/4) ...
[2020-11-25 01:16:15,086 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@78b16823 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:16:15, skipping insertion in model container
[2020-11-25 01:16:15,086 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:16:15" (4/4) ...
[2020-11-25 01:16:15,089 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:16:15,093 INFO  L110   BuchiProductObserver]: Initial RCFG 1241 locations, 1627 edges
[2020-11-25 01:16:15,093 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:16:15,104 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:16:16,362 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:16:16,371 INFO  L110   BuchiProductObserver]: BuchiProgram size 3024 locations, 5304 edges
[2020-11-25 01:16:16,371 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:16:16 BoogieIcfgContainer
[2020-11-25 01:16:16,371 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:16:16,372 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:16:16,372 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:16:16,375 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:16:16,376 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:16:16" (1/1) ...
[2020-11-25 01:16:16,461 INFO  L313           BlockEncoder]: Initial Icfg 3024 locations, 5304 edges
[2020-11-25 01:16:16,461 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:16:16,462 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:16:16,462 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:16:16,463 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:16:16,473 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 11 locations because of local infeasibility
[2020-11-25 01:16:16,481 INFO  L70        RemoveSinkStates]: Removed 26 edges and 17 locations by removing sink states
[2020-11-25 01:16:16,491 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:16:16,494 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:16:16,497 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:16:16,498 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:16:16,503 INFO  L313           BlockEncoder]: Encoded RCFG 2974 locations, 5171 edges
[2020-11-25 01:16:16,503 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:16:16 BasicIcfg
[2020-11-25 01:16:16,503 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:16:16,503 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:16:16,503 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:16:16,506 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:16:16,506 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,506 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:16:14" (1/6) ...
[2020-11-25 01:16:16,508 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@ac9c755 and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:16:16, skipping insertion in model container
[2020-11-25 01:16:16,508 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,508 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:16:14" (2/6) ...
[2020-11-25 01:16:16,508 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@ac9c755 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:16:16, skipping insertion in model container
[2020-11-25 01:16:16,509 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,509 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:16:15" (3/6) ...
[2020-11-25 01:16:16,509 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@ac9c755 and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:16:16, skipping insertion in model container
[2020-11-25 01:16:16,509 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,509 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:16:15" (4/6) ...
[2020-11-25 01:16:16,509 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@ac9c755 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:16:16, skipping insertion in model container
[2020-11-25 01:16:16,509 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,509 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:16:16" (5/6) ...
[2020-11-25 01:16:16,509 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@ac9c755 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:16:16, skipping insertion in model container
[2020-11-25 01:16:16,510 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:16:16,510 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:16:16" (6/6) ...
[2020-11-25 01:16:16,511 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-normal.bpl_BEv2
[2020-11-25 01:16:16,550 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:16:16,551 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:16:16,551 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:16:16,551 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:16:16,551 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:16:16,551 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:16:16,551 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:16:16,551 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:16:16,551 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:16:16,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2974 states.
[2020-11-25 01:16:16,637 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:16,637 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:16,638 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:16,647 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:16,647 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:16,647 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:16:16,647 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2974 states.
[2020-11-25 01:16:16,665 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:16,666 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:16,666 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:16,667 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:16,668 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND TRUE   choice == 14
[L3366]              gas := gas - 21000;
[L3367]  COND FALSE  !(gas >= 0)
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:16,686 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:16,687 INFO  L82        PathProgramCache]: Analyzing trace with hash -569436416, now seen corresponding path program 1 times
[2020-11-25 01:16:16,692 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:16,719 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:16:16,765 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:16:16,767 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:16:16,767 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:16:16,896 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:16:16,912 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:16:16,913 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:16:16,914 INFO  L87              Difference]: Start difference. First operand 2974 states. Second operand 4 states.
[2020-11-25 01:16:17,265 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:16:17,266 INFO  L93              Difference]: Finished difference Result 2112 states and 2381 transitions.
[2020-11-25 01:16:17,266 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:16:17,267 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2112 states and 2381 transitions.
[2020-11-25 01:16:17,280 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,300 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2112 states to 2112 states and 2381 transitions.
[2020-11-25 01:16:17,301 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:16:17,303 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 551
[2020-11-25 01:16:17,304 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2112 states and 2381 transitions.
[2020-11-25 01:16:17,311 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:16:17,311 INFO  L728         BuchiCegarLoop]: Abstraction has 2112 states and 2381 transitions.
[2020-11-25 01:16:17,329 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2112 states and 2381 transitions.
[2020-11-25 01:16:17,376 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2112 to 2112.
[2020-11-25 01:16:17,377 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2112 states.
[2020-11-25 01:16:17,384 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2112 states to 2112 states and 2381 transitions.
[2020-11-25 01:16:17,385 INFO  L751         BuchiCegarLoop]: Abstraction has 2112 states and 2381 transitions.
[2020-11-25 01:16:17,385 INFO  L631         BuchiCegarLoop]: Abstraction has 2112 states and 2381 transitions.
[2020-11-25 01:16:17,385 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:16:17,385 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2112 states and 2381 transitions.
[2020-11-25 01:16:17,391 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,391 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:17,393 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:17,397 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:17,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:17,405 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:17,405 INFO  L82        PathProgramCache]: Analyzing trace with hash -1061554471, now seen corresponding path program 1 times
[2020-11-25 01:16:17,408 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:17,419 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:16:17,440 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:16:17,441 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:16:17,441 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:16:17,443 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:16:17,443 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:16:17,443 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:16:17,443 INFO  L87              Difference]: Start difference. First operand 2112 states and 2381 transitions. cyclomatic complexity: 271 Second operand 3 states.
[2020-11-25 01:16:17,508 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:16:17,508 INFO  L93              Difference]: Finished difference Result 2782 states and 3193 transitions.
[2020-11-25 01:16:17,508 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:16:17,509 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2782 states and 3193 transitions.
[2020-11-25 01:16:17,523 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:16:17,539 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2782 states to 2782 states and 3193 transitions.
[2020-11-25 01:16:17,539 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 741
[2020-11-25 01:16:17,541 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 741
[2020-11-25 01:16:17,541 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2782 states and 3193 transitions.
[2020-11-25 01:16:17,546 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:16:17,546 INFO  L728         BuchiCegarLoop]: Abstraction has 2782 states and 3193 transitions.
[2020-11-25 01:16:17,549 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2782 states and 3193 transitions.
[2020-11-25 01:16:17,579 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2782 to 2280.
[2020-11-25 01:16:17,580 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2280 states.
[2020-11-25 01:16:17,584 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2280 states to 2280 states and 2583 transitions.
[2020-11-25 01:16:17,585 INFO  L751         BuchiCegarLoop]: Abstraction has 2280 states and 2583 transitions.
[2020-11-25 01:16:17,585 INFO  L631         BuchiCegarLoop]: Abstraction has 2280 states and 2583 transitions.
[2020-11-25 01:16:17,585 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:16:17,585 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2280 states and 2583 transitions.
[2020-11-25 01:16:17,591 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,591 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:17,591 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:17,593 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:17,593 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND TRUE   !(account_s571 != null)
[L2079]              revert := true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND TRUE   revert
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:17,597 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:17,597 INFO  L82        PathProgramCache]: Analyzing trace with hash 2040839471, now seen corresponding path program 1 times
[2020-11-25 01:16:17,598 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:17,608 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:16:17,649 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 3 trivial. 0 not checked.
[2020-11-25 01:16:17,649 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:16:17,649 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:16:17,649 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:16:17,650 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:16:17,650 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:16:17,650 INFO  L87              Difference]: Start difference. First operand 2280 states and 2583 transitions. cyclomatic complexity: 305 Second operand 7 states.
[2020-11-25 01:16:17,703 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:16:17,703 INFO  L93              Difference]: Finished difference Result 2288 states and 2590 transitions.
[2020-11-25 01:16:17,704 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:16:17,704 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2288 states and 2590 transitions.
[2020-11-25 01:16:17,712 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,722 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2288 states to 2279 states and 2581 transitions.
[2020-11-25 01:16:17,722 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 01:16:17,722 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 595
[2020-11-25 01:16:17,722 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2279 states and 2581 transitions.
[2020-11-25 01:16:17,725 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:16:17,725 INFO  L728         BuchiCegarLoop]: Abstraction has 2279 states and 2581 transitions.
[2020-11-25 01:16:17,728 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2279 states and 2581 transitions.
[2020-11-25 01:16:17,749 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2279 to 2279.
[2020-11-25 01:16:17,750 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2279 states.
[2020-11-25 01:16:17,753 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2279 states to 2279 states and 2581 transitions.
[2020-11-25 01:16:17,753 INFO  L751         BuchiCegarLoop]: Abstraction has 2279 states and 2581 transitions.
[2020-11-25 01:16:17,753 INFO  L631         BuchiCegarLoop]: Abstraction has 2279 states and 2581 transitions.
[2020-11-25 01:16:17,753 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:16:17,753 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2279 states and 2581 transitions.
[2020-11-25 01:16:17,759 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,759 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:17,759 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:17,761 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:17,761 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND TRUE   !(c_s173 >= a_s173)
[L1668]              revert := true;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND TRUE   revert
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND TRUE   revert
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND FALSE  !(__exception)
[L440]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1818]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1819]              revert := true;
[L440]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L441]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s307) && _balances_ERC20[this][to_s307] == old(_balances_ERC20[this][to_s307]) + value_s307) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]));
[L3]                 revert := revert_hold;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:17,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:17,765 INFO  L82        PathProgramCache]: Analyzing trace with hash 2021952620, now seen corresponding path program 1 times
[2020-11-25 01:16:17,765 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:17,776 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:16:17,810 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 01:16:17,810 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:16:17,811 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:16:17,811 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:16:17,811 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:16:17,811 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:16:17,812 INFO  L87              Difference]: Start difference. First operand 2279 states and 2581 transitions. cyclomatic complexity: 304 Second operand 3 states.
[2020-11-25 01:16:17,859 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:16:17,859 INFO  L93              Difference]: Finished difference Result 2781 states and 3111 transitions.
[2020-11-25 01:16:17,859 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:16:17,859 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2781 states and 3111 transitions.
[2020-11-25 01:16:17,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:16:17,878 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2781 states to 2590 states and 2885 transitions.
[2020-11-25 01:16:17,878 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 680
[2020-11-25 01:16:17,879 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 696
[2020-11-25 01:16:17,879 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2590 states and 2885 transitions.
[2020-11-25 01:16:17,881 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:16:17,882 INFO  L728         BuchiCegarLoop]: Abstraction has 2590 states and 2885 transitions.
[2020-11-25 01:16:17,884 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2590 states and 2885 transitions.
[2020-11-25 01:16:17,902 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2590 to 2156.
[2020-11-25 01:16:17,902 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2156 states.
[2020-11-25 01:16:17,904 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2156 states to 2156 states and 2343 transitions.
[2020-11-25 01:16:17,905 INFO  L751         BuchiCegarLoop]: Abstraction has 2156 states and 2343 transitions.
[2020-11-25 01:16:17,905 INFO  L631         BuchiCegarLoop]: Abstraction has 2156 states and 2343 transitions.
[2020-11-25 01:16:17,905 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:16:17,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2156 states and 2343 transitions.
[2020-11-25 01:16:17,908 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:17,908 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:17,908 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:17,910 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:17,910 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND TRUE   !(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG])
[L1787]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND TRUE   !(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG])
[L1787]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:17,913 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:17,913 INFO  L82        PathProgramCache]: Analyzing trace with hash 863280107, now seen corresponding path program 1 times
[2020-11-25 01:16:17,914 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:17,925 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:16:18,002 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:16:18,003 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:16:18,003 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 01:16:18,003 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:16:18,003 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 01:16:18,003 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 01:16:18,004 INFO  L87              Difference]: Start difference. First operand 2156 states and 2343 transitions. cyclomatic complexity: 189 Second operand 6 states.
[2020-11-25 01:16:18,476 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:16:18,476 INFO  L93              Difference]: Finished difference Result 2336 states and 2540 transitions.
[2020-11-25 01:16:18,476 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:16:18,476 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2336 states and 2540 transitions.
[2020-11-25 01:16:18,481 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 01:16:18,489 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2336 states to 2336 states and 2540 transitions.
[2020-11-25 01:16:18,489 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 643
[2020-11-25 01:16:18,489 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 643
[2020-11-25 01:16:18,489 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2336 states and 2540 transitions.
[2020-11-25 01:16:18,491 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:16:18,491 INFO  L728         BuchiCegarLoop]: Abstraction has 2336 states and 2540 transitions.
[2020-11-25 01:16:18,493 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2336 states and 2540 transitions.
[2020-11-25 01:16:18,509 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2336 to 2210.
[2020-11-25 01:16:18,510 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2210 states.
[2020-11-25 01:16:18,512 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2210 states to 2210 states and 2401 transitions.
[2020-11-25 01:16:18,512 INFO  L751         BuchiCegarLoop]: Abstraction has 2210 states and 2401 transitions.
[2020-11-25 01:16:18,512 INFO  L631         BuchiCegarLoop]: Abstraction has 2210 states and 2401 transitions.
[2020-11-25 01:16:18,512 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:16:18,513 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2210 states and 2401 transitions.
[2020-11-25 01:16:18,515 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:16:18,515 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:16:18,515 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:16:18,517 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:16:18,517 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND FALSE  !(!(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L1790]              __var_1 := null;
[L1791]  COND TRUE   !(to_s307 != null)
[L1792]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND TRUE   choice == 11
[L3384]              gas := gas - 21000;
[L3385]  COND TRUE   gas >= 0
[L3386]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3387]              assume msgvalue_MSG == 0;
[L3388]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND FALSE  !(!(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L1790]              __var_1 := null;
[L1791]  COND TRUE   !(to_s307 != null)
[L1792]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:16:18,520 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:18,520 INFO  L82        PathProgramCache]: Analyzing trace with hash 12325454, now seen corresponding path program 1 times
[2020-11-25 01:16:18,520 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:18,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:18,560 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:18,632 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:18,632 INFO  L82        PathProgramCache]: Analyzing trace with hash -1477058767, now seen corresponding path program 1 times
[2020-11-25 01:16:18,632 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:18,638 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:18,642 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:18,654 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:16:18,654 INFO  L82        PathProgramCache]: Analyzing trace with hash 1435920836, now seen corresponding path program 1 times
[2020-11-25 01:16:18,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:16:18,692 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:18,719 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
[2020-11-25 01:16:19,110 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 228
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 01:16:19,274 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification that was a NOOP. DAG size: 184
[2020-11-25 01:16:19,600 WARN  L188               SmtUtils]: Spent 323.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 219
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
[2020-11-25 01:16:20,032 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-25 01:16:20,478 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 152
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 01:16:21,306 WARN  L188               SmtUtils]: Spent 269.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 217
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 01:16:21,485 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 01:16:22,219 WARN  L188               SmtUtils]: Spent 636.00 ms on a formula simplification. DAG size of input: 402 DAG size of output: 392
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 01:16:22,339 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 169
[2020-11-25 01:16:22,456 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 263
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 01:16:22,754 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 264
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 01:16:22,869 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:22,888 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:16:22,895 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:16:22 BasicIcfg
[2020-11-25 01:16:22,895 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:16:22,896 INFO  L168              Benchmark]: Toolchain (without parser) took 8769.25 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 910.7 MB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -708.2 MB). Peak memory consumption was 917.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,896 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,896 INFO  L168              Benchmark]: Boogie Preprocessor took 105.77 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,897 INFO  L168              Benchmark]: UtopiaSpecLang took 59.08 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,897 INFO  L168              Benchmark]: Boogie Printer took 14.67 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,897 INFO  L168              Benchmark]: RCFGBuilder took 733.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,898 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.99 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,898 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1287.88 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.3 MB). Free memory was 824.2 MB in the beginning and 1.2 GB in the end (delta: -338.6 MB). Peak memory consumption was 199.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,898 INFO  L168              Benchmark]: BlockEncodingV2 took 131.19 ms. Allocated memory is still 1.2 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 59.9 MB). Peak memory consumption was 59.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,898 INFO  L168              Benchmark]: BuchiAutomizer took 6392.12 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 709.4 MB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -545.8 MB). Peak memory consumption was 878.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:16:22,901 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3024 locations, 5304 edges
  - StatisticsResult: Encoded RCFG
    2974 locations, 5171 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 105.77 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.08 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.67 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 733.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.99 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1287.88 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.3 MB). Free memory was 824.2 MB in the beginning and 1.2 GB in the end (delta: -338.6 MB). Peak memory consumption was 199.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 131.19 ms. Allocated memory is still 1.2 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 59.9 MB). Peak memory consumption was 59.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6392.12 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 709.4 MB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -545.8 MB). Peak memory consumption was 878.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1241 locations, 1627 edges
  - StatisticsResult: BuchiProgram size
    3024 locations, 5304 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 2210 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.3s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 4.8s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1062 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2280 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12276 SDtfs, 6935 SDslu, 21494 SDs, 0 SdLazy, 3776 SolverSat, 1577 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913100000007) = (new BT)({from : 115792089237316195423570985008687907853269984665640564039457584007913100000005});
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
ERC20(115792089237316195423570985008687907853269984665640564039457584007913100000007).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913100000011, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND FALSE  !(!(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L1790]              __var_1 := null;
[L1791]  COND TRUE   !(to_s307 != null)
[L1792]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);

Loop:
ERC20(115792089237316195423570985008687907853269984665640564039457584007913100000007).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913100000005, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s307) && msgsender_MSG != to_s307) && value_s307 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s307] + value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L416]               havoc __exception;
[L417]               revert := false;
[L418]   COND TRUE   __exception
[L419]               __tmp__Balance := Balance;
[L420]               __tmp__DType := DType;
[L421]               __tmp__Alloc := Alloc;
[L422]               __tmp__balance_ADDR := balance_ADDR;
[L423]               __tmp__M_Ref_int := M_Ref_int;
[L424]               __tmp__sum__balances0 := sum__balances0;
[L425]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L426]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L427]               __tmp__sum__allowed1 := sum__allowed1;
[L428]               __tmp__Length := Length;
[L429]               __tmp__now := now;
[L430]               __tmp___balances_ERC20 := _balances_ERC20;
[L431]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L432]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L433]               __tmp__name_BT := name_BT;
[L434]               __tmp__symbol_BT := symbol_BT;
[L435]               __tmp__decimals_BT := decimals_BT;
[L436]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L437]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1786]  COND FALSE  !(!(value_s307 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L1790]              __var_1 := null;
[L1791]  COND TRUE   !(to_s307 != null)
[L1792]              revert := true;
[L437]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L438]               assume revert || gas < 0;
[L3388]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
