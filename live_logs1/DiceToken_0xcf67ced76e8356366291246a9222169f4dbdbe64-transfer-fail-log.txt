This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:57:09,776 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:57:09,777 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:57:09,785 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:57:09,785 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:57:09,785 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:57:09,786 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:57:09,787 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:57:09,788 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:57:09,788 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:57:09,789 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:57:09,789 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:57:09,790 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:57:09,790 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:57:09,791 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:57:09,791 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:57:09,792 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:57:09,792 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:57:09,793 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:57:09,794 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:57:09,795 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:57:09,795 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:57:09,796 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:57:09,797 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:57:09,797 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:57:09,797 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:57:09,797 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:57:09,798 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:57:09,798 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:57:09,798 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:57:09,798 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:57:09,799 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:57:09,799 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:57:09,799 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:57:09,800 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:57:09,800 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:57:09,800 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:57:09,800 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:57:09,800 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:57:09,801 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:57:09,801 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:57:09,801 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:57:09,807 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:57:09,807 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:57:09,808 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:57:09,808 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:57:09,808 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:57:09,808 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:57:09,808 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:57:09,808 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:57:09,808 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:57:09,808 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:57:09,809 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:57:09,809 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:57:09,810 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:57:09,810 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:57:09,810 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:57:09,829 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:57:09,841 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:57:09,843 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:57:09,844 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:57:09,845 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:57:09,845 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl
[2020-11-25 13:57:09,845 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl'
[2020-11-25 13:57:09,917 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:57:09,918 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:57:09,919 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:57:09,919 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:57:09,919 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:57:09,935 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,937 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,963 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,964 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,981 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,989 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:09,995 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:10,003 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:57:10,004 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:57:10,004 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:57:10,006 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:57:10,009 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/1) ...
[2020-11-25 13:57:10,026 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DiceToken.transfer(to, value), msg.sender != to && (value > balances_DiceToken[this][msg.sender] || balances_DiceToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DiceToken.transfer)))
[2020-11-25 13:57:10,030 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DiceToken.transfer(to, value), msg.sender != to && (value > balances_DiceToken[this][msg.sender] || balances_DiceToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DiceToken.transfer)))
[2020-11-25 13:57:10,035 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DiceToken.transfer(to, value), msg.sender != to && (value > balances_DiceToken[this][msg.sender] || balances_DiceToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DiceToken.transfer)))
[2020-11-25 13:57:10,042 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s366 && ( tokens_s366>balances_DiceToken[this][msg.sender] || ( balances_DiceToken[this][to_s366] + tokens_s366 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && tokens_s366>=0 ) && tokens_s366<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][to_s366]>=0 ) && balances_DiceToken[this][to_s366]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][msg.sender]>=0 ) && balances_DiceToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:57:10,046 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DiceToken.transfer(to, value), msg.sender != to && (value > balances_DiceToken[this][msg.sender] || balances_DiceToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DiceToken.transfer)))
[2020-11-25 13:57:10,046 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_DiceToken0) ==> ( <>AP(fail_transfer_DiceToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:57:10,052 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:57:10 PropertyContainer
[2020-11-25 13:57:10,052 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:57:10,053 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:57:10,053 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:57:10,053 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:57:10,053 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/2) ...
[2020-11-25 13:57:10,053 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:57:10,054 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:57:10,064 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:57:10" (2/2) ...
[2020-11-25 13:57:10,064 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:57:10,064 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:57:10,064 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:57:10,065 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:57:10,065 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/2) ...
[2020-11-25 13:57:10,103 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 13:57:10,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 13:57:10,104 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 13:57:10,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 13:57:10,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 13:57:10,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 13:57:10,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 13:57:10,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken_NoBaseCtor__success
[2020-11-25 13:57:10,105 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DiceToken__success
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken
[2020-11-25 13:57:10,106 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken
[2020-11-25 13:57:10,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken
[2020-11-25 13:57:10,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken
[2020-11-25 13:57:10,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DiceToken
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 13:57:10,107 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 13:57:10,108 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken_NoBaseCtor__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DiceToken__fail
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken__success
[2020-11-25 13:57:10,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken__success
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken__success
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken__success
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken__success
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:57:10,110 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 13:57:10,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:57:10,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:57:10,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 13:57:10,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 13:57:10,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 13:57:10,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken_NoBaseCtor__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken_NoBaseCtor__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__success
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__fail
[2020-11-25 13:57:10,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken__success
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken__fail
[2020-11-25 13:57:10,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken__success
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken__fail
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken__success
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken__fail
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken__success
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken__fail
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken__success
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:57:10,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DiceToken
[2020-11-25 13:57:10,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:57:10,116 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:57:10,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:57:10,549 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:57:10,549 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:57:10,685 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:57:10,685 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 13:57:10,687 INFO  L202        PluginConnector]: Adding new model DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:57:10 BoogieIcfgContainer
[2020-11-25 13:57:10,687 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:57:10" (2/2) ...
[2020-11-25 13:57:10,687 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:57:10,688 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@63888d2b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:57:10, skipping insertion in model container
[2020-11-25 13:57:10,688 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:57:10,688 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:57:10,688 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:57:10,690 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:57:10,690 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/3) ...
[2020-11-25 13:57:10,690 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@59631d9d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:57:10, skipping insertion in model container
[2020-11-25 13:57:10,690 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:57:10" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:57:10,728 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:57:10 NWAContainer
[2020-11-25 13:57:10,728 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:57:10,728 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:57:10,728 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:57:10,729 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:57:10,730 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:57:10" (3/4) ...
[2020-11-25 13:57:10,730 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5bf5250f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:57:10, skipping insertion in model container
[2020-11-25 13:57:10,731 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:57:10" (4/4) ...
[2020-11-25 13:57:10,733 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:57:10,737 INFO  L110   BuchiProductObserver]: Initial RCFG 1199 locations, 1495 edges
[2020-11-25 13:57:10,737 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:57:10,746 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:57:11,951 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:57:11,955 INFO  L110   BuchiProductObserver]: BuchiProgram size 2848 locations, 4837 edges
[2020-11-25 13:57:11,955 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:57:11 BoogieIcfgContainer
[2020-11-25 13:57:11,956 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:57:11,956 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:57:11,956 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:57:11,957 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:57:11,958 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:57:11" (1/1) ...
[2020-11-25 13:57:12,066 INFO  L313           BlockEncoder]: Initial Icfg 2848 locations, 4837 edges
[2020-11-25 13:57:12,067 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:57:12,067 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:57:12,067 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:57:12,068 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:57:12,077 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 13 locations because of local infeasibility
[2020-11-25 13:57:12,084 INFO  L70        RemoveSinkStates]: Removed 138 edges and 70 locations by removing sink states
[2020-11-25 13:57:12,094 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:57:12,096 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:57:12,098 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:57:12,099 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:57:12,102 INFO  L313           BlockEncoder]: Encoded RCFG 2747 locations, 4616 edges
[2020-11-25 13:57:12,102 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:57:12 BasicIcfg
[2020-11-25 13:57:12,102 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:57:12,102 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:57:12,103 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:57:12,104 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:57:12,105 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,105 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:57:09" (1/6) ...
[2020-11-25 13:57:12,106 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f90c568 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:57:12, skipping insertion in model container
[2020-11-25 13:57:12,106 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,107 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:57:10" (2/6) ...
[2020-11-25 13:57:12,107 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f90c568 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:57:12, skipping insertion in model container
[2020-11-25 13:57:12,107 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,107 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:57:10" (3/6) ...
[2020-11-25 13:57:12,107 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f90c568 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:57:12, skipping insertion in model container
[2020-11-25 13:57:12,107 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,107 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:57:10" (4/6) ...
[2020-11-25 13:57:12,107 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f90c568 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:57:12, skipping insertion in model container
[2020-11-25 13:57:12,107 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,107 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:57:11" (5/6) ...
[2020-11-25 13:57:12,107 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f90c568 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:57:12, skipping insertion in model container
[2020-11-25 13:57:12,108 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:57:12,108 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:57:12" (6/6) ...
[2020-11-25 13:57:12,109 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-fail.bpl_BEv2
[2020-11-25 13:57:12,140 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:57:12,140 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:57:12,140 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:57:12,140 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:57:12,140 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:57:12,140 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:57:12,140 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:57:12,140 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:57:12,140 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:57:12,164 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2747 states.
[2020-11-25 13:57:12,217 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:12,218 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:12,218 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:12,227 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:12,227 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:12,227 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:57:12,227 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2747 states.
[2020-11-25 13:57:12,244 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:12,244 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:12,244 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:12,246 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:12,246 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_DiceToken0 := false;
[L2]                 call_transfer_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND TRUE   revert
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND FALSE  !(gas >= 0)
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:57:12,264 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:57:12,265 INFO  L82        PathProgramCache]: Analyzing trace with hash -1728589663, now seen corresponding path program 1 times
[2020-11-25 13:57:12,269 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:57:12,292 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:57:12,330 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:57:12,332 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:57:12,332 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:57:12,336 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:57:12,455 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:57:12,456 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:57:12,457 INFO  L87              Difference]: Start difference. First operand 2747 states. Second operand 3 states.
[2020-11-25 13:57:12,586 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:57:12,586 INFO  L93              Difference]: Finished difference Result 1813 states and 1973 transitions.
[2020-11-25 13:57:12,586 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:57:12,587 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1813 states and 1973 transitions.
[2020-11-25 13:57:12,595 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:12,608 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1813 states to 1813 states and 1973 transitions.
[2020-11-25 13:57:12,609 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 13:57:12,611 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 622
[2020-11-25 13:57:12,611 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1813 states and 1973 transitions.
[2020-11-25 13:57:12,616 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:57:12,616 INFO  L728         BuchiCegarLoop]: Abstraction has 1813 states and 1973 transitions.
[2020-11-25 13:57:12,630 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1813 states and 1973 transitions.
[2020-11-25 13:57:12,659 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1813 to 1813.
[2020-11-25 13:57:12,660 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1813 states.
[2020-11-25 13:57:12,663 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1813 states to 1813 states and 1973 transitions.
[2020-11-25 13:57:12,664 INFO  L751         BuchiCegarLoop]: Abstraction has 1813 states and 1973 transitions.
[2020-11-25 13:57:12,664 INFO  L631         BuchiCegarLoop]: Abstraction has 1813 states and 1973 transitions.
[2020-11-25 13:57:12,664 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:57:12,664 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1813 states and 1973 transitions.
[2020-11-25 13:57:12,669 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:12,669 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:12,669 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:12,671 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:12,671 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_DiceToken0 := false;
[L2]                 call_transfer_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND TRUE   revert
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND TRUE   revert
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND TRUE   !(b_s45 <= a_s45)
[L1603]              revert := true;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND TRUE   revert
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND TRUE   !(b_s45 <= a_s45)
[L1603]              revert := true;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND TRUE   revert
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:57:12,674 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:57:12,674 INFO  L82        PathProgramCache]: Analyzing trace with hash 517753445, now seen corresponding path program 1 times
[2020-11-25 13:57:12,675 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:57:12,683 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:57:12,699 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:57:12,699 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:57:12,699 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:57:12,701 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:57:12,701 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:57:12,701 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:57:12,701 INFO  L87              Difference]: Start difference. First operand 1813 states and 1973 transitions. cyclomatic complexity: 162 Second operand 4 states.
[2020-11-25 13:57:12,925 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:57:12,925 INFO  L93              Difference]: Finished difference Result 2325 states and 2563 transitions.
[2020-11-25 13:57:12,925 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:57:12,925 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2325 states and 2563 transitions.
[2020-11-25 13:57:12,936 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:57:12,946 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2325 states to 2233 states and 2463 transitions.
[2020-11-25 13:57:12,946 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 728
[2020-11-25 13:57:12,947 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 728
[2020-11-25 13:57:12,947 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2233 states and 2463 transitions.
[2020-11-25 13:57:12,950 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:57:12,950 INFO  L728         BuchiCegarLoop]: Abstraction has 2233 states and 2463 transitions.
[2020-11-25 13:57:12,952 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2233 states and 2463 transitions.
[2020-11-25 13:57:12,970 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2233 to 1949.
[2020-11-25 13:57:12,970 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1949 states.
[2020-11-25 13:57:12,973 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1949 states to 1949 states and 2108 transitions.
[2020-11-25 13:57:12,973 INFO  L751         BuchiCegarLoop]: Abstraction has 1949 states and 2108 transitions.
[2020-11-25 13:57:12,973 INFO  L631         BuchiCegarLoop]: Abstraction has 1949 states and 2108 transitions.
[2020-11-25 13:57:12,973 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:57:12,973 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1949 states and 2108 transitions.
[2020-11-25 13:57:12,978 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:57:12,978 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:12,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:12,980 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:12,980 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_DiceToken0 := false;
[L2]                 call_transfer_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:57:12,984 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:57:12,984 INFO  L82        PathProgramCache]: Analyzing trace with hash -1016768886, now seen corresponding path program 1 times
[2020-11-25 13:57:12,985 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:57:13,002 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:57:13,201 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:57:13,201 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:57:13,201 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 13:57:13,202 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:57:13,202 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 13:57:13,202 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=41, Invalid=231, Unknown=0, NotChecked=0, Total=272
[2020-11-25 13:57:13,202 INFO  L87              Difference]: Start difference. First operand 1949 states and 2108 transitions. cyclomatic complexity: 161 Second operand 17 states.
[2020-11-25 13:57:15,118 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:57:15,119 INFO  L93              Difference]: Finished difference Result 2036 states and 2208 transitions.
[2020-11-25 13:57:15,119 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 13:57:15,119 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2036 states and 2208 transitions.
[2020-11-25 13:57:15,125 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:57:15,132 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2036 states to 2036 states and 2208 transitions.
[2020-11-25 13:57:15,133 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 684
[2020-11-25 13:57:15,133 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 684
[2020-11-25 13:57:15,133 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2036 states and 2208 transitions.
[2020-11-25 13:57:15,136 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:57:15,136 INFO  L728         BuchiCegarLoop]: Abstraction has 2036 states and 2208 transitions.
[2020-11-25 13:57:15,139 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2036 states and 2208 transitions.
[2020-11-25 13:57:15,155 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2036 to 1890.
[2020-11-25 13:57:15,155 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1890 states.
[2020-11-25 13:57:15,158 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1890 states to 1890 states and 2022 transitions.
[2020-11-25 13:57:15,158 INFO  L751         BuchiCegarLoop]: Abstraction has 1890 states and 2022 transitions.
[2020-11-25 13:57:15,158 INFO  L631         BuchiCegarLoop]: Abstraction has 1890 states and 2022 transitions.
[2020-11-25 13:57:15,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:57:15,158 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1890 states and 2022 transitions.
[2020-11-25 13:57:15,161 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:15,161 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:15,161 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:15,163 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:15,163 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_DiceToken0 := false;
[L2]                 call_transfer_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND TRUE   __exception
[L504]               __tmp__Balance := Balance;
[L505]               __tmp__DType := DType;
[L506]               __tmp__Alloc := Alloc;
[L507]               __tmp__balance_ADDR := balance_ADDR;
[L508]               __tmp__M_Ref_int := M_Ref_int;
[L509]               __tmp__sum_balances0 := sum_balances0;
[L510]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L511]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L512]               __tmp__sum_allowed1 := sum_allowed1;
[L513]               __tmp__Length := Length;
[L514]               __tmp__now := now;
[L515]               __tmp__owner_Owned := owner_Owned;
[L516]               __tmp__newOwner_Owned := newOwner_Owned;
[L517]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L518]               __tmp__name_DiceToken := name_DiceToken;
[L519]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L520]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L521]               __tmp__balances_DiceToken := balances_DiceToken;
[L522]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L523]   CALL        call DiceToken_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1663]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1648]              assume msgsender_MSG != null;
[L1649]              __tmp__Balance[this] := 0;
[L1663]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1664]  COND FALSE  !(revert)
[L1836]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1837]  COND FALSE  !(revert)
[L1840]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1701]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1680]              assume msgsender_MSG != null;
[L1681]              __tmp__Balance[this] := 0;
[L1682]              __tmp__owner_Owned[this] := null;
[L1683]              __tmp__newOwner_Owned[this] := null;
[L1685]              __tmp__owner_Owned[this] := msgsender_MSG;
[L1701]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1702]  COND FALSE  !(revert)
[L1840]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1841]  COND FALSE  !(revert)
[L1844]  CALL        call DiceToken_DiceToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1786]              assume msgsender_MSG != null;
[L1787]              __tmp__Balance[this] := 0;
[L1788]              __tmp__symbol_DiceToken[this] := 31320490;
[L1789]              __tmp__name_DiceToken[this] := 31320490;
[L1790]              __tmp__decimals_DiceToken[this] := 0;
[L1791]              __tmp___totalSupply_DiceToken[this] := 0;
[L1792]              __tmp__balances_DiceToken[this] := zeroRefintArr();
[L1793]              __tmp__sum_balances0[this] := 0;
[L1794]              __tmp__allowed_DiceToken[this] := zeroRefRefintArr();
[L1795]              __tmp__sum_allowed1[this] := 0;
[L1797]              __tmp__decimals_DiceToken[this] := 18;
[L1798]              __tmp__symbol_DiceToken[this] := 884691297;
[L1799]              __tmp__name_DiceToken[this] := 869301625;
[L1800]              __var_2 := __tmp__decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1801]              __tmp___totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, __tmp__decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1802]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][__tmp__owner_Owned[this]];
[L1803]              __tmp__balances_DiceToken[this][__tmp__owner_Owned[this]] := __tmp___totalSupply_DiceToken[this];
[L1804]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][__tmp__owner_Owned[this]];
[L1844]  RET         call DiceToken_DiceToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1845]  COND FALSE  !(revert)
[L523]   RET         call DiceToken_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L524]               assume revert || gas < 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:57:15,166 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:57:15,166 INFO  L82        PathProgramCache]: Analyzing trace with hash 1757984813, now seen corresponding path program 1 times
[2020-11-25 13:57:15,167 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:57:15,173 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:57:15,193 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:57:15,193 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:57:15,193 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:57:15,193 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:57:15,194 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:57:15,194 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:57:15,194 INFO  L87              Difference]: Start difference. First operand 1890 states and 2022 transitions. cyclomatic complexity: 135 Second operand 4 states.
[2020-11-25 13:57:15,263 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:57:15,263 INFO  L93              Difference]: Finished difference Result 2504 states and 2811 transitions.
[2020-11-25 13:57:15,263 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 13:57:15,263 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2504 states and 2811 transitions.
[2020-11-25 13:57:15,271 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 13:57:15,277 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2504 states to 2420 states and 2727 transitions.
[2020-11-25 13:57:15,277 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 780
[2020-11-25 13:57:15,278 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 780
[2020-11-25 13:57:15,278 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2420 states and 2727 transitions.
[2020-11-25 13:57:15,280 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:57:15,280 INFO  L728         BuchiCegarLoop]: Abstraction has 2420 states and 2727 transitions.
[2020-11-25 13:57:15,281 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2420 states and 2727 transitions.
[2020-11-25 13:57:15,296 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2420 to 1806.
[2020-11-25 13:57:15,296 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1806 states.
[2020-11-25 13:57:15,298 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1806 states to 1806 states and 1937 transitions.
[2020-11-25 13:57:15,298 INFO  L751         BuchiCegarLoop]: Abstraction has 1806 states and 1937 transitions.
[2020-11-25 13:57:15,298 INFO  L631         BuchiCegarLoop]: Abstraction has 1806 states and 1937 transitions.
[2020-11-25 13:57:15,298 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:57:15,298 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1806 states and 1937 transitions.
[2020-11-25 13:57:15,301 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:57:15,301 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:57:15,301 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:57:15,302 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:57:15,302 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_DiceToken0 := false;
[L2]                 call_transfer_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s366 && (tokens_s366 > balances_DiceToken[this][msgsender_MSG] || balances_DiceToken[this][to_s366] + tokens_s366 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DiceToken0 := true;
[L2]                 call_transfer_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND FALSE  !(gas >= 0)
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:57:15,305 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:57:15,305 INFO  L82        PathProgramCache]: Analyzing trace with hash 1077788580, now seen corresponding path program 1 times
[2020-11-25 13:57:15,306 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:57:15,336 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:57:15,457 INFO  L134       CoverageAnalysis]: Checked inductivity of 56 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 54 trivial. 0 not checked.
[2020-11-25 13:57:15,458 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:57:15,458 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 13:57:15,458 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:57:15,459 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 13:57:15,459 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=130, Unknown=0, NotChecked=0, Total=156
[2020-11-25 13:57:15,459 INFO  L87              Difference]: Start difference. First operand 1806 states and 1937 transitions. cyclomatic complexity: 134 Second operand 13 states.
[2020-11-25 13:57:16,168 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:57:16,169 INFO  L93              Difference]: Finished difference Result 1114 states and 1193 transitions.
[2020-11-25 13:57:16,169 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 13:57:16,169 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1114 states and 1193 transitions.
[2020-11-25 13:57:16,171 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:57:16,171 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1114 states to 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 13:57:16,171 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 13:57:16,171 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:57:16,171 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 13:57:16,171 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 13:57:16,171 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:57:16,171 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 13:57:16,174 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:57:16 BasicIcfg
[2020-11-25 13:57:16,175 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:57:16,175 INFO  L168              Benchmark]: Toolchain (without parser) took 6257.37 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 512.2 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -261.6 MB). Peak memory consumption was 250.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,176 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,176 INFO  L168              Benchmark]: Boogie Preprocessor took 84.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,176 INFO  L168              Benchmark]: UtopiaSpecLang took 48.82 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,176 INFO  L168              Benchmark]: Boogie Printer took 11.57 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,177 INFO  L168              Benchmark]: RCFGBuilder took 623.57 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 827.8 MB in the end (delta: 96.7 MB). Peak memory consumption was 96.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,177 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.86 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,177 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1227.55 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 63.4 MB). Free memory was 824.2 MB in the beginning and 703.6 MB in the end (delta: 120.7 MB). Peak memory consumption was 184.1 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,178 INFO  L168              Benchmark]: BlockEncodingV2 took 146.33 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 140.0 MB). Free memory was 703.6 MB in the beginning and 1.1 GB in the end (delta: -414.6 MB). Peak memory consumption was 17.1 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,178 INFO  L168              Benchmark]: BuchiAutomizer took 4072.12 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 308.8 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -84.1 MB). Peak memory consumption was 224.8 MB. Max. memory is 15.3 GB.
[2020-11-25 13:57:16,181 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2848 locations, 4837 edges
  - StatisticsResult: Encoded RCFG
    2747 locations, 4616 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.82 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.57 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 623.57 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 827.8 MB in the end (delta: 96.7 MB). Peak memory consumption was 96.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.86 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1227.55 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 63.4 MB). Free memory was 824.2 MB in the beginning and 703.6 MB in the end (delta: 120.7 MB). Peak memory consumption was 184.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 146.33 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 140.0 MB). Free memory was 703.6 MB in the beginning and 1.1 GB in the end (delta: -414.6 MB). Peak memory consumption was 17.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4072.12 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 308.8 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -84.1 MB). Peak memory consumption was 224.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1199 locations, 1495 edges
  - StatisticsResult: BuchiProgram size
    2848 locations, 4837 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.0s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1044 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1949 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9303 SDtfs, 8980 SDslu, 16542 SDs, 0 SdLazy, 25991 SolverSat, 1477 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_DiceToken0) ==> ( <>(fail_transfer_DiceToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
