This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:57:10,005 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:57:10,006 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:57:10,016 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:57:10,017 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:57:10,017 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:57:10,018 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:57:10,020 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:57:10,021 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:57:10,022 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:57:10,022 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:57:10,023 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:57:10,023 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:57:10,024 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:57:10,025 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:57:10,025 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:57:10,026 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:57:10,027 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:57:10,028 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:57:10,029 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:57:10,030 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:57:10,030 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:57:10,032 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:57:10,032 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:57:10,032 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:57:10,033 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:57:10,033 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:57:10,034 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:57:10,034 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:57:10,034 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:57:10,034 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:57:10,035 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:57:10,035 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:57:10,036 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:57:10,037 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:57:10,037 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:57:10,037 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:57:10,037 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:57:10,037 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:57:10,038 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:57:10,038 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:57:10,039 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:57:10,046 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:57:10,046 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:57:10,047 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:57:10,047 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:57:10,047 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:57:10,047 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:57:10,047 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:57:10,048 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:57:10,048 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:57:10,048 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:57:10,049 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:57:10,050 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:57:10,050 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:57:10,050 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:57:10,075 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:57:10,090 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:57:10,093 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:57:10,094 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:57:10,094 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:57:10,095 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl
[2020-11-25 05:57:10,095 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl'
[2020-11-25 05:57:10,187 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:57:10,188 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:57:10,188 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:57:10,189 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:57:10,189 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:57:10,206 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,208 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,246 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,247 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,270 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,282 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,291 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,302 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:57:10,303 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:57:10,303 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:57:10,305 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:57:10,309 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/1) ...
[2020-11-25 05:57:10,328 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:57:10,334 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:57:10,342 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:57:10,348 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s235 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s235,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 05:57:10,351 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][msg.sender][spender_s235]==amount_s235 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && governance_Token[this]==( old(governance_Token[this]) ) ) && minters_Token[this]==( old(minters_Token[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && exceptions_ERC20[this]==( old(exceptions_ERC20[this]) ) ) && uniswap_ERC20[this]==( old(uniswap_ERC20[this]) ) ) && _owner_ERC20[this]==( old(_owner_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s235,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[amount_s235,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 05:57:10,357 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:57:10,357 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:57:10,368 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:57:10 PropertyContainer
[2020-11-25 05:57:10,368 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:57:10,369 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:57:10,369 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:57:10,369 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:57:10,370 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/2) ...
[2020-11-25 05:57:10,370 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:57:10,370 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:57:10,387 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:57:10" (2/2) ...
[2020-11-25 05:57:10,387 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:57:10,387 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:57:10,387 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:57:10,387 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:57:10,388 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/2) ...
[2020-11-25 05:57:10,442 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:57:10,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:57:10,443 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:57:10,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:57:10,444 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:57:10,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:57:10,445 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20
[2020-11-25 05:57:10,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20
[2020-11-25 05:57:10,445 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20
[2020-11-25 05:57:10,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20
[2020-11-25 05:57:10,445 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20
[2020-11-25 05:57:10,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20
[2020-11-25 05:57:10,445 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:57:10,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:57:10,445 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:57:10,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:57:10,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:57:10,446 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:57:10,447 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:57:10,447 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:57:10,447 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:57:10,447 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:57:10,448 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:57:10,448 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:57:10,448 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:57:10,448 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token
[2020-11-25 05:57:10,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token
[2020-11-25 05:57:10,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token
[2020-11-25 05:57:10,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token
[2020-11-25 05:57:10,449 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token
[2020-11-25 05:57:10,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token
[2020-11-25 05:57:10,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token
[2020-11-25 05:57:10,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token
[2020-11-25 05:57:10,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:57:10,450 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:57:10,451 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:57:10,452 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__success
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__success
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__success
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__fail
[2020-11-25 05:57:10,453 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:57:10,454 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:57:10,455 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:57:10,456 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__success
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__success
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__fail
[2020-11-25 05:57:10,457 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__success
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__success
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__success
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__success
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__success
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:57:10,458 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:57:10,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:57:10,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:57:10,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:57:10,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:57:10,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:57:10,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:57:10,463 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__fail
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__success
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__fail
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__success
[2020-11-25 05:57:10,464 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:57:10,465 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:57:10,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:57:10,467 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:57:10,467 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-25 05:57:10,467 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:57:10,467 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:57:10,467 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:57:10,740 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:57:10,741 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:57:10,741 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:57:10,941 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:57:11,215 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:57:11,216 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:57:11,217 INFO  L202        PluginConnector]: Adding new model Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:57:11 BoogieIcfgContainer
[2020-11-25 05:57:11,217 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:57:10" (2/2) ...
[2020-11-25 05:57:11,218 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:57:11,218 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5e158e3f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:57:11, skipping insertion in model container
[2020-11-25 05:57:11,218 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:57:11,218 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:57:11,218 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:57:11,219 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:57:11,220 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/3) ...
[2020-11-25 05:57:11,220 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5f58fc1f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:57:11, skipping insertion in model container
[2020-11-25 05:57:11,220 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:57:10" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:57:11,252 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:57:11 NWAContainer
[2020-11-25 05:57:11,252 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:57:11,252 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:57:11,252 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:57:11,253 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:57:11,253 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:57:11" (3/4) ...
[2020-11-25 05:57:11,253 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4d227a3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:57:11, skipping insertion in model container
[2020-11-25 05:57:11,254 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:57:11" (4/4) ...
[2020-11-25 05:57:11,256 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:57:11,259 INFO  L110   BuchiProductObserver]: Initial RCFG 2128 locations, 2891 edges
[2020-11-25 05:57:11,259 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:57:11,270 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:57:12,570 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:57:12,577 INFO  L110   BuchiProductObserver]: BuchiProgram size 5242 locations, 9370 edges
[2020-11-25 05:57:12,577 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:57:12 BoogieIcfgContainer
[2020-11-25 05:57:12,577 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:57:12,578 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:57:12,578 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:57:12,579 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:57:12,580 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:57:12" (1/1) ...
[2020-11-25 05:57:12,698 INFO  L313           BlockEncoder]: Initial Icfg 5242 locations, 9370 edges
[2020-11-25 05:57:12,698 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:57:12,699 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:57:12,699 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:57:12,700 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:57:12,712 INFO  L70    emoveInfeasibleEdges]: Removed 156 edges and 15 locations because of local infeasibility
[2020-11-25 05:57:12,726 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-25 05:57:12,739 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:57:12,743 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:57:12,747 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:57:12,748 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:57:12,751 INFO  L313           BlockEncoder]: Encoded RCFG 5138 locations, 9081 edges
[2020-11-25 05:57:12,751 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:57:12 BasicIcfg
[2020-11-25 05:57:12,751 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:57:12,751 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:57:12,751 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:57:12,753 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:57:12,753 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,753 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:57:10" (1/6) ...
[2020-11-25 05:57:12,755 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47ae25ce and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:57:12, skipping insertion in model container
[2020-11-25 05:57:12,755 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,755 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:57:10" (2/6) ...
[2020-11-25 05:57:12,755 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47ae25ce and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:57:12, skipping insertion in model container
[2020-11-25 05:57:12,755 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,755 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:57:11" (3/6) ...
[2020-11-25 05:57:12,756 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47ae25ce and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:57:12, skipping insertion in model container
[2020-11-25 05:57:12,756 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,756 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:57:11" (4/6) ...
[2020-11-25 05:57:12,756 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47ae25ce and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:57:12, skipping insertion in model container
[2020-11-25 05:57:12,756 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,756 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:57:12" (5/6) ...
[2020-11-25 05:57:12,756 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47ae25ce and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:57:12, skipping insertion in model container
[2020-11-25 05:57:12,756 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:57:12,756 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:57:12" (6/6) ...
[2020-11-25 05:57:12,757 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_approve.bpl_BEv2
[2020-11-25 05:57:12,789 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:57:12,789 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:57:12,789 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:57:12,789 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:57:12,789 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:57:12,789 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:57:12,789 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:57:12,789 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:57:12,789 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:57:12,854 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5138 states.
[2020-11-25 05:57:12,952 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:12,953 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:12,953 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:12,962 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:12,962 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:12,962 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:57:12,963 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5138 states.
[2020-11-25 05:57:12,992 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:12,992 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:12,992 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:12,994 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:12,994 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND TRUE   revert
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND TRUE   choice == 20
[L5556]              gas := gas - 21000;
[L5557]  COND FALSE  !(gas >= 0)
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:13,012 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:13,012 INFO  L82        PathProgramCache]: Analyzing trace with hash 494739895, now seen corresponding path program 1 times
[2020-11-25 05:57:13,017 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:13,043 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:57:13,081 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:57:13,084 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:57:13,084 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:57:13,366 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:57:13,379 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:57:13,379 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:57:13,381 INFO  L87              Difference]: Start difference. First operand 5138 states. Second operand 3 states.
[2020-11-25 05:57:13,664 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:57:13,664 INFO  L93              Difference]: Finished difference Result 4720 states and 7682 transitions.
[2020-11-25 05:57:13,664 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:57:13,665 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4720 states and 7682 transitions.
[2020-11-25 05:57:13,706 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:57:13,756 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4720 states to 4720 states and 7682 transitions.
[2020-11-25 05:57:13,757 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 05:57:13,762 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1205
[2020-11-25 05:57:13,763 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4720 states and 7682 transitions.
[2020-11-25 05:57:13,781 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:57:13,782 INFO  L728         BuchiCegarLoop]: Abstraction has 4720 states and 7682 transitions.
[2020-11-25 05:57:13,803 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4720 states and 7682 transitions.
[2020-11-25 05:57:13,896 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4720 to 4012.
[2020-11-25 05:57:13,897 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4012 states.
[2020-11-25 05:57:13,909 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4012 states to 4012 states and 6459 transitions.
[2020-11-25 05:57:13,910 INFO  L751         BuchiCegarLoop]: Abstraction has 4012 states and 6459 transitions.
[2020-11-25 05:57:13,911 INFO  L631         BuchiCegarLoop]: Abstraction has 4012 states and 6459 transitions.
[2020-11-25 05:57:13,911 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:57:13,911 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4012 states and 6459 transitions.
[2020-11-25 05:57:13,926 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:13,927 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:13,927 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:13,929 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:13,929 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND TRUE   !(msgsender_MSG == governance_Token[this])
[L3904]              revert := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND TRUE   revert
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND TRUE   choice == 20
[L5556]              gas := gas - 21000;
[L5557]  COND FALSE  !(gas >= 0)
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:13,935 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:13,935 INFO  L82        PathProgramCache]: Analyzing trace with hash 689688125, now seen corresponding path program 1 times
[2020-11-25 05:57:13,936 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:13,948 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:57:13,980 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 05:57:13,980 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:57:13,980 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:57:13,981 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:57:13,981 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:57:13,982 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:57:13,982 INFO  L87              Difference]: Start difference. First operand 4012 states and 6459 transitions. cyclomatic complexity: 2449 Second operand 4 states.
[2020-11-25 05:57:14,389 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:57:14,389 INFO  L93              Difference]: Finished difference Result 3725 states and 4264 transitions.
[2020-11-25 05:57:14,389 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:57:14,389 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3725 states and 4264 transitions.
[2020-11-25 05:57:14,401 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:14,412 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3725 states to 3725 states and 4264 transitions.
[2020-11-25 05:57:14,412 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 938
[2020-11-25 05:57:14,413 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 991
[2020-11-25 05:57:14,413 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3725 states and 4264 transitions.
[2020-11-25 05:57:14,416 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:57:14,417 INFO  L728         BuchiCegarLoop]: Abstraction has 3725 states and 4264 transitions.
[2020-11-25 05:57:14,420 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3725 states and 4264 transitions.
[2020-11-25 05:57:14,448 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3725 to 3717.
[2020-11-25 05:57:14,449 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3717 states.
[2020-11-25 05:57:14,453 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3717 states to 3717 states and 4256 transitions.
[2020-11-25 05:57:14,454 INFO  L751         BuchiCegarLoop]: Abstraction has 3717 states and 4256 transitions.
[2020-11-25 05:57:14,454 INFO  L631         BuchiCegarLoop]: Abstraction has 3717 states and 4256 transitions.
[2020-11-25 05:57:14,454 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:57:14,454 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3717 states and 4256 transitions.
[2020-11-25 05:57:14,461 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:14,461 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:14,461 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:14,463 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:14,463 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND TRUE   !(msgsender_MSG == governance_Token[this])
[L3904]              revert := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND TRUE   revert
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND FALSE  !(__exception)
[L812]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2938]  COND TRUE   DType[this] == Token
[L2939]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              __ret_0_ := msgsender_MSG;
[L2939]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2940]  COND FALSE  !(revert)
[L2951]  COND TRUE   DType[this] == Token
[L2952]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3492]              __var_25 := null;
[L3493]  COND TRUE   !(owner_s513 != null)
[L3494]              revert := true;
[L2952]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2953]  COND TRUE   revert
[L812]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L813]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s235] == amount_s235) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND FALSE  !(__exception)
[L812]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2938]  COND TRUE   DType[this] == Token
[L2939]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              __ret_0_ := msgsender_MSG;
[L2939]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2940]  COND FALSE  !(revert)
[L2951]  COND TRUE   DType[this] == Token
[L2952]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3492]              __var_25 := null;
[L3493]  COND TRUE   !(owner_s513 != null)
[L3494]              revert := true;
[L2952]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2953]  COND TRUE   revert
[L812]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L813]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s235] == amount_s235) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:14,469 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:14,469 INFO  L82        PathProgramCache]: Analyzing trace with hash -88155090, now seen corresponding path program 1 times
[2020-11-25 05:57:14,470 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:14,482 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:57:14,520 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:57:14,521 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:57:14,521 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:57:14,521 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:57:14,521 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:57:14,522 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:57:14,522 INFO  L87              Difference]: Start difference. First operand 3717 states and 4256 transitions. cyclomatic complexity: 541 Second operand 3 states.
[2020-11-25 05:57:14,607 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:57:14,607 INFO  L93              Difference]: Finished difference Result 4421 states and 5002 transitions.
[2020-11-25 05:57:14,607 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:57:14,607 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4421 states and 5002 transitions.
[2020-11-25 05:57:14,624 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:57:14,642 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4421 states to 4179 states and 4724 transitions.
[2020-11-25 05:57:14,642 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1116
[2020-11-25 05:57:14,660 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1136
[2020-11-25 05:57:14,660 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4179 states and 4724 transitions.
[2020-11-25 05:57:14,666 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:57:14,666 INFO  L728         BuchiCegarLoop]: Abstraction has 4179 states and 4724 transitions.
[2020-11-25 05:57:14,671 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4179 states and 4724 transitions.
[2020-11-25 05:57:14,704 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4179 to 3571.
[2020-11-25 05:57:14,704 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3571 states.
[2020-11-25 05:57:14,709 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3571 states to 3571 states and 3964 transitions.
[2020-11-25 05:57:14,709 INFO  L751         BuchiCegarLoop]: Abstraction has 3571 states and 3964 transitions.
[2020-11-25 05:57:14,709 INFO  L631         BuchiCegarLoop]: Abstraction has 3571 states and 3964 transitions.
[2020-11-25 05:57:14,709 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:57:14,709 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3571 states and 3964 transitions.
[2020-11-25 05:57:14,716 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:57:14,716 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:14,716 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:14,718 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:14,719 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND FALSE  !(__exception)
[L812]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2938]  COND TRUE   DType[this] == Token
[L2939]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              __ret_0_ := msgsender_MSG;
[L2939]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2940]  COND FALSE  !(revert)
[L2951]  COND TRUE   DType[this] == Token
[L2952]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3492]              __var_25 := null;
[L3493]  COND FALSE  !(!(owner_s513 != null))
[L3497]              __var_26 := null;
[L3498]  COND FALSE  !(!(spender_s513 != null))
[L3502]              sum__allowances1[owner_s513] := sum__allowances1[owner_s513] - _allowances_ERC20[this][owner_s513][spender_s513];
[L3503]              _allowances_ERC20[this][owner_s513][spender_s513] := amount_s513;
[L3504]              sum__allowances1[owner_s513] := sum__allowances1[owner_s513] + _allowances_ERC20[this][owner_s513][spender_s513];
[L3505]              assert { :EventEmitted "Approval_ERC20" } true;
[L2952]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2953]  COND FALSE  !(revert)
[L2964]              __ret_0_ := true;
[L812]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L813]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s235] == amount_s235) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND FALSE  !(__exception)
[L812]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2938]  COND TRUE   DType[this] == Token
[L2939]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              __ret_0_ := msgsender_MSG;
[L2939]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2940]  COND FALSE  !(revert)
[L2951]  COND TRUE   DType[this] == Token
[L2952]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3492]              __var_25 := null;
[L3493]  COND FALSE  !(!(owner_s513 != null))
[L3497]              __var_26 := null;
[L3498]  COND FALSE  !(!(spender_s513 != null))
[L3502]              sum__allowances1[owner_s513] := sum__allowances1[owner_s513] - _allowances_ERC20[this][owner_s513][spender_s513];
[L3503]              _allowances_ERC20[this][owner_s513][spender_s513] := amount_s513;
[L3504]              sum__allowances1[owner_s513] := sum__allowances1[owner_s513] + _allowances_ERC20[this][owner_s513][spender_s513];
[L3505]              assert { :EventEmitted "Approval_ERC20" } true;
[L2952]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2953]  COND FALSE  !(revert)
[L2964]              __ret_0_ := true;
[L812]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L813]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s235] == amount_s235) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:14,727 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:14,727 INFO  L82        PathProgramCache]: Analyzing trace with hash -1515565799, now seen corresponding path program 1 times
[2020-11-25 05:57:14,728 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:14,768 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:57:15,032 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:57:15,032 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:57:15,032 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 05:57:15,033 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:57:15,033 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 05:57:15,033 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=238, Unknown=0, NotChecked=0, Total=272
[2020-11-25 05:57:15,034 INFO  L87              Difference]: Start difference. First operand 3571 states and 3964 transitions. cyclomatic complexity: 395 Second operand 17 states.
[2020-11-25 05:57:17,345 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:57:17,345 INFO  L93              Difference]: Finished difference Result 3706 states and 4121 transitions.
[2020-11-25 05:57:17,345 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 05:57:17,345 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3706 states and 4121 transitions.
[2020-11-25 05:57:17,353 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 05:57:17,362 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3706 states to 3706 states and 4121 transitions.
[2020-11-25 05:57:17,362 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 994
[2020-11-25 05:57:17,363 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 994
[2020-11-25 05:57:17,363 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3706 states and 4121 transitions.
[2020-11-25 05:57:17,366 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:57:17,366 INFO  L728         BuchiCegarLoop]: Abstraction has 3706 states and 4121 transitions.
[2020-11-25 05:57:17,369 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3706 states and 4121 transitions.
[2020-11-25 05:57:17,392 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3706 to 3669.
[2020-11-25 05:57:17,392 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3669 states.
[2020-11-25 05:57:17,395 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3669 states to 3669 states and 4075 transitions.
[2020-11-25 05:57:17,395 INFO  L751         BuchiCegarLoop]: Abstraction has 3669 states and 4075 transitions.
[2020-11-25 05:57:17,395 INFO  L631         BuchiCegarLoop]: Abstraction has 3669 states and 4075 transitions.
[2020-11-25 05:57:17,395 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:57:17,396 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3669 states and 4075 transitions.
[2020-11-25 05:57:17,400 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:57:17,400 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:17,400 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:17,402 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:17,402 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND TRUE   !(owner_s513 != null)
[L3475]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND TRUE   !(owner_s513 != null)
[L3475]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:17,406 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:17,406 INFO  L82        PathProgramCache]: Analyzing trace with hash -1303702927, now seen corresponding path program 1 times
[2020-11-25 05:57:17,407 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:17,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:57:17,462 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:57:17,462 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:57:17,462 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 05:57:17,462 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:57:17,462 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 05:57:17,462 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 05:57:17,463 INFO  L87              Difference]: Start difference. First operand 3669 states and 4075 transitions. cyclomatic complexity: 410 Second operand 8 states.
[2020-11-25 05:57:17,552 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:57:17,552 INFO  L93              Difference]: Finished difference Result 3697 states and 4115 transitions.
[2020-11-25 05:57:17,552 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:57:17,552 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3697 states and 4115 transitions.
[2020-11-25 05:57:17,561 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:57:17,575 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3697 states to 3673 states and 4089 transitions.
[2020-11-25 05:57:17,575 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 994
[2020-11-25 05:57:17,577 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 994
[2020-11-25 05:57:17,577 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3673 states and 4089 transitions.
[2020-11-25 05:57:17,582 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:57:17,582 INFO  L728         BuchiCegarLoop]: Abstraction has 3673 states and 4089 transitions.
[2020-11-25 05:57:17,587 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3673 states and 4089 transitions.
[2020-11-25 05:57:17,624 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3673 to 3673.
[2020-11-25 05:57:17,624 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3673 states.
[2020-11-25 05:57:17,630 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3673 states to 3673 states and 4089 transitions.
[2020-11-25 05:57:17,630 INFO  L751         BuchiCegarLoop]: Abstraction has 3673 states and 4089 transitions.
[2020-11-25 05:57:17,631 INFO  L631         BuchiCegarLoop]: Abstraction has 3673 states and 4089 transitions.
[2020-11-25 05:57:17,631 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:57:17,631 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3673 states and 4089 transitions.
[2020-11-25 05:57:17,637 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:57:17,637 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:57:17,638 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:57:17,640 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:57:17,640 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND FALSE  !(!(owner_s513 != null))
[L3478]              __var_26 := null;
[L3479]  COND TRUE   !(spender_s513 != null)
[L3480]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND TRUE   choice == 16
[L5581]              gas := gas - 21000;
[L5582]  COND TRUE   gas >= 0
[L5583]              assume amount_s235 >= 0 && amount_s235 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5584]              assume msgvalue_MSG == 0;
[L5585]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND FALSE  !(!(owner_s513 != null))
[L3478]              __var_26 := null;
[L3479]  COND TRUE   !(spender_s513 != null)
[L3480]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:57:17,646 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:17,646 INFO  L82        PathProgramCache]: Analyzing trace with hash 370213398, now seen corresponding path program 1 times
[2020-11-25 05:57:17,647 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:17,664 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:17,684 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:17,752 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:17,752 INFO  L82        PathProgramCache]: Analyzing trace with hash 423243421, now seen corresponding path program 1 times
[2020-11-25 05:57:17,753 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:17,757 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:17,761 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:17,772 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:57:17,772 INFO  L82        PathProgramCache]: Analyzing trace with hash 1317930024, now seen corresponding path program 1 times
[2020-11-25 05:57:17,773 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:57:17,788 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:17,805 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 05:57:18,248 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification that was a NOOP. DAG size: 277
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-25 05:57:18,669 WARN  L188               SmtUtils]: Spent 405.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 221
[2020-11-25 05:57:19,384 WARN  L188               SmtUtils]: Spent 711.00 ms on a formula simplification. DAG size of input: 281 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 05:57:19,571 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 05:57:19,765 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification that was a NOOP. DAG size: 347
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 05:57:20,215 WARN  L188               SmtUtils]: Spent 440.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 278
[2020-11-25 05:57:20,419 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification that was a NOOP. DAG size: 278
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:57:20,551 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 152
[2020-11-25 05:57:20,559 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 05:57:21,297 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 217
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 05:57:21,656 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification that was a NOOP. DAG size: 304
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 05:57:22,346 WARN  L188               SmtUtils]: Spent 378.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 221
[2020-11-25 05:57:22,906 WARN  L188               SmtUtils]: Spent 557.00 ms on a formula simplification. DAG size of input: 280 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:57:23,046 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 05:57:23,257 WARN  L188               SmtUtils]: Spent 210.00 ms on a formula simplification that was a NOOP. DAG size: 347
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 05:57:23,637 WARN  L188               SmtUtils]: Spent 372.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 278
[2020-11-25 05:57:24,974 WARN  L188               SmtUtils]: Spent 1.33 s on a formula simplification. DAG size of input: 524 DAG size of output: 517
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 05:57:25,279 WARN  L188               SmtUtils]: Spent 286.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 217
[2020-11-25 05:57:25,529 WARN  L188               SmtUtils]: Spent 231.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 05:57:25,918 WARN  L188               SmtUtils]: Spent 379.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 234
[2020-11-25 05:57:26,612 WARN  L188               SmtUtils]: Spent 692.00 ms on a formula simplification. DAG size of input: 363 DAG size of output: 362
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 31699 to 63397
[2020-11-25 05:57:28,391 WARN  L188               SmtUtils]: Spent 1.76 s on a formula simplification. DAG size of input: 368 DAG size of output: 357
[2020-11-25 05:57:28,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:28,428 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:57:28,436 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:57:28 BasicIcfg
[2020-11-25 05:57:28,436 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:57:28,437 INFO  L168              Benchmark]: Toolchain (without parser) took 18249.41 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -405.1 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,437 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,437 INFO  L168              Benchmark]: Boogie Preprocessor took 114.35 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,437 INFO  L168              Benchmark]: UtopiaSpecLang took 65.21 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,438 INFO  L168              Benchmark]: Boogie Printer took 18.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,438 INFO  L168              Benchmark]: RCFGBuilder took 830.72 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 758.0 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,438 INFO  L168              Benchmark]: UtopiaLTL2Aut took 33.85 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,438 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1325.43 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 195.0 MB). Free memory was 754.5 MB in the beginning and 792.2 MB in the end (delta: -37.8 MB). Peak memory consumption was 157.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,439 INFO  L168              Benchmark]: BlockEncodingV2 took 173.19 ms. Allocated memory is still 1.2 GB. Free memory was 792.2 MB in the beginning and 716.8 MB in the end (delta: 75.5 MB). Peak memory consumption was 75.5 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,439 INFO  L168              Benchmark]: BuchiAutomizer took 15685.12 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 716.8 MB in the beginning and 1.3 GB in the end (delta: -623.6 MB). Peak memory consumption was 948.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:57:28,441 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5242 locations, 9370 edges
  - StatisticsResult: Encoded RCFG
    5138 locations, 9081 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 114.35 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.21 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 830.72 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 758.0 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 33.85 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1325.43 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 195.0 MB). Free memory was 754.5 MB in the beginning and 792.2 MB in the end (delta: -37.8 MB). Peak memory consumption was 157.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 173.19 ms. Allocated memory is still 1.2 GB. Free memory was 792.2 MB in the beginning and 716.8 MB in the end (delta: 75.5 MB). Peak memory consumption was 75.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 15685.12 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 716.8 MB in the beginning and 1.3 GB in the end (delta: -623.6 MB). Peak memory consumption was 948.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2128 locations, 2891 edges
  - StatisticsResult: BuchiProgram size
    5242 locations, 9370 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 3673 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 15.6s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 11.6s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1361 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4012 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 22141 SDtfs, 14094 SDslu, 44513 SDs, 0 SdLazy, 39886 SolverSat, 2762 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979020) = (new Token)({from : 3979004, name : 3979005, ticker : 3979010, amount : 0});
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
ERC20(3979020).approve~address~uint256.gas(3979002)({from : 3979016, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND FALSE  !(!(owner_s513 != null))
[L3478]              __var_26 := null;
[L3479]  COND TRUE   !(spender_s513 != null)
[L3480]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);

Loop:
ERC20(3979020).approve~address~uint256.gas(3979001)({from : 3979013, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s235;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L781]               havoc __exception;
[L782]               revert := false;
[L783]   COND TRUE   __exception
[L784]               __tmp__Balance := Balance;
[L785]               __tmp__DType := DType;
[L786]               __tmp__Alloc := Alloc;
[L787]               __tmp__balance_ADDR := balance_ADDR;
[L788]               __tmp__M_Ref_int := M_Ref_int;
[L789]               __tmp__sum__balances0 := sum__balances0;
[L790]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L791]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L792]               __tmp__sum__allowances1 := sum__allowances1;
[L793]               __tmp__M_Ref_bool := M_Ref_bool;
[L794]               __tmp__sum_exceptions2 := sum_exceptions2;
[L795]               __tmp__sum_minters3 := sum_minters3;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp___balances_ERC20 := _balances_ERC20;
[L799]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L800]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L801]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L802]               __tmp___owner_ERC20 := _owner_ERC20;
[L803]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L804]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L805]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L806]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L807]               __tmp__governance_Token := governance_Token;
[L808]               __tmp__minters_Token := minters_Token;
[L809]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L2905]  COND TRUE   __tmp__DType[this] == Token
[L2906]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2620]              __ret_0_ := msgsender_MSG;
[L2906]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L2918]  COND TRUE   __tmp__DType[this] == Token
[L2919]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L3473]              __var_25 := null;
[L3474]  COND FALSE  !(!(owner_s513 != null))
[L3478]              __var_26 := null;
[L3479]  COND TRUE   !(spender_s513 != null)
[L3480]              revert := true;
[L2919]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s235, amount_s235);
[L2920]  COND TRUE   revert
[L809]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);
[L810]               assume revert || gas < 0;
[L5585]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s235, amount_s235);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
