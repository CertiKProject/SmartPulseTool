This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:22:52,847 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:22:52,848 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:22:52,855 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:22:52,855 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:22:52,856 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:22:52,857 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:22:52,858 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:22:52,859 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:22:52,859 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:22:52,860 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:22:52,860 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:22:52,860 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:22:52,861 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:22:52,861 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:22:52,862 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:22:52,862 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:22:52,863 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:22:52,864 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:22:52,865 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:22:52,865 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:22:52,866 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:22:52,867 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:22:52,867 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:22:52,867 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:22:52,868 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:22:52,868 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:22:52,868 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:22:52,869 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:22:52,869 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:22:52,869 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:22:52,869 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:22:52,870 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:22:52,870 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:22:52,871 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:22:52,871 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:22:52,871 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:22:52,871 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:22:52,871 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:22:52,872 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:22:52,872 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:22:52,872 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:22:52,878 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:22:52,878 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:22:52,879 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:22:52,879 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:22:52,879 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:22:52,879 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:22:52,880 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:22:52,880 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:22:52,880 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:22:52,909 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:22:52,924 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:22:52,927 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:22:52,928 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:22:52,928 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:22:52,929 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl
[2020-11-25 13:22:52,929 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl'
[2020-11-25 13:22:52,995 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:22:52,996 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:22:52,997 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:22:52,997 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:22:52,997 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:22:53,013 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,014 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,032 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,033 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,047 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,054 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,058 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,063 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:22:53,064 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:22:53,064 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:22:53,065 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:22:53,068 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/1) ...
[2020-11-25 13:22:53,080 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DATA1TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_DATA1TokenERC20[this][from] || value > allowance_DATA1TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DATA1TokenERC20.transferFrom)))
[2020-11-25 13:22:53,085 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DATA1TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_DATA1TokenERC20[this][from] || value > allowance_DATA1TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DATA1TokenERC20.transferFrom)))
[2020-11-25 13:22:53,091 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DATA1TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_DATA1TokenERC20[this][from] || value > allowance_DATA1TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DATA1TokenERC20.transferFrom)))
[2020-11-25 13:22:53,097 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s220==_to_s220 && ( _value_s220>balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220>allowance_DATA1TokenERC20[this][_from_s220][msg.sender] ) ) && _value_s220>=0 ) && _value_s220<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_to_s220]>=0 ) && balanceOf_DATA1TokenERC20[this][_to_s220]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_from_s220]>=0 ) && balanceOf_DATA1TokenERC20[this][_from_s220]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_DATA1TokenERC20[this][_from_s220][msg.sender]>=0 ) && allowance_DATA1TokenERC20[this][_from_s220][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:22:53,101 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DATA1TokenERC20.transferFrom(from, to, value), from == to && (value > balanceOf_DATA1TokenERC20[this][from] || value > allowance_DATA1TokenERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(DATA1TokenERC20.transferFrom)))
[2020-11-25 13:22:53,101 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_DATA1TokenERC200) ==> ( <>AP(fail_transferFrom_DATA1TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:22:53,106 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:53 PropertyContainer
[2020-11-25 13:22:53,106 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:22:53,106 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:22:53,106 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:22:53,106 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:22:53,107 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/2) ...
[2020-11-25 13:22:53,107 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:22:53,107 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:22:53,113 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:53" (2/2) ...
[2020-11-25 13:22:53,113 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:22:53,113 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:22:53,113 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:22:53,113 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:22:53,114 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/2) ...
[2020-11-25 13:22:53,161 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:22:53,161 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:22:53,162 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:22:53,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20
[2020-11-25 13:22:53,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:22:53,164 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,165 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:22:53,166 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:22:53,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:22:53,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:22:53,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:22:53,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:22:53,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:22:53,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 13:22:53,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 13:22:53,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:22:53,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:22:53,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:22:53,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:22:53,359 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:53,359 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:53,566 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:22:53,566 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 13:22:53,568 INFO  L202        PluginConnector]: Adding new model DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:53 BoogieIcfgContainer
[2020-11-25 13:22:53,568 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:53" (2/2) ...
[2020-11-25 13:22:53,568 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:22:53,569 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@689fdb4a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:53, skipping insertion in model container
[2020-11-25 13:22:53,569 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:22:53,569 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:22:53,569 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:22:53,571 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:22:53,571 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/3) ...
[2020-11-25 13:22:53,571 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5f6aa093 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:53, skipping insertion in model container
[2020-11-25 13:22:53,572 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:53" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:22:53,605 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:53 NWAContainer
[2020-11-25 13:22:53,605 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:22:53,606 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:22:53,606 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:22:53,607 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:22:53,607 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:53" (3/4) ...
[2020-11-25 13:22:53,608 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16afbfd7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:53, skipping insertion in model container
[2020-11-25 13:22:53,608 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:53" (4/4) ...
[2020-11-25 13:22:53,611 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:22:53,613 INFO  L110   BuchiProductObserver]: Initial RCFG 692 locations, 837 edges
[2020-11-25 13:22:53,613 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:22:53,622 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:22:54,432 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:22:54,434 INFO  L110   BuchiProductObserver]: BuchiProgram size 1618 locations, 2696 edges
[2020-11-25 13:22:54,435 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:54 BoogieIcfgContainer
[2020-11-25 13:22:54,435 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:22:54,435 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:22:54,435 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:22:54,437 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:22:54,438 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:54" (1/1) ...
[2020-11-25 13:22:54,482 INFO  L313           BlockEncoder]: Initial Icfg 1618 locations, 2696 edges
[2020-11-25 13:22:54,482 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:22:54,483 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:22:54,483 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:22:54,483 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:22:54,490 INFO  L70    emoveInfeasibleEdges]: Removed 24 edges and 7 locations because of local infeasibility
[2020-11-25 13:22:54,494 INFO  L70        RemoveSinkStates]: Removed 40 edges and 20 locations by removing sink states
[2020-11-25 13:22:54,498 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:22:54,501 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:22:54,503 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:22:54,503 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:22:54,506 INFO  L313           BlockEncoder]: Encoded RCFG 1583 locations, 2621 edges
[2020-11-25 13:22:54,506 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:22:54 BasicIcfg
[2020-11-25 13:22:54,506 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:22:54,507 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:22:54,507 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:22:54,509 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:22:54,509 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,510 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:52" (1/6) ...
[2020-11-25 13:22:54,511 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f7cef28 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:54, skipping insertion in model container
[2020-11-25 13:22:54,512 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,512 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:53" (2/6) ...
[2020-11-25 13:22:54,512 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f7cef28 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:54, skipping insertion in model container
[2020-11-25 13:22:54,512 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,512 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:53" (3/6) ...
[2020-11-25 13:22:54,512 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f7cef28 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:22:54, skipping insertion in model container
[2020-11-25 13:22:54,512 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,512 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:53" (4/6) ...
[2020-11-25 13:22:54,513 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f7cef28 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:54, skipping insertion in model container
[2020-11-25 13:22:54,513 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,513 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:54" (5/6) ...
[2020-11-25 13:22:54,513 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@f7cef28 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:22:54, skipping insertion in model container
[2020-11-25 13:22:54,513 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:54,513 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:22:54" (6/6) ...
[2020-11-25 13:22:54,514 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self-fail.bpl_BEv2
[2020-11-25 13:22:54,547 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:22:54,547 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:22:54,547 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:22:54,547 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:22:54,547 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:22:54,547 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:22:54,547 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:22:54,547 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:22:54,547 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:22:54,565 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1583 states.
[2020-11-25 13:22:54,601 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:54,601 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:54,601 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:54,609 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:54,609 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:54,609 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:22:54,609 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1583 states.
[2020-11-25 13:22:54,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:54,621 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:54,621 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:54,622 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:54,622 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_DATA1TokenERC200 := false;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND TRUE   choice == 10
[L1818]              gas := gas - 21000;
[L1819]  COND FALSE  !(gas >= 0)
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:54,635 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:54,635 INFO  L82        PathProgramCache]: Analyzing trace with hash 1857657490, now seen corresponding path program 1 times
[2020-11-25 13:22:54,639 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:54,656 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:54,692 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:54,693 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:54,693 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:22:54,696 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:54,795 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:22:54,796 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:22:54,799 INFO  L87              Difference]: Start difference. First operand 1583 states. Second operand 3 states.
[2020-11-25 13:22:54,908 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:54,908 INFO  L93              Difference]: Finished difference Result 1213 states and 1319 transitions.
[2020-11-25 13:22:54,908 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:22:54,910 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1213 states and 1319 transitions.
[2020-11-25 13:22:54,916 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:54,933 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1213 states to 1211 states and 1315 transitions.
[2020-11-25 13:22:54,934 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 13:22:54,937 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 536
[2020-11-25 13:22:54,937 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1211 states and 1315 transitions.
[2020-11-25 13:22:54,942 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:54,942 INFO  L728         BuchiCegarLoop]: Abstraction has 1211 states and 1315 transitions.
[2020-11-25 13:22:54,957 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1211 states and 1315 transitions.
[2020-11-25 13:22:54,985 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1211 to 1211.
[2020-11-25 13:22:54,985 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1211 states.
[2020-11-25 13:22:54,989 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1211 states to 1211 states and 1315 transitions.
[2020-11-25 13:22:54,990 INFO  L751         BuchiCegarLoop]: Abstraction has 1211 states and 1315 transitions.
[2020-11-25 13:22:54,990 INFO  L631         BuchiCegarLoop]: Abstraction has 1211 states and 1315 transitions.
[2020-11-25 13:22:54,990 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:22:54,990 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1211 states and 1315 transitions.
[2020-11-25 13:22:54,995 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:54,996 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:54,996 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:54,997 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:54,997 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_DATA1TokenERC200 := false;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND TRUE   !(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1135]              revert := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND TRUE   !(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1135]              revert := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:55,001 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:55,001 INFO  L82        PathProgramCache]: Analyzing trace with hash 1968497333, now seen corresponding path program 1 times
[2020-11-25 13:22:55,002 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:55,016 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:55,044 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:55,044 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:55,044 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:22:55,046 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:55,046 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:22:55,046 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:22:55,046 INFO  L87              Difference]: Start difference. First operand 1211 states and 1315 transitions. cyclomatic complexity: 106 Second operand 3 states.
[2020-11-25 13:22:55,089 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:55,089 INFO  L93              Difference]: Finished difference Result 1560 states and 1730 transitions.
[2020-11-25 13:22:55,089 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:22:55,089 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1560 states and 1730 transitions.
[2020-11-25 13:22:55,100 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:22:55,109 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1560 states to 1504 states and 1664 transitions.
[2020-11-25 13:22:55,109 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 678
[2020-11-25 13:22:55,110 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 678
[2020-11-25 13:22:55,110 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1504 states and 1664 transitions.
[2020-11-25 13:22:55,113 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:55,113 INFO  L728         BuchiCegarLoop]: Abstraction has 1504 states and 1664 transitions.
[2020-11-25 13:22:55,114 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1504 states and 1664 transitions.
[2020-11-25 13:22:55,131 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1504 to 1301.
[2020-11-25 13:22:55,131 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1301 states.
[2020-11-25 13:22:55,134 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1301 states to 1301 states and 1412 transitions.
[2020-11-25 13:22:55,134 INFO  L751         BuchiCegarLoop]: Abstraction has 1301 states and 1412 transitions.
[2020-11-25 13:22:55,134 INFO  L631         BuchiCegarLoop]: Abstraction has 1301 states and 1412 transitions.
[2020-11-25 13:22:55,134 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:22:55,134 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1301 states and 1412 transitions.
[2020-11-25 13:22:55,139 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:22:55,139 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:55,139 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:55,141 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:55,141 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_DATA1TokenERC200 := false;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1138]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1139]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1140]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1141]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1141]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1142]  COND FALSE  !(revert)
[L1145]              success_s220 := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1138]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1139]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1140]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1141]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1141]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1142]  COND FALSE  !(revert)
[L1145]              success_s220 := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:55,145 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:55,146 INFO  L82        PathProgramCache]: Analyzing trace with hash 1103539521, now seen corresponding path program 1 times
[2020-11-25 13:22:55,146 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:55,164 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:55,281 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:55,281 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:55,282 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 13:22:55,282 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:55,282 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 13:22:55,282 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-25 13:22:55,283 INFO  L87              Difference]: Start difference. First operand 1301 states and 1412 transitions. cyclomatic complexity: 113 Second operand 12 states.
[2020-11-25 13:22:56,317 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:56,318 INFO  L93              Difference]: Finished difference Result 1379 states and 1502 transitions.
[2020-11-25 13:22:56,318 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 13:22:56,318 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1379 states and 1502 transitions.
[2020-11-25 13:22:56,324 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:22:56,331 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1379 states to 1379 states and 1502 transitions.
[2020-11-25 13:22:56,331 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 644
[2020-11-25 13:22:56,332 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 644
[2020-11-25 13:22:56,332 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1379 states and 1502 transitions.
[2020-11-25 13:22:56,334 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:56,334 INFO  L728         BuchiCegarLoop]: Abstraction has 1379 states and 1502 transitions.
[2020-11-25 13:22:56,336 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1379 states and 1502 transitions.
[2020-11-25 13:22:56,351 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1379 to 1254.
[2020-11-25 13:22:56,351 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1254 states.
[2020-11-25 13:22:56,354 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1254 states to 1254 states and 1348 transitions.
[2020-11-25 13:22:56,354 INFO  L751         BuchiCegarLoop]: Abstraction has 1254 states and 1348 transitions.
[2020-11-25 13:22:56,354 INFO  L631         BuchiCegarLoop]: Abstraction has 1254 states and 1348 transitions.
[2020-11-25 13:22:56,354 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:22:56,354 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1254 states and 1348 transitions.
[2020-11-25 13:22:56,358 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:56,358 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:56,358 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:56,360 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:56,360 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_DATA1TokenERC200 := false;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND TRUE   __exception
[L142]               __tmp__Balance := Balance;
[L143]               __tmp__DType := DType;
[L144]               __tmp__Alloc := Alloc;
[L145]               __tmp__balance_ADDR := balance_ADDR;
[L146]               __tmp__M_Ref_int := M_Ref_int;
[L147]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L148]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L149]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L150]               __tmp__sum_allowance1 := sum_allowance1;
[L151]               __tmp__Length := Length;
[L152]               __tmp__now := now;
[L153]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L154]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L155]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L156]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L157]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L158]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L159]   CALL        call DATA1TokenERC20_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1026]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L979]               assume msgsender_MSG != null;
[L980]               __tmp__Balance[this] := 0;
[L981]               __tmp__name_DATA1TokenERC20[this] := -1807461670;
[L982]               __tmp__symbol_DATA1TokenERC20[this] := -1807461670;
[L983]               __tmp__decimals_DATA1TokenERC20[this] := 3;
[L984]               __tmp__totalSupply_DATA1TokenERC20[this] := 0;
[L985]               __tmp__balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L986]               __tmp__sum_balanceOf0[this] := 0;
[L987]               __tmp__allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L988]               __tmp__sum_allowance1[this] := 0;
[L990]               __var_1 := __tmp__decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L991]               __tmp__totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, __tmp__decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L992]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L993]               __tmp__balanceOf_DATA1TokenERC20[this][msgsender_MSG] := __tmp__totalSupply_DATA1TokenERC20[this];
[L994]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L995]               __tmp__name_DATA1TokenERC20[this] := tokenName_s83;
[L996]               __tmp__symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1026]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1027]  COND FALSE  !(revert)
[L159]   RET         call DATA1TokenERC20_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L160]               assume revert || gas < 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1138]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1139]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1140]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1141]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1141]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1142]  COND FALSE  !(revert)
[L1145]              success_s220 := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND TRUE   choice == 10
[L1818]              gas := gas - 21000;
[L1819]  COND FALSE  !(gas >= 0)
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:56,363 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:56,363 INFO  L82        PathProgramCache]: Analyzing trace with hash -1313617757, now seen corresponding path program 1 times
[2020-11-25 13:22:56,364 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:56,372 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:56,397 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:56,398 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:56,398 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:22:56,398 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:56,398 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:22:56,399 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:22:56,399 INFO  L87              Difference]: Start difference. First operand 1254 states and 1348 transitions. cyclomatic complexity: 97 Second operand 4 states.
[2020-11-25 13:22:56,529 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:56,529 INFO  L93              Difference]: Finished difference Result 1671 states and 1877 transitions.
[2020-11-25 13:22:56,529 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:22:56,529 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1671 states and 1877 transitions.
[2020-11-25 13:22:56,539 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 13:22:56,550 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1671 states to 1621 states and 1827 transitions.
[2020-11-25 13:22:56,550 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 746
[2020-11-25 13:22:56,551 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 746
[2020-11-25 13:22:56,551 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1621 states and 1827 transitions.
[2020-11-25 13:22:56,553 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:56,554 INFO  L728         BuchiCegarLoop]: Abstraction has 1621 states and 1827 transitions.
[2020-11-25 13:22:56,555 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1621 states and 1827 transitions.
[2020-11-25 13:22:56,569 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1621 to 1217.
[2020-11-25 13:22:56,569 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1217 states.
[2020-11-25 13:22:56,571 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1217 states to 1217 states and 1308 transitions.
[2020-11-25 13:22:56,571 INFO  L751         BuchiCegarLoop]: Abstraction has 1217 states and 1308 transitions.
[2020-11-25 13:22:56,571 INFO  L631         BuchiCegarLoop]: Abstraction has 1217 states and 1308 transitions.
[2020-11-25 13:22:56,571 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:22:56,571 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1217 states and 1308 transitions.
[2020-11-25 13:22:56,573 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:56,574 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:56,574 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:56,575 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:56,575 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_DATA1TokenERC200 := false;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND FALSE  !(choice == 3)
[L1867]  COND TRUE   choice == 2
[L1868]              gas := gas - 21000;
[L1869]  COND TRUE   gas >= 0
[L1870]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1871]              assume msgvalue_MSG == 0;
[L1872]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1160]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1161]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1162]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1163]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1164]              success_s248 := true;
[L324]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L325]               assume !revert && gas >= 0;
[L1872]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND FALSE  !(choice == 4)
[L1860]  COND TRUE   choice == 3
[L1861]              gas := gas - 21000;
[L1862]  COND TRUE   gas >= 0
[L1863]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1864]              assume msgvalue_MSG == 0;
[L1865]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s220 == _to_s220 && (_value_s220 > balanceOf_DATA1TokenERC20[this][_from_s220] || _value_s220 > allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_DATA1TokenERC200 := true;
[L2]                 call_transferFrom_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1134]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1138]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1139]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1140]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1141]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1141]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1142]  COND FALSE  !(revert)
[L1145]              success_s220 := true;
[L272]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L273]               assume !revert && gas >= 0;
[L1865]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND TRUE   choice == 10
[L1818]              gas := gas - 21000;
[L1819]  COND FALSE  !(gas >= 0)
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:56,577 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:56,577 INFO  L82        PathProgramCache]: Analyzing trace with hash -2005573366, now seen corresponding path program 1 times
[2020-11-25 13:22:56,578 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:56,590 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:56,658 INFO  L134       CoverageAnalysis]: Checked inductivity of 49 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 49 trivial. 0 not checked.
[2020-11-25 13:22:56,659 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:56,659 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 13:22:56,659 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:56,659 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-25 13:22:56,659 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=67, Unknown=0, NotChecked=0, Total=90
[2020-11-25 13:22:56,659 INFO  L87              Difference]: Start difference. First operand 1217 states and 1308 transitions. cyclomatic complexity: 94 Second operand 10 states.
[2020-11-25 13:22:57,091 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:57,091 INFO  L93              Difference]: Finished difference Result 729 states and 780 transitions.
[2020-11-25 13:22:57,091 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 13:22:57,091 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 729 states and 780 transitions.
[2020-11-25 13:22:57,094 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:22:57,094 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 729 states to 0 states and 0 transitions.
[2020-11-25 13:22:57,094 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 13:22:57,094 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 13:22:57,094 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 13:22:57,094 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:57,094 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:22:57,094 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:22:57,094 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:22:57,094 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 13:22:57,095 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 13:22:57,095 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:22:57,095 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 13:22:57,098 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:22:57 BasicIcfg
[2020-11-25 13:22:57,098 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:22:57,098 INFO  L168              Benchmark]: Toolchain (without parser) took 4102.59 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 280.5 MB). Free memory was 940.6 MB in the beginning and 811.9 MB in the end (delta: 128.7 MB). Peak memory consumption was 409.1 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,099 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,099 INFO  L168              Benchmark]: Boogie Preprocessor took 66.80 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,099 INFO  L168              Benchmark]: UtopiaSpecLang took 42.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,100 INFO  L168              Benchmark]: Boogie Printer took 6.81 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,100 INFO  L168              Benchmark]: RCFGBuilder took 455.81 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,100 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.50 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,101 INFO  L168              Benchmark]: BÃ¼chi Program Product took 829.21 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 872.6 MB in the beginning and 930.0 MB in the end (delta: -57.5 MB). Peak memory consumption was 156.2 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,101 INFO  L168              Benchmark]: BlockEncodingV2 took 71.20 ms. Allocated memory is still 1.1 GB. Free memory was 930.0 MB in the beginning and 894.4 MB in the end (delta: 35.6 MB). Peak memory consumption was 35.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,102 INFO  L168              Benchmark]: BuchiAutomizer took 2591.11 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 221.8 MB). Free memory was 894.4 MB in the beginning and 811.9 MB in the end (delta: 82.5 MB). Peak memory consumption was 304.2 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:57,104 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1618 locations, 2696 edges
  - StatisticsResult: Encoded RCFG
    1583 locations, 2621 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 66.80 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 42.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 6.81 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 455.81 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.50 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 829.21 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 872.6 MB in the beginning and 930.0 MB in the end (delta: -57.5 MB). Peak memory consumption was 156.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 71.20 ms. Allocated memory is still 1.1 GB. Free memory was 930.0 MB in the beginning and 894.4 MB in the end (delta: 35.6 MB). Peak memory consumption was 35.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2591.11 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 221.8 MB). Free memory was 894.4 MB in the beginning and 811.9 MB in the end (delta: 82.5 MB). Peak memory consumption was 304.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    692 locations, 837 edges
  - StatisticsResult: BuchiProgram size
    1618 locations, 2696 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 12 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.5s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.2s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 732 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1301 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6235 SDtfs, 4733 SDslu, 8648 SDs, 0 SdLazy, 11107 SolverSat, 874 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_DATA1TokenERC200) ==> ( <>(fail_transferFrom_DATA1TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
