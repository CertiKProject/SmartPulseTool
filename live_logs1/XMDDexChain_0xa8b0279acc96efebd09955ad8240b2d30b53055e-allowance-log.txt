This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:07:07,980 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:07:07,981 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:07:07,991 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:07:07,991 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:07:07,992 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:07:07,993 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:07:07,994 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:07:07,995 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:07:07,996 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:07:07,997 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:07:07,997 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:07:07,998 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:07:07,998 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:07:07,999 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:07:08,000 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:07:08,000 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:07:08,001 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:07:08,002 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:07:08,004 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:07:08,004 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:07:08,005 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:07:08,007 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:07:08,007 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:07:08,007 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:07:08,008 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:07:08,008 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:07:08,008 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:07:08,009 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:07:08,009 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:07:08,009 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:07:08,010 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:07:08,010 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:07:08,011 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:07:08,011 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:07:08,011 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:07:08,012 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:07:08,012 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:07:08,012 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:07:08,013 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:07:08,013 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:07:08,014 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:07:08,021 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:07:08,021 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:07:08,022 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:07:08,022 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:07:08,022 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:07:08,022 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:07:08,022 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:07:08,022 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:07:08,023 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:07:08,023 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:07:08,023 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:07:08,024 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:07:08,024 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:07:08,046 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:07:08,058 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:07:08,061 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:07:08,063 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:07:08,063 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:07:08,064 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl
[2020-11-25 09:07:08,064 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl'
[2020-11-25 09:07:08,150 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:07:08,151 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:07:08,152 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:07:08,152 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:07:08,152 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:07:08,168 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,169 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,199 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,200 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,218 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,227 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,233 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,241 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:07:08,241 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:07:08,242 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:07:08,243 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:07:08,247 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/1) ...
[2020-11-25 09:07:08,265 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(XMDDexChain.allowance(owner, spender), allowed_XMDDexChain[this][owner][spender] >= 0 && allowed_XMDDexChain[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(XMDDexChain.allowance(owner, spender), return == allowed_XMDDexChain[this][owner][spender] &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:08,270 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(XMDDexChain.allowance(owner, spender), allowed_XMDDexChain[this][owner][spender] >= 0 && allowed_XMDDexChain[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(XMDDexChain.allowance(owner, spender), return == allowed_XMDDexChain[this][owner][spender] &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:08,278 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(XMDDexChain.allowance(owner, spender), allowed_XMDDexChain[this][owner][spender] >= 0 && allowed_XMDDexChain[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(XMDDexChain.allowance(owner, spender), return == allowed_XMDDexChain[this][owner][spender] &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:08,284 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_XMDDexChain[this][tokenOwner_s474][spender_s474]>=0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[tokenOwner_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[spender_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[tokenOwner_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[spender_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:07:08,287 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( remaining_s474==allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] && _totalSupply_XMDDexChain[this]==( old(_totalSupply_XMDDexChain[this]) ) ) && balances_XMDDexChain[this]==( old(balances_XMDDexChain[this]) ) ) && allowed_XMDDexChain[this]==( old(allowed_XMDDexChain[this]) ) ) && symbol_XMDDexChain[this]==( old(symbol_XMDDexChain[this]) ) ) && name_XMDDexChain[this]==( old(name_XMDDexChain[this]) ) ) && decimals_XMDDexChain[this]==( old(decimals_XMDDexChain[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[remaining_s474,<IMPLEMENTATION_OUTPARAM,allowance~address~address_XMDDexChain>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[tokenOwner_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],[IdentifierExpression[spender_s474,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_XMDDexChain>]]]]]]
[2020-11-25 09:07:08,291 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(XMDDexChain.allowance(owner, spender), allowed_XMDDexChain[this][owner][spender] >= 0 && allowed_XMDDexChain[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(XMDDexChain.allowance(owner, spender), return == allowed_XMDDexChain[this][owner][spender] &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:08,291 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_XMDDexChain0) ==> ( <>AP(success_allowance_XMDDexChain0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:07:08,299 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:08 PropertyContainer
[2020-11-25 09:07:08,300 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:07:08,300 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:07:08,300 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:07:08,300 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:07:08,301 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/2) ...
[2020-11-25 09:07:08,301 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:07:08,301 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:07:08,314 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:08" (2/2) ...
[2020-11-25 09:07:08,314 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:07:08,315 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:07:08,315 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:07:08,315 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:07:08,316 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/2) ...
[2020-11-25 09:07:08,366 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:07:08,366 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:07:08,366 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:07:08,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:07:08,366 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:07:08,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:07:08,366 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:07:08,367 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:07:08,367 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:07:08,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 09:07:08,368 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 09:07:08,369 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 09:07:08,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain_NoBaseCtor__success
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain
[2020-11-25 09:07:08,370 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_XMDDexChain__success
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain
[2020-11-25 09:07:08,371 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain
[2020-11-25 09:07:08,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain
[2020-11-25 09:07:08,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 09:07:08,372 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_XMDDexChain
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:07:08,373 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,374 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 09:07:08,375 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain_NoBaseCtor__fail
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain__success
[2020-11-25 09:07:08,376 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain__fail
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain__success
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain__fail
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain__success
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain__fail
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,377 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain__success
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain__fail
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain__success
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain__fail
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_XMDDexChain__fail
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain__success
[2020-11-25 09:07:08,378 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain__success
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain__success
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain__success
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:07:08,379 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 09:07:08,381 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 09:07:08,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain_NoBaseCtor__fail
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain_NoBaseCtor__success
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain__fail
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain__success
[2020-11-25 09:07:08,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain__success
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain__success
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain__fail
[2020-11-25 09:07:08,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain__fail
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_XMDDexChain__fail
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain__fail
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain__fail
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain__success
[2020-11-25 09:07:08,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 09:07:08,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_XMDDexChain
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:07:08,387 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:07:08,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:07:08,955 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:08,955 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:08,955 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:09,060 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:07:09,060 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 09:07:09,062 INFO  L202        PluginConnector]: Adding new model XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:09 BoogieIcfgContainer
[2020-11-25 09:07:09,062 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:08" (2/2) ...
[2020-11-25 09:07:09,062 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:07:09,063 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@12cc0f2e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:09, skipping insertion in model container
[2020-11-25 09:07:09,063 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:07:09,063 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:07:09,063 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:07:09,064 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:07:09,065 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/3) ...
[2020-11-25 09:07:09,065 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@55d615d7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:09, skipping insertion in model container
[2020-11-25 09:07:09,065 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:07:09,102 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:09 NWAContainer
[2020-11-25 09:07:09,102 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:07:09,103 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:07:09,103 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:07:09,103 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:07:09,104 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:09" (3/4) ...
[2020-11-25 09:07:09,105 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@71bacca8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:09, skipping insertion in model container
[2020-11-25 09:07:09,105 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:09" (4/4) ...
[2020-11-25 09:07:09,108 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:07:09,112 INFO  L110   BuchiProductObserver]: Initial RCFG 1563 locations, 1975 edges
[2020-11-25 09:07:09,113 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:07:09,123 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:07:10,480 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:07:10,487 INFO  L110   BuchiProductObserver]: BuchiProgram size 3718 locations, 6399 edges
[2020-11-25 09:07:10,487 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:10 BoogieIcfgContainer
[2020-11-25 09:07:10,487 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:07:10,488 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:07:10,488 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:07:10,489 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:07:10,490 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:10" (1/1) ...
[2020-11-25 09:07:10,592 INFO  L313           BlockEncoder]: Initial Icfg 3718 locations, 6399 edges
[2020-11-25 09:07:10,593 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:07:10,593 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:07:10,593 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:07:10,594 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:07:10,606 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 09:07:10,613 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 09:07:10,624 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:07:10,628 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:07:10,630 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:07:10,631 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:07:10,635 INFO  L313           BlockEncoder]: Encoded RCFG 3658 locations, 6239 edges
[2020-11-25 09:07:10,635 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:07:10 BasicIcfg
[2020-11-25 09:07:10,635 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:07:10,636 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:07:10,636 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:07:10,638 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:07:10,638 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,638 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:08" (1/6) ...
[2020-11-25 09:07:10,639 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@79239a4b and model type XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:10, skipping insertion in model container
[2020-11-25 09:07:10,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:08" (2/6) ...
[2020-11-25 09:07:10,640 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@79239a4b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:10, skipping insertion in model container
[2020-11-25 09:07:10,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:09" (3/6) ...
[2020-11-25 09:07:10,640 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@79239a4b and model type XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:07:10, skipping insertion in model container
[2020-11-25 09:07:10,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:09" (4/6) ...
[2020-11-25 09:07:10,640 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@79239a4b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:10, skipping insertion in model container
[2020-11-25 09:07:10,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:10" (5/6) ...
[2020-11-25 09:07:10,641 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@79239a4b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:07:10, skipping insertion in model container
[2020-11-25 09:07:10,641 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:10,641 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:07:10" (6/6) ...
[2020-11-25 09:07:10,642 INFO  L404   chiAutomizerObserver]: Analyzing ICFG XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_allowance.bpl_BEv2
[2020-11-25 09:07:10,669 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:07:10,669 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:07:10,669 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:07:10,669 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:07:10,669 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:07:10,670 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:07:10,670 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:07:10,670 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:07:10,670 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:07:10,699 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3658 states.
[2020-11-25 09:07:10,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:10,749 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:10,749 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:10,757 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:10,757 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:10,757 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:07:10,757 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3658 states.
[2020-11-25 09:07:10,778 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:10,778 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:10,778 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:10,779 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:10,779 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_XMDDexChain0 := false;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == XMDDexChain;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;

Loop:
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND TRUE   choice == 20
[L4110]              gas := gas - 21000;
[L4111]  COND FALSE  !(gas >= 0)
[L4260]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:10,792 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:10,792 INFO  L82        PathProgramCache]: Analyzing trace with hash 1603204663, now seen corresponding path program 1 times
[2020-11-25 09:07:10,796 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:10,811 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:10,845 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:10,847 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:10,847 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:07:10,851 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:11,027 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:07:11,028 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:07:11,029 INFO  L87              Difference]: Start difference. First operand 3658 states. Second operand 4 states.
[2020-11-25 09:07:11,326 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:11,327 INFO  L93              Difference]: Finished difference Result 2514 states and 2743 transitions.
[2020-11-25 09:07:11,327 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:07:11,328 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2514 states and 2743 transitions.
[2020-11-25 09:07:11,339 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:11,354 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2514 states to 2514 states and 2743 transitions.
[2020-11-25 09:07:11,355 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 09:07:11,357 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 09:07:11,357 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2514 states and 2743 transitions.
[2020-11-25 09:07:11,363 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:11,363 INFO  L728         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 09:07:11,376 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2514 states and 2743 transitions.
[2020-11-25 09:07:11,415 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2514 to 2514.
[2020-11-25 09:07:11,416 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2514 states.
[2020-11-25 09:07:11,422 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2514 states to 2514 states and 2743 transitions.
[2020-11-25 09:07:11,423 INFO  L751         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 09:07:11,423 INFO  L631         BuchiCegarLoop]: Abstraction has 2514 states and 2743 transitions.
[2020-11-25 09:07:11,423 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:07:11,423 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2514 states and 2743 transitions.
[2020-11-25 09:07:11,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:11,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:11,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:11,434 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:11,435 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_XMDDexChain0 := false;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == XMDDexChain;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2494]              remaining_s474 := allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1125]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s474 == allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2494]              remaining_s474 := allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1125]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s474 == allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:11,439 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:11,439 INFO  L82        PathProgramCache]: Analyzing trace with hash 540377634, now seen corresponding path program 1 times
[2020-11-25 09:07:11,440 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:11,450 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:11,475 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:11,475 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:11,475 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:07:11,477 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:11,477 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:07:11,478 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:07:11,478 INFO  L87              Difference]: Start difference. First operand 2514 states and 2743 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 09:07:11,909 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:11,909 INFO  L93              Difference]: Finished difference Result 3734 states and 4229 transitions.
[2020-11-25 09:07:11,909 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:07:11,910 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3734 states and 4229 transitions.
[2020-11-25 09:07:11,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:07:11,943 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3734 states to 3614 states and 4101 transitions.
[2020-11-25 09:07:11,943 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1158
[2020-11-25 09:07:11,944 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1168
[2020-11-25 09:07:11,944 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3614 states and 4101 transitions.
[2020-11-25 09:07:11,950 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:11,950 INFO  L728         BuchiCegarLoop]: Abstraction has 3614 states and 4101 transitions.
[2020-11-25 09:07:11,953 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3614 states and 4101 transitions.
[2020-11-25 09:07:11,982 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3614 to 2730.
[2020-11-25 09:07:11,983 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2730 states.
[2020-11-25 09:07:11,987 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2730 states to 2730 states and 2957 transitions.
[2020-11-25 09:07:11,987 INFO  L751         BuchiCegarLoop]: Abstraction has 2730 states and 2957 transitions.
[2020-11-25 09:07:11,987 INFO  L631         BuchiCegarLoop]: Abstraction has 2730 states and 2957 transitions.
[2020-11-25 09:07:11,987 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:07:11,987 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2730 states and 2957 transitions.
[2020-11-25 09:07:11,993 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:07:11,993 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:11,993 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:11,994 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:11,994 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_XMDDexChain0 := false;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == XMDDexChain;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_XMDDexChain[this] := -1282837888;
[L2235]              name_XMDDexChain[this] := -1282837888;
[L2236]              decimals_XMDDexChain[this] := 0;
[L2237]              _totalSupply_XMDDexChain[this] := 0;
[L2238]              balances_XMDDexChain[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_XMDDexChain[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_XMDDexChain[this] := 542303379;
[L2244]              name_XMDDexChain[this] := -1719409972;
[L2245]              decimals_XMDDexChain[this] := 8;
[L2246]              _totalSupply_XMDDexChain[this] := 2100000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2248]              balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011] := _totalSupply_XMDDexChain[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2250]              assert { :EventEmitted "Transfer_XMDDexChain" } true;
[L2287]  RET         call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2494]              remaining_s474 := allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1125]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s474 == allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND FALSE  !(__exception)
[L1125]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2494]              remaining_s474 := allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1125]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1126]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s474 == allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this] == old(allowed_XMDDexChain[this])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:11,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:11,997 INFO  L82        PathProgramCache]: Analyzing trace with hash -1162405815, now seen corresponding path program 1 times
[2020-11-25 09:07:11,998 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:12,008 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:12,056 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:12,056 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:12,056 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:07:12,057 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:12,057 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:07:12,057 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:07:12,057 INFO  L87              Difference]: Start difference. First operand 2730 states and 2957 transitions. cyclomatic complexity: 229 Second operand 4 states.
[2020-11-25 09:07:12,116 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:12,116 INFO  L93              Difference]: Finished difference Result 2731 states and 2956 transitions.
[2020-11-25 09:07:12,116 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:07:12,116 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2731 states and 2956 transitions.
[2020-11-25 09:07:12,126 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:07:12,140 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2731 states to 2721 states and 2946 transitions.
[2020-11-25 09:07:12,140 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 954
[2020-11-25 09:07:12,141 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 954
[2020-11-25 09:07:12,142 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2721 states and 2946 transitions.
[2020-11-25 09:07:12,146 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:12,146 INFO  L728         BuchiCegarLoop]: Abstraction has 2721 states and 2946 transitions.
[2020-11-25 09:07:12,150 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2721 states and 2946 transitions.
[2020-11-25 09:07:12,179 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2721 to 2719.
[2020-11-25 09:07:12,180 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2719 states.
[2020-11-25 09:07:12,184 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2719 states to 2719 states and 2944 transitions.
[2020-11-25 09:07:12,184 INFO  L751         BuchiCegarLoop]: Abstraction has 2719 states and 2944 transitions.
[2020-11-25 09:07:12,184 INFO  L631         BuchiCegarLoop]: Abstraction has 2719 states and 2944 transitions.
[2020-11-25 09:07:12,184 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:07:12,185 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2719 states and 2944 transitions.
[2020-11-25 09:07:12,192 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:07:12,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:12,192 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:12,194 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:12,194 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_XMDDexChain0 := false;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == XMDDexChain;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_XMDDexChain[this] := -1282837888;
[L2235]              name_XMDDexChain[this] := -1282837888;
[L2236]              decimals_XMDDexChain[this] := 0;
[L2237]              _totalSupply_XMDDexChain[this] := 0;
[L2238]              balances_XMDDexChain[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_XMDDexChain[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_XMDDexChain[this] := 542303379;
[L2244]              name_XMDDexChain[this] := -1719409972;
[L2245]              decimals_XMDDexChain[this] := 8;
[L2246]              _totalSupply_XMDDexChain[this] := 2100000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2248]              balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011] := _totalSupply_XMDDexChain[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2250]              assert { :EventEmitted "Transfer_XMDDexChain" } true;
[L2287]  RET         call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND TRUE   __exception
[L1103]              __tmp__Balance := Balance;
[L1104]              __tmp__DType := DType;
[L1105]              __tmp__Alloc := Alloc;
[L1106]              __tmp__balance_ADDR := balance_ADDR;
[L1107]              __tmp__M_Ref_int := M_Ref_int;
[L1108]              __tmp__sum_balances0 := sum_balances0;
[L1109]              __tmp__alloc_allowed_XMDDexChain_lvl0 := alloc_allowed_XMDDexChain_lvl0;
[L1110]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1111]              __tmp__sum_allowed1 := sum_allowed1;
[L1112]              __tmp__Length := Length;
[L1113]              __tmp__now := now;
[L1114]              __tmp__owner_Owned := owner_Owned;
[L1115]              __tmp__newOwner_Owned := newOwner_Owned;
[L1116]              __tmp__symbol_XMDDexChain := symbol_XMDDexChain;
[L1117]              __tmp__name_XMDDexChain := name_XMDDexChain;
[L1118]              __tmp__decimals_XMDDexChain := decimals_XMDDexChain;
[L1119]              __tmp___totalSupply_XMDDexChain := _totalSupply_XMDDexChain;
[L1120]              __tmp__balances_XMDDexChain := balances_XMDDexChain;
[L1121]              __tmp__allowed_XMDDexChain := allowed_XMDDexChain;
[L1122]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2488]              remaining_s474 := __tmp__allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1122]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1123]              assume revert || gas < 0;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4260]  CALL        call CorralChoice_XMDDexChain(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != XMDDexChain;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND TRUE   choice == 14
[L4154]              gas := gas - 21000;
[L4155]  COND TRUE   gas >= 0
[L4156]              assume msgvalue_MSG == 0;
[L4157]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] >= 0 && allowed_XMDDexChain[this][tokenOwner_s474][spender_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_XMDDexChain0 := true;
[L2]                 call_allowance_XMDDexChain0 := false;
[L2]                 revert := revert_hold;
[L1100]              havoc __exception;
[L1101]              revert := false;
[L1102]  COND TRUE   __exception
[L1103]              __tmp__Balance := Balance;
[L1104]              __tmp__DType := DType;
[L1105]              __tmp__Alloc := Alloc;
[L1106]              __tmp__balance_ADDR := balance_ADDR;
[L1107]              __tmp__M_Ref_int := M_Ref_int;
[L1108]              __tmp__sum_balances0 := sum_balances0;
[L1109]              __tmp__alloc_allowed_XMDDexChain_lvl0 := alloc_allowed_XMDDexChain_lvl0;
[L1110]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1111]              __tmp__sum_allowed1 := sum_allowed1;
[L1112]              __tmp__Length := Length;
[L1113]              __tmp__now := now;
[L1114]              __tmp__owner_Owned := owner_Owned;
[L1115]              __tmp__newOwner_Owned := newOwner_Owned;
[L1116]              __tmp__symbol_XMDDexChain := symbol_XMDDexChain;
[L1117]              __tmp__name_XMDDexChain := name_XMDDexChain;
[L1118]              __tmp__decimals_XMDDexChain := decimals_XMDDexChain;
[L1119]              __tmp___totalSupply_XMDDexChain := _totalSupply_XMDDexChain;
[L1120]              __tmp__balances_XMDDexChain := balances_XMDDexChain;
[L1121]              __tmp__allowed_XMDDexChain := allowed_XMDDexChain;
[L1122]  CALL        call remaining_s474 := allowance~address~address_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L2488]              remaining_s474 := __tmp__allowed_XMDDexChain[this][tokenOwner_s474][spender_s474];
[L1122]  RET         call remaining_s474 := allowance~address~address_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L1123]              assume revert || gas < 0;
[L4157]  RET         call remaining_s474 := allowance~address~address_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s474, spender_s474);
[L4260]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:12,199 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:12,199 INFO  L82        PathProgramCache]: Analyzing trace with hash 1816970773, now seen corresponding path program 1 times
[2020-11-25 09:07:12,200 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:12,213 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:12,266 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:12,267 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:12,267 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 09:07:12,267 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:12,267 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 09:07:12,267 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 09:07:12,268 INFO  L87              Difference]: Start difference. First operand 2719 states and 2944 transitions. cyclomatic complexity: 227 Second operand 5 states.
[2020-11-25 09:07:12,565 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:12,565 INFO  L93              Difference]: Finished difference Result 1805 states and 1952 transitions.
[2020-11-25 09:07:12,565 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:07:12,565 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1805 states and 1952 transitions.
[2020-11-25 09:07:12,568 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:07:12,568 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1805 states to 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:07:12,569 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:07:12,569 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:12,569 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:07:12,569 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:07:12,569 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:07:12,569 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:07:12,572 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:07:12 BasicIcfg
[2020-11-25 09:07:12,572 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:07:12,572 INFO  L168              Benchmark]: Toolchain (without parser) took 4421.81 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 407.9 MB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -376.4 MB). Peak memory consumption was 31.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,574 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,574 INFO  L168              Benchmark]: Boogie Preprocessor took 89.44 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,574 INFO  L168              Benchmark]: UtopiaSpecLang took 58.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,574 INFO  L168              Benchmark]: Boogie Printer took 14.52 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,575 INFO  L168              Benchmark]: RCFGBuilder took 748.28 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,575 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.32 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,575 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1384.70 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -224.6 MB). Peak memory consumption was 178.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,575 INFO  L168              Benchmark]: BlockEncodingV2 took 147.76 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 948.2 MB in the end (delta: 73.8 MB). Peak memory consumption was 73.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,576 INFO  L168              Benchmark]: BuchiAutomizer took 1936.68 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 192.9 MB). Free memory was 948.2 MB in the beginning and 1.3 GB in the end (delta: -363.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:07:12,579 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3718 locations, 6399 edges
  - StatisticsResult: Encoded RCFG
    3658 locations, 6239 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.44 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.52 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 748.28 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.32 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1384.70 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -224.6 MB). Peak memory consumption was 178.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 147.76 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 948.2 MB in the end (delta: 73.8 MB). Peak memory consumption was 73.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1936.68 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 192.9 MB). Free memory was 948.2 MB in the beginning and 1.3 GB in the end (delta: -363.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1563 locations, 1975 edges
  - StatisticsResult: BuchiProgram size
    3718 locations, 6399 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.9s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 886 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2730 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10666 SDtfs, 8939 SDslu, 12975 SDs, 0 SdLazy, 2141 SolverSat, 1874 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_XMDDexChain0) ==> ( <>(success_allowance_XMDDexChain0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
