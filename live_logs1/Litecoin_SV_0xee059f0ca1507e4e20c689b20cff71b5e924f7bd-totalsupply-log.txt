This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:33:54,718 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:33:54,719 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:33:54,730 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:33:54,730 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:33:54,731 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:33:54,732 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:33:54,734 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:33:54,735 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:33:54,736 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:33:54,737 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:33:54,737 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:33:54,738 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:33:54,739 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:33:54,740 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:33:54,741 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:33:54,741 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:33:54,743 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:33:54,745 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:33:54,746 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:33:54,747 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:33:54,748 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:33:54,749 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:33:54,750 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:33:54,750 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:33:54,750 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:33:54,751 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:33:54,751 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:33:54,752 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:33:54,752 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:33:54,752 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:33:54,753 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:33:54,754 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:33:54,754 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:33:54,755 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:33:54,755 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:33:54,756 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:33:54,756 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:33:54,756 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:33:54,757 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:33:54,757 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:33:54,757 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:33:54,765 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:33:54,765 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:33:54,766 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:33:54,766 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:33:54,766 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:33:54,767 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:33:54,767 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:33:54,767 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:33:54,767 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:33:54,768 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:33:54,769 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:33:54,769 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:33:54,769 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:33:54,792 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:33:54,806 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:33:54,810 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:33:54,812 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:33:54,813 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:33:54,814 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl
[2020-11-24 20:33:54,814 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl'
[2020-11-24 20:33:54,899 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:33:54,900 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:33:54,900 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:33:54,901 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:33:54,901 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:33:54,918 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,920 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,955 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,956 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,977 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,987 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:54,995 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:55,006 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:33:55,007 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:33:55,007 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:33:55,009 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:33:55,013 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/1) ...
[2020-11-24 20:33:55,030 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.totalSupply, _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.totalSupply, return == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:33:55,036 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.totalSupply, _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.totalSupply, return == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:33:55,043 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.totalSupply, _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.totalSupply, return == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:33:55,049 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_Litecoin_SV[this]>=0 && _totalSupply_Litecoin_SV[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:33:55,053 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this]==( old(_totalSupply_Litecoin_SV[this]) ) ) && balances_Litecoin_SV[this]==( old(balances_Litecoin_SV[this]) ) ) && allowed_Litecoin_SV[this]==( old(allowed_Litecoin_SV[this]) ) ) && businessName_Litecoin_SV[this]==( old(businessName_Litecoin_SV[this]) ) ) && businessCountry_Litecoin_SV[this]==( old(businessCountry_Litecoin_SV[this]) ) ) && symbol_Litecoin_SV[this]==( old(symbol_Litecoin_SV[this]) ) ) && name_Litecoin_SV[this]==( old(name_Litecoin_SV[this]) ) ) && decimals_Litecoin_SV[this]==( old(decimals_Litecoin_SV[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_Litecoin_SV>],ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_Litecoin_SV>]]]]]]
[2020-11-24 20:33:55,057 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.totalSupply, _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.totalSupply, return == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:33:55,057 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_Litecoin_SV0) ==> ( <>AP(success_totalSupply_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:33:55,066 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:33:55 PropertyContainer
[2020-11-24 20:33:55,066 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:33:55,067 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:33:55,067 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:33:55,067 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:33:55,068 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/2) ...
[2020-11-24 20:33:55,068 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:33:55,068 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:33:55,085 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:33:55" (2/2) ...
[2020-11-24 20:33:55,085 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:33:55,085 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:33:55,085 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:33:55,085 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:33:55,086 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/2) ...
[2020-11-24 20:33:55,140 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:33:55,140 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:33:55,140 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:33:55,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:33:55,141 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-24 20:33:55,142 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:33:55,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-24 20:33:55,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-24 20:33:55,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-24 20:33:55,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-24 20:33:55,143 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-24 20:33:55,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-24 20:33:55,144 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-24 20:33:55,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-24 20:33:55,144 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:33:55,144 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:33:55,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:33:55,144 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 20:33:55,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 20:33:55,144 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:33:55,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV
[2020-11-24 20:33:55,146 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:33:55,147 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:33:55,148 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,149 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:33:55,150 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-24 20:33:55,151 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,152 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,153 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__success
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__success
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__success
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__fail
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__success
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:33:55,154 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:33:55,155 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:33:55,155 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:33:55,155 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:33:55,155 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:33:55,155 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:33:55,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:33:55,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-24 20:33:55,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:33:55,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:33:55,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:33:55,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__success
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__success
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__fail
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__success
[2020-11-24 20:33:55,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__success
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:33:55,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 20:33:55,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:33:55,165 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:33:55,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:33:55,490 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:33:55,490 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:33:55,491 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:33:55,832 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:33:55,833 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 20:33:55,834 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:33:55 BoogieIcfgContainer
[2020-11-24 20:33:55,835 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:33:55" (2/2) ...
[2020-11-24 20:33:55,835 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:33:55,835 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@34d5698 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:33:55, skipping insertion in model container
[2020-11-24 20:33:55,835 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:33:55,835 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:33:55,835 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:33:55,837 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:33:55,837 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/3) ...
[2020-11-24 20:33:55,837 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@40a4c81e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:33:55, skipping insertion in model container
[2020-11-24 20:33:55,837 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:33:55" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:33:55,872 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:33:55 NWAContainer
[2020-11-24 20:33:55,872 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:33:55,872 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:33:55,872 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:33:55,873 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:33:55,874 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:33:55" (3/4) ...
[2020-11-24 20:33:55,874 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1b1e324c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:33:55, skipping insertion in model container
[2020-11-24 20:33:55,875 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:33:55" (4/4) ...
[2020-11-24 20:33:55,877 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:33:55,881 INFO  L110   BuchiProductObserver]: Initial RCFG 1705 locations, 2137 edges
[2020-11-24 20:33:55,881 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:33:55,892 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:33:57,150 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:33:57,155 INFO  L110   BuchiProductObserver]: BuchiProgram size 4034 locations, 6909 edges
[2020-11-24 20:33:57,155 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:33:57 BoogieIcfgContainer
[2020-11-24 20:33:57,155 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:33:57,155 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:33:57,155 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:33:57,157 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:33:57,157 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:33:57" (1/1) ...
[2020-11-24 20:33:57,239 INFO  L313           BlockEncoder]: Initial Icfg 4034 locations, 6909 edges
[2020-11-24 20:33:57,239 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:33:57,240 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:33:57,240 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:33:57,240 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:33:57,252 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-24 20:33:57,259 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-24 20:33:57,269 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:33:57,272 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:33:57,275 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:33:57,275 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:33:57,280 INFO  L313           BlockEncoder]: Encoded RCFG 3974 locations, 6749 edges
[2020-11-24 20:33:57,280 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:33:57 BasicIcfg
[2020-11-24 20:33:57,280 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:33:57,280 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:33:57,280 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:33:57,282 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:33:57,282 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,283 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:33:54" (1/6) ...
[2020-11-24 20:33:57,284 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6a442363 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:33:57, skipping insertion in model container
[2020-11-24 20:33:57,284 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,284 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:33:55" (2/6) ...
[2020-11-24 20:33:57,284 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6a442363 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:33:57, skipping insertion in model container
[2020-11-24 20:33:57,284 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,284 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:33:55" (3/6) ...
[2020-11-24 20:33:57,284 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6a442363 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:33:57, skipping insertion in model container
[2020-11-24 20:33:57,284 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:33:55" (4/6) ...
[2020-11-24 20:33:57,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6a442363 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:33:57, skipping insertion in model container
[2020-11-24 20:33:57,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:33:57" (5/6) ...
[2020-11-24 20:33:57,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6a442363 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:33:57, skipping insertion in model container
[2020-11-24 20:33:57,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:33:57,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:33:57" (6/6) ...
[2020-11-24 20:33:57,286 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_totalsupply.bpl_BEv2
[2020-11-24 20:33:57,312 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:33:57,312 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:33:57,312 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:33:57,313 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:33:57,313 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:33:57,313 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:33:57,313 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:33:57,313 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:33:57,313 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:33:57,344 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3974 states.
[2020-11-24 20:33:57,388 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:33:57,388 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:33:57,388 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:33:57,395 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:33:57,395 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:33:57,395 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:33:57,395 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3974 states.
[2020-11-24 20:33:57,414 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:33:57,414 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:33:57,414 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:33:57,416 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:33:57,416 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_Litecoin_SV0 := false;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND TRUE   revert
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND TRUE   choice == 22
[L4446]              gas := gas - 21000;
[L4447]  COND FALSE  !(gas >= 0)
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:33:57,429 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:33:57,429 INFO  L82        PathProgramCache]: Analyzing trace with hash -1495490430, now seen corresponding path program 1 times
[2020-11-24 20:33:57,433 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:33:57,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:33:57,485 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:33:57,487 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:33:57,487 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:33:57,727 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:33:57,736 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:33:57,736 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:33:57,737 INFO  L87              Difference]: Start difference. First operand 3974 states. Second operand 4 states.
[2020-11-24 20:33:58,047 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:33:58,048 INFO  L93              Difference]: Finished difference Result 2796 states and 3037 transitions.
[2020-11-24 20:33:58,048 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:33:58,049 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2796 states and 3037 transitions.
[2020-11-24 20:33:58,065 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:33:58,084 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2796 states to 2796 states and 3037 transitions.
[2020-11-24 20:33:58,085 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:33:58,087 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 974
[2020-11-24 20:33:58,088 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2796 states and 3037 transitions.
[2020-11-24 20:33:58,094 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:33:58,094 INFO  L728         BuchiCegarLoop]: Abstraction has 2796 states and 3037 transitions.
[2020-11-24 20:33:58,109 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2796 states and 3037 transitions.
[2020-11-24 20:33:58,151 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2796 to 2796.
[2020-11-24 20:33:58,152 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2796 states.
[2020-11-24 20:33:58,157 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2796 states to 2796 states and 3037 transitions.
[2020-11-24 20:33:58,158 INFO  L751         BuchiCegarLoop]: Abstraction has 2796 states and 3037 transitions.
[2020-11-24 20:33:58,158 INFO  L631         BuchiCegarLoop]: Abstraction has 2796 states and 3037 transitions.
[2020-11-24 20:33:58,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:33:58,159 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2796 states and 3037 transitions.
[2020-11-24 20:33:58,166 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:33:58,166 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:33:58,166 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:33:58,168 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:33:58,168 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_Litecoin_SV0 := false;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND TRUE   revert
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND TRUE   revert
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:33:58,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:33:58,172 INFO  L82        PathProgramCache]: Analyzing trace with hash 1348056341, now seen corresponding path program 1 times
[2020-11-24 20:33:58,173 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:33:58,180 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:33:58,198 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:33:58,199 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:33:58,199 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:33:58,200 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:33:58,200 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:33:58,200 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:33:58,200 INFO  L87              Difference]: Start difference. First operand 2796 states and 3037 transitions. cyclomatic complexity: 243 Second operand 4 states.
[2020-11-24 20:33:58,677 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:33:58,677 INFO  L93              Difference]: Finished difference Result 4088 states and 4619 transitions.
[2020-11-24 20:33:58,677 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:33:58,678 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4088 states and 4619 transitions.
[2020-11-24 20:33:58,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:33:58,726 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4088 states to 3968 states and 4491 transitions.
[2020-11-24 20:33:58,726 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1308
[2020-11-24 20:33:58,728 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1318
[2020-11-24 20:33:58,728 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3968 states and 4491 transitions.
[2020-11-24 20:33:58,737 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:33:58,737 INFO  L728         BuchiCegarLoop]: Abstraction has 3968 states and 4491 transitions.
[2020-11-24 20:33:58,742 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3968 states and 4491 transitions.
[2020-11-24 20:33:58,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3968 to 3020.
[2020-11-24 20:33:58,783 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3020 states.
[2020-11-24 20:33:58,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3020 states to 3020 states and 3263 transitions.
[2020-11-24 20:33:58,787 INFO  L751         BuchiCegarLoop]: Abstraction has 3020 states and 3263 transitions.
[2020-11-24 20:33:58,787 INFO  L631         BuchiCegarLoop]: Abstraction has 3020 states and 3263 transitions.
[2020-11-24 20:33:58,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:33:58,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3020 states and 3263 transitions.
[2020-11-24 20:33:58,796 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:33:58,796 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:33:58,796 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:33:58,798 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:33:58,798 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_Litecoin_SV0 := false;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:33:58,803 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:33:58,803 INFO  L82        PathProgramCache]: Analyzing trace with hash 1001283085, now seen corresponding path program 1 times
[2020-11-24 20:33:58,804 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:33:58,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:33:59,090 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:33:59,091 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:33:59,092 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 20:33:59,092 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:33:59,092 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 20:33:59,093 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 20:33:59,093 INFO  L87              Difference]: Start difference. First operand 3020 states and 3263 transitions. cyclomatic complexity: 245 Second operand 14 states.
[2020-11-24 20:34:01,006 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:01,006 INFO  L93              Difference]: Finished difference Result 3151 states and 3427 transitions.
[2020-11-24 20:34:01,006 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 20:34:01,006 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3151 states and 3427 transitions.
[2020-11-24 20:34:01,015 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 20:34:01,025 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3151 states to 3151 states and 3427 transitions.
[2020-11-24 20:34:01,025 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1154
[2020-11-24 20:34:01,026 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1154
[2020-11-24 20:34:01,026 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3151 states and 3427 transitions.
[2020-11-24 20:34:01,029 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:01,029 INFO  L728         BuchiCegarLoop]: Abstraction has 3151 states and 3427 transitions.
[2020-11-24 20:34:01,032 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3151 states and 3427 transitions.
[2020-11-24 20:34:01,054 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3151 to 3137.
[2020-11-24 20:34:01,054 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3137 states.
[2020-11-24 20:34:01,058 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3137 states to 3137 states and 3399 transitions.
[2020-11-24 20:34:01,058 INFO  L751         BuchiCegarLoop]: Abstraction has 3137 states and 3399 transitions.
[2020-11-24 20:34:01,058 INFO  L631         BuchiCegarLoop]: Abstraction has 3137 states and 3399 transitions.
[2020-11-24 20:34:01,058 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:34:01,058 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3137 states and 3399 transitions.
[2020-11-24 20:34:01,062 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 20:34:01,062 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:01,062 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:01,063 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:01,063 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_Litecoin_SV0 := false;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND TRUE   __exception
[L885]               __tmp__Balance := Balance;
[L886]               __tmp__DType := DType;
[L887]               __tmp__Alloc := Alloc;
[L888]               __tmp__balance_ADDR := balance_ADDR;
[L889]               __tmp__M_Ref_int := M_Ref_int;
[L890]               __tmp__sum_balances0 := sum_balances0;
[L891]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L892]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L893]               __tmp__sum_allowed1 := sum_allowed1;
[L894]               __tmp__Length := Length;
[L895]               __tmp__now := now;
[L896]               __tmp__owner_Owned := owner_Owned;
[L897]               __tmp__newOwner_Owned := newOwner_Owned;
[L898]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L899]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L900]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L901]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L902]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L903]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L904]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L905]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L906]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L2556]              __var_2 := null;
[L2557]              __ret_0_ := (__tmp___totalSupply_Litecoin_SV[this] - __tmp__balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   RET         call __ret_0_ := totalSupply_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L907]               assume revert || gas < 0;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND TRUE   __exception
[L885]               __tmp__Balance := Balance;
[L886]               __tmp__DType := DType;
[L887]               __tmp__Alloc := Alloc;
[L888]               __tmp__balance_ADDR := balance_ADDR;
[L889]               __tmp__M_Ref_int := M_Ref_int;
[L890]               __tmp__sum_balances0 := sum_balances0;
[L891]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L892]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L893]               __tmp__sum_allowed1 := sum_allowed1;
[L894]               __tmp__Length := Length;
[L895]               __tmp__now := now;
[L896]               __tmp__owner_Owned := owner_Owned;
[L897]               __tmp__newOwner_Owned := newOwner_Owned;
[L898]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L899]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L900]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L901]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L902]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L903]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L904]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L905]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L906]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L2556]              __var_2 := null;
[L2557]              __ret_0_ := (__tmp___totalSupply_Litecoin_SV[this] - __tmp__balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   RET         call __ret_0_ := totalSupply_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L907]               assume revert || gas < 0;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:01,066 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:01,066 INFO  L82        PathProgramCache]: Analyzing trace with hash -1655851143, now seen corresponding path program 1 times
[2020-11-24 20:34:01,067 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:01,074 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:01,098 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:34:01,098 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:01,098 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:34:01,098 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:01,099 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:34:01,099 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:34:01,099 INFO  L87              Difference]: Start difference. First operand 3137 states and 3399 transitions. cyclomatic complexity: 266 Second operand 5 states.
[2020-11-24 20:34:01,463 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:01,463 INFO  L93              Difference]: Finished difference Result 3959 states and 4370 transitions.
[2020-11-24 20:34:01,463 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:34:01,464 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3959 states and 4370 transitions.
[2020-11-24 20:34:01,472 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-24 20:34:01,482 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3959 states to 2942 states and 3349 transitions.
[2020-11-24 20:34:01,482 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 817
[2020-11-24 20:34:01,483 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 817
[2020-11-24 20:34:01,483 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2942 states and 3349 transitions.
[2020-11-24 20:34:01,486 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:01,486 INFO  L728         BuchiCegarLoop]: Abstraction has 2942 states and 3349 transitions.
[2020-11-24 20:34:01,487 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2942 states and 3349 transitions.
[2020-11-24 20:34:01,501 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2942 to 1965.
[2020-11-24 20:34:01,501 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1965 states.
[2020-11-24 20:34:01,503 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1965 states to 1965 states and 2119 transitions.
[2020-11-24 20:34:01,503 INFO  L751         BuchiCegarLoop]: Abstraction has 1965 states and 2119 transitions.
[2020-11-24 20:34:01,503 INFO  L631         BuchiCegarLoop]: Abstraction has 1965 states and 2119 transitions.
[2020-11-24 20:34:01,503 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:34:01,503 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1965 states and 2119 transitions.
[2020-11-24 20:34:01,505 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:01,505 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:01,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:01,507 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:01,507 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_Litecoin_SV0 := false;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND TRUE   choice == 15
[L4496]              gas := gas - 21000;
[L4497]  COND TRUE   gas >= 0
[L4498]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4499]              assume msgvalue_MSG == 0;
[L4500]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L1000]              havoc __exception;
[L1001]              revert := false;
[L1002]  COND FALSE  !(__exception)
[L1027]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2615]  COND TRUE   DType[this] == Litecoin_SV
[L2616]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2616]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L2617]  COND FALSE  !(revert)
[L2623]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][msgsender_MSG];
[L2624]              balances_Litecoin_SV[this][msgsender_MSG] := __var_3;
[L2625]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][msgsender_MSG];
[L2626]  COND TRUE   DType[this] == Litecoin_SV
[L2627]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2627]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L2628]  COND FALSE  !(revert)
[L2634]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s383];
[L2635]              balances_Litecoin_SV[this][to_s383] := __var_4;
[L2636]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s383];
[L2637]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2638]              success_s383 := true;
[L1027]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L1028]              assume !revert && gas >= 0;
[L4500]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND TRUE   choice == 18
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume msgvalue_MSG == 0;
[L4481]  CALL        call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:01,512 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:01,512 INFO  L82        PathProgramCache]: Analyzing trace with hash -2006265609, now seen corresponding path program 1 times
[2020-11-24 20:34:01,513 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:01,534 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:01,558 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:01,619 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:01,620 INFO  L82        PathProgramCache]: Analyzing trace with hash -1670034988, now seen corresponding path program 1 times
[2020-11-24 20:34:01,620 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:01,623 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:01,627 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:01,634 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:01,634 INFO  L82        PathProgramCache]: Analyzing trace with hash 1868125470, now seen corresponding path program 1 times
[2020-11-24 20:34:01,635 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:01,653 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:01,671 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
[2020-11-24 20:34:02,026 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 200
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 20:34:02,175 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 20:34:02,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
[2020-11-24 20:34:02,988 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 176
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:34:03,235 WARN  L188               SmtUtils]: Spent 182.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 211
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 20:34:03,430 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 20:34:03,557 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification that was a NOOP. DAG size: 238
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 20:34:07,943 WARN  L188               SmtUtils]: Spent 4.06 s on a formula simplification. DAG size of input: 620 DAG size of output: 611
Garbage collection #1: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #2: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #3: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #4: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #5: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #6: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #7: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 20:34:08,110 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification that was a NOOP. DAG size: 241
[2020-11-24 20:34:08,832 WARN  L188               SmtUtils]: Spent 707.00 ms on a formula simplification that was a NOOP. DAG size: 326
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:34:08,991 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification that was a NOOP. DAG size: 241
[2020-11-24 20:34:10,042 WARN  L188               SmtUtils]: Spent 1.05 s on a formula simplification. DAG size of input: 328 DAG size of output: 327
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 20:34:10,561 WARN  L188               SmtUtils]: Spent 515.00 ms on a formula simplification that was a NOOP. DAG size: 323
[2020-11-24 20:34:10,577 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:10,597 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:34:10,606 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:34:10 BasicIcfg
[2020-11-24 20:34:10,606 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:34:10,607 INFO  L168              Benchmark]: Toolchain (without parser) took 15707.32 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -282.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,607 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.26 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,608 INFO  L168              Benchmark]: Boogie Preprocessor took 105.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,608 INFO  L168              Benchmark]: UtopiaSpecLang took 59.92 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,609 INFO  L168              Benchmark]: Boogie Printer took 18.23 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,609 INFO  L168              Benchmark]: RCFGBuilder took 749.84 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.5 MB in the end (delta: 118.2 MB). Peak memory consumption was 118.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,609 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.74 ms. Allocated memory is still 1.0 GB. Free memory was 795.5 MB in the beginning and 786.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,610 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1282.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.2 MB). Free memory was 786.5 MB in the beginning and 953.9 MB in the end (delta: -167.3 MB). Peak memory consumption was 168.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,610 INFO  L168              Benchmark]: BlockEncodingV2 took 124.94 ms. Allocated memory is still 1.2 GB. Free memory was 953.9 MB in the beginning and 884.5 MB in the end (delta: 69.4 MB). Peak memory consumption was 69.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,611 INFO  L168              Benchmark]: BuchiAutomizer took 13325.96 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 827.3 MB). Free memory was 884.5 MB in the beginning and 1.2 GB in the end (delta: -333.1 MB). Peak memory consumption was 848.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:10,614 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4034 locations, 6909 edges
  - StatisticsResult: Encoded RCFG
    3974 locations, 6749 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.26 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 105.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.92 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.23 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 749.84 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.5 MB in the end (delta: 118.2 MB). Peak memory consumption was 118.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.74 ms. Allocated memory is still 1.0 GB. Free memory was 795.5 MB in the beginning and 786.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1282.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.2 MB). Free memory was 786.5 MB in the beginning and 953.9 MB in the end (delta: -167.3 MB). Peak memory consumption was 168.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 124.94 ms. Allocated memory is still 1.2 GB. Free memory was 953.9 MB in the beginning and 884.5 MB in the end (delta: 69.4 MB). Peak memory consumption was 69.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13325.96 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 827.3 MB). Free memory was 884.5 MB in the beginning and 1.2 GB in the end (delta: -333.1 MB). Peak memory consumption was 848.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1705 locations, 2137 edges
  - StatisticsResult: BuchiProgram size
    4034 locations, 6909 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 1965 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.2s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 9.7s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1939 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3137 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13276 SDtfs, 14983 SDslu, 16242 SDs, 0 SdLazy, 18626 SolverSat, 2727 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
SV(274065342320335901504960670128395654555070149140).Litecoin_SV_Litecoin({from : 274065342320335901504960670128395654555070149146});
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
SV(274065342320335901504960670128395654555070149140).transfer~address~uint256_Litecoin.gas(3979002)({from : 274065342320335901504960670128395654555070149131, to : 0, tokens : 25000000000000000000000000});
[L1000]              havoc __exception;
[L1001]              revert := false;
[L1002]  COND FALSE  !(__exception)
[L1027]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2615]  COND TRUE   DType[this] == Litecoin_SV
[L2616]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2616]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L2617]  COND FALSE  !(revert)
[L2623]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][msgsender_MSG];
[L2624]              balances_Litecoin_SV[this][msgsender_MSG] := __var_3;
[L2625]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][msgsender_MSG];
[L2626]  COND TRUE   DType[this] == Litecoin_SV
[L2627]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2627]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L2628]  COND FALSE  !(revert)
[L2634]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s383];
[L2635]              balances_Litecoin_SV[this][to_s383] := __var_4;
[L2636]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s383];
[L2637]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2638]              success_s383 := true;
[L1027]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L1028]              assume !revert && gas >= 0;
[L4500]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
SV(274065342320335901504960670128395654555070149140).totalSupply_Litecoin.gas(3979003)({from : 274065342320335901504960670128395654555070149135});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);

Loop:
SV(274065342320335901504960670128395654555070149140).totalSupply_Litecoin.gas(3979001)({from : 274065342320335901504960670128395654555070149136});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_Litecoin_SV[this] >= 0 && _totalSupply_Litecoin_SV[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_Litecoin_SV0 := true;
[L2]                 call_totalSupply_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L882]               havoc __exception;
[L883]               revert := false;
[L884]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              __var_2 := null;
[L2565]              __ret_0_ := (_totalSupply_Litecoin_SV[this] - balances_Litecoin_SV[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L909]   RET         call __ret_0_ := totalSupply_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L910]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == _totalSupply_Litecoin_SV[this] && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4481]  RET         call __ret_0_totalSupply := totalSupply_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
