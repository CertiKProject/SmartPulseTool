This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 03:22:40,604 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 03:22:40,605 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 03:22:40,617 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 03:22:40,617 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 03:22:40,618 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 03:22:40,619 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 03:22:40,621 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 03:22:40,622 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 03:22:40,623 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 03:22:40,624 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 03:22:40,624 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 03:22:40,625 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 03:22:40,625 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 03:22:40,626 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 03:22:40,627 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 03:22:40,628 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 03:22:40,629 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 03:22:40,630 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 03:22:40,632 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 03:22:40,632 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 03:22:40,633 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 03:22:40,635 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 03:22:40,635 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 03:22:40,635 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 03:22:40,636 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 03:22:40,636 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 03:22:40,637 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 03:22:40,637 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 03:22:40,637 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 03:22:40,638 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 03:22:40,638 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 03:22:40,639 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 03:22:40,639 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 03:22:40,640 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 03:22:40,640 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 03:22:40,640 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 03:22:40,641 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 03:22:40,641 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 03:22:40,642 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 03:22:40,642 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 03:22:40,642 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 03:22:40,650 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 03:22:40,650 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 03:22:40,651 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 03:22:40,651 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 03:22:40,651 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 03:22:40,652 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 03:22:40,652 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 03:22:40,652 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 03:22:40,652 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 03:22:40,653 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 03:22:40,653 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 03:22:40,654 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 03:22:40,654 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 03:22:40,678 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 03:22:40,692 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 03:22:40,694 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 03:22:40,695 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 03:22:40,696 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 03:22:40,696 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl
[2020-11-25 03:22:40,696 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl'
[2020-11-25 03:22:40,810 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 03:22:40,812 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 03:22:40,812 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 03:22:40,812 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 03:22:40,813 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 03:22:40,829 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,831 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,879 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,880 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,910 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,926 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,938 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,953 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 03:22:40,953 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 03:22:40,954 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 03:22:40,956 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 03:22:40,959 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/1) ...
[2020-11-25 03:22:40,979 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 03:22:40,985 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 03:22:40,994 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 03:22:41,002 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s348 && p1!=recipient_s348 ) && ( p2!=sender_s348 || p3!=msg.sender ) ) && sender_s348!=recipient_s348 ) && amount_s348<=_balances_ERC20[this][sender_s348] ) && amount_s348<=_allowances_ERC20[this][sender_s348][msg.sender] ) && ( _balances_ERC20[this][recipient_s348] + amount_s348 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s348>=0 ) && amount_s348<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s348]>=0 ) && _balances_ERC20[this][recipient_s348]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s348]>=0 ) && _balances_ERC20[this][sender_s348]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s348][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s348][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 03:22:41,006 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][sender_s348]==( ( old(_balances_ERC20[this][sender_s348]) ) - amount_s348 ) ) && _balances_ERC20[this][recipient_s348]==( ( old(_balances_ERC20[this][recipient_s348]) ) + amount_s348 ) ) && _allowances_ERC20[this][sender_s348][msg.sender]==( ( old(_allowances_ERC20[this][sender_s348][msg.sender]) ) - amount_s348 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowances_ERC20[this][p2][p3]==( old(_allowances_ERC20[this][p2][p3]) ) ) && _cap_ERC20Capped[this]==( old(_cap_ERC20Capped[this]) ) ) && _minters_MinterRole[this]==( old(_minters_MinterRole[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 03:22:41,015 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 03:22:41,015 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 03:22:41,030 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:22:41 PropertyContainer
[2020-11-25 03:22:41,031 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 03:22:41,031 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 03:22:41,031 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 03:22:41,031 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 03:22:41,032 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/2) ...
[2020-11-25 03:22:41,032 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 03:22:41,033 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 03:22:41,061 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:22:41" (2/2) ...
[2020-11-25 03:22:41,061 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 03:22:41,062 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 03:22:41,062 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 03:22:41,062 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 03:22:41,062 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/2) ...
[2020-11-25 03:22:41,120 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 03:22:41,120 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 03:22:41,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,121 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 03:22:41,122 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 03:22:41,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 03:22:41,122 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 03:22:41,122 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 03:22:41,122 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 03:22:41,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 03:22:41,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 03:22:41,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 03:22:41,124 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 03:22:41,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 03:22:41,124 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 03:22:41,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 03:22:41,124 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 03:22:41,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 03:22:41,124 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 03:22:41,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 03:22:41,124 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 03:22:41,125 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-25 03:22:41,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-25 03:22:41,126 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole
[2020-11-25 03:22:41,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole
[2020-11-25 03:22:41,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole
[2020-11-25 03:22:41,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole
[2020-11-25 03:22:41,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__success
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__success
[2020-11-25 03:22:41,127 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable
[2020-11-25 03:22:41,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable
[2020-11-25 03:22:41,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 03:22:41,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 03:22:41,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 03:22:41,128 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 03:22:41,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 03:22:41,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-25 03:22:41,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-25 03:22:41,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 03:22:41,129 INFO  L130     BoogieDeclarations]: Found specification of procedure OrionToken_OrionToken_NoBaseCtor__success
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure OrionToken_OrionToken
[2020-11-25 03:22:41,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure OrionToken_OrionToken
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 03:22:41,130 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-25 03:22:41,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OrionToken
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 03:22:41,132 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 03:22:41,133 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 03:22:41,134 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 03:22:41,136 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__success
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__fail
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__success
[2020-11-25 03:22:41,137 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__success
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__success
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-25 03:22:41,138 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 03:22:41,139 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure OrionToken_OrionToken_NoBaseCtor__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure OrionToken_OrionToken__success
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure OrionToken_OrionToken__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 03:22:41,140 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 03:22:41,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 03:22:41,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:22:41,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 03:22:41,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-25 03:22:41,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__success
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__success
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__success
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__success
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__success
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__fail
[2020-11-25 03:22:41,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__success
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 03:22:41,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-25 03:22:41,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure OrionToken_OrionToken_NoBaseCtor__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure OrionToken_OrionToken_NoBaseCtor__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure OrionToken_OrionToken__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure OrionToken_OrionToken__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 03:22:41,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-25 03:22:41,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OrionToken
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 03:22:41,152 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 03:22:41,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 03:22:41,632 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:22:41,632 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:22:41,632 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:22:41,859 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:22:42,218 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 03:22:42,218 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-25 03:22:42,221 INFO  L202        PluginConnector]: Adding new model OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:22:42 BoogieIcfgContainer
[2020-11-25 03:22:42,221 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:22:41" (2/2) ...
[2020-11-25 03:22:42,221 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 03:22:42,221 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3440068a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:22:42, skipping insertion in model container
[2020-11-25 03:22:42,221 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 03:22:42,221 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 03:22:42,221 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 03:22:42,223 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 03:22:42,223 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/3) ...
[2020-11-25 03:22:42,223 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@439f0ba0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:22:42, skipping insertion in model container
[2020-11-25 03:22:42,223 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:22:41" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 03:22:42,257 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:22:42 NWAContainer
[2020-11-25 03:22:42,257 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 03:22:42,257 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 03:22:42,257 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 03:22:42,258 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 03:22:42,259 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:22:42" (3/4) ...
[2020-11-25 03:22:42,259 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@15ba4dc6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:22:42, skipping insertion in model container
[2020-11-25 03:22:42,260 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:22:42" (4/4) ...
[2020-11-25 03:22:42,262 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 03:22:42,268 INFO  L110   BuchiProductObserver]: Initial RCFG 2935 locations, 4572 edges
[2020-11-25 03:22:42,268 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 03:22:42,281 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 03:22:44,524 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 03:22:44,534 INFO  L110   BuchiProductObserver]: BuchiProgram size 7822 locations, 15041 edges
[2020-11-25 03:22:44,535 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:22:44 BoogieIcfgContainer
[2020-11-25 03:22:44,535 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 03:22:44,535 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 03:22:44,535 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 03:22:44,536 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 03:22:44,537 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:22:44" (1/1) ...
[2020-11-25 03:22:44,674 INFO  L313           BlockEncoder]: Initial Icfg 7822 locations, 15041 edges
[2020-11-25 03:22:44,674 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 03:22:44,675 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 03:22:44,675 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 03:22:44,675 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 03:22:44,694 INFO  L70    emoveInfeasibleEdges]: Removed 246 edges and 23 locations because of local infeasibility
[2020-11-25 03:22:44,707 INFO  L70        RemoveSinkStates]: Removed 164 edges and 109 locations by removing sink states
[2020-11-25 03:22:44,723 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 03:22:44,729 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 03:22:44,736 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 03:22:44,737 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 03:22:44,742 INFO  L313           BlockEncoder]: Encoded RCFG 7658 locations, 14584 edges
[2020-11-25 03:22:44,743 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:22:44 BasicIcfg
[2020-11-25 03:22:44,743 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 03:22:44,743 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 03:22:44,743 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 03:22:44,745 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 03:22:44,746 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,746 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:22:40" (1/6) ...
[2020-11-25 03:22:44,747 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f0c8d89 and model type OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:22:44, skipping insertion in model container
[2020-11-25 03:22:44,747 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,747 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:22:41" (2/6) ...
[2020-11-25 03:22:44,748 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f0c8d89 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:22:44, skipping insertion in model container
[2020-11-25 03:22:44,748 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,748 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:22:42" (3/6) ...
[2020-11-25 03:22:44,748 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f0c8d89 and model type OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:22:44, skipping insertion in model container
[2020-11-25 03:22:44,748 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,748 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:22:42" (4/6) ...
[2020-11-25 03:22:44,749 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f0c8d89 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:22:44, skipping insertion in model container
[2020-11-25 03:22:44,749 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,749 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:22:44" (5/6) ...
[2020-11-25 03:22:44,749 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f0c8d89 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:22:44, skipping insertion in model container
[2020-11-25 03:22:44,749 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:22:44,749 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:22:44" (6/6) ...
[2020-11-25 03:22:44,750 INFO  L404   chiAutomizerObserver]: Analyzing ICFG OrionToken_0x8fb00fdebb4e83f2c58b3bcd6732ac1b6a7b7221_transferfrom-normal.bpl_BEv2
[2020-11-25 03:22:44,787 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 03:22:44,788 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 03:22:44,788 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 03:22:44,788 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 03:22:44,788 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 03:22:44,788 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 03:22:44,788 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 03:22:44,788 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 03:22:44,788 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 03:22:44,854 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7658 states.
[2020-11-25 03:22:44,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:44,934 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:44,935 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:44,945 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:44,945 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:44,945 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 03:22:44,945 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7658 states.
[2020-11-25 03:22:44,986 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:44,986 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:44,986 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:44,989 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:44,989 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND TRUE   revert
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND TRUE   choice == 16
[L7737]              gas := gas - 21000;
[L7738]  COND FALSE  !(gas >= 0)
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:45,007 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:45,007 INFO  L82        PathProgramCache]: Analyzing trace with hash 1092001691, now seen corresponding path program 1 times
[2020-11-25 03:22:45,013 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:45,035 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:22:45,084 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 03:22:45,086 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:22:45,086 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 03:22:45,485 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:22:45,497 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 03:22:45,497 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 03:22:45,499 INFO  L87              Difference]: Start difference. First operand 7658 states. Second operand 4 states.
[2020-11-25 03:22:46,328 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:22:46,328 INFO  L93              Difference]: Finished difference Result 4409 states and 5667 transitions.
[2020-11-25 03:22:46,328 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 03:22:46,329 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4409 states and 5667 transitions.
[2020-11-25 03:22:46,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:46,386 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4409 states to 4409 states and 5667 transitions.
[2020-11-25 03:22:46,387 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 03:22:46,389 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 768
[2020-11-25 03:22:46,390 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4409 states and 5667 transitions.
[2020-11-25 03:22:46,401 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:22:46,401 INFO  L728         BuchiCegarLoop]: Abstraction has 4409 states and 5667 transitions.
[2020-11-25 03:22:46,417 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4409 states and 5667 transitions.
[2020-11-25 03:22:46,489 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4409 to 4409.
[2020-11-25 03:22:46,490 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4409 states.
[2020-11-25 03:22:46,499 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4409 states to 4409 states and 5667 transitions.
[2020-11-25 03:22:46,500 INFO  L751         BuchiCegarLoop]: Abstraction has 4409 states and 5667 transitions.
[2020-11-25 03:22:46,500 INFO  L631         BuchiCegarLoop]: Abstraction has 4409 states and 5667 transitions.
[2020-11-25 03:22:46,500 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 03:22:46,500 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4409 states and 5667 transitions.
[2020-11-25 03:22:46,510 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:46,510 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:46,510 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:46,512 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:46,512 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND TRUE   revert
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:46,517 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:46,517 INFO  L82        PathProgramCache]: Analyzing trace with hash -1701789167, now seen corresponding path program 1 times
[2020-11-25 03:22:46,518 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:46,527 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:22:46,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 03:22:46,549 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:22:46,549 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 03:22:46,550 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:22:46,551 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 03:22:46,551 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 03:22:46,551 INFO  L87              Difference]: Start difference. First operand 4409 states and 5667 transitions. cyclomatic complexity: 1260 Second operand 3 states.
[2020-11-25 03:22:46,703 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:22:46,703 INFO  L93              Difference]: Finished difference Result 5629 states and 6982 transitions.
[2020-11-25 03:22:46,703 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 03:22:46,703 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5629 states and 6982 transitions.
[2020-11-25 03:22:46,720 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 03:22:46,743 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5629 states to 5629 states and 6982 transitions.
[2020-11-25 03:22:46,743 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1113
[2020-11-25 03:22:46,744 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1113
[2020-11-25 03:22:46,744 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5629 states and 6982 transitions.
[2020-11-25 03:22:46,750 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:22:46,750 INFO  L728         BuchiCegarLoop]: Abstraction has 5629 states and 6982 transitions.
[2020-11-25 03:22:46,755 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5629 states and 6982 transitions.
[2020-11-25 03:22:46,811 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5629 to 5035.
[2020-11-25 03:22:46,812 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5035 states.
[2020-11-25 03:22:46,819 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5035 states to 5035 states and 6264 transitions.
[2020-11-25 03:22:46,819 INFO  L751         BuchiCegarLoop]: Abstraction has 5035 states and 6264 transitions.
[2020-11-25 03:22:46,819 INFO  L631         BuchiCegarLoop]: Abstraction has 5035 states and 6264 transitions.
[2020-11-25 03:22:46,819 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 03:22:46,819 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5035 states and 6264 transitions.
[2020-11-25 03:22:46,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:46,826 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:46,826 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:46,828 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:46,829 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND FALSE  !(revert)
[L5098]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L5098]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5099]  COND FALSE  !(revert)
[L5102]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L4816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4817]  COND FALSE  !(revert)
[L4820]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4791]              assume msgsender_MSG != null;
[L4792]              Balance[this] := 0;
[L4793]              _name_ERC20Detailed[this] := 1676231298;
[L4794]              _symbol_ERC20Detailed[this] := 1676231298;
[L4795]              _decimals_ERC20Detailed[this] := 0;
[L4797]              _name_ERC20Detailed[this] := name_s857;
[L4798]              _symbol_ERC20Detailed[this] := symbol_s857;
[L4799]              _decimals_ERC20Detailed[this] := decimals_s857;
[L4820]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4821]  COND FALSE  !(revert)
[L5102]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L5103]  COND FALSE  !(revert)
[L5106]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L5106]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5107]  COND FALSE  !(revert)
[L5110]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND TRUE   !(account_s699 != null)
[L4275]              revert := true;
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND TRUE   revert
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND TRUE   revert
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND TRUE   revert
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND TRUE   revert
[L5110]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L5111]  COND TRUE   revert
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:46,833 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:46,834 INFO  L82        PathProgramCache]: Analyzing trace with hash 977050799, now seen corresponding path program 1 times
[2020-11-25 03:22:46,834 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:46,848 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:22:46,921 INFO  L134       CoverageAnalysis]: Checked inductivity of 66 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 52 trivial. 0 not checked.
[2020-11-25 03:22:46,921 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 03:22:46,921 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-25 03:22:46,922 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:22:46,922 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 03:22:46,922 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-25 03:22:46,922 INFO  L87              Difference]: Start difference. First operand 5035 states and 6264 transitions. cyclomatic complexity: 1231 Second operand 12 states.
[2020-11-25 03:22:47,305 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:22:47,305 INFO  L93              Difference]: Finished difference Result 5095 states and 6355 transitions.
[2020-11-25 03:22:47,305 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 03:22:47,305 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5095 states and 6355 transitions.
[2020-11-25 03:22:47,315 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:47,330 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5095 states to 5095 states and 6355 transitions.
[2020-11-25 03:22:47,330 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 976
[2020-11-25 03:22:47,330 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 976
[2020-11-25 03:22:47,331 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5095 states and 6355 transitions.
[2020-11-25 03:22:47,335 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:22:47,335 INFO  L728         BuchiCegarLoop]: Abstraction has 5095 states and 6355 transitions.
[2020-11-25 03:22:47,340 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5095 states and 6355 transitions.
[2020-11-25 03:22:47,379 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5095 to 5079.
[2020-11-25 03:22:47,379 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5079 states.
[2020-11-25 03:22:47,386 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5079 states to 5079 states and 6331 transitions.
[2020-11-25 03:22:47,386 INFO  L751         BuchiCegarLoop]: Abstraction has 5079 states and 6331 transitions.
[2020-11-25 03:22:47,386 INFO  L631         BuchiCegarLoop]: Abstraction has 5079 states and 6331 transitions.
[2020-11-25 03:22:47,386 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 03:22:47,386 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5079 states and 6331 transitions.
[2020-11-25 03:22:47,392 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:47,393 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:47,393 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:47,394 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:47,395 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND FALSE  !(revert)
[L5098]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L5098]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5099]  COND FALSE  !(revert)
[L5102]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L4816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4817]  COND FALSE  !(revert)
[L4820]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4791]              assume msgsender_MSG != null;
[L4792]              Balance[this] := 0;
[L4793]              _name_ERC20Detailed[this] := 1676231298;
[L4794]              _symbol_ERC20Detailed[this] := 1676231298;
[L4795]              _decimals_ERC20Detailed[this] := 0;
[L4797]              _name_ERC20Detailed[this] := name_s857;
[L4798]              _symbol_ERC20Detailed[this] := symbol_s857;
[L4799]              _decimals_ERC20Detailed[this] := decimals_s857;
[L4820]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4821]  COND FALSE  !(revert)
[L5102]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L5103]  COND FALSE  !(revert)
[L5106]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L5106]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5107]  COND FALSE  !(revert)
[L5110]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND FALSE  !(DType[this] == OrionToken)
[L4386]  COND TRUE   DType[this] == ERC20Capped
[L4387]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND TRUE   !!__var_27
[L4224]              revert := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND TRUE   revert
[L4387]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4388]  COND TRUE   revert
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND TRUE   revert
[L5110]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L5111]  COND TRUE   revert
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:47,398 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:47,398 INFO  L82        PathProgramCache]: Analyzing trace with hash -1152617739, now seen corresponding path program 1 times
[2020-11-25 03:22:47,399 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:47,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:22:47,442 INFO  L134       CoverageAnalysis]: Checked inductivity of 66 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 66 trivial. 0 not checked.
[2020-11-25 03:22:47,442 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:22:47,442 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 03:22:47,443 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:22:47,443 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 03:22:47,443 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 03:22:47,443 INFO  L87              Difference]: Start difference. First operand 5079 states and 6331 transitions. cyclomatic complexity: 1254 Second operand 3 states.
[2020-11-25 03:22:47,488 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:22:47,488 INFO  L93              Difference]: Finished difference Result 5088 states and 6340 transitions.
[2020-11-25 03:22:47,488 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 03:22:47,488 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5088 states and 6340 transitions.
[2020-11-25 03:22:47,500 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:47,516 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5088 states to 5088 states and 6340 transitions.
[2020-11-25 03:22:47,516 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 960
[2020-11-25 03:22:47,517 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 960
[2020-11-25 03:22:47,517 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5088 states and 6340 transitions.
[2020-11-25 03:22:47,522 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:22:47,522 INFO  L728         BuchiCegarLoop]: Abstraction has 5088 states and 6340 transitions.
[2020-11-25 03:22:47,526 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5088 states and 6340 transitions.
[2020-11-25 03:22:47,567 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5088 to 5080.
[2020-11-25 03:22:47,567 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5080 states.
[2020-11-25 03:22:47,574 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5080 states to 5080 states and 6332 transitions.
[2020-11-25 03:22:47,574 INFO  L751         BuchiCegarLoop]: Abstraction has 5080 states and 6332 transitions.
[2020-11-25 03:22:47,574 INFO  L631         BuchiCegarLoop]: Abstraction has 5080 states and 6332 transitions.
[2020-11-25 03:22:47,574 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 03:22:47,574 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5080 states and 6332 transitions.
[2020-11-25 03:22:47,580 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:47,581 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:47,581 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:47,582 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:47,582 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND FALSE  !(revert)
[L5098]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L5098]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5099]  COND FALSE  !(revert)
[L5102]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L4816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4817]  COND FALSE  !(revert)
[L4820]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4791]              assume msgsender_MSG != null;
[L4792]              Balance[this] := 0;
[L4793]              _name_ERC20Detailed[this] := 1676231298;
[L4794]              _symbol_ERC20Detailed[this] := 1676231298;
[L4795]              _decimals_ERC20Detailed[this] := 0;
[L4797]              _name_ERC20Detailed[this] := name_s857;
[L4798]              _symbol_ERC20Detailed[this] := symbol_s857;
[L4799]              _decimals_ERC20Detailed[this] := decimals_s857;
[L4820]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4821]  COND FALSE  !(revert)
[L5102]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L5103]  COND FALSE  !(revert)
[L5106]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L5106]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5107]  COND FALSE  !(revert)
[L5110]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND TRUE   !!__var_27
[L4224]              revert := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND TRUE   revert
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND TRUE   revert
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND TRUE   revert
[L5110]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L5111]  COND TRUE   revert
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L698]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3334]  COND TRUE   DType[this] == OrionToken
[L3335]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3800]              __var_12 := null;
[L3801]  COND TRUE   !(sender_s460 != null)
[L3802]              revert := true;
[L3335]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3336]  COND TRUE   revert
[L698]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L699]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s348] == old(_balances_ERC20[this][sender_s348]) - amount_s348) && _balances_ERC20[this][recipient_s348] == old(_balances_ERC20[this][recipient_s348]) + amount_s348) && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:47,586 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:47,586 INFO  L82        PathProgramCache]: Analyzing trace with hash 405231716, now seen corresponding path program 1 times
[2020-11-25 03:22:47,587 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:47,596 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:22:47,632 INFO  L134       CoverageAnalysis]: Checked inductivity of 66 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 66 trivial. 0 not checked.
[2020-11-25 03:22:47,632 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:22:47,632 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 03:22:47,633 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:22:47,633 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 03:22:47,633 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 03:22:47,633 INFO  L87              Difference]: Start difference. First operand 5080 states and 6332 transitions. cyclomatic complexity: 1254 Second operand 3 states.
[2020-11-25 03:22:47,709 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:22:47,710 INFO  L93              Difference]: Finished difference Result 5650 states and 6743 transitions.
[2020-11-25 03:22:47,710 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 03:22:47,710 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5650 states and 6743 transitions.
[2020-11-25 03:22:47,721 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 03:22:47,735 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5650 states to 5180 states and 6157 transitions.
[2020-11-25 03:22:47,735 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 977
[2020-11-25 03:22:47,736 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1025
[2020-11-25 03:22:47,736 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5180 states and 6157 transitions.
[2020-11-25 03:22:47,740 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:22:47,740 INFO  L728         BuchiCegarLoop]: Abstraction has 5180 states and 6157 transitions.
[2020-11-25 03:22:47,744 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5180 states and 6157 transitions.
[2020-11-25 03:22:47,770 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5180 to 4666.
[2020-11-25 03:22:47,770 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4666 states.
[2020-11-25 03:22:47,774 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4666 states to 4666 states and 5519 transitions.
[2020-11-25 03:22:47,774 INFO  L751         BuchiCegarLoop]: Abstraction has 4666 states and 5519 transitions.
[2020-11-25 03:22:47,774 INFO  L631         BuchiCegarLoop]: Abstraction has 4666 states and 5519 transitions.
[2020-11-25 03:22:47,774 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 03:22:47,774 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4666 states and 5519 transitions.
[2020-11-25 03:22:47,779 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:22:47,779 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:22:47,779 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:22:47,783 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 9, 9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:22:47,783 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7846]              assume null == 0;
[L7847]  CALL        call this := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L7847]  RET         call this := FreshRefGenerator__success();
[L7848]              assume now >= 0;
[L7849]              assume DType[this] == OrionToken;
[L7850]              assume msgvalue_MSG == 0;
[L7851]              gas := gas - 53000;
[L7852]  CALL        call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND FALSE  !(revert)
[L5098]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L5098]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5099]  COND FALSE  !(revert)
[L5102]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L4816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4817]  COND FALSE  !(revert)
[L4820]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4791]              assume msgsender_MSG != null;
[L4792]              Balance[this] := 0;
[L4793]              _name_ERC20Detailed[this] := 1676231298;
[L4794]              _symbol_ERC20Detailed[this] := 1676231298;
[L4795]              _decimals_ERC20Detailed[this] := 0;
[L4797]              _name_ERC20Detailed[this] := name_s857;
[L4798]              _symbol_ERC20Detailed[this] := symbol_s857;
[L4799]              _decimals_ERC20Detailed[this] := decimals_s857;
[L4820]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4821]  COND FALSE  !(revert)
[L5102]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L5103]  COND FALSE  !(revert)
[L5106]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L5106]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5107]  COND FALSE  !(revert)
[L5110]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L5110]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L5111]  COND FALSE  !(revert)
[L5114]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4696]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4696]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4697]  COND FALSE  !(revert)
[L4700]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4700]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4708]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4665]              assume msgsender_MSG != null;
[L4666]              Balance[this] := 0;
[L4712]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L5114]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L5115]  COND FALSE  !(revert)
[L5118]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, 100000000 * 100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4920]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4920]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4921]  COND FALSE  !(revert)
[L4924]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4924]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4925]  COND FALSE  !(revert)
[L4928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4929]  COND FALSE  !(revert)
[L4932]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4932]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]  COND FALSE  !(revert)
[L4936]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4696]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4696]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4697]  COND FALSE  !(revert)
[L4700]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4700]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4708]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4665]              assume msgsender_MSG != null;
[L4666]              Balance[this] := 0;
[L4712]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4936]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4937]  COND FALSE  !(revert)
[L4940]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s903);
[L4879]              assume msgsender_MSG != null;
[L4880]              Balance[this] := 0;
[L4881]              _cap_ERC20Capped[this] := 0;
[L4883]  COND FALSE  !(!(cap_s903 > 0))
[L4887]              _cap_ERC20Capped[this] := cap_s903;
[L4940]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s903);
[L4941]  COND FALSE  !(revert)
[L5118]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, 100000000 * 100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5119]  COND FALSE  !(revert)
[L5122]  CALL        call OrionToken_OrionToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5051]              assume msgsender_MSG != null;
[L5052]              Balance[this] := 0;
[L5122]  RET         call OrionToken_OrionToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5123]  COND FALSE  !(revert)
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
[L7853]              assume !revert && gas >= 0;
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum__balances0 := sum__balances0;
[L679]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum__allowances1 := sum__allowances1;
[L682]               __tmp__M_Ref_bool := M_Ref_bool;
[L683]               __tmp__sum := sum;
[L684]               __tmp__Length := Length;
[L685]               __tmp__now := now;
[L686]               __tmp___balances_ERC20 := _balances_ERC20;
[L687]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L688]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L689]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L690]               __tmp___minters_MinterRole := _minters_MinterRole;
[L691]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L692]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L693]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L694]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3229]  COND TRUE   __tmp__DType[this] == OrionToken
[L3230]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3768]              __var_12 := null;
[L3769]  COND TRUE   !(sender_s460 != null)
[L3770]              revert := true;
[L3230]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3231]  COND TRUE   revert
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L696]               assume revert || gas < 0;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

Loop:
[L7856]  CALL        call CorralChoice_OrionToken(this);
[L7679]              havoc msgsender_MSG;
[L7680]              havoc msgvalue_MSG;
[L7681]              havoc choice;
[L7682]              havoc __ret_0_totalSupply;
[L7683]              havoc account_s258;
[L7684]              havoc __ret_0_balanceOf;
[L7685]              havoc recipient_s277;
[L7686]              havoc amount_s277;
[L7687]              havoc __ret_0_transfer;
[L7688]              havoc owner_s293;
[L7689]              havoc spender_s293;
[L7690]              havoc __ret_0_allowance;
[L7691]              havoc spender_s312;
[L7692]              havoc amount_s312;
[L7693]              havoc __ret_0_approve;
[L7694]              havoc sender_s348;
[L7695]              havoc recipient_s348;
[L7696]              havoc amount_s348;
[L7697]              havoc __ret_0_transferFrom;
[L7698]              havoc spender_s375;
[L7699]              havoc addedValue_s375;
[L7700]              havoc __ret_0_increaseAllowance;
[L7701]              havoc spender_s403;
[L7702]              havoc subtractedValue_s403;
[L7703]              havoc __ret_0_decreaseAllowance;
[L7704]              havoc account_s749;
[L7705]              havoc __ret_0_isMinter;
[L7706]              havoc account_s761;
[L7707]              havoc account_s826;
[L7708]              havoc amount_s826;
[L7709]              havoc __ret_0_mint;
[L7710]              havoc name_s857;
[L7711]              havoc symbol_s857;
[L7712]              havoc decimals_s857;
[L7713]              havoc __ret_0_name;
[L7714]              havoc __ret_0_symbol;
[L7715]              havoc __ret_0_decimals;
[L7716]              havoc cap_s903;
[L7717]              havoc __ret_0_cap;
[L7718]              havoc tmpNow;
[L7719]              havoc gas;
[L7720]              assume gas > 4000000 && gas <= 8000000;
[L7721]              tmpNow := now;
[L7722]              havoc now;
[L7723]              assume now > tmpNow;
[L7724]              assume msgsender_MSG != null;
[L7725]              assume DType[msgsender_MSG] != SafeMath;
[L7726]              assume DType[msgsender_MSG] != Context;
[L7727]              assume DType[msgsender_MSG] != IERC20;
[L7728]              assume DType[msgsender_MSG] != ERC20;
[L7729]              assume DType[msgsender_MSG] != Roles;
[L7730]              assume DType[msgsender_MSG] != MinterRole;
[L7731]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7732]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7733]              assume DType[msgsender_MSG] != ERC20Capped;
[L7734]              assume DType[msgsender_MSG] != OrionToken;
[L7735]              Alloc[msgsender_MSG] := true;
[L7736]  COND FALSE  !(choice == 16)
[L7742]  COND FALSE  !(choice == 15)
[L7748]  COND FALSE  !(choice == 14)
[L7755]  COND FALSE  !(choice == 13)
[L7761]  COND FALSE  !(choice == 12)
[L7768]  COND TRUE   choice == 11
[L7769]              gas := gas - 21000;
[L7770]  COND TRUE   gas >= 0
[L7771]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7772]              assume msgvalue_MSG == 0;
[L7773]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum__balances0 := sum__balances0;
[L679]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum__allowances1 := sum__allowances1;
[L682]               __tmp__M_Ref_bool := M_Ref_bool;
[L683]               __tmp__sum := sum;
[L684]               __tmp__Length := Length;
[L685]               __tmp__now := now;
[L686]               __tmp___balances_ERC20 := _balances_ERC20;
[L687]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L688]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L689]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L690]               __tmp___minters_MinterRole := _minters_MinterRole;
[L691]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L692]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L693]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L694]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3229]  COND TRUE   __tmp__DType[this] == OrionToken
[L3230]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3768]              __var_12 := null;
[L3769]  COND TRUE   !(sender_s460 != null)
[L3770]              revert := true;
[L3230]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3231]  COND TRUE   revert
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L696]               assume revert || gas < 0;
[L7773]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L7856]  RET         call CorralChoice_OrionToken(this);

[2020-11-25 03:22:47,789 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:47,789 INFO  L82        PathProgramCache]: Analyzing trace with hash -1390311489, now seen corresponding path program 1 times
[2020-11-25 03:22:47,790 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:47,815 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:22:47,844 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:22:48,052 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:48,053 INFO  L82        PathProgramCache]: Analyzing trace with hash 592510401, now seen corresponding path program 1 times
[2020-11-25 03:22:48,053 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:48,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:22:48,066 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:22:48,079 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:22:48,079 INFO  L82        PathProgramCache]: Analyzing trace with hash -70372225, now seen corresponding path program 1 times
[2020-11-25 03:22:48,080 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:22:48,115 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:22:48,146 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 03:22:48,459 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 168
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.003s / 0.007s total
Resizing node table from 6271 to 12541
[2020-11-25 03:22:48,672 WARN  L188               SmtUtils]: Spent 174.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-25 03:22:48,864 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7027 to 14051
[2020-11-25 03:22:49,600 WARN  L188               SmtUtils]: Spent 718.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 03:22:50,439 WARN  L188               SmtUtils]: Spent 835.00 ms on a formula simplification. DAG size of input: 308 DAG size of output: 289
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8713 to 17419
[2020-11-25 03:22:50,825 WARN  L188               SmtUtils]: Spent 343.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 181
[2020-11-25 03:22:51,065 WARN  L188               SmtUtils]: Spent 238.00 ms on a formula simplification that was a NOOP. DAG size: 349
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #8: 17419 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17419 to 34819
[2020-11-25 03:22:51,344 WARN  L188               SmtUtils]: Spent 269.00 ms on a formula simplification that was a NOOP. DAG size: 282
[2020-11-25 03:22:51,656 WARN  L188               SmtUtils]: Spent 309.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 03:22:52,205 WARN  L188               SmtUtils]: Spent 531.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 200
[2020-11-25 03:22:52,214 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 53 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-25 03:22:53,214 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification. DAG size of input: 232 DAG size of output: 217
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-25 03:22:53,648 WARN  L188               SmtUtils]: Spent 369.00 ms on a formula simplification. DAG size of input: 349 DAG size of output: 328
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 03:22:54,121 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-25 03:22:54,254 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 03:22:54,901 WARN  L188               SmtUtils]: Spent 635.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 03:22:55,674 WARN  L188               SmtUtils]: Spent 771.00 ms on a formula simplification. DAG size of input: 307 DAG size of output: 289
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 03:22:55,933 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 179
[2020-11-25 03:22:56,122 WARN  L188               SmtUtils]: Spent 188.00 ms on a formula simplification that was a NOOP. DAG size: 347
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-25 03:22:56,597 WARN  L188               SmtUtils]: Spent 467.00 ms on a formula simplification. DAG size of input: 280 DAG size of output: 280
[2020-11-25 03:22:57,547 WARN  L188               SmtUtils]: Spent 948.00 ms on a formula simplification. DAG size of input: 526 DAG size of output: 509
Garbage collection #1: 197 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 197 to 389
Garbage collection #2: 389 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 389 to 773
Garbage collection #3: 773 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 773 to 1543
Garbage collection #4: 1543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1543 to 3083
Garbage collection #5: 3083 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3083 to 6163
Garbage collection #6: 6163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6163 to 12323
Garbage collection #7: 12323 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12323 to 24631
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 03:22:58,199 WARN  L188               SmtUtils]: Spent 629.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 267
[2020-11-25 03:22:58,463 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification that was a NOOP. DAG size: 384
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8543 to 17077
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #9: 24137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 24137 to 48271
[2020-11-25 03:22:58,854 WARN  L188               SmtUtils]: Spent 346.00 ms on a formula simplification. DAG size of input: 281 DAG size of output: 267
[2020-11-25 03:22:59,292 WARN  L188               SmtUtils]: Spent 437.00 ms on a formula simplification. DAG size of input: 386 DAG size of output: 385
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #8: 17077 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17077 to 34147
Garbage collection #9: 34147 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 34147 to 68281
Garbage collection #10: 68281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 68281 to 118277
[2020-11-25 03:23:00,050 WARN  L188               SmtUtils]: Spent 733.00 ms on a formula simplification. DAG size of input: 396 DAG size of output: 380
[2020-11-25 03:23:00,072 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:23:00,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:23:00,114 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:23:00 BasicIcfg
[2020-11-25 03:23:00,114 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 03:23:00,115 INFO  L168              Benchmark]: Toolchain (without parser) took 19304.00 ms. Allocated memory was 1.0 GB in the beginning and 2.7 GB in the end (delta: 1.7 GB). Free memory was 935.2 MB in the beginning and 2.3 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.9 GB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,116 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,116 INFO  L168              Benchmark]: Boogie Preprocessor took 140.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,116 INFO  L168              Benchmark]: UtopiaSpecLang took 77.15 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,116 INFO  L168              Benchmark]: Boogie Printer took 30.30 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,117 INFO  L168              Benchmark]: RCFGBuilder took 1159.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 903.0 MB in the beginning and 915.1 MB in the end (delta: -12.1 MB). Peak memory consumption was 190.5 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,117 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.78 ms. Allocated memory is still 1.1 GB. Free memory was 915.1 MB in the beginning and 907.7 MB in the end (delta: 7.4 MB). Peak memory consumption was 7.4 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,117 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2277.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 189.8 MB). Free memory was 907.7 MB in the beginning and 997.7 MB in the end (delta: -90.0 MB). Peak memory consumption was 472.1 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,118 INFO  L168              Benchmark]: BlockEncodingV2 took 207.87 ms. Allocated memory is still 1.3 GB. Free memory was 997.7 MB in the beginning and 887.2 MB in the end (delta: 110.5 MB). Peak memory consumption was 110.5 MB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,118 INFO  L168              Benchmark]: BuchiAutomizer took 15371.39 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.5 GB). Free memory was 887.2 MB in the beginning and 2.3 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 03:23:00,121 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7822 locations, 15041 edges
  - StatisticsResult: Encoded RCFG
    7658 locations, 14584 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 140.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 77.15 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 30.30 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1159.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 903.0 MB in the beginning and 915.1 MB in the end (delta: -12.1 MB). Peak memory consumption was 190.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.78 ms. Allocated memory is still 1.1 GB. Free memory was 915.1 MB in the beginning and 907.7 MB in the end (delta: 7.4 MB). Peak memory consumption was 7.4 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2277.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 189.8 MB). Free memory was 907.7 MB in the beginning and 997.7 MB in the end (delta: -90.0 MB). Peak memory consumption was 472.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 207.87 ms. Allocated memory is still 1.3 GB. Free memory was 997.7 MB in the beginning and 887.2 MB in the end (delta: 110.5 MB). Peak memory consumption was 110.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 15371.39 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.5 GB). Free memory was 887.2 MB in the beginning and 2.3 GB in the end (delta: -1.4 GB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2935 locations, 4572 edges
  - StatisticsResult: BuchiProgram size
    7822 locations, 15041 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 12 locations. The remainder module has 4666 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 15.3s and 6 iterations.  TraceHistogramMax:12. Analysis of lassos took 13.0s. Construction of modules took 0.9s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1132 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 5080 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 28080 SDtfs, 12020 SDslu, 68599 SDs, 0 SdLazy, 4614 SolverSat, 3294 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(10000000000000032) = (new OrionToken)({from : 10000000000000029});
[L1751]              havoc __exception;
[L1752]              revert := false;
[L1753]  COND FALSE  !(__exception)
[L1779]  CALL        call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5094]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L5094]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L5095]  COND FALSE  !(revert)
[L5098]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L5098]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5099]  COND FALSE  !(revert)
[L5102]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L4816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4817]  COND FALSE  !(revert)
[L4820]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4791]              assume msgsender_MSG != null;
[L4792]              Balance[this] := 0;
[L4793]              _name_ERC20Detailed[this] := 1676231298;
[L4794]              _symbol_ERC20Detailed[this] := 1676231298;
[L4795]              _decimals_ERC20Detailed[this] := 0;
[L4797]              _name_ERC20Detailed[this] := name_s857;
[L4798]              _symbol_ERC20Detailed[this] := symbol_s857;
[L4799]              _decimals_ERC20Detailed[this] := decimals_s857;
[L4820]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s857, symbol_s857, decimals_s857);
[L4821]  COND FALSE  !(revert)
[L5102]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2041904824, 935364311, 8);
[L5103]  COND FALSE  !(revert)
[L5106]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L5106]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5107]  COND FALSE  !(revert)
[L5110]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L5110]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L5111]  COND FALSE  !(revert)
[L5114]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4696]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4696]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4697]  COND FALSE  !(revert)
[L4700]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4700]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4708]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4665]              assume msgsender_MSG != null;
[L4666]              Balance[this] := 0;
[L4712]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L5114]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L5115]  COND FALSE  !(revert)
[L5118]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, 100000000 * 100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4920]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4920]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4921]  COND FALSE  !(revert)
[L4924]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4924]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4925]  COND FALSE  !(revert)
[L4928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4929]  COND FALSE  !(revert)
[L4932]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4932]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]  COND FALSE  !(revert)
[L4936]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4696]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4696]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4697]  COND FALSE  !(revert)
[L4700]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L4700]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2962]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L2962]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2912]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2897]              assume msgsender_MSG != null;
[L2898]              Balance[this] := 0;
[L2912]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2913]  COND FALSE  !(revert)
[L2966]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2934]              assume msgsender_MSG != null;
[L2935]              Balance[this] := 0;
[L2936]              _balances_ERC20[this] := zeroRefintArr();
[L2937]              sum__balances0[this] := 0;
[L2938]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2939]              sum__allowances1[this] := 0;
[L2940]              _totalSupply_ERC20[this] := 0;
[L2970]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4424]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2868]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2868]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2869]  COND FALSE  !(revert)
[L4424]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4352]  CALL        call __var_31 := FreshRefGenerator__success();
[L2670]              havoc newRef;
[L2671]              assume Alloc[newRef] == false;
[L2672]              Alloc[newRef] := true;
[L2673]              assume newRef != null;
[L4352]  RET         call __var_31 := FreshRefGenerator__success();
[L4353]  COND FALSE  !(revert)
[L4356]              _minters_MinterRole[this] := __var_31;
[L4358]  COND TRUE   DType[this] == OrionToken
[L4359]  CALL        call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2882]              __ret_0_ := msgsender_MSG;
[L4359]  RET         call __var_30 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4360]  COND FALSE  !(revert)
[L4381]  COND TRUE   DType[this] == OrionToken
[L4382]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4630]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4219]  CALL        call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4273]              __var_29 := null;
[L4274]  COND FALSE  !(!(account_s699 != null))
[L4278]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s699]][account_s699];
[L4219]  RET         call __var_27 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s651, account_s651);
[L4220]  COND FALSE  !(revert)
[L4223]  COND FALSE  !(!!__var_27)
[L4227]              M_Ref_bool[bearer_Roles.Role[role_s651]][account_s651] := true;
[L4630]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s786);
[L4631]  COND FALSE  !(revert)
[L4634]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L4382]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L4383]  COND FALSE  !(revert)
[L4428]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L4708]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4665]              assume msgsender_MSG != null;
[L4666]              Balance[this] := 0;
[L4712]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4936]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4937]  COND FALSE  !(revert)
[L4940]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s903);
[L4879]              assume msgsender_MSG != null;
[L4880]              Balance[this] := 0;
[L4881]              _cap_ERC20Capped[this] := 0;
[L4883]  COND FALSE  !(!(cap_s903 > 0))
[L4887]              _cap_ERC20Capped[this] := cap_s903;
[L4940]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s903);
[L4941]  COND FALSE  !(revert)
[L5118]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, 100000000 * 100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5119]  COND FALSE  !(revert)
[L5122]  CALL        call OrionToken_OrionToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5051]              assume msgsender_MSG != null;
[L5052]              Balance[this] := 0;
[L5122]  RET         call OrionToken_OrionToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5123]  COND FALSE  !(revert)
[L1779]  RET         call OrionToken_OrionToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1780]              assume !revert && gas >= 0;
[L7852]  RET         call OrionToken_OrionToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(10000000000000032).transferFrom~address~address~uint256.gas(3979002)({from : 10000000000000026, sender : 0, recipient : 10000000000000037, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L670]              havoc __exception;
[L671]              revert := false;
[L672]   COND TRUE  __exception
[L673]              __tmp__Balance := Balance;
[L674]              __tmp__DType := DType;
[L675]              __tmp__Alloc := Alloc;
[L676]              __tmp__balance_ADDR := balance_ADDR;
[L677]              __tmp__M_Ref_int := M_Ref_int;
[L678]              __tmp__sum__balances0 := sum__balances0;
[L679]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]              __tmp__sum__allowances1 := sum__allowances1;
[L682]              __tmp__M_Ref_bool := M_Ref_bool;
[L683]              __tmp__sum := sum;
[L684]              __tmp__Length := Length;
[L685]              __tmp__now := now;
[L686]              __tmp___balances_ERC20 := _balances_ERC20;
[L687]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L688]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L689]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L690]              __tmp___minters_MinterRole := _minters_MinterRole;
[L691]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L692]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L693]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L694]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L695]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3229]  COND TRUE  __tmp__DType[this] == OrionToken
[L3230]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3768]             __var_12 := null;
[L3769]  COND TRUE  !(sender_s460 != null)
[L3770]             revert := true;
[L3230]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3231]  COND TRUE  revert
[L695]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L696]              assume revert || gas < 0;
[L7773]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);

Loop:
ERC20(10000000000000032).transferFrom~address~address~uint256.gas(3979001)({from : 10000000000000034, sender : 0, recipient : 10000000000000021, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s348 && p1 != recipient_s348) && (p2 != sender_s348 || p3 != msgsender_MSG)) && sender_s348 != recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && _balances_ERC20[this][recipient_s348] + amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L670]              havoc __exception;
[L671]              revert := false;
[L672]   COND TRUE  __exception
[L673]              __tmp__Balance := Balance;
[L674]              __tmp__DType := DType;
[L675]              __tmp__Alloc := Alloc;
[L676]              __tmp__balance_ADDR := balance_ADDR;
[L677]              __tmp__M_Ref_int := M_Ref_int;
[L678]              __tmp__sum__balances0 := sum__balances0;
[L679]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]              __tmp__sum__allowances1 := sum__allowances1;
[L682]              __tmp__M_Ref_bool := M_Ref_bool;
[L683]              __tmp__sum := sum;
[L684]              __tmp__Length := Length;
[L685]              __tmp__now := now;
[L686]              __tmp___balances_ERC20 := _balances_ERC20;
[L687]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L688]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L689]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L690]              __tmp___minters_MinterRole := _minters_MinterRole;
[L691]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L692]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L693]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L694]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L695]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3229]  COND TRUE  __tmp__DType[this] == OrionToken
[L3230]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3768]             __var_12 := null;
[L3769]  COND TRUE  !(sender_s460 != null)
[L3770]             revert := true;
[L3230]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3231]  COND TRUE  revert
[L695]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L696]              assume revert || gas < 0;
[L7773]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
