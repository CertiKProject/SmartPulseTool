This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:30:42,579 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:30:42,581 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:30:42,591 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:30:42,591 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:30:42,591 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:30:42,592 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:30:42,594 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:30:42,595 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:30:42,596 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:30:42,596 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:30:42,597 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:30:42,597 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:30:42,598 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:30:42,599 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:30:42,599 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:30:42,600 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:30:42,601 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:30:42,602 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:30:42,603 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:30:42,604 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:30:42,604 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:30:42,606 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:30:42,606 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:30:42,606 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:30:42,607 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:30:42,607 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:30:42,608 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:30:42,608 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:30:42,608 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:30:42,608 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:30:42,609 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:30:42,609 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:30:42,610 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:30:42,611 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:30:42,611 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:30:42,611 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:30:42,611 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:30:42,611 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:30:42,612 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:30:42,612 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:30:42,613 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:30:42,620 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:30:42,620 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:30:42,621 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:30:42,621 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:30:42,621 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:30:42,621 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:30:42,621 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:30:42,621 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:30:42,622 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:30:42,622 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:30:42,622 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:30:42,623 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:30:42,623 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:30:42,644 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:30:42,655 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:30:42,658 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:30:42,661 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:30:42,661 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:30:42,662 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl
[2020-11-25 09:30:42,663 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl'
[2020-11-25 09:30:42,737 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:30:42,739 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:30:42,739 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:30:42,739 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:30:42,739 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:30:42,756 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,757 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,780 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,781 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,797 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,805 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,810 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,817 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:30:42,818 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:30:42,818 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:30:42,819 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:30:42,823 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/1) ...
[2020-11-25 09:30:42,842 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(YearnFinanceBitToken.transferFrom(from, to, value), from == to && (value > balances_YearnFinanceBitToken[this][from] || value > allowed_YearnFinanceBitToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][from] >= 0 &&  balances_YearnFinanceBitToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_YearnFinanceBitToken[this][from][msg.sender] >= 0 && allowed_YearnFinanceBitToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YearnFinanceBitToken.transferFrom)))
[2020-11-25 09:30:42,847 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(YearnFinanceBitToken.transferFrom(from, to, value), from == to && (value > balances_YearnFinanceBitToken[this][from] || value > allowed_YearnFinanceBitToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][from] >= 0 &&  balances_YearnFinanceBitToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_YearnFinanceBitToken[this][from][msg.sender] >= 0 && allowed_YearnFinanceBitToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YearnFinanceBitToken.transferFrom)))
[2020-11-25 09:30:42,853 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(YearnFinanceBitToken.transferFrom(from, to, value), from == to && (value > balances_YearnFinanceBitToken[this][from] || value > allowed_YearnFinanceBitToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][from] >= 0 &&  balances_YearnFinanceBitToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_YearnFinanceBitToken[this][from][msg.sender] >= 0 && allowed_YearnFinanceBitToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YearnFinanceBitToken.transferFrom)))
[2020-11-25 09:30:42,860 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s393==to_s393 && ( tokens_s393>balances_YearnFinanceBitToken[this][from_s393] || tokens_s393>allowed_YearnFinanceBitToken[this][from_s393][msg.sender] ) ) && tokens_s393>=0 ) && tokens_s393<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_YearnFinanceBitToken[this][to_s393]>=0 ) && balances_YearnFinanceBitToken[this][to_s393]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_YearnFinanceBitToken[this][from_s393]>=0 ) && balances_YearnFinanceBitToken[this][from_s393]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_YearnFinanceBitToken[this][from_s393][msg.sender]>=0 ) && allowed_YearnFinanceBitToken[this][from_s393][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>],IdentifierExpression[to_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[tokens_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[to_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[to_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[from_s393,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:30:42,864 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(YearnFinanceBitToken.transferFrom(from, to, value), from == to && (value > balances_YearnFinanceBitToken[this][from] || value > allowed_YearnFinanceBitToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][from] >= 0 &&  balances_YearnFinanceBitToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_YearnFinanceBitToken[this][from][msg.sender] >= 0 && allowed_YearnFinanceBitToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YearnFinanceBitToken.transferFrom)))
[2020-11-25 09:30:42,864 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_YearnFinanceBitToken0) ==> ( <>AP(fail_transferFrom_YearnFinanceBitToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:30:42,871 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:30:42 PropertyContainer
[2020-11-25 09:30:42,871 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:30:42,871 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:30:42,871 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:30:42,871 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:30:42,872 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/2) ...
[2020-11-25 09:30:42,872 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:30:42,872 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:30:42,883 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:30:42" (2/2) ...
[2020-11-25 09:30:42,883 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:30:42,883 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:30:42,883 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:30:42,883 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:30:42,885 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/2) ...
[2020-11-25 09:30:42,935 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:30:42,935 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:30:42,935 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:30:42,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:30:42,935 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 09:30:42,935 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:30:42,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:30:42,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:30:42,936 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:30:42,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:30:42,937 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:30:42,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:30:42,937 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:30:42,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:30:42,937 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success
[2020-11-25 09:30:42,937 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken
[2020-11-25 09:30:42,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-25 09:30:42,938 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 09:30:42,939 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_YearnFinanceBitToken
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,940 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-25 09:30:42,941 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken__success
[2020-11-25 09:30:42,942 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,943 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:30:42,943 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,943 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:30:42,943 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:30:42,943 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:30:42,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success
[2020-11-25 09:30:42,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:30:42,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_YearnFinanceBitToken
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:30:42,947 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:30:42,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:30:43,106 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:30:43,106 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:30:43,506 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:30:43,506 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 09:30:43,508 INFO  L202        PluginConnector]: Adding new model YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:30:43 BoogieIcfgContainer
[2020-11-25 09:30:43,508 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:30:42" (2/2) ...
[2020-11-25 09:30:43,508 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:30:43,508 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@26706189 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:30:43, skipping insertion in model container
[2020-11-25 09:30:43,508 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:30:43,509 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:30:43,509 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:30:43,510 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:30:43,510 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/3) ...
[2020-11-25 09:30:43,511 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1055fbfe and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:30:43, skipping insertion in model container
[2020-11-25 09:30:43,511 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:30:42" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:30:43,549 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:30:43 NWAContainer
[2020-11-25 09:30:43,549 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:30:43,549 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:30:43,549 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:30:43,550 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:30:43,551 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:30:43" (3/4) ...
[2020-11-25 09:30:43,552 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@528f08c0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:30:43, skipping insertion in model container
[2020-11-25 09:30:43,552 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:30:43" (4/4) ...
[2020-11-25 09:30:43,556 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:30:43,561 INFO  L110   BuchiProductObserver]: Initial RCFG 1048 locations, 1320 edges
[2020-11-25 09:30:43,561 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:30:43,575 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:30:44,637 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:30:44,640 INFO  L110   BuchiProductObserver]: BuchiProgram size 2486 locations, 4272 edges
[2020-11-25 09:30:44,640 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:30:44 BoogieIcfgContainer
[2020-11-25 09:30:44,640 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:30:44,641 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:30:44,641 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:30:44,642 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:30:44,643 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:30:44" (1/1) ...
[2020-11-25 09:30:44,708 INFO  L313           BlockEncoder]: Initial Icfg 2486 locations, 4272 edges
[2020-11-25 09:30:44,708 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:30:44,708 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:30:44,708 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:30:44,709 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:30:44,717 INFO  L70    emoveInfeasibleEdges]: Removed 66 edges and 9 locations because of local infeasibility
[2020-11-25 09:30:44,723 INFO  L70        RemoveSinkStates]: Removed 70 edges and 40 locations by removing sink states
[2020-11-25 09:30:44,731 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:30:44,735 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:30:44,738 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:30:44,738 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:30:44,743 INFO  L313           BlockEncoder]: Encoded RCFG 2423 locations, 4116 edges
[2020-11-25 09:30:44,743 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:30:44 BasicIcfg
[2020-11-25 09:30:44,743 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:30:44,744 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:30:44,744 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:30:44,746 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:30:44,747 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,747 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:30:42" (1/6) ...
[2020-11-25 09:30:44,749 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@657f8d11 and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:30:44, skipping insertion in model container
[2020-11-25 09:30:44,749 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,749 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:30:42" (2/6) ...
[2020-11-25 09:30:44,749 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@657f8d11 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:30:44, skipping insertion in model container
[2020-11-25 09:30:44,749 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,749 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:30:43" (3/6) ...
[2020-11-25 09:30:44,750 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@657f8d11 and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:30:44, skipping insertion in model container
[2020-11-25 09:30:44,750 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,750 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:30:43" (4/6) ...
[2020-11-25 09:30:44,750 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@657f8d11 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:30:44, skipping insertion in model container
[2020-11-25 09:30:44,750 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,750 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:30:44" (5/6) ...
[2020-11-25 09:30:44,751 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@657f8d11 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:30:44, skipping insertion in model container
[2020-11-25 09:30:44,751 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:30:44,751 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:30:44" (6/6) ...
[2020-11-25 09:30:44,752 INFO  L404   chiAutomizerObserver]: Analyzing ICFG YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transferfrom-self-fail.bpl_BEv2
[2020-11-25 09:30:44,788 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:30:44,788 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:30:44,788 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:30:44,788 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:30:44,788 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:30:44,788 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:30:44,788 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:30:44,788 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:30:44,788 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:30:44,814 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2423 states.
[2020-11-25 09:30:44,857 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:44,857 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:44,857 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:44,866 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:44,866 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:44,866 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:30:44,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2423 states.
[2020-11-25 09:30:44,904 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:44,905 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:44,905 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:44,908 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:44,908 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == YearnFinanceBitToken;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND TRUE   revert
[L421]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;

Loop:
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND TRUE   choice == 14
[L2751]              gas := gas - 21000;
[L2752]  COND FALSE  !(gas >= 0)
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:30:44,926 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:30:44,927 INFO  L82        PathProgramCache]: Analyzing trace with hash -1228581274, now seen corresponding path program 1 times
[2020-11-25 09:30:44,930 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:30:44,944 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:30:44,980 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:30:44,982 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:30:44,983 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:30:44,987 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:30:45,134 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:30:45,134 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:30:45,137 INFO  L87              Difference]: Start difference. First operand 2423 states. Second operand 4 states.
[2020-11-25 09:30:45,359 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:30:45,360 INFO  L93              Difference]: Finished difference Result 1669 states and 1818 transitions.
[2020-11-25 09:30:45,360 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:30:45,361 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1669 states and 1818 transitions.
[2020-11-25 09:30:45,368 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:45,379 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1669 states to 1669 states and 1818 transitions.
[2020-11-25 09:30:45,380 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 09:30:45,381 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 627
[2020-11-25 09:30:45,381 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1669 states and 1818 transitions.
[2020-11-25 09:30:45,386 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:30:45,386 INFO  L728         BuchiCegarLoop]: Abstraction has 1669 states and 1818 transitions.
[2020-11-25 09:30:45,405 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1669 states and 1818 transitions.
[2020-11-25 09:30:45,442 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1669 to 1669.
[2020-11-25 09:30:45,443 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1669 states.
[2020-11-25 09:30:45,447 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1669 states to 1669 states and 1818 transitions.
[2020-11-25 09:30:45,448 INFO  L751         BuchiCegarLoop]: Abstraction has 1669 states and 1818 transitions.
[2020-11-25 09:30:45,448 INFO  L631         BuchiCegarLoop]: Abstraction has 1669 states and 1818 transitions.
[2020-11-25 09:30:45,448 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:30:45,448 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1669 states and 1818 transitions.
[2020-11-25 09:30:45,454 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:45,454 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:45,455 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:45,457 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:45,457 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == YearnFinanceBitToken;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND TRUE   revert
[L421]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND TRUE   !(b_s112 <= a_s112)
[L1349]              revert := true;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND TRUE   revert
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND TRUE   !(b_s112 <= a_s112)
[L1349]              revert := true;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND TRUE   revert
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:30:45,462 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:30:45,462 INFO  L82        PathProgramCache]: Analyzing trace with hash 2008409279, now seen corresponding path program 1 times
[2020-11-25 09:30:45,463 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:30:45,473 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:30:45,496 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:30:45,496 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:30:45,496 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:30:45,498 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:30:45,498 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:30:45,498 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:30:45,498 INFO  L87              Difference]: Start difference. First operand 1669 states and 1818 transitions. cyclomatic complexity: 151 Second operand 4 states.
[2020-11-25 09:30:45,787 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:30:45,788 INFO  L93              Difference]: Finished difference Result 2181 states and 2410 transitions.
[2020-11-25 09:30:45,788 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:30:45,788 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2181 states and 2410 transitions.
[2020-11-25 09:30:45,797 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:30:45,814 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2181 states to 2105 states and 2328 transitions.
[2020-11-25 09:30:45,815 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 765
[2020-11-25 09:30:45,816 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 765
[2020-11-25 09:30:45,816 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2105 states and 2328 transitions.
[2020-11-25 09:30:45,820 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:30:45,820 INFO  L728         BuchiCegarLoop]: Abstraction has 2105 states and 2328 transitions.
[2020-11-25 09:30:45,823 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2105 states and 2328 transitions.
[2020-11-25 09:30:45,846 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2105 to 1811.
[2020-11-25 09:30:45,847 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1811 states.
[2020-11-25 09:30:45,850 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1811 states to 1811 states and 1963 transitions.
[2020-11-25 09:30:45,850 INFO  L751         BuchiCegarLoop]: Abstraction has 1811 states and 1963 transitions.
[2020-11-25 09:30:45,850 INFO  L631         BuchiCegarLoop]: Abstraction has 1811 states and 1963 transitions.
[2020-11-25 09:30:45,850 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:30:45,851 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1811 states and 1963 transitions.
[2020-11-25 09:30:45,856 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:30:45,857 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:45,857 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:45,859 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:45,860 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == YearnFinanceBitToken;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND FALSE  !(revert)
[L1460]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1313]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]              assume msgsender_MSG != null;
[L1299]              Balance[this] := 0;
[L1313]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  COND FALSE  !(revert)
[L1460]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1461]  COND FALSE  !(revert)
[L1464]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1417]              assume msgsender_MSG != null;
[L1418]              Balance[this] := 0;
[L1419]              name_YearnFinanceBitToken[this] := 627147201;
[L1420]              symbol_YearnFinanceBitToken[this] := 627147201;
[L1421]              decimals_YearnFinanceBitToken[this] := 0;
[L1422]              _totalSupply_YearnFinanceBitToken[this] := 0;
[L1423]              balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1424]              sum_balances0[this] := 0;
[L1425]              allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1426]              sum_allowed1[this] := 0;
[L1428]              name_YearnFinanceBitToken[this] := 1658284292;
[L1429]              symbol_YearnFinanceBitToken[this] := -1175268548;
[L1430]              decimals_YearnFinanceBitToken[this] := 18;
[L1431]              _totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1432]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1433]              balances_YearnFinanceBitToken[this][msgsender_MSG] := _totalSupply_YearnFinanceBitToken[this];
[L1434]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1435]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1464]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1465]  COND FALSE  !(revert)
[L421]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND FALSE  !(revert)
[L1645]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][from_s393];
[L1646]              balances_YearnFinanceBitToken[this][from_s393] := __var_4;
[L1647]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][from_s393];
[L1648]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1649]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1649]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1650]  COND FALSE  !(revert)
[L1656]              sum_allowed1[from_s393] := sum_allowed1[from_s393] - allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1657]              allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] := __var_5;
[L1658]              sum_allowed1[from_s393] := sum_allowed1[from_s393] + allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1659]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1660]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1330]              c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1331]  COND FALSE  !(!(c_s90 >= a_s90))
[L1660]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1661]  COND FALSE  !(revert)
[L1667]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s393];
[L1668]              balances_YearnFinanceBitToken[this][to_s393] := __var_6;
[L1669]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s393];
[L1670]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1671]              success_s393 := true;
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND FALSE  !(revert)
[L1645]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][from_s393];
[L1646]              balances_YearnFinanceBitToken[this][from_s393] := __var_4;
[L1647]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][from_s393];
[L1648]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1649]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1649]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1650]  COND FALSE  !(revert)
[L1656]              sum_allowed1[from_s393] := sum_allowed1[from_s393] - allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1657]              allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] := __var_5;
[L1658]              sum_allowed1[from_s393] := sum_allowed1[from_s393] + allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1659]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1660]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1330]              c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1331]  COND FALSE  !(!(c_s90 >= a_s90))
[L1660]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1661]  COND FALSE  !(revert)
[L1667]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s393];
[L1668]              balances_YearnFinanceBitToken[this][to_s393] := __var_6;
[L1669]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s393];
[L1670]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1671]              success_s393 := true;
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:30:45,865 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:30:45,865 INFO  L82        PathProgramCache]: Analyzing trace with hash -595141269, now seen corresponding path program 1 times
[2020-11-25 09:30:45,866 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:30:45,887 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:30:46,011 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 3 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 09:30:46,012 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:30:46,012 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 09:30:46,013 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:30:46,013 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 09:30:46,013 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 09:30:46,013 INFO  L87              Difference]: Start difference. First operand 1811 states and 1963 transitions. cyclomatic complexity: 154 Second operand 13 states.
[2020-11-25 09:30:47,142 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:30:47,143 INFO  L93              Difference]: Finished difference Result 1883 states and 2047 transitions.
[2020-11-25 09:30:47,144 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 09:30:47,144 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1883 states and 2047 transitions.
[2020-11-25 09:30:47,153 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:30:47,166 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1883 states to 1883 states and 2047 transitions.
[2020-11-25 09:30:47,166 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 710
[2020-11-25 09:30:47,167 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 710
[2020-11-25 09:30:47,168 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1883 states and 2047 transitions.
[2020-11-25 09:30:47,172 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:30:47,172 INFO  L728         BuchiCegarLoop]: Abstraction has 1883 states and 2047 transitions.
[2020-11-25 09:30:47,175 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1883 states and 2047 transitions.
[2020-11-25 09:30:47,196 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1883 to 1725.
[2020-11-25 09:30:47,197 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1725 states.
[2020-11-25 09:30:47,200 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1725 states to 1725 states and 1852 transitions.
[2020-11-25 09:30:47,200 INFO  L751         BuchiCegarLoop]: Abstraction has 1725 states and 1852 transitions.
[2020-11-25 09:30:47,200 INFO  L631         BuchiCegarLoop]: Abstraction has 1725 states and 1852 transitions.
[2020-11-25 09:30:47,201 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:30:47,201 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1725 states and 1852 transitions.
[2020-11-25 09:30:47,205 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:47,206 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:47,206 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:47,208 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:47,208 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == YearnFinanceBitToken;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND TRUE   __exception
[L401]               __tmp__Balance := Balance;
[L402]               __tmp__DType := DType;
[L403]               __tmp__Alloc := Alloc;
[L404]               __tmp__balance_ADDR := balance_ADDR;
[L405]               __tmp__M_Ref_int := M_Ref_int;
[L406]               __tmp__sum_balances0 := sum_balances0;
[L407]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L408]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L409]               __tmp__sum_allowed1 := sum_allowed1;
[L410]               __tmp__Length := Length;
[L411]               __tmp__now := now;
[L412]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L413]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L414]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L415]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L416]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L417]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L418]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1440]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1273]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1258]              assume msgsender_MSG != null;
[L1259]              __tmp__Balance[this] := 0;
[L1273]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1274]  COND FALSE  !(revert)
[L1440]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1441]  COND FALSE  !(revert)
[L1444]  CALL        call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L1305]  CALL        call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1290]              assume msgsender_MSG != null;
[L1291]              __tmp__Balance[this] := 0;
[L1305]  RET         call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1306]  COND FALSE  !(revert)
[L1444]  RET         call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L1445]  COND FALSE  !(revert)
[L1448]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1394]              assume msgsender_MSG != null;
[L1395]              __tmp__Balance[this] := 0;
[L1396]              __tmp__name_YearnFinanceBitToken[this] := 627147201;
[L1397]              __tmp__symbol_YearnFinanceBitToken[this] := 627147201;
[L1398]              __tmp__decimals_YearnFinanceBitToken[this] := 0;
[L1399]              __tmp___totalSupply_YearnFinanceBitToken[this] := 0;
[L1400]              __tmp__balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1401]              __tmp__sum_balances0[this] := 0;
[L1402]              __tmp__allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1403]              __tmp__sum_allowed1[this] := 0;
[L1405]              __tmp__name_YearnFinanceBitToken[this] := 1658284292;
[L1406]              __tmp__symbol_YearnFinanceBitToken[this] := -1175268548;
[L1407]              __tmp__decimals_YearnFinanceBitToken[this] := 18;
[L1408]              __tmp___totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1409]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1410]              __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG] := __tmp___totalSupply_YearnFinanceBitToken[this];
[L1411]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1448]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1449]  COND FALSE  !(revert)
[L418]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L419]               assume revert || gas < 0;
[L2859]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND FALSE  !(revert)
[L1645]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][from_s393];
[L1646]              balances_YearnFinanceBitToken[this][from_s393] := __var_4;
[L1647]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][from_s393];
[L1648]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1649]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1649]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1650]  COND FALSE  !(revert)
[L1656]              sum_allowed1[from_s393] := sum_allowed1[from_s393] - allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1657]              allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] := __var_5;
[L1658]              sum_allowed1[from_s393] := sum_allowed1[from_s393] + allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1659]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1660]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1330]              c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1331]  COND FALSE  !(!(c_s90 >= a_s90))
[L1660]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1661]  COND FALSE  !(revert)
[L1667]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s393];
[L1668]              balances_YearnFinanceBitToken[this][to_s393] := __var_6;
[L1669]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s393];
[L1670]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1671]              success_s393 := true;
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND TRUE   choice == 14
[L2751]              gas := gas - 21000;
[L2752]  COND FALSE  !(gas >= 0)
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:30:47,212 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:30:47,212 INFO  L82        PathProgramCache]: Analyzing trace with hash 907037351, now seen corresponding path program 1 times
[2020-11-25 09:30:47,213 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:30:47,221 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:30:47,255 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 09:30:47,255 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:30:47,255 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:30:47,255 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:30:47,256 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:30:47,256 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:30:47,256 INFO  L87              Difference]: Start difference. First operand 1725 states and 1852 transitions. cyclomatic complexity: 130 Second operand 4 states.
[2020-11-25 09:30:47,436 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:30:47,436 INFO  L93              Difference]: Finished difference Result 2306 states and 2587 transitions.
[2020-11-25 09:30:47,436 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:30:47,436 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2306 states and 2587 transitions.
[2020-11-25 09:30:47,445 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:30:47,454 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2306 states to 2228 states and 2509 transitions.
[2020-11-25 09:30:47,454 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 816
[2020-11-25 09:30:47,455 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 816
[2020-11-25 09:30:47,455 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2228 states and 2509 transitions.
[2020-11-25 09:30:47,457 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:30:47,457 INFO  L728         BuchiCegarLoop]: Abstraction has 2228 states and 2509 transitions.
[2020-11-25 09:30:47,459 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2228 states and 2509 transitions.
[2020-11-25 09:30:47,476 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2228 to 1647.
[2020-11-25 09:30:47,476 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1647 states.
[2020-11-25 09:30:47,478 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1647 states to 1647 states and 1773 transitions.
[2020-11-25 09:30:47,478 INFO  L751         BuchiCegarLoop]: Abstraction has 1647 states and 1773 transitions.
[2020-11-25 09:30:47,478 INFO  L631         BuchiCegarLoop]: Abstraction has 1647 states and 1773 transitions.
[2020-11-25 09:30:47,478 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:30:47,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1647 states and 1773 transitions.
[2020-11-25 09:30:47,481 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:30:47,481 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:30:47,481 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:30:47,482 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:30:47,482 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == YearnFinanceBitToken;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND FALSE  !(revert)
[L1460]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1313]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]              assume msgsender_MSG != null;
[L1299]              Balance[this] := 0;
[L1313]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  COND FALSE  !(revert)
[L1460]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1461]  COND FALSE  !(revert)
[L1464]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1417]              assume msgsender_MSG != null;
[L1418]              Balance[this] := 0;
[L1419]              name_YearnFinanceBitToken[this] := 627147201;
[L1420]              symbol_YearnFinanceBitToken[this] := 627147201;
[L1421]              decimals_YearnFinanceBitToken[this] := 0;
[L1422]              _totalSupply_YearnFinanceBitToken[this] := 0;
[L1423]              balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1424]              sum_balances0[this] := 0;
[L1425]              allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1426]              sum_allowed1[this] := 0;
[L1428]              name_YearnFinanceBitToken[this] := 1658284292;
[L1429]              symbol_YearnFinanceBitToken[this] := -1175268548;
[L1430]              decimals_YearnFinanceBitToken[this] := 18;
[L1431]              _totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1432]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1433]              balances_YearnFinanceBitToken[this][msgsender_MSG] := _totalSupply_YearnFinanceBitToken[this];
[L1434]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1435]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1464]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1465]  COND FALSE  !(revert)
[L421]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND TRUE   choice == 10
[L2776]              gas := gas - 21000;
[L2777]  COND TRUE   gas >= 0
[L2778]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2779]              assume msgvalue_MSG == 0;
[L2780]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L600]               havoc __exception;
[L601]               revert := false;
[L602]   COND FALSE  !(__exception)
[L623]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1521]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1522]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1523]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1524]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1525]              success_s291 := true;
[L623]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L624]               assume !revert && gas >= 0;
[L2780]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND FALSE  !(revert)
[L1645]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][from_s393];
[L1646]              balances_YearnFinanceBitToken[this][from_s393] := __var_4;
[L1647]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][from_s393];
[L1648]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1649]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1649]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1650]  COND FALSE  !(revert)
[L1656]              sum_allowed1[from_s393] := sum_allowed1[from_s393] - allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1657]              allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] := __var_5;
[L1658]              sum_allowed1[from_s393] := sum_allowed1[from_s393] + allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1659]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1660]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1330]              c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1331]  COND FALSE  !(!(c_s90 >= a_s90))
[L1660]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1661]  COND FALSE  !(revert)
[L1667]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s393];
[L1668]              balances_YearnFinanceBitToken[this][to_s393] := __var_6;
[L1669]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s393];
[L1670]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1671]              success_s393 := true;
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2863]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND FALSE  !(choice == 12)
[L2768]  COND FALSE  !(choice == 11)
[L2775]  COND FALSE  !(choice == 10)
[L2782]  COND TRUE   choice == 9
[L2783]              gas := gas - 21000;
[L2784]  COND TRUE   gas >= 0
[L2785]              assume tokens_s393 >= 0 && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2786]              assume msgvalue_MSG == 0;
[L2787]  CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s393 == to_s393 && (tokens_s393 > balances_YearnFinanceBitToken[this][from_s393] || tokens_s393 > allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG])) && tokens_s393 >= 0) && tokens_s393 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s393] >= 0) && balances_YearnFinanceBitToken[this][to_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][from_s393] >= 0) && balances_YearnFinanceBitToken[this][from_s393] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] >= 0) && allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := true;
[L2]                 call_transferFrom_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L729]   CALL        call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L1637]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1638]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1638]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][from_s393], tokens_s393);
[L1639]  COND FALSE  !(revert)
[L1645]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][from_s393];
[L1646]              balances_YearnFinanceBitToken[this][from_s393] := __var_4;
[L1647]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][from_s393];
[L1648]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1649]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1348]  COND FALSE  !(!(b_s112 <= a_s112))
[L1352]              c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1649]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG], tokens_s393);
[L1650]  COND FALSE  !(revert)
[L1656]              sum_allowed1[from_s393] := sum_allowed1[from_s393] - allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1657]              allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG] := __var_5;
[L1658]              sum_allowed1[from_s393] := sum_allowed1[from_s393] + allowed_YearnFinanceBitToken[this][from_s393][msgsender_MSG];
[L1659]  COND TRUE   DType[this] == YearnFinanceBitToken
[L1660]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1330]              c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1331]  COND FALSE  !(!(c_s90 >= a_s90))
[L1660]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s393], tokens_s393);
[L1661]  COND FALSE  !(revert)
[L1667]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s393];
[L1668]              balances_YearnFinanceBitToken[this][to_s393] := __var_6;
[L1669]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s393];
[L1670]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1671]              success_s393 := true;
[L729]   RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L730]               assume !revert && gas >= 0;
[L2787]  RET         call success_s393 := transferFrom~address~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, from_s393, to_s393, tokens_s393);
[L2863]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:30:47,485 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:30:47,486 INFO  L82        PathProgramCache]: Analyzing trace with hash -1326395417, now seen corresponding path program 1 times
[2020-11-25 09:30:47,486 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:30:47,500 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:30:47,588 INFO  L134       CoverageAnalysis]: Checked inductivity of 57 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 57 trivial. 0 not checked.
[2020-11-25 09:30:47,588 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:30:47,588 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 09:30:47,588 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:30:47,589 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 09:30:47,589 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=53, Unknown=0, NotChecked=0, Total=72
[2020-11-25 09:30:47,589 INFO  L87              Difference]: Start difference. First operand 1647 states and 1773 transitions. cyclomatic complexity: 129 Second operand 9 states.
[2020-11-25 09:30:47,870 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:30:47,870 INFO  L93              Difference]: Finished difference Result 970 states and 1039 transitions.
[2020-11-25 09:30:47,870 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 09:30:47,870 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 970 states and 1039 transitions.
[2020-11-25 09:30:47,872 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:30:47,873 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 970 states to 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:30:47,873 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:30:47,873 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:30:47,873 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 09:30:47,873 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:30:47,873 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:30:47,873 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:30:47,876 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:30:47 BasicIcfg
[2020-11-25 09:30:47,876 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:30:47,876 INFO  L168              Benchmark]: Toolchain (without parser) took 5138.40 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 495.5 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -308.7 MB). Peak memory consumption was 186.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,877 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,877 INFO  L168              Benchmark]: Boogie Preprocessor took 78.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,877 INFO  L168              Benchmark]: UtopiaSpecLang took 53.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,878 INFO  L168              Benchmark]: Boogie Printer took 11.67 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,878 INFO  L168              Benchmark]: RCFGBuilder took 625.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.2 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,878 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.44 ms. Allocated memory is still 1.0 GB. Free memory was 849.2 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,879 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1091.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 845.7 MB in the beginning and 766.7 MB in the end (delta: 78.9 MB). Peak memory consumption was 140.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,879 INFO  L168              Benchmark]: BlockEncodingV2 took 102.68 ms. Allocated memory is still 1.1 GB. Free memory was 766.7 MB in the beginning and 719.9 MB in the end (delta: 46.8 MB). Peak memory consumption was 46.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,879 INFO  L168              Benchmark]: BuchiAutomizer took 3132.08 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 433.6 MB). Free memory was 719.9 MB in the beginning and 1.2 GB in the end (delta: -529.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:30:47,881 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2486 locations, 4272 edges
  - StatisticsResult: Encoded RCFG
    2423 locations, 4116 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 78.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.67 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 625.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.2 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.44 ms. Allocated memory is still 1.0 GB. Free memory was 849.2 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1091.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 845.7 MB in the beginning and 766.7 MB in the end (delta: 78.9 MB). Peak memory consumption was 140.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 102.68 ms. Allocated memory is still 1.1 GB. Free memory was 766.7 MB in the beginning and 719.9 MB in the end (delta: 46.8 MB). Peak memory consumption was 46.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3132.08 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 433.6 MB). Free memory was 719.9 MB in the beginning and 1.2 GB in the end (delta: -529.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1048 locations, 1320 edges
  - StatisticsResult: BuchiProgram size
    2486 locations, 4272 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.0s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1033 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1811 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8600 SDtfs, 8323 SDslu, 12176 SDs, 0 SdLazy, 17300 SolverSat, 1268 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_YearnFinance(fail_transferFrom_YearnFinanceBitToken0)itToken0) ==> ( <>(fail_transferFrom_YearnFinanceBitToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
