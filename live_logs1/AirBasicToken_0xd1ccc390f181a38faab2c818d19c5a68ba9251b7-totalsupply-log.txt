This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:40:12,220 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:40:12,221 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:40:12,232 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:40:12,232 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:40:12,233 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:40:12,234 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:40:12,235 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:40:12,237 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:40:12,237 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:40:12,238 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:40:12,238 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:40:12,239 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:40:12,240 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:40:12,241 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:40:12,241 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:40:12,242 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:40:12,243 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:40:12,244 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:40:12,246 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:40:12,246 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:40:12,247 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:40:12,249 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:40:12,249 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:40:12,249 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:40:12,250 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:40:12,250 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:40:12,251 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:40:12,251 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:40:12,251 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:40:12,252 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:40:12,252 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:40:12,253 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:40:12,253 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:40:12,254 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:40:12,254 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:40:12,255 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:40:12,255 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:40:12,255 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:40:12,256 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:40:12,256 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:40:12,256 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:40:12,264 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:40:12,265 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:40:12,265 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:40:12,266 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:40:12,266 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:40:12,266 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:40:12,267 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:40:12,267 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:40:12,268 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:40:12,268 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:40:12,268 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:40:12,268 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:40:12,296 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:40:12,308 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:40:12,311 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:40:12,312 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:40:12,313 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:40:12,313 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl
[2020-11-24 23:40:12,313 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl'
[2020-11-24 23:40:12,421 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:40:12,422 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:40:12,422 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:40:12,422 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:40:12,423 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:40:12,439 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,441 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,485 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,486 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,519 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,532 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,543 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,558 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:40:12,559 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:40:12,559 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:40:12,561 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:40:12,566 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/1) ...
[2020-11-24 23:40:12,585 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:12,591 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:12,598 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:12,604 INFO  L636   opiaSpecLangObserver]: Parsed ( totalSupply__BasicToken[this]>=0 && totalSupply__BasicToken[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:40:12,607 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==totalSupply__BasicToken[this] && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && balanceLocked_AirBasicToken[this]==( old(balanceLocked_AirBasicToken[this]) ) ) && amountRaised_AirBasicToken[this]==( old(amountRaised_AirBasicToken[this]) ) ) && buyPrice_AirBasicToken[this]==( old(buyPrice_AirBasicToken[this]) ) ) && crowdsaleClosed_AirBasicToken[this]==( old(crowdsaleClosed_AirBasicToken[this]) ) ) && transferEnabled_AirBasicToken[this]==( old(transferEnabled_AirBasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_BasicToken>],ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]]
[2020-11-24 23:40:12,616 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:12,616 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_BasicToken0) ==> ( <>AP(success_totalSupply_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:40:12,631 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:12 PropertyContainer
[2020-11-24 23:40:12,631 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:40:12,631 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:40:12,631 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:40:12,632 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:40:12,633 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/2) ...
[2020-11-24 23:40:12,634 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:40:12,634 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:40:12,657 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:12" (2/2) ...
[2020-11-24 23:40:12,657 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:40:12,658 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:40:12,658 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:40:12,658 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:40:12,659 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/2) ...
[2020-11-24 23:40:12,714 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:40:12,714 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:40:12,714 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:40:12,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:40:12,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:40:12,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,715 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,716 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:40:12,716 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:40:12,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:40:12,716 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:40:12,716 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:40:12,716 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:40:12,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:40:12,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:40:12,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:40:12,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:40:12,717 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 23:40:12,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 23:40:12,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:40:12,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:40:12,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:40:12,718 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:40:12,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:40:12,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:40:12,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,719 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:40:12,720 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken
[2020-11-24 23:40:12,721 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:40:12,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken
[2020-11-24 23:40:12,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:40:12,723 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:40:12,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AirBasicToken
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:40:12,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:40:12,726 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:40:12,727 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:40:12,728 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:40:12,729 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,730 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:40:12,731 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:40:12,732 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:40:12,733 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:40:12,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:40:12,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:40:12,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:40:12,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:40:12,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:12,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:40:12,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:40:12,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__fail
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__fail
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__fail
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:40:12,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:40:12,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:40:12,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AirBasicToken
[2020-11-24 23:40:12,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:40:12,744 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:40:12,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:40:13,260 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:13,260 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:13,260 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:13,629 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:40:13,629 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 23:40:13,631 INFO  L202        PluginConnector]: Adding new model AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:13 BoogieIcfgContainer
[2020-11-24 23:40:13,631 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:12" (2/2) ...
[2020-11-24 23:40:13,631 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:40:13,632 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@16d162e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:13, skipping insertion in model container
[2020-11-24 23:40:13,632 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:40:13,632 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:40:13,632 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:40:13,633 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:40:13,634 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/3) ...
[2020-11-24 23:40:13,634 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@708caf46 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:13, skipping insertion in model container
[2020-11-24 23:40:13,634 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:40:13,673 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:13 NWAContainer
[2020-11-24 23:40:13,673 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:40:13,673 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:40:13,673 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:40:13,674 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:40:13,674 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:13" (3/4) ...
[2020-11-24 23:40:13,675 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@11f5eaa4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:13, skipping insertion in model container
[2020-11-24 23:40:13,675 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:13" (4/4) ...
[2020-11-24 23:40:13,678 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:40:13,684 INFO  L110   BuchiProductObserver]: Initial RCFG 3209 locations, 4263 edges
[2020-11-24 23:40:13,684 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:40:13,697 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:40:15,469 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:40:15,478 INFO  L110   BuchiProductObserver]: BuchiProgram size 7632 locations, 13498 edges
[2020-11-24 23:40:15,478 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:15 BoogieIcfgContainer
[2020-11-24 23:40:15,478 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:40:15,479 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:40:15,479 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:40:15,480 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:40:15,481 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:15" (1/1) ...
[2020-11-24 23:40:15,592 INFO  L313           BlockEncoder]: Initial Icfg 7632 locations, 13498 edges
[2020-11-24 23:40:15,593 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:40:15,593 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:40:15,593 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:40:15,594 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:40:15,607 INFO  L70    emoveInfeasibleEdges]: Removed 99 edges and 19 locations because of local infeasibility
[2020-11-24 23:40:15,616 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-24 23:40:15,629 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:40:15,633 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:40:15,638 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:40:15,638 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:40:15,641 INFO  L313           BlockEncoder]: Encoded RCFG 7566 locations, 13329 edges
[2020-11-24 23:40:15,642 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:40:15 BasicIcfg
[2020-11-24 23:40:15,642 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:40:15,642 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:40:15,642 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:40:15,644 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:40:15,644 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,644 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:12" (1/6) ...
[2020-11-24 23:40:15,645 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16705a14 and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:15, skipping insertion in model container
[2020-11-24 23:40:15,645 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,645 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:12" (2/6) ...
[2020-11-24 23:40:15,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16705a14 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:15, skipping insertion in model container
[2020-11-24 23:40:15,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:13" (3/6) ...
[2020-11-24 23:40:15,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16705a14 and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:40:15, skipping insertion in model container
[2020-11-24 23:40:15,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:13" (4/6) ...
[2020-11-24 23:40:15,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16705a14 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:15, skipping insertion in model container
[2020-11-24 23:40:15,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:15" (5/6) ...
[2020-11-24 23:40:15,647 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16705a14 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:40:15, skipping insertion in model container
[2020-11-24 23:40:15,647 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:15,647 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:40:15" (6/6) ...
[2020-11-24 23:40:15,648 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_totalsupply.bpl_BEv2
[2020-11-24 23:40:15,672 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:40:15,673 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:40:15,673 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:40:15,673 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:40:15,673 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:40:15,673 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:40:15,673 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:40:15,673 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:40:15,673 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:40:15,717 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7566 states.
[2020-11-24 23:40:15,776 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:15,776 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:15,776 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:15,786 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:15,786 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:15,786 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:40:15,786 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7566 states.
[2020-11-24 23:40:15,814 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:15,814 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:15,814 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:15,816 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:15,816 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND TRUE   revert
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND TRUE   choice == 24
[L6903]              gas := gas - 21000;
[L6904]  COND FALSE  !(gas >= 0)
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:15,834 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:15,834 INFO  L82        PathProgramCache]: Analyzing trace with hash -452960302, now seen corresponding path program 1 times
[2020-11-24 23:40:15,839 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:15,871 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:15,915 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:40:15,917 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:15,917 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:40:16,243 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:16,256 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:40:16,257 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:40:16,258 INFO  L87              Difference]: Start difference. First operand 7566 states. Second operand 4 states.
[2020-11-24 23:40:16,807 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:16,807 INFO  L93              Difference]: Finished difference Result 3771 states and 4171 transitions.
[2020-11-24 23:40:16,807 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:40:16,808 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3771 states and 4171 transitions.
[2020-11-24 23:40:16,827 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:16,851 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3771 states to 3767 states and 4163 transitions.
[2020-11-24 23:40:16,851 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 23:40:16,854 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1010
[2020-11-24 23:40:16,854 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3767 states and 4163 transitions.
[2020-11-24 23:40:16,862 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:16,862 INFO  L728         BuchiCegarLoop]: Abstraction has 3767 states and 4163 transitions.
[2020-11-24 23:40:16,877 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3767 states and 4163 transitions.
[2020-11-24 23:40:16,936 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3767 to 3767.
[2020-11-24 23:40:16,936 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3767 states.
[2020-11-24 23:40:16,944 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3767 states to 3767 states and 4163 transitions.
[2020-11-24 23:40:16,945 INFO  L751         BuchiCegarLoop]: Abstraction has 3767 states and 4163 transitions.
[2020-11-24 23:40:16,945 INFO  L631         BuchiCegarLoop]: Abstraction has 3767 states and 4163 transitions.
[2020-11-24 23:40:16,945 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:40:16,945 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3767 states and 4163 transitions.
[2020-11-24 23:40:16,956 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:16,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:16,957 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:16,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:16,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND TRUE   revert
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND FALSE  !(__exception)
[L507]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]              __ret_0_ := totalSupply__BasicToken[this];
[L507]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L508]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND FALSE  !(__exception)
[L507]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]              __ret_0_ := totalSupply__BasicToken[this];
[L507]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L508]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:16,964 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:16,964 INFO  L82        PathProgramCache]: Analyzing trace with hash 1339382869, now seen corresponding path program 1 times
[2020-11-24 23:40:16,965 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:16,978 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:17,003 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:40:17,003 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:17,004 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:40:17,005 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:17,005 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:40:17,005 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:40:17,006 INFO  L87              Difference]: Start difference. First operand 3767 states and 4163 transitions. cyclomatic complexity: 406 Second operand 4 states.
[2020-11-24 23:40:17,724 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:17,724 INFO  L93              Difference]: Finished difference Result 5149 states and 5787 transitions.
[2020-11-24 23:40:17,725 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:40:17,725 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5149 states and 5787 transitions.
[2020-11-24 23:40:17,740 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:40:17,756 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5149 states to 5011 states and 5633 transitions.
[2020-11-24 23:40:17,756 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1285
[2020-11-24 23:40:17,757 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1292
[2020-11-24 23:40:17,757 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5011 states and 5633 transitions.
[2020-11-24 23:40:17,764 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:17,764 INFO  L728         BuchiCegarLoop]: Abstraction has 5011 states and 5633 transitions.
[2020-11-24 23:40:17,768 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5011 states and 5633 transitions.
[2020-11-24 23:40:17,805 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5011 to 4136.
[2020-11-24 23:40:17,805 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4136 states.
[2020-11-24 23:40:17,809 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4136 states to 4136 states and 4510 transitions.
[2020-11-24 23:40:17,809 INFO  L751         BuchiCegarLoop]: Abstraction has 4136 states and 4510 transitions.
[2020-11-24 23:40:17,809 INFO  L631         BuchiCegarLoop]: Abstraction has 4136 states and 4510 transitions.
[2020-11-24 23:40:17,809 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:40:17,809 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4136 states and 4510 transitions.
[2020-11-24 23:40:17,814 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:40:17,814 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:17,814 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:17,816 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:17,817 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4408]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4412]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4412]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4413]  COND FALSE  !(revert)
[L4416]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4109]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4109]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  COND FALSE  !(revert)
[L4113]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4113]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4114]  COND FALSE  !(revert)
[L4117]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4117]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4118]  COND FALSE  !(revert)
[L4121]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4080]              assume msgsender_MSG != null;
[L4081]              Balance[this] := 0;
[L4082]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4083]              sum_allowed1[this] := 0;
[L4121]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4122]  COND FALSE  !(revert)
[L4416]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4417]  COND FALSE  !(revert)
[L4420]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3933]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3933]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  COND FALSE  !(revert)
[L3937]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L3937]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L3941]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]              assume msgsender_MSG != null;
[L3911]              Balance[this] := 0;
[L3941]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3942]  COND FALSE  !(revert)
[L4420]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4421]  COND FALSE  !(revert)
[L4424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3619]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3602]              assume msgsender_MSG != null;
[L3603]              Balance[this] := 0;
[L3604]              owner_Ownable[this] := null;
[L3606]              owner_Ownable[this] := msgsender_MSG;
[L3619]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  COND FALSE  !(revert)
[L4424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4348]              assume msgsender_MSG != null;
[L4349]              Balance[this] := 0;
[L4350]              name_AirBasicToken[this] := 1433815699;
[L4351]              symbol_AirBasicToken[this] := -1312980976;
[L4352]              decimals_AirBasicToken[this] := 18;
[L4353]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4354]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4356]              amountRaised_AirBasicToken[this] := 0;
[L4357]              buyPrice_AirBasicToken[this] := 100000;
[L4358]              crowdsaleClosed_AirBasicToken[this] := true;
[L4359]              transferEnabled_AirBasicToken[this] := true;
[L4361]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4362]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4363]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4364]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4365]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4428]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND FALSE  !(__exception)
[L507]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]              __ret_0_ := totalSupply__BasicToken[this];
[L507]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L508]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND FALSE  !(__exception)
[L507]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]              __ret_0_ := totalSupply__BasicToken[this];
[L507]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L508]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:17,821 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:17,821 INFO  L82        PathProgramCache]: Analyzing trace with hash -124650494, now seen corresponding path program 1 times
[2020-11-24 23:40:17,822 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:17,836 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:17,934 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:40:17,934 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:17,934 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:40:17,935 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:17,935 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:40:17,935 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:40:17,935 INFO  L87              Difference]: Start difference. First operand 4136 states and 4510 transitions. cyclomatic complexity: 384 Second operand 4 states.
[2020-11-24 23:40:17,992 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:17,992 INFO  L93              Difference]: Finished difference Result 4135 states and 4507 transitions.
[2020-11-24 23:40:17,992 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:40:17,992 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4135 states and 4507 transitions.
[2020-11-24 23:40:18,001 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:40:18,011 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4135 states to 4125 states and 4497 transitions.
[2020-11-24 23:40:18,011 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1104
[2020-11-24 23:40:18,011 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1104
[2020-11-24 23:40:18,011 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4125 states and 4497 transitions.
[2020-11-24 23:40:18,014 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:18,014 INFO  L728         BuchiCegarLoop]: Abstraction has 4125 states and 4497 transitions.
[2020-11-24 23:40:18,018 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4125 states and 4497 transitions.
[2020-11-24 23:40:18,045 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4125 to 4125.
[2020-11-24 23:40:18,045 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4125 states.
[2020-11-24 23:40:18,049 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4125 states to 4125 states and 4497 transitions.
[2020-11-24 23:40:18,049 INFO  L751         BuchiCegarLoop]: Abstraction has 4125 states and 4497 transitions.
[2020-11-24 23:40:18,049 INFO  L631         BuchiCegarLoop]: Abstraction has 4125 states and 4497 transitions.
[2020-11-24 23:40:18,049 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:40:18,049 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4125 states and 4497 transitions.
[2020-11-24 23:40:18,054 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:40:18,054 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:18,054 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:18,056 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:18,056 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4408]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4412]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4412]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4413]  COND FALSE  !(revert)
[L4416]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4109]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4109]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  COND FALSE  !(revert)
[L4113]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4113]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4114]  COND FALSE  !(revert)
[L4117]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4117]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4118]  COND FALSE  !(revert)
[L4121]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4080]              assume msgsender_MSG != null;
[L4081]              Balance[this] := 0;
[L4082]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4083]              sum_allowed1[this] := 0;
[L4121]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4122]  COND FALSE  !(revert)
[L4416]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4417]  COND FALSE  !(revert)
[L4420]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3933]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3933]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  COND FALSE  !(revert)
[L3937]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L3937]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L3941]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]              assume msgsender_MSG != null;
[L3911]              Balance[this] := 0;
[L3941]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3942]  COND FALSE  !(revert)
[L4420]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4421]  COND FALSE  !(revert)
[L4424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3619]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3602]              assume msgsender_MSG != null;
[L3603]              Balance[this] := 0;
[L3604]              owner_Ownable[this] := null;
[L3606]              owner_Ownable[this] := msgsender_MSG;
[L3619]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  COND FALSE  !(revert)
[L4424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4348]              assume msgsender_MSG != null;
[L4349]              Balance[this] := 0;
[L4350]              name_AirBasicToken[this] := 1433815699;
[L4351]              symbol_AirBasicToken[this] := -1312980976;
[L4352]              decimals_AirBasicToken[this] := 18;
[L4353]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4354]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4356]              amountRaised_AirBasicToken[this] := 0;
[L4357]              buyPrice_AirBasicToken[this] := 100000;
[L4358]              crowdsaleClosed_AirBasicToken[this] := true;
[L4359]              transferEnabled_AirBasicToken[this] := true;
[L4361]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4362]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4363]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4364]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4365]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4428]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND TRUE   __exception
[L476]               __tmp__Balance := Balance;
[L477]               __tmp__DType := DType;
[L478]               __tmp__Alloc := Alloc;
[L479]               __tmp__balance_ADDR := balance_ADDR;
[L480]               __tmp__M_Ref_int := M_Ref_int;
[L481]               __tmp__sum_balances0 := sum_balances0;
[L482]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L483]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L484]               __tmp__sum_allowed1 := sum_allowed1;
[L485]               __tmp__M_Ref_bool := M_Ref_bool;
[L486]               __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L487]               __tmp__M_int_Ref := M_int_Ref;
[L488]               __tmp__sum := sum;
[L489]               __tmp__Length := Length;
[L490]               __tmp__now := now;
[L491]               __tmp__owner_Ownable := owner_Ownable;
[L492]               __tmp__balances_BasicToken := balances_BasicToken;
[L493]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L494]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L495]               __tmp__name_AirBasicToken := name_AirBasicToken;
[L496]               __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L497]               __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L498]               __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L499]               __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L500]               __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L501]               __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L502]               __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L503]               __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L504]   CALL        call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3812]              __ret_0_ := __tmp__totalSupply__BasicToken[this];
[L504]   RET         call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L505]               assume revert || gas < 0;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND TRUE   choice == 23
[L6909]              gas := gas - 21000;
[L6910]  COND TRUE   gas >= 0
[L6911]              assume msgvalue_MSG == 0;
[L6912]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L473]               havoc __exception;
[L474]               revert := false;
[L475]   COND TRUE   __exception
[L476]               __tmp__Balance := Balance;
[L477]               __tmp__DType := DType;
[L478]               __tmp__Alloc := Alloc;
[L479]               __tmp__balance_ADDR := balance_ADDR;
[L480]               __tmp__M_Ref_int := M_Ref_int;
[L481]               __tmp__sum_balances0 := sum_balances0;
[L482]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L483]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L484]               __tmp__sum_allowed1 := sum_allowed1;
[L485]               __tmp__M_Ref_bool := M_Ref_bool;
[L486]               __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L487]               __tmp__M_int_Ref := M_int_Ref;
[L488]               __tmp__sum := sum;
[L489]               __tmp__Length := Length;
[L490]               __tmp__now := now;
[L491]               __tmp__owner_Ownable := owner_Ownable;
[L492]               __tmp__balances_BasicToken := balances_BasicToken;
[L493]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L494]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L495]               __tmp__name_AirBasicToken := name_AirBasicToken;
[L496]               __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L497]               __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L498]               __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L499]               __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L500]               __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L501]               __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L502]               __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L503]               __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L504]   CALL        call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3812]              __ret_0_ := __tmp__totalSupply__BasicToken[this];
[L504]   RET         call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L505]               assume revert || gas < 0;
[L6912]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:18,060 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:18,061 INFO  L82        PathProgramCache]: Analyzing trace with hash -1489083810, now seen corresponding path program 1 times
[2020-11-24 23:40:18,061 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:18,074 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:18,134 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:40:18,134 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:18,134 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 23:40:18,134 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:18,135 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 23:40:18,135 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 23:40:18,135 INFO  L87              Difference]: Start difference. First operand 4125 states and 4497 transitions. cyclomatic complexity: 382 Second operand 5 states.
[2020-11-24 23:40:18,337 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:18,337 INFO  L93              Difference]: Finished difference Result 2743 states and 3003 transitions.
[2020-11-24 23:40:18,337 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:40:18,338 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2743 states and 3003 transitions.
[2020-11-24 23:40:18,343 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:40:18,343 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2743 states to 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 23:40:18,343 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 23:40:18,343 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:18,343 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:40:18,343 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 23:40:18,343 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:40:18,343 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 23:40:18,347 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:40:18 BasicIcfg
[2020-11-24 23:40:18,347 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:40:18,347 INFO  L168              Benchmark]: Toolchain (without parser) took 5925.79 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 556.8 MB). Free memory was 929.8 MB in the beginning and 930.0 MB in the end (delta: -195.6 kB). Peak memory consumption was 556.6 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,348 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,348 INFO  L168              Benchmark]: Boogie Preprocessor took 136.24 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,349 INFO  L168              Benchmark]: UtopiaSpecLang took 72.04 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,349 INFO  L168              Benchmark]: Boogie Printer took 26.31 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,349 INFO  L168              Benchmark]: RCFGBuilder took 973.95 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 75.0 MB). Free memory was 903.0 MB in the beginning and 1.0 GB in the end (delta: -101.1 MB). Peak memory consumption was 190.6 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,350 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.78 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 996.9 MB in the end (delta: 7.2 MB). Peak memory consumption was 7.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,350 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1805.64 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.4 MB). Free memory was 996.9 MB in the beginning and 957.1 MB in the end (delta: 39.8 MB). Peak memory consumption was 520.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,350 INFO  L168              Benchmark]: BlockEncodingV2 took 163.12 ms. Allocated memory is still 1.3 GB. Free memory was 957.1 MB in the beginning and 863.7 MB in the end (delta: 93.4 MB). Peak memory consumption was 93.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,351 INFO  L168              Benchmark]: BuchiAutomizer took 2704.50 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 332.4 MB). Free memory was 863.7 MB in the beginning and 930.0 MB in the end (delta: -66.3 MB). Peak memory consumption was 266.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:18,355 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7632 locations, 13498 edges
  - StatisticsResult: Encoded RCFG
    7566 locations, 13329 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 136.24 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 72.04 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 26.31 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 973.95 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 75.0 MB). Free memory was 903.0 MB in the beginning and 1.0 GB in the end (delta: -101.1 MB). Peak memory consumption was 190.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.78 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 996.9 MB in the end (delta: 7.2 MB). Peak memory consumption was 7.2 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1805.64 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.4 MB). Free memory was 996.9 MB in the beginning and 957.1 MB in the end (delta: 39.8 MB). Peak memory consumption was 520.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 163.12 ms. Allocated memory is still 1.3 GB. Free memory was 957.1 MB in the beginning and 863.7 MB in the end (delta: 93.4 MB). Peak memory consumption was 93.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2704.50 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 332.4 MB). Free memory was 863.7 MB in the beginning and 930.0 MB in the end (delta: -66.3 MB). Peak memory consumption was 266.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3209 locations, 4263 edges
  - StatisticsResult: BuchiProgram size
    7632 locations, 13498 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.6s and 5 iterations.  TraceHistogramMax:8. Analysis of lassos took 0.6s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 875 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 4136 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15569 SDtfs, 12984 SDslu, 18959 SDs, 0 SdLazy, 2972 SolverSat, 2780 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_(success_totalSupply_BasicToken0)asicToken0) ==> ( <>(success_totalSupply_BasicToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
