This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:36:42,918 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:36:42,919 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:36:42,929 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:36:42,930 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:36:42,930 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:36:42,931 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:36:42,933 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:36:42,934 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:36:42,935 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:36:42,935 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:36:42,935 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:36:42,936 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:36:42,937 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:36:42,937 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:36:42,938 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:36:42,939 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:36:42,940 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:36:42,941 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:36:42,942 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:36:42,943 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:36:42,944 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:36:42,945 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:36:42,945 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:36:42,946 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:36:42,946 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:36:42,946 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:36:42,947 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:36:42,947 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:36:42,947 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:36:42,948 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:36:42,948 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:36:42,949 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:36:42,949 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:36:42,950 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:36:42,950 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:36:42,950 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:36:42,951 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:36:42,951 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:36:42,951 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:36:42,952 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:36:42,952 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:36:42,959 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:36:42,959 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:36:42,960 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:36:42,960 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:36:42,960 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:36:42,960 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:36:42,961 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:36:42,961 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:36:42,961 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:36:42,962 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:36:42,962 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:36:42,984 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:36:42,996 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:36:42,999 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:36:43,000 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:36:43,000 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:36:43,000 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl
[2020-11-25 06:36:43,001 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl'
[2020-11-25 06:36:43,086 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:36:43,087 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:36:43,087 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:36:43,087 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:36:43,087 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:36:43,103 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,105 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,133 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,134 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,152 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,161 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,167 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,176 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:36:43,177 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:36:43,177 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:36:43,178 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:36:43,182 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/1) ...
[2020-11-25 06:36:43,202 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TrifoliumCoin.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:36:43,207 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TrifoliumCoin.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:36:43,215 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TrifoliumCoin.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:36:43,223 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s458 || p2!=msg.sender ) && from_s458==to_s458 ) && tokens_s458<=balances_TrifoliumCoin[this][from_s458] ) && tokens_s458<=allowed_TrifoliumCoin[this][from_s458][msg.sender] ) && tokens_s458>=0 ) && tokens_s458<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][to_s458]>=0 ) && balances_TrifoliumCoin[this][to_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][from_s458]>=0 ) && balances_TrifoliumCoin[this][from_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_TrifoliumCoin[this][from_s458][msg.sender]>=0 ) && allowed_TrifoliumCoin[this][from_s458][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:36:43,226 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s458==true && allowed_TrifoliumCoin[this][from_s458][msg.sender]==( ( old(allowed_TrifoliumCoin[this][from_s458][msg.sender]) ) - tokens_s458 ) ) && _totalSupply_TrifoliumCoin[this]==( old(_totalSupply_TrifoliumCoin[this]) ) ) && balances_TrifoliumCoin[this]==( old(balances_TrifoliumCoin[this]) ) ) && allowed_TrifoliumCoin[this][p1][p2]==( old(allowed_TrifoliumCoin[this][p1][p2]) ) ) && symbol_TrifoliumCoin[this]==( old(symbol_TrifoliumCoin[this]) ) ) && name_TrifoliumCoin[this]==( old(name_TrifoliumCoin[this]) ) ) && decimals_TrifoliumCoin[this]==( old(decimals_TrifoliumCoin[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s458,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TrifoliumCoin>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TrifoliumCoin>]]]]]]
[2020-11-25 06:36:43,231 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TrifoliumCoin.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TrifoliumCoin[this][from] && value <= allowed_TrifoliumCoin[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][from] >= 0 &&  balances_TrifoliumCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TrifoliumCoin[this][from][msg.sender] >= 0 && allowed_TrifoliumCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transferFrom(from, to, value), return == true && allowed_TrifoliumCoin[this][from][msg.sender] == old(allowed_TrifoliumCoin[this][from][msg.sender]) - value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:36:43,231 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TrifoliumCoin0) ==> ( <>AP(success_transferFrom_TrifoliumCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:36:43,239 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:36:43 PropertyContainer
[2020-11-25 06:36:43,239 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:36:43,240 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:36:43,240 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:36:43,240 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:36:43,241 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/2) ...
[2020-11-25 06:36:43,241 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:36:43,241 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:36:43,255 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:36:43" (2/2) ...
[2020-11-25 06:36:43,255 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:36:43,255 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:36:43,256 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:36:43,256 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:36:43,256 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/2) ...
[2020-11-25 06:36:43,306 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:36:43,306 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:36:43,306 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:36:43,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:36:43,306 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:36:43,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:36:43,306 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:36:43,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 06:36:43,307 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:36:43,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:36:43,308 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 06:36:43,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 06:36:43,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 06:36:43,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 06:36:43,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 06:36:43,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:36:43,309 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin
[2020-11-25 06:36:43,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin
[2020-11-25 06:36:43,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:36:43,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:36:43,312 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:36:43,313 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 06:36:43,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:36:43,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__success
[2020-11-25 06:36:43,318 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:36:43,319 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 06:36:43,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:36:43,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 06:36:43,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:36:43,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:36:43,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 06:36:43,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 06:36:43,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:36:43,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:36:43,327 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:36:43,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:36:43,617 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:36:43,617 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:36:43,617 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:36:43,698 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:36:43,969 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:36:43,969 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 06:36:43,971 INFO  L202        PluginConnector]: Adding new model TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:36:43 BoogieIcfgContainer
[2020-11-25 06:36:43,971 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:36:43" (2/2) ...
[2020-11-25 06:36:43,971 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:36:43,972 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@51ad2165 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:36:43, skipping insertion in model container
[2020-11-25 06:36:43,972 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:36:43,972 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:36:43,972 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:36:43,973 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:36:43,974 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/3) ...
[2020-11-25 06:36:43,974 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@56fa4ff7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:36:43, skipping insertion in model container
[2020-11-25 06:36:43,974 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:36:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:36:44,014 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:36:44 NWAContainer
[2020-11-25 06:36:44,014 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:36:44,014 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:36:44,014 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:36:44,015 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:36:44,016 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:36:43" (3/4) ...
[2020-11-25 06:36:44,017 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@15951110 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:36:44, skipping insertion in model container
[2020-11-25 06:36:44,017 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:36:44" (4/4) ...
[2020-11-25 06:36:44,020 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:36:44,024 INFO  L110   BuchiProductObserver]: Initial RCFG 1565 locations, 1977 edges
[2020-11-25 06:36:44,024 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:36:44,036 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:36:45,425 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:36:45,429 INFO  L110   BuchiProductObserver]: BuchiProgram size 3722 locations, 6405 edges
[2020-11-25 06:36:45,430 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:36:45 BoogieIcfgContainer
[2020-11-25 06:36:45,430 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:36:45,430 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:36:45,430 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:36:45,432 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:36:45,432 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:36:45" (1/1) ...
[2020-11-25 06:36:45,533 INFO  L313           BlockEncoder]: Initial Icfg 3722 locations, 6405 edges
[2020-11-25 06:36:45,533 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:36:45,533 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:36:45,534 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:36:45,534 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:36:45,547 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 06:36:45,557 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 06:36:45,568 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:36:45,573 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:36:45,576 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:36:45,577 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:36:45,583 INFO  L313           BlockEncoder]: Encoded RCFG 3662 locations, 6245 edges
[2020-11-25 06:36:45,583 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:36:45 BasicIcfg
[2020-11-25 06:36:45,583 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:36:45,583 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:36:45,584 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:36:45,586 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:36:45,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,587 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:36:43" (1/6) ...
[2020-11-25 06:36:45,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@c4c181d and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:36:45, skipping insertion in model container
[2020-11-25 06:36:45,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:36:43" (2/6) ...
[2020-11-25 06:36:45,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@c4c181d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:36:45, skipping insertion in model container
[2020-11-25 06:36:45,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:36:43" (3/6) ...
[2020-11-25 06:36:45,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@c4c181d and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:36:45, skipping insertion in model container
[2020-11-25 06:36:45,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:36:44" (4/6) ...
[2020-11-25 06:36:45,590 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@c4c181d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:36:45, skipping insertion in model container
[2020-11-25 06:36:45,590 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,590 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:36:45" (5/6) ...
[2020-11-25 06:36:45,590 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@c4c181d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:36:45, skipping insertion in model container
[2020-11-25 06:36:45,590 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:36:45,590 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:36:45" (6/6) ...
[2020-11-25 06:36:45,591 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transferfrom-self.bpl_BEv2
[2020-11-25 06:36:45,630 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:36:45,630 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:36:45,630 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:36:45,630 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:36:45,630 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:36:45,631 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:36:45,631 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:36:45,631 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:36:45,631 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:36:45,666 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 06:36:45,720 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:36:45,720 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:36:45,720 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:36:45,730 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:45,730 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:45,730 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:36:45,730 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 06:36:45,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:36:45,754 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:36:45,754 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:36:45,756 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:45,756 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:36:45,774 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:36:45,774 INFO  L82        PathProgramCache]: Analyzing trace with hash -1544977251, now seen corresponding path program 1 times
[2020-11-25 06:36:45,779 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:36:45,806 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:36:45,845 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:36:45,847 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:36:45,847 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:36:45,851 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:36:46,052 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:36:46,053 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:36:46,054 INFO  L87              Difference]: Start difference. First operand 3662 states. Second operand 4 states.
[2020-11-25 06:36:46,947 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:36:46,947 INFO  L93              Difference]: Finished difference Result 3928 states and 6336 transitions.
[2020-11-25 06:36:46,948 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:36:46,949 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3928 states and 6336 transitions.
[2020-11-25 06:36:46,976 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 06:36:47,007 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3928 states to 3808 states and 6161 transitions.
[2020-11-25 06:36:47,008 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 06:36:47,012 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1382
[2020-11-25 06:36:47,013 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3808 states and 6161 transitions.
[2020-11-25 06:36:47,026 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:36:47,027 INFO  L728         BuchiCegarLoop]: Abstraction has 3808 states and 6161 transitions.
[2020-11-25 06:36:47,041 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3808 states and 6161 transitions.
[2020-11-25 06:36:47,091 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3808 to 2744.
[2020-11-25 06:36:47,092 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2744 states.
[2020-11-25 06:36:47,097 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2744 states to 2744 states and 4190 transitions.
[2020-11-25 06:36:47,098 INFO  L751         BuchiCegarLoop]: Abstraction has 2744 states and 4190 transitions.
[2020-11-25 06:36:47,098 INFO  L631         BuchiCegarLoop]: Abstraction has 2744 states and 4190 transitions.
[2020-11-25 06:36:47,098 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:36:47,098 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2744 states and 4190 transitions.
[2020-11-25 06:36:47,105 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:36:47,105 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:36:47,105 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:36:47,106 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:47,106 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:36:47,109 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:36:47,110 INFO  L82        PathProgramCache]: Analyzing trace with hash 959897896, now seen corresponding path program 1 times
[2020-11-25 06:36:47,111 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:36:47,116 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:36:47,136 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:36:47,136 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:36:47,137 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:36:47,138 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:36:47,138 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:36:47,138 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:36:47,138 INFO  L87              Difference]: Start difference. First operand 2744 states and 4190 transitions. cyclomatic complexity: 1448 Second operand 4 states.
[2020-11-25 06:36:47,582 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:36:47,582 INFO  L93              Difference]: Finished difference Result 2552 states and 2737 transitions.
[2020-11-25 06:36:47,583 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:36:47,583 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2552 states and 2737 transitions.
[2020-11-25 06:36:47,591 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:36:47,599 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2552 states to 2552 states and 2737 transitions.
[2020-11-25 06:36:47,600 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 880
[2020-11-25 06:36:47,600 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 880
[2020-11-25 06:36:47,600 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2552 states and 2737 transitions.
[2020-11-25 06:36:47,603 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:36:47,603 INFO  L728         BuchiCegarLoop]: Abstraction has 2552 states and 2737 transitions.
[2020-11-25 06:36:47,606 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2552 states and 2737 transitions.
[2020-11-25 06:36:47,625 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2552 to 2552.
[2020-11-25 06:36:47,625 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2552 states.
[2020-11-25 06:36:47,628 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2552 states to 2552 states and 2737 transitions.
[2020-11-25 06:36:47,628 INFO  L751         BuchiCegarLoop]: Abstraction has 2552 states and 2737 transitions.
[2020-11-25 06:36:47,628 INFO  L631         BuchiCegarLoop]: Abstraction has 2552 states and 2737 transitions.
[2020-11-25 06:36:47,628 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:36:47,628 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2552 states and 2737 transitions.
[2020-11-25 06:36:47,634 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:36:47,634 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:36:47,634 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:36:47,636 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:47,636 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:36:47,640 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:36:47,640 INFO  L82        PathProgramCache]: Analyzing trace with hash 2097489421, now seen corresponding path program 1 times
[2020-11-25 06:36:47,641 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:36:47,657 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:36:47,862 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:36:47,862 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:36:47,862 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 06:36:47,863 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:36:47,863 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 06:36:47,863 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 06:36:47,863 INFO  L87              Difference]: Start difference. First operand 2552 states and 2737 transitions. cyclomatic complexity: 187 Second operand 15 states.
[2020-11-25 06:36:49,570 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:36:49,570 INFO  L93              Difference]: Finished difference Result 2788 states and 3022 transitions.
[2020-11-25 06:36:49,570 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:36:49,570 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2788 states and 3022 transitions.
[2020-11-25 06:36:49,578 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:36:49,586 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2788 states to 2788 states and 3022 transitions.
[2020-11-25 06:36:49,586 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 971
[2020-11-25 06:36:49,586 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 971
[2020-11-25 06:36:49,586 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2788 states and 3022 transitions.
[2020-11-25 06:36:49,589 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:36:49,589 INFO  L728         BuchiCegarLoop]: Abstraction has 2788 states and 3022 transitions.
[2020-11-25 06:36:49,591 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2788 states and 3022 transitions.
[2020-11-25 06:36:49,611 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2788 to 2705.
[2020-11-25 06:36:49,611 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2705 states.
[2020-11-25 06:36:49,613 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2705 states to 2705 states and 2907 transitions.
[2020-11-25 06:36:49,613 INFO  L751         BuchiCegarLoop]: Abstraction has 2705 states and 2907 transitions.
[2020-11-25 06:36:49,613 INFO  L631         BuchiCegarLoop]: Abstraction has 2705 states and 2907 transitions.
[2020-11-25 06:36:49,614 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:36:49,614 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2705 states and 2907 transitions.
[2020-11-25 06:36:49,618 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:36:49,618 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:36:49,618 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:36:49,620 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:36:49,620 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:36:49,623 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:36:49,623 INFO  L82        PathProgramCache]: Analyzing trace with hash -2133530371, now seen corresponding path program 1 times
[2020-11-25 06:36:49,623 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:36:49,673 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:36:51,057 WARN  L188               SmtUtils]: Spent 174.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 114
[2020-11-25 06:36:51,542 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-25 06:36:51,542 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:36:51,543 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [29] total 29
[2020-11-25 06:36:51,543 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:36:51,543 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 30 interpolants.
[2020-11-25 06:36:51,543 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=71, Invalid=799, Unknown=0, NotChecked=0, Total=870
[2020-11-25 06:36:51,543 INFO  L87              Difference]: Start difference. First operand 2705 states and 2907 transitions. cyclomatic complexity: 206 Second operand 30 states.
[2020-11-25 06:36:59,094 WARN  L188               SmtUtils]: Spent 429.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 124
[2020-11-25 06:37:05,474 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:05,474 INFO  L93              Difference]: Finished difference Result 2773 states and 3018 transitions.
[2020-11-25 06:37:05,474 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 30 states. 
[2020-11-25 06:37:05,474 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2773 states and 3018 transitions.
[2020-11-25 06:37:05,480 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 06:37:05,486 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2773 states to 2773 states and 3018 transitions.
[2020-11-25 06:37:05,486 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 987
[2020-11-25 06:37:05,487 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 987
[2020-11-25 06:37:05,487 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2773 states and 3018 transitions.
[2020-11-25 06:37:05,489 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:05,490 INFO  L728         BuchiCegarLoop]: Abstraction has 2773 states and 3018 transitions.
[2020-11-25 06:37:05,492 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2773 states and 3018 transitions.
[2020-11-25 06:37:05,512 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2773 to 2756.
[2020-11-25 06:37:05,512 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2756 states.
[2020-11-25 06:37:05,515 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2756 states to 2756 states and 2973 transitions.
[2020-11-25 06:37:05,515 INFO  L751         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:05,515 INFO  L631         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:05,515 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:37:05,515 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states and 2973 transitions.
[2020-11-25 06:37:05,518 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:37:05,518 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:05,518 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:05,519 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:05,519 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:05,522 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:05,523 INFO  L82        PathProgramCache]: Analyzing trace with hash -918645840, now seen corresponding path program 1 times
[2020-11-25 06:37:05,523 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:05,530 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:05,589 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 06:37:05,589 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:37:05,590 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 06:37:05,590 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:05,590 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 06:37:05,590 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=156, Unknown=0, NotChecked=0, Total=182
[2020-11-25 06:37:05,590 INFO  L87              Difference]: Start difference. First operand 2756 states and 2973 transitions. cyclomatic complexity: 223 Second operand 14 states.
[2020-11-25 06:37:06,874 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:06,874 INFO  L93              Difference]: Finished difference Result 2840 states and 3111 transitions.
[2020-11-25 06:37:06,874 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:37:06,875 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2840 states and 3111 transitions.
[2020-11-25 06:37:06,880 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 06:37:06,886 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2840 states to 2840 states and 3111 transitions.
[2020-11-25 06:37:06,886 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 996
[2020-11-25 06:37:06,887 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 996
[2020-11-25 06:37:06,887 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2840 states and 3111 transitions.
[2020-11-25 06:37:06,889 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:06,889 INFO  L728         BuchiCegarLoop]: Abstraction has 2840 states and 3111 transitions.
[2020-11-25 06:37:06,891 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2840 states and 3111 transitions.
[2020-11-25 06:37:06,907 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2840 to 2756.
[2020-11-25 06:37:06,907 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2756 states.
[2020-11-25 06:37:06,909 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2756 states to 2756 states and 2973 transitions.
[2020-11-25 06:37:06,909 INFO  L751         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:06,909 INFO  L631         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:06,909 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 06:37:06,909 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states and 2973 transitions.
[2020-11-25 06:37:06,912 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:37:06,912 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:06,912 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:06,913 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:06,913 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:06,916 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:06,916 INFO  L82        PathProgramCache]: Analyzing trace with hash 500552225, now seen corresponding path program 1 times
[2020-11-25 06:37:06,916 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:06,925 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:06,998 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-25 06:37:06,998 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:06,998 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [16] total 16
[2020-11-25 06:37:06,998 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:06,999 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 06:37:06,999 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=240, Unknown=0, NotChecked=0, Total=272
[2020-11-25 06:37:06,999 INFO  L87              Difference]: Start difference. First operand 2756 states and 2973 transitions. cyclomatic complexity: 223 Second operand 17 states.
[2020-11-25 06:37:08,752 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:08,752 INFO  L93              Difference]: Finished difference Result 2791 states and 3031 transitions.
[2020-11-25 06:37:08,753 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 06:37:08,753 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2791 states and 3031 transitions.
[2020-11-25 06:37:08,757 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:37:08,763 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2791 states to 2791 states and 3031 transitions.
[2020-11-25 06:37:08,763 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 996
[2020-11-25 06:37:08,763 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 996
[2020-11-25 06:37:08,763 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2791 states and 3031 transitions.
[2020-11-25 06:37:08,765 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:08,765 INFO  L728         BuchiCegarLoop]: Abstraction has 2791 states and 3031 transitions.
[2020-11-25 06:37:08,767 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2791 states and 3031 transitions.
[2020-11-25 06:37:08,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2791 to 2756.
[2020-11-25 06:37:08,782 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2756 states.
[2020-11-25 06:37:08,784 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2756 states to 2756 states and 2973 transitions.
[2020-11-25 06:37:08,784 INFO  L751         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:08,784 INFO  L631         BuchiCegarLoop]: Abstraction has 2756 states and 2973 transitions.
[2020-11-25 06:37:08,785 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 06:37:08,785 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states and 2973 transitions.
[2020-11-25 06:37:08,787 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:37:08,787 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:08,788 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:08,789 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:08,789 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND FALSE  !(revert)
[L2437]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][to_s458];
[L2438]              __tmp__balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2439]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][to_s458];
[L2440]              success_s458 := true;
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND FALSE  !(revert)
[L2437]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][to_s458];
[L2438]              __tmp__balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2439]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][to_s458];
[L2440]              success_s458 := true;
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:08,792 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:08,792 INFO  L82        PathProgramCache]: Analyzing trace with hash 994768589, now seen corresponding path program 1 times
[2020-11-25 06:37:08,792 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:08,800 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:08,826 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 06:37:08,826 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:37:08,826 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 06:37:08,826 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:08,826 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 06:37:08,826 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 06:37:08,826 INFO  L87              Difference]: Start difference. First operand 2756 states and 2973 transitions. cyclomatic complexity: 223 Second operand 5 states.
[2020-11-25 06:37:09,078 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:09,078 INFO  L93              Difference]: Finished difference Result 3484 states and 3893 transitions.
[2020-11-25 06:37:09,078 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:37:09,078 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3484 states and 3893 transitions.
[2020-11-25 06:37:09,086 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 06:37:09,093 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3484 states to 2675 states and 3081 transitions.
[2020-11-25 06:37:09,093 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 750
[2020-11-25 06:37:09,094 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 750
[2020-11-25 06:37:09,094 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2675 states and 3081 transitions.
[2020-11-25 06:37:09,096 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:09,096 INFO  L728         BuchiCegarLoop]: Abstraction has 2675 states and 3081 transitions.
[2020-11-25 06:37:09,098 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2675 states and 3081 transitions.
[2020-11-25 06:37:09,114 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2675 to 1917.
[2020-11-25 06:37:09,115 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1917 states.
[2020-11-25 06:37:09,117 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1917 states to 1917 states and 2076 transitions.
[2020-11-25 06:37:09,117 INFO  L751         BuchiCegarLoop]: Abstraction has 1917 states and 2076 transitions.
[2020-11-25 06:37:09,117 INFO  L631         BuchiCegarLoop]: Abstraction has 1917 states and 2076 transitions.
[2020-11-25 06:37:09,117 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 06:37:09,117 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1917 states and 2076 transitions.
[2020-11-25 06:37:09,120 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:37:09,120 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:09,120 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:09,121 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:09,121 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:09,125 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:09,125 INFO  L82        PathProgramCache]: Analyzing trace with hash 151808745, now seen corresponding path program 1 times
[2020-11-25 06:37:09,126 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:09,134 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:09,173 INFO  L134       CoverageAnalysis]: Checked inductivity of 69 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 69 trivial. 0 not checked.
[2020-11-25 06:37:09,173 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:37:09,173 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:37:09,174 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:09,174 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:37:09,174 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:37:09,174 INFO  L87              Difference]: Start difference. First operand 1917 states and 2076 transitions. cyclomatic complexity: 163 Second operand 7 states.
[2020-11-25 06:37:09,528 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:09,529 INFO  L93              Difference]: Finished difference Result 1993 states and 2178 transitions.
[2020-11-25 06:37:09,529 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 06:37:09,529 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1993 states and 2178 transitions.
[2020-11-25 06:37:09,532 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:09,537 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1993 states to 1993 states and 2178 transitions.
[2020-11-25 06:37:09,537 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 613
[2020-11-25 06:37:09,537 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 613
[2020-11-25 06:37:09,537 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1993 states and 2178 transitions.
[2020-11-25 06:37:09,539 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:09,539 INFO  L728         BuchiCegarLoop]: Abstraction has 1993 states and 2178 transitions.
[2020-11-25 06:37:09,541 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1993 states and 2178 transitions.
[2020-11-25 06:37:09,550 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1993 to 1921.
[2020-11-25 06:37:09,550 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1921 states.
[2020-11-25 06:37:09,551 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1921 states to 1921 states and 2080 transitions.
[2020-11-25 06:37:09,551 INFO  L751         BuchiCegarLoop]: Abstraction has 1921 states and 2080 transitions.
[2020-11-25 06:37:09,551 INFO  L631         BuchiCegarLoop]: Abstraction has 1921 states and 2080 transitions.
[2020-11-25 06:37:09,552 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 06:37:09,552 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1921 states and 2080 transitions.
[2020-11-25 06:37:09,553 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:37:09,554 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:09,554 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:09,555 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:09,555 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:09,558 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:09,558 INFO  L82        PathProgramCache]: Analyzing trace with hash 1969519833, now seen corresponding path program 1 times
[2020-11-25 06:37:09,558 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:09,592 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:10,179 INFO  L134       CoverageAnalysis]: Checked inductivity of 73 backedges. 1 proven. 2 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 06:37:10,179 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:10,179 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [26] total 26
[2020-11-25 06:37:10,180 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:10,180 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 27 interpolants.
[2020-11-25 06:37:10,180 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=65, Invalid=637, Unknown=0, NotChecked=0, Total=702
[2020-11-25 06:37:10,180 INFO  L87              Difference]: Start difference. First operand 1921 states and 2080 transitions. cyclomatic complexity: 163 Second operand 27 states.
[2020-11-25 06:37:13,645 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:13,645 INFO  L93              Difference]: Finished difference Result 1948 states and 2119 transitions.
[2020-11-25 06:37:13,645 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 06:37:13,645 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1948 states and 2119 transitions.
[2020-11-25 06:37:13,648 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:13,652 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1948 states to 1948 states and 2119 transitions.
[2020-11-25 06:37:13,652 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 596
[2020-11-25 06:37:13,653 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 596
[2020-11-25 06:37:13,653 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1948 states and 2119 transitions.
[2020-11-25 06:37:13,655 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:13,655 INFO  L728         BuchiCegarLoop]: Abstraction has 1948 states and 2119 transitions.
[2020-11-25 06:37:13,656 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1948 states and 2119 transitions.
[2020-11-25 06:37:13,665 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1948 to 1943.
[2020-11-25 06:37:13,665 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1943 states.
[2020-11-25 06:37:13,666 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1943 states to 1943 states and 2113 transitions.
[2020-11-25 06:37:13,667 INFO  L751         BuchiCegarLoop]: Abstraction has 1943 states and 2113 transitions.
[2020-11-25 06:37:13,667 INFO  L631         BuchiCegarLoop]: Abstraction has 1943 states and 2113 transitions.
[2020-11-25 06:37:13,667 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-25 06:37:13,667 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1943 states and 2113 transitions.
[2020-11-25 06:37:13,668 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:13,668 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:13,669 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:13,669 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:13,669 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:13,673 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:13,673 INFO  L82        PathProgramCache]: Analyzing trace with hash 1226403468, now seen corresponding path program 1 times
[2020-11-25 06:37:13,674 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:13,682 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:13,732 INFO  L134       CoverageAnalysis]: Checked inductivity of 72 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 06:37:13,732 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:37:13,732 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:37:13,732 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:13,732 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:37:13,733 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:37:13,733 INFO  L87              Difference]: Start difference. First operand 1943 states and 2113 transitions. cyclomatic complexity: 176 Second operand 7 states.
[2020-11-25 06:37:14,038 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:14,039 INFO  L93              Difference]: Finished difference Result 2003 states and 2210 transitions.
[2020-11-25 06:37:14,039 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 06:37:14,039 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2003 states and 2210 transitions.
[2020-11-25 06:37:14,043 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:37:14,048 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2003 states to 2003 states and 2210 transitions.
[2020-11-25 06:37:14,048 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 621
[2020-11-25 06:37:14,048 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 621
[2020-11-25 06:37:14,048 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2003 states and 2210 transitions.
[2020-11-25 06:37:14,050 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:14,050 INFO  L728         BuchiCegarLoop]: Abstraction has 2003 states and 2210 transitions.
[2020-11-25 06:37:14,051 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2003 states and 2210 transitions.
[2020-11-25 06:37:14,061 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2003 to 1943.
[2020-11-25 06:37:14,061 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1943 states.
[2020-11-25 06:37:14,063 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1943 states to 1943 states and 2113 transitions.
[2020-11-25 06:37:14,063 INFO  L751         BuchiCegarLoop]: Abstraction has 1943 states and 2113 transitions.
[2020-11-25 06:37:14,063 INFO  L631         BuchiCegarLoop]: Abstraction has 1943 states and 2113 transitions.
[2020-11-25 06:37:14,063 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-25 06:37:14,063 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1943 states and 2113 transitions.
[2020-11-25 06:37:14,065 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:14,065 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:14,066 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:14,066 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:14,066 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND TRUE   __exception
[L1050]              __tmp__Balance := Balance;
[L1051]              __tmp__DType := DType;
[L1052]              __tmp__Alloc := Alloc;
[L1053]              __tmp__balance_ADDR := balance_ADDR;
[L1054]              __tmp__M_Ref_int := M_Ref_int;
[L1055]              __tmp__sum_balances0 := sum_balances0;
[L1056]              __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L1057]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1058]              __tmp__sum_allowed1 := sum_allowed1;
[L1059]              __tmp__Length := Length;
[L1060]              __tmp__now := now;
[L1061]              __tmp__owner_Owned := owner_Owned;
[L1062]              __tmp__newOwner_Owned := newOwner_Owned;
[L1063]              __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L1064]              __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L1065]              __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L1066]              __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L1067]              __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L1068]              __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L1069]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2407]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2408]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2408]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2409]  COND FALSE  !(revert)
[L2415]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][from_s458];
[L2416]              __tmp__balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2417]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][from_s458];
[L2418]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2419]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2419]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2420]  COND FALSE  !(revert)
[L2426]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] - __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2427]              __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2428]              __tmp__sum_allowed1[from_s458] := __tmp__sum_allowed1[from_s458] + __tmp__allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2429]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2430]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2430]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2431]  COND TRUE   revert
[L1069]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1070]              assume revert || gas < 0;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:14,069 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:14,069 INFO  L82        PathProgramCache]: Analyzing trace with hash -1467581243, now seen corresponding path program 1 times
[2020-11-25 06:37:14,070 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:14,081 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:14,157 INFO  L134       CoverageAnalysis]: Checked inductivity of 73 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 71 trivial. 0 not checked.
[2020-11-25 06:37:14,158 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:14,158 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [11] total 11
[2020-11-25 06:37:14,158 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:14,158 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 06:37:14,158 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=20, Invalid=90, Unknown=0, NotChecked=0, Total=110
[2020-11-25 06:37:14,158 INFO  L87              Difference]: Start difference. First operand 1943 states and 2113 transitions. cyclomatic complexity: 176 Second operand 11 states.
[2020-11-25 06:37:14,986 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:14,986 INFO  L93              Difference]: Finished difference Result 1999 states and 2193 transitions.
[2020-11-25 06:37:14,986 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-25 06:37:14,986 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1999 states and 2193 transitions.
[2020-11-25 06:37:14,989 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:14,993 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1999 states to 1959 states and 2151 transitions.
[2020-11-25 06:37:14,993 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 618
[2020-11-25 06:37:14,994 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 618
[2020-11-25 06:37:14,994 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1959 states and 2151 transitions.
[2020-11-25 06:37:14,995 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:14,995 INFO  L728         BuchiCegarLoop]: Abstraction has 1959 states and 2151 transitions.
[2020-11-25 06:37:14,996 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1959 states and 2151 transitions.
[2020-11-25 06:37:15,004 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1959 to 1859.
[2020-11-25 06:37:15,004 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1859 states.
[2020-11-25 06:37:15,005 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1859 states to 1859 states and 2006 transitions.
[2020-11-25 06:37:15,005 INFO  L751         BuchiCegarLoop]: Abstraction has 1859 states and 2006 transitions.
[2020-11-25 06:37:15,005 INFO  L631         BuchiCegarLoop]: Abstraction has 1859 states and 2006 transitions.
[2020-11-25 06:37:15,005 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-25 06:37:15,005 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1859 states and 2006 transitions.
[2020-11-25 06:37:15,007 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:37:15,007 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:15,007 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:15,008 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:15,008 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:15,011 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:15,011 INFO  L82        PathProgramCache]: Analyzing trace with hash -1145462365, now seen corresponding path program 1 times
[2020-11-25 06:37:15,012 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:15,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:15,358 INFO  L134       CoverageAnalysis]: Checked inductivity of 72 backedges. 68 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-25 06:37:15,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:15,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [25] total 25
[2020-11-25 06:37:15,359 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:15,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 26 interpolants.
[2020-11-25 06:37:15,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=61, Invalid=589, Unknown=0, NotChecked=0, Total=650
[2020-11-25 06:37:15,360 INFO  L87              Difference]: Start difference. First operand 1859 states and 2006 transitions. cyclomatic complexity: 150 Second operand 26 states.
[2020-11-25 06:37:18,174 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:18,174 INFO  L93              Difference]: Finished difference Result 1914 states and 2078 transitions.
[2020-11-25 06:37:18,174 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 28 states. 
[2020-11-25 06:37:18,174 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1914 states and 2078 transitions.
[2020-11-25 06:37:18,177 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:37:18,180 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1914 states to 1914 states and 2078 transitions.
[2020-11-25 06:37:18,181 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 587
[2020-11-25 06:37:18,181 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 06:37:18,181 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1914 states and 2078 transitions.
[2020-11-25 06:37:18,182 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:18,182 INFO  L728         BuchiCegarLoop]: Abstraction has 1914 states and 2078 transitions.
[2020-11-25 06:37:18,183 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1914 states and 2078 transitions.
[2020-11-25 06:37:18,191 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1914 to 1867.
[2020-11-25 06:37:18,191 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1867 states.
[2020-11-25 06:37:18,192 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1867 states to 1867 states and 2024 transitions.
[2020-11-25 06:37:18,192 INFO  L751         BuchiCegarLoop]: Abstraction has 1867 states and 2024 transitions.
[2020-11-25 06:37:18,192 INFO  L631         BuchiCegarLoop]: Abstraction has 1867 states and 2024 transitions.
[2020-11-25 06:37:18,192 INFO  L445         BuchiCegarLoop]: ======== Iteration 13============
[2020-11-25 06:37:18,193 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1867 states and 2024 transitions.
[2020-11-25 06:37:18,194 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:37:18,194 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:18,194 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:18,195 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:18,195 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:18,199 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:18,199 INFO  L82        PathProgramCache]: Analyzing trace with hash 1552530413, now seen corresponding path program 1 times
[2020-11-25 06:37:18,199 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:18,247 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:18,985 INFO  L134       CoverageAnalysis]: Checked inductivity of 87 backedges. 1 proven. 81 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:37:18,985 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:18,985 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [31] total 31
[2020-11-25 06:37:18,985 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:18,985 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 31 interpolants.
[2020-11-25 06:37:18,985 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=87, Invalid=843, Unknown=0, NotChecked=0, Total=930
[2020-11-25 06:37:18,986 INFO  L87              Difference]: Start difference. First operand 1867 states and 2024 transitions. cyclomatic complexity: 162 Second operand 31 states.
[2020-11-25 06:37:22,505 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:22,505 INFO  L93              Difference]: Finished difference Result 2105 states and 2340 transitions.
[2020-11-25 06:37:22,505 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 31 states. 
[2020-11-25 06:37:22,506 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2105 states and 2340 transitions.
[2020-11-25 06:37:22,509 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:22,513 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2105 states to 2105 states and 2340 transitions.
[2020-11-25 06:37:22,513 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 696
[2020-11-25 06:37:22,513 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 696
[2020-11-25 06:37:22,513 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2105 states and 2340 transitions.
[2020-11-25 06:37:22,515 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:22,515 INFO  L728         BuchiCegarLoop]: Abstraction has 2105 states and 2340 transitions.
[2020-11-25 06:37:22,516 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2105 states and 2340 transitions.
[2020-11-25 06:37:22,524 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2105 to 2065.
[2020-11-25 06:37:22,524 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2065 states.
[2020-11-25 06:37:22,526 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2065 states to 2065 states and 2291 transitions.
[2020-11-25 06:37:22,526 INFO  L751         BuchiCegarLoop]: Abstraction has 2065 states and 2291 transitions.
[2020-11-25 06:37:22,526 INFO  L631         BuchiCegarLoop]: Abstraction has 2065 states and 2291 transitions.
[2020-11-25 06:37:22,526 INFO  L445         BuchiCegarLoop]: ======== Iteration 14============
[2020-11-25 06:37:22,526 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2065 states and 2291 transitions.
[2020-11-25 06:37:22,528 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:22,528 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:22,528 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:22,529 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:22,529 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume ((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]);
[L3]                 success_transferFrom_TrifoliumCoin0 := true;
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:22,533 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:22,533 INFO  L82        PathProgramCache]: Analyzing trace with hash -153059331, now seen corresponding path program 1 times
[2020-11-25 06:37:22,533 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:22,575 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:23,536 INFO  L134       CoverageAnalysis]: Checked inductivity of 87 backedges. 4 proven. 6 refuted. 0 times theorem prover too weak. 77 trivial. 0 not checked.
[2020-11-25 06:37:23,536 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 06:37:23,536 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [36] total 36
[2020-11-25 06:37:23,536 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:23,537 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 37 interpolants.
[2020-11-25 06:37:23,537 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=136, Invalid=1196, Unknown=0, NotChecked=0, Total=1332
[2020-11-25 06:37:23,537 INFO  L87              Difference]: Start difference. First operand 2065 states and 2291 transitions. cyclomatic complexity: 233 Second operand 37 states.
[2020-11-25 06:37:29,430 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:29,430 INFO  L93              Difference]: Finished difference Result 2314 states and 2626 transitions.
[2020-11-25 06:37:29,430 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 37 states. 
[2020-11-25 06:37:29,430 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2314 states and 2626 transitions.
[2020-11-25 06:37:29,434 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:37:29,439 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2314 states to 2314 states and 2626 transitions.
[2020-11-25 06:37:29,439 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 797
[2020-11-25 06:37:29,439 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 797
[2020-11-25 06:37:29,439 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2314 states and 2626 transitions.
[2020-11-25 06:37:29,441 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:29,441 INFO  L728         BuchiCegarLoop]: Abstraction has 2314 states and 2626 transitions.
[2020-11-25 06:37:29,442 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2314 states and 2626 transitions.
[2020-11-25 06:37:29,451 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2314 to 2067.
[2020-11-25 06:37:29,451 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2067 states.
[2020-11-25 06:37:29,453 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2067 states to 2067 states and 2298 transitions.
[2020-11-25 06:37:29,453 INFO  L751         BuchiCegarLoop]: Abstraction has 2067 states and 2298 transitions.
[2020-11-25 06:37:29,453 INFO  L631         BuchiCegarLoop]: Abstraction has 2067 states and 2298 transitions.
[2020-11-25 06:37:29,453 INFO  L445         BuchiCegarLoop]: ======== Iteration 15============
[2020-11-25 06:37:29,453 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2067 states and 2298 transitions.
[2020-11-25 06:37:29,455 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:37:29,455 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:37:29,455 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:37:29,456 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:37:29,456 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TrifoliumCoin0 := false;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND FALSE  !(choice == 12)
[L4174]  COND TRUE   choice == 11
[L4175]              gas := gas - 21000;
[L4176]  COND TRUE   gas >= 0
[L4177]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4178]              assume msgvalue_MSG == 0;
[L4179]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s458 || p2 != msgsender_MSG) && from_s458 == to_s458) && tokens_s458 <= balances_TrifoliumCoin[this][from_s458]) && tokens_s458 <= allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s458] >= 0) && balances_TrifoliumCoin[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][from_s458] >= 0) && balances_TrifoliumCoin[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] >= 0) && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TrifoliumCoin0 := true;
[L3]                 call_transferFrom_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L1047]              havoc __exception;
[L1048]              revert := false;
[L1049]  COND FALSE  !(__exception)
[L1072]  CALL        call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2449]  COND TRUE   DType[this] == TrifoliumCoin
[L2450]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2450]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][from_s458], tokens_s458);
[L2451]  COND FALSE  !(revert)
[L2457]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][from_s458];
[L2458]              balances_TrifoliumCoin[this][from_s458] := __var_5;
[L2459]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][from_s458];
[L2460]  COND TRUE   DType[this] == TrifoliumCoin
[L2461]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2461]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_TrifoliumCoin[this][from_s458][msgsender_MSG], tokens_s458);
[L2462]  COND FALSE  !(revert)
[L2468]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2469]              allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] := __var_6;
[L2470]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_TrifoliumCoin[this][from_s458][msgsender_MSG];
[L2471]  COND TRUE   DType[this] == TrifoliumCoin
[L2472]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2472]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s458], tokens_s458);
[L2473]  COND FALSE  !(revert)
[L2479]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s458];
[L2480]              balances_TrifoliumCoin[this][to_s458] := __var_7;
[L2481]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s458];
[L2482]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2483]              success_s458 := true;
[L1072]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1073]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s458 == true && allowed_TrifoliumCoin[this][from_s458][msgsender_MSG] == old(allowed_TrifoliumCoin[this][from_s458][msgsender_MSG]) - tokens_s458) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && balances_TrifoliumCoin[this] == old(balances_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this][p1][p2] == old(allowed_TrifoliumCoin[this][p1][p2])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4179]  RET         call success_s458 := transferFrom~address~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2395]              allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TrifoliumCoin[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_TrifoliumCoin" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L4172]  RET         call success_s399 := approve~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:37:29,460 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:37:29,460 INFO  L82        PathProgramCache]: Analyzing trace with hash -1416841145, now seen corresponding path program 1 times
[2020-11-25 06:37:29,460 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:37:29,555 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:37:29,888 INFO  L134       CoverageAnalysis]: Checked inductivity of 212 backedges. 138 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-25 06:37:29,889 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:37:29,889 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 06:37:29,889 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:37:29,889 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-25 06:37:29,890 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=47, Invalid=333, Unknown=0, NotChecked=0, Total=380
[2020-11-25 06:37:29,890 INFO  L87              Difference]: Start difference. First operand 2067 states and 2298 transitions. cyclomatic complexity: 239 Second operand 20 states.
[2020-11-25 06:37:31,370 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:37:31,370 INFO  L93              Difference]: Finished difference Result 1051 states and 1147 transitions.
[2020-11-25 06:37:31,370 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-25 06:37:31,370 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1051 states and 1147 transitions.
[2020-11-25 06:37:31,372 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:37:31,372 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1051 states to 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 06:37:31,372 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 06:37:31,372 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:37:31,372 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L445         BuchiCegarLoop]: ======== Iteration 16============
[2020-11-25 06:37:31,372 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 06:37:31,372 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:37:31,372 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 06:37:31,375 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:37:31 BasicIcfg
[2020-11-25 06:37:31,375 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:37:31,376 INFO  L168              Benchmark]: Toolchain (without parser) took 48289.59 ms. Allocated memory was 1.0 GB in the beginning and 3.2 GB in the end (delta: 2.2 GB). Free memory was 935.2 MB in the beginning and 1.9 GB in the end (delta: -914.9 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,376 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,376 INFO  L168              Benchmark]: Boogie Preprocessor took 89.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,376 INFO  L168              Benchmark]: UtopiaSpecLang took 62.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,377 INFO  L168              Benchmark]: Boogie Printer took 15.61 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,377 INFO  L168              Benchmark]: RCFGBuilder took 716.30 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 801.0 MB in the end (delta: 112.8 MB). Peak memory consumption was 112.8 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,377 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.03 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,377 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1415.78 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.7 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -217.9 MB). Peak memory consumption was 173.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,377 INFO  L168              Benchmark]: BlockEncodingV2 took 152.96 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 938.8 MB in the end (delta: 71.1 MB). Peak memory consumption was 71.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,378 INFO  L168              Benchmark]: BuchiAutomizer took 45792.01 ms. Allocated memory was 1.2 GB in the beginning and 3.2 GB in the end (delta: 2.0 GB). Free memory was 938.8 MB in the beginning and 1.9 GB in the end (delta: -911.3 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 06:37:31,380 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3722 locations, 6405 edges
  - StatisticsResult: Encoded RCFG
    3662 locations, 6245 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 62.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.61 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 716.30 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 801.0 MB in the end (delta: 112.8 MB). Peak memory consumption was 112.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.03 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1415.78 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.7 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -217.9 MB). Peak memory consumption was 173.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 152.96 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 938.8 MB in the end (delta: 71.1 MB). Peak memory consumption was 71.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 45792.01 ms. Allocated memory was 1.2 GB in the beginning and 3.2 GB in the end (delta: 2.0 GB). Free memory was 938.8 MB in the beginning and 1.9 GB in the end (delta: -911.3 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1565 locations, 1977 edges
  - StatisticsResult: BuchiProgram size
    3722 locations, 6405 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 15 terminating modules (15 trivial, 0 deterministic, 0 nondeterministic). 15 modules have a trivial ranking function, the largest among these consists of 37 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 45.7s and 16 iterations.  TraceHistogramMax:3. Analysis of lassos took 5.8s. Construction of modules took 31.6s. BÃ¼chi inclusion checks took 7.5s. Highest rank in rank-based complementation 0. Minimization of det autom 15. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 14 MinimizatonAttempts, 2612 StatesRemovedByMinimization, 13 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2756 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 34707 SDtfs, 42699 SDslu, 131649 SDs, 0 SdLazy, 238003 SolverSat, 6571 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 31.6s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU15 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_TrifoliumCoin0) ==> ( <>(success_transferFrom_TrifoliumCoin0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
