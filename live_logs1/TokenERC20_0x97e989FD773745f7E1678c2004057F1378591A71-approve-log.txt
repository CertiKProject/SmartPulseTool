This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:15:59,921 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:15:59,922 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:15:59,933 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:15:59,933 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:15:59,933 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:15:59,934 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:15:59,936 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:15:59,937 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:15:59,938 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:15:59,939 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:15:59,939 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:15:59,940 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:15:59,940 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:15:59,941 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:15:59,942 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:15:59,942 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:15:59,943 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:15:59,945 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:15:59,946 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:15:59,947 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:15:59,948 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:15:59,949 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:15:59,949 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:15:59,949 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:15:59,950 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:15:59,950 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:15:59,951 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:15:59,951 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:15:59,951 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:15:59,952 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:15:59,952 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:15:59,953 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:15:59,953 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:15:59,954 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:15:59,954 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:15:59,954 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:15:59,955 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:15:59,955 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:15:59,955 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:15:59,956 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:15:59,956 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:15:59,963 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:15:59,964 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:15:59,964 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:15:59,964 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:15:59,965 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:15:59,965 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:15:59,965 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:15:59,966 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:15:59,966 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:15:59,967 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:15:59,967 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:15:59,967 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:15:59,988 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:16:00,000 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:16:00,003 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:16:00,004 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:16:00,005 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:16:00,005 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl
[2020-11-25 06:16:00,006 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl'
[2020-11-25 06:16:00,076 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:16:00,077 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:16:00,078 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:16:00,078 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:16:00,078 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:16:00,094 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,095 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,122 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,122 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,139 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,147 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,153 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,161 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:16:00,161 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:16:00,161 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:16:00,163 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:16:00,167 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/1) ...
[2020-11-25 06:16:00,184 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_TokenERC20[this] == old(owner_TokenERC20[this]) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this]) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this]) && admin_TokenERC20[this] == old(admin_TokenERC20[this]))))
[2020-11-25 06:16:00,190 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_TokenERC20[this] == old(owner_TokenERC20[this]) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this]) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this]) && admin_TokenERC20[this] == old(admin_TokenERC20[this]))))
[2020-11-25 06:16:00,198 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_TokenERC20[this] == old(owner_TokenERC20[this]) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this]) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this]) && admin_TokenERC20[this] == old(admin_TokenERC20[this]))))
[2020-11-25 06:16:00,203 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s404 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s404,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-25 06:16:00,206 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s404==true && allowance_TokenERC20[this][msg.sender][_spender_s404]==_value_s404 ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_TokenERC20[this]==( old(owner_TokenERC20[this]) ) ) && lockIn_TokenERC20[this]==( old(lockIn_TokenERC20[this]) ) ) && whitelisted_TokenERC20[this]==( old(whitelisted_TokenERC20[this]) ) ) && admin_TokenERC20[this]==( old(admin_TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s404,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[_spender_s404,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s404,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockIn_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockIn_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[whitelisted_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[whitelisted_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[admin_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[admin_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-25 06:16:00,210 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_TokenERC20[this] == old(owner_TokenERC20[this]) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this]) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this]) && admin_TokenERC20[this] == old(admin_TokenERC20[this]))))
[2020-11-25 06:16:00,210 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:16:00,217 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:16:00 PropertyContainer
[2020-11-25 06:16:00,217 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:16:00,217 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:16:00,218 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:16:00,218 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:16:00,218 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/2) ...
[2020-11-25 06:16:00,219 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:16:00,219 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:16:00,230 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:16:00" (2/2) ...
[2020-11-25 06:16:00,230 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:16:00,231 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:16:00,231 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:16:00,231 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:16:00,231 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/2) ...
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:16:00,285 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 06:16:00,285 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 06:16:00,285 INFO  L130     BoogieDeclarations]: Found specification of procedure toggleLockIn_TokenERC20
[2020-11-25 06:16:00,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure toggleLockIn_TokenERC20
[2020-11-25 06:16:00,286 INFO  L130     BoogieDeclarations]: Found specification of procedure addToWhitelist~address_TokenERC20
[2020-11-25 06:16:00,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToWhitelist~address_TokenERC20
[2020-11-25 06:16:00,286 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromWhitelist~address_TokenERC20
[2020-11-25 06:16:00,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromWhitelist~address_TokenERC20
[2020-11-25 06:16:00,286 INFO  L130     BoogieDeclarations]: Found specification of procedure addToAdmin~address_TokenERC20
[2020-11-25 06:16:00,287 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToAdmin~address_TokenERC20
[2020-11-25 06:16:00,287 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromAdmin~address_TokenERC20
[2020-11-25 06:16:00,287 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromAdmin~address_TokenERC20
[2020-11-25 06:16:00,287 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,287 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:16:00,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:16:00,288 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 06:16:00,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 06:16:00,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 06:16:00,289 INFO  L130     BoogieDeclarations]: Found specification of procedure lockIn_TokenERC20
[2020-11-25 06:16:00,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockIn_TokenERC20
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 06:16:00,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 06:16:00,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:16:00,290 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure toggleLockIn_TokenERC20__success
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure toggleLockIn_TokenERC20__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure addToWhitelist~address_TokenERC20__success
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure addToWhitelist~address_TokenERC20__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromWhitelist~address_TokenERC20__success
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromWhitelist~address_TokenERC20__fail
[2020-11-25 06:16:00,291 INFO  L130     BoogieDeclarations]: Found specification of procedure addToAdmin~address_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure addToAdmin~address_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromAdmin~address_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromAdmin~address_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:16:00,292 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_TokenERC20__success
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_TokenERC20__fail
[2020-11-25 06:16:00,293 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure lockIn_TokenERC20__success
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure lockIn_TokenERC20__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:16:00,294 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:16:00,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:16:00,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:16:00,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure toggleLockIn_TokenERC20__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure toggleLockIn_TokenERC20__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToWhitelist~address_TokenERC20__fail
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToWhitelist~address_TokenERC20__success
[2020-11-25 06:16:00,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromWhitelist~address_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromWhitelist~address_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToAdmin~address_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToAdmin~address_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromAdmin~address_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromAdmin~address_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 06:16:00,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_TokenERC20__success
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockIn_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockIn_TokenERC20__success
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:16:00,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 06:16:00,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:16:00,300 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:16:00,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:16:00,479 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:16:00,774 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:16:00,774 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:16:00,775 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:16:00,921 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:16:00,922 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 06:16:00,924 INFO  L202        PluginConnector]: Adding new model TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:16:00 BoogieIcfgContainer
[2020-11-25 06:16:00,924 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:16:00" (2/2) ...
[2020-11-25 06:16:00,924 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:16:00,924 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@11509f94 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:16:00, skipping insertion in model container
[2020-11-25 06:16:00,924 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:16:00,925 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:16:00,925 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:16:00,926 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:16:00,926 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/3) ...
[2020-11-25 06:16:00,927 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@50c809ae and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:16:00, skipping insertion in model container
[2020-11-25 06:16:00,927 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:16:00" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:16:00,965 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:16:00 NWAContainer
[2020-11-25 06:16:00,965 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:16:00,965 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:16:00,966 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:16:00,966 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:16:00,967 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:16:00" (3/4) ...
[2020-11-25 06:16:00,968 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@63f2a4db and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:16:00, skipping insertion in model container
[2020-11-25 06:16:00,968 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:16:00" (4/4) ...
[2020-11-25 06:16:00,971 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:16:00,975 INFO  L110   BuchiProductObserver]: Initial RCFG 1294 locations, 1554 edges
[2020-11-25 06:16:00,975 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:16:00,985 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:16:02,092 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:16:02,096 INFO  L110   BuchiProductObserver]: BuchiProgram size 2966 locations, 4961 edges
[2020-11-25 06:16:02,097 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:16:02 BoogieIcfgContainer
[2020-11-25 06:16:02,097 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:16:02,097 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:16:02,097 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:16:02,098 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:16:02,100 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:16:02" (1/1) ...
[2020-11-25 06:16:02,266 INFO  L313           BlockEncoder]: Initial Icfg 2966 locations, 4961 edges
[2020-11-25 06:16:02,267 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:16:02,267 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:16:02,267 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:16:02,268 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:16:02,278 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 06:16:02,284 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 06:16:02,293 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:16:02,296 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:16:02,299 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:16:02,299 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:16:02,304 INFO  L313           BlockEncoder]: Encoded RCFG 2946 locations, 4912 edges
[2020-11-25 06:16:02,304 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:16:02 BasicIcfg
[2020-11-25 06:16:02,304 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:16:02,304 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:16:02,304 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:16:02,307 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:16:02,307 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,307 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:16:00" (1/6) ...
[2020-11-25 06:16:02,308 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39dde8c and model type TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:16:02, skipping insertion in model container
[2020-11-25 06:16:02,308 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:16:00" (2/6) ...
[2020-11-25 06:16:02,309 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39dde8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:16:02, skipping insertion in model container
[2020-11-25 06:16:02,309 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:16:00" (3/6) ...
[2020-11-25 06:16:02,309 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39dde8c and model type TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:16:02, skipping insertion in model container
[2020-11-25 06:16:02,309 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:16:00" (4/6) ...
[2020-11-25 06:16:02,310 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39dde8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:16:02, skipping insertion in model container
[2020-11-25 06:16:02,310 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,310 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:16:02" (5/6) ...
[2020-11-25 06:16:02,310 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39dde8c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:16:02, skipping insertion in model container
[2020-11-25 06:16:02,310 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:16:02,310 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:16:02" (6/6) ...
[2020-11-25 06:16:02,311 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TokenERC20_0x97e989FD773745f7E1678c2004057F1378591A71_approve.bpl_BEv2
[2020-11-25 06:16:02,347 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:16:02,348 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:16:02,348 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:16:02,348 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:16:02,348 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:16:02,348 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:16:02,348 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:16:02,348 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:16:02,348 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:16:02,376 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2946 states.
[2020-11-25 06:16:02,426 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:16:02,426 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:02,426 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:02,436 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:02,436 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:02,436 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:16:02,436 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2946 states.
[2020-11-25 06:16:02,454 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:16:02,454 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:02,454 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:02,456 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:02,456 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3322]              assume null == 0;
[L3323]  CALL        call this := FreshRefGenerator__success();
[L1844]              havoc newRef;
[L1845]              assume Alloc[newRef] == false;
[L1846]              Alloc[newRef] := true;
[L1847]              assume newRef != null;
[L3323]  RET         call this := FreshRefGenerator__success();
[L3324]              assume now >= 0;
[L3325]              assume DType[this] == TokenERC20;
[L3326]              assume msgvalue_MSG == 0;
[L3327]              gas := gas - 53000;
[L3328]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L177]               havoc __exception;
[L178]               revert := false;
[L179]   COND FALSE  !(__exception)
[L207]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1960]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1919]              assume msgsender_MSG != null;
[L1920]              Balance[this] := 0;
[L1921]              name_TokenERC20[this] := 846149099;
[L1922]              symbol_TokenERC20[this] := 846149099;
[L1923]              decimals_TokenERC20[this] := 8;
[L1924]              owner_TokenERC20[this] := null;
[L1925]              totalSupply_TokenERC20[this] := 0;
[L1926]              lockIn_TokenERC20[this] := false;
[L1927]              whitelisted_TokenERC20[this] := zeroRefboolArr();
[L1928]              admin_TokenERC20[this] := zeroRefboolArr();
[L1929]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1930]              sum_balanceOf2[this] := 0;
[L1931]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1932]              sum_allowance3[this] := 0;
[L1934]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1935]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s130, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1936]              sum_balanceOf2[this] := sum_balanceOf2[this] - balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1937]              balanceOf_TokenERC20[this][crowdsaleOwner_s130] := totalSupply_TokenERC20[this];
[L1938]              sum_balanceOf2[this] := sum_balanceOf2[this] + balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1939]              name_TokenERC20[this] := tokenName_s130;
[L1940]              symbol_TokenERC20[this] := tokenSymbol_s130;
[L1941]              lockIn_TokenERC20[this] := false;
[L1942]              admin_TokenERC20[this][msgsender_MSG] := true;
[L1943]              whitelisted_TokenERC20[this][msgsender_MSG] := true;
[L1944]              owner_TokenERC20[this] := crowdsaleOwner_s130;
[L1945]              admin_TokenERC20[this][crowdsaleOwner_s130] := true;
[L1960]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1961]  COND FALSE  !(revert)
[L207]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L208]               assume !revert && gas >= 0;
[L3328]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L3329]              assume !revert && gas >= 0;

Loop:
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND TRUE   choice == 19
[L3191]              gas := gas - 21000;
[L3192]  COND FALSE  !(gas >= 0)
[L3332]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:16:02,473 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:16:02,473 INFO  L82        PathProgramCache]: Analyzing trace with hash 1275640912, now seen corresponding path program 1 times
[2020-11-25 06:16:02,478 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:16:02,506 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:16:02,555 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:16:02,557 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:16:02,557 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:16:02,561 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:16:02,693 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:16:02,693 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:16:02,695 INFO  L87              Difference]: Start difference. First operand 2946 states. Second operand 4 states.
[2020-11-25 06:16:03,039 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:16:03,040 INFO  L93              Difference]: Finished difference Result 2480 states and 2693 transitions.
[2020-11-25 06:16:03,041 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:16:03,044 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2480 states and 2693 transitions.
[2020-11-25 06:16:03,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:16:03,084 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2480 states to 2478 states and 2689 transitions.
[2020-11-25 06:16:03,085 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:16:03,088 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1174
[2020-11-25 06:16:03,088 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2478 states and 2689 transitions.
[2020-11-25 06:16:03,096 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:16:03,096 INFO  L728         BuchiCegarLoop]: Abstraction has 2478 states and 2689 transitions.
[2020-11-25 06:16:03,114 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2478 states and 2689 transitions.
[2020-11-25 06:16:03,157 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2478 to 2478.
[2020-11-25 06:16:03,158 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2478 states.
[2020-11-25 06:16:03,162 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2478 states to 2478 states and 2689 transitions.
[2020-11-25 06:16:03,163 INFO  L751         BuchiCegarLoop]: Abstraction has 2478 states and 2689 transitions.
[2020-11-25 06:16:03,163 INFO  L631         BuchiCegarLoop]: Abstraction has 2478 states and 2689 transitions.
[2020-11-25 06:16:03,163 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:16:03,163 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2478 states and 2689 transitions.
[2020-11-25 06:16:03,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:16:03,172 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:03,173 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:03,175 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:03,175 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3322]              assume null == 0;
[L3323]  CALL        call this := FreshRefGenerator__success();
[L1844]              havoc newRef;
[L1845]              assume Alloc[newRef] == false;
[L1846]              Alloc[newRef] := true;
[L1847]              assume newRef != null;
[L3323]  RET         call this := FreshRefGenerator__success();
[L3324]              assume now >= 0;
[L3325]              assume DType[this] == TokenERC20;
[L3326]              assume msgvalue_MSG == 0;
[L3327]              gas := gas - 53000;
[L3328]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L177]               havoc __exception;
[L178]               revert := false;
[L179]   COND FALSE  !(__exception)
[L207]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1960]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1919]              assume msgsender_MSG != null;
[L1920]              Balance[this] := 0;
[L1921]              name_TokenERC20[this] := 846149099;
[L1922]              symbol_TokenERC20[this] := 846149099;
[L1923]              decimals_TokenERC20[this] := 8;
[L1924]              owner_TokenERC20[this] := null;
[L1925]              totalSupply_TokenERC20[this] := 0;
[L1926]              lockIn_TokenERC20[this] := false;
[L1927]              whitelisted_TokenERC20[this] := zeroRefboolArr();
[L1928]              admin_TokenERC20[this] := zeroRefboolArr();
[L1929]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1930]              sum_balanceOf2[this] := 0;
[L1931]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1932]              sum_allowance3[this] := 0;
[L1934]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1935]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s130, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1936]              sum_balanceOf2[this] := sum_balanceOf2[this] - balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1937]              balanceOf_TokenERC20[this][crowdsaleOwner_s130] := totalSupply_TokenERC20[this];
[L1938]              sum_balanceOf2[this] := sum_balanceOf2[this] + balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1939]              name_TokenERC20[this] := tokenName_s130;
[L1940]              symbol_TokenERC20[this] := tokenSymbol_s130;
[L1941]              lockIn_TokenERC20[this] := false;
[L1942]              admin_TokenERC20[this][msgsender_MSG] := true;
[L1943]              whitelisted_TokenERC20[this][msgsender_MSG] := true;
[L1944]              owner_TokenERC20[this] := crowdsaleOwner_s130;
[L1945]              admin_TokenERC20[this][crowdsaleOwner_s130] := true;
[L1960]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1961]  COND TRUE   revert
[L207]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L208]               assume !revert && gas >= 0;
[L3328]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L3329]              assume !revert && gas >= 0;
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:16:03,181 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:16:03,181 INFO  L82        PathProgramCache]: Analyzing trace with hash -1212703968, now seen corresponding path program 1 times
[2020-11-25 06:16:03,182 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:16:03,197 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:16:03,228 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:16:03,228 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:16:03,228 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:16:03,230 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:16:03,230 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:16:03,230 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:16:03,230 INFO  L87              Difference]: Start difference. First operand 2478 states and 2689 transitions. cyclomatic complexity: 213 Second operand 4 states.
[2020-11-25 06:16:03,665 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:16:03,665 INFO  L93              Difference]: Finished difference Result 3558 states and 4031 transitions.
[2020-11-25 06:16:03,665 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:16:03,666 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3558 states and 4031 transitions.
[2020-11-25 06:16:03,688 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 06:16:03,709 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3558 states to 3444 states and 3903 transitions.
[2020-11-25 06:16:03,709 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1657
[2020-11-25 06:16:03,710 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1657
[2020-11-25 06:16:03,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3444 states and 3903 transitions.
[2020-11-25 06:16:03,716 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:16:03,716 INFO  L728         BuchiCegarLoop]: Abstraction has 3444 states and 3903 transitions.
[2020-11-25 06:16:03,718 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3444 states and 3903 transitions.
[2020-11-25 06:16:03,745 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3444 to 2635.
[2020-11-25 06:16:03,745 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2635 states.
[2020-11-25 06:16:03,749 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2635 states to 2635 states and 2844 transitions.
[2020-11-25 06:16:03,749 INFO  L751         BuchiCegarLoop]: Abstraction has 2635 states and 2844 transitions.
[2020-11-25 06:16:03,749 INFO  L631         BuchiCegarLoop]: Abstraction has 2635 states and 2844 transitions.
[2020-11-25 06:16:03,749 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:16:03,749 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2635 states and 2844 transitions.
[2020-11-25 06:16:03,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:16:03,754 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:03,754 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:03,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:03,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3322]              assume null == 0;
[L3323]  CALL        call this := FreshRefGenerator__success();
[L1844]              havoc newRef;
[L1845]              assume Alloc[newRef] == false;
[L1846]              Alloc[newRef] := true;
[L1847]              assume newRef != null;
[L3323]  RET         call this := FreshRefGenerator__success();
[L3324]              assume now >= 0;
[L3325]              assume DType[this] == TokenERC20;
[L3326]              assume msgvalue_MSG == 0;
[L3327]              gas := gas - 53000;
[L3328]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L177]               havoc __exception;
[L178]               revert := false;
[L179]   COND FALSE  !(__exception)
[L207]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1960]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1919]              assume msgsender_MSG != null;
[L1920]              Balance[this] := 0;
[L1921]              name_TokenERC20[this] := 846149099;
[L1922]              symbol_TokenERC20[this] := 846149099;
[L1923]              decimals_TokenERC20[this] := 8;
[L1924]              owner_TokenERC20[this] := null;
[L1925]              totalSupply_TokenERC20[this] := 0;
[L1926]              lockIn_TokenERC20[this] := false;
[L1927]              whitelisted_TokenERC20[this] := zeroRefboolArr();
[L1928]              admin_TokenERC20[this] := zeroRefboolArr();
[L1929]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1930]              sum_balanceOf2[this] := 0;
[L1931]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1932]              sum_allowance3[this] := 0;
[L1934]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1935]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s130, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1936]              sum_balanceOf2[this] := sum_balanceOf2[this] - balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1937]              balanceOf_TokenERC20[this][crowdsaleOwner_s130] := totalSupply_TokenERC20[this];
[L1938]              sum_balanceOf2[this] := sum_balanceOf2[this] + balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1939]              name_TokenERC20[this] := tokenName_s130;
[L1940]              symbol_TokenERC20[this] := tokenSymbol_s130;
[L1941]              lockIn_TokenERC20[this] := false;
[L1942]              admin_TokenERC20[this][msgsender_MSG] := true;
[L1943]              whitelisted_TokenERC20[this][msgsender_MSG] := true;
[L1944]              owner_TokenERC20[this] := crowdsaleOwner_s130;
[L1945]              admin_TokenERC20[this][crowdsaleOwner_s130] := true;
[L1960]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1961]  COND FALSE  !(revert)
[L207]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L208]               assume !revert && gas >= 0;
[L3328]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L3329]              assume !revert && gas >= 0;
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:16:03,758 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:16:03,759 INFO  L82        PathProgramCache]: Analyzing trace with hash -741347618, now seen corresponding path program 1 times
[2020-11-25 06:16:03,759 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:16:03,784 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:16:03,938 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:16:03,939 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:16:03,939 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 06:16:03,939 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:16:03,940 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 06:16:03,940 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 06:16:03,940 INFO  L87              Difference]: Start difference. First operand 2635 states and 2844 transitions. cyclomatic complexity: 211 Second operand 13 states.
[2020-11-25 06:16:05,240 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:16:05,240 INFO  L93              Difference]: Finished difference Result 2772 states and 3014 transitions.
[2020-11-25 06:16:05,240 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 06:16:05,240 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2772 states and 3014 transitions.
[2020-11-25 06:16:05,247 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 06:16:05,254 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2772 states to 2772 states and 3014 transitions.
[2020-11-25 06:16:05,254 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1407
[2020-11-25 06:16:05,256 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1407
[2020-11-25 06:16:05,256 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2772 states and 3014 transitions.
[2020-11-25 06:16:05,258 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:16:05,258 INFO  L728         BuchiCegarLoop]: Abstraction has 2772 states and 3014 transitions.
[2020-11-25 06:16:05,260 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2772 states and 3014 transitions.
[2020-11-25 06:16:05,279 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2772 to 2734.
[2020-11-25 06:16:05,279 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2734 states.
[2020-11-25 06:16:05,282 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2734 states to 2734 states and 2962 transitions.
[2020-11-25 06:16:05,282 INFO  L751         BuchiCegarLoop]: Abstraction has 2734 states and 2962 transitions.
[2020-11-25 06:16:05,282 INFO  L631         BuchiCegarLoop]: Abstraction has 2734 states and 2962 transitions.
[2020-11-25 06:16:05,282 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:16:05,282 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2734 states and 2962 transitions.
[2020-11-25 06:16:05,287 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 06:16:05,287 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:05,287 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:05,289 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:05,289 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3322]              assume null == 0;
[L3323]  CALL        call this := FreshRefGenerator__success();
[L1844]              havoc newRef;
[L1845]              assume Alloc[newRef] == false;
[L1846]              Alloc[newRef] := true;
[L1847]              assume newRef != null;
[L3323]  RET         call this := FreshRefGenerator__success();
[L3324]              assume now >= 0;
[L3325]              assume DType[this] == TokenERC20;
[L3326]              assume msgvalue_MSG == 0;
[L3327]              gas := gas - 53000;
[L3328]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L177]               havoc __exception;
[L178]               revert := false;
[L179]   COND FALSE  !(__exception)
[L207]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1960]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1919]              assume msgsender_MSG != null;
[L1920]              Balance[this] := 0;
[L1921]              name_TokenERC20[this] := 846149099;
[L1922]              symbol_TokenERC20[this] := 846149099;
[L1923]              decimals_TokenERC20[this] := 8;
[L1924]              owner_TokenERC20[this] := null;
[L1925]              totalSupply_TokenERC20[this] := 0;
[L1926]              lockIn_TokenERC20[this] := false;
[L1927]              whitelisted_TokenERC20[this] := zeroRefboolArr();
[L1928]              admin_TokenERC20[this] := zeroRefboolArr();
[L1929]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1930]              sum_balanceOf2[this] := 0;
[L1931]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1932]              sum_allowance3[this] := 0;
[L1934]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1935]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s130, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1936]              sum_balanceOf2[this] := sum_balanceOf2[this] - balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1937]              balanceOf_TokenERC20[this][crowdsaleOwner_s130] := totalSupply_TokenERC20[this];
[L1938]              sum_balanceOf2[this] := sum_balanceOf2[this] + balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1939]              name_TokenERC20[this] := tokenName_s130;
[L1940]              symbol_TokenERC20[this] := tokenSymbol_s130;
[L1941]              lockIn_TokenERC20[this] := false;
[L1942]              admin_TokenERC20[this][msgsender_MSG] := true;
[L1943]              whitelisted_TokenERC20[this][msgsender_MSG] := true;
[L1944]              owner_TokenERC20[this] := crowdsaleOwner_s130;
[L1945]              admin_TokenERC20[this][crowdsaleOwner_s130] := true;
[L1960]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1961]  COND FALSE  !(revert)
[L207]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L208]               assume !revert && gas >= 0;
[L3328]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L3329]              assume !revert && gas >= 0;
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND TRUE   __exception
[L709]               __tmp__Balance := Balance;
[L710]               __tmp__DType := DType;
[L711]               __tmp__Alloc := Alloc;
[L712]               __tmp__balance_ADDR := balance_ADDR;
[L713]               __tmp__M_Ref_bool := M_Ref_bool;
[L714]               __tmp__sum_whitelisted0 := sum_whitelisted0;
[L715]               __tmp__sum_admin1 := sum_admin1;
[L716]               __tmp__M_Ref_int := M_Ref_int;
[L717]               __tmp__sum_balanceOf2 := sum_balanceOf2;
[L718]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L719]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L720]               __tmp__sum_allowance3 := sum_allowance3;
[L721]               __tmp__Length := Length;
[L722]               __tmp__now := now;
[L723]               __tmp__name_TokenERC20 := name_TokenERC20;
[L724]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L725]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L726]               __tmp__owner_TokenERC20 := owner_TokenERC20;
[L727]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L728]               __tmp__lockIn_TokenERC20 := lockIn_TokenERC20;
[L729]               __tmp__whitelisted_TokenERC20 := whitelisted_TokenERC20;
[L730]               __tmp__admin_TokenERC20 := admin_TokenERC20;
[L731]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L732]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L733]   CALL        call success_s404 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2190]              __tmp__sum_allowance3[msgsender_MSG] := __tmp__sum_allowance3[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2191]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2192]              __tmp__sum_allowance3[msgsender_MSG] := __tmp__sum_allowance3[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2193]              success_s404 := true;
[L733]   RET         call success_s404 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L734]               assume revert || gas < 0;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND TRUE   __exception
[L709]               __tmp__Balance := Balance;
[L710]               __tmp__DType := DType;
[L711]               __tmp__Alloc := Alloc;
[L712]               __tmp__balance_ADDR := balance_ADDR;
[L713]               __tmp__M_Ref_bool := M_Ref_bool;
[L714]               __tmp__sum_whitelisted0 := sum_whitelisted0;
[L715]               __tmp__sum_admin1 := sum_admin1;
[L716]               __tmp__M_Ref_int := M_Ref_int;
[L717]               __tmp__sum_balanceOf2 := sum_balanceOf2;
[L718]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L719]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L720]               __tmp__sum_allowance3 := sum_allowance3;
[L721]               __tmp__Length := Length;
[L722]               __tmp__now := now;
[L723]               __tmp__name_TokenERC20 := name_TokenERC20;
[L724]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L725]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L726]               __tmp__owner_TokenERC20 := owner_TokenERC20;
[L727]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L728]               __tmp__lockIn_TokenERC20 := lockIn_TokenERC20;
[L729]               __tmp__whitelisted_TokenERC20 := whitelisted_TokenERC20;
[L730]               __tmp__admin_TokenERC20 := admin_TokenERC20;
[L731]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L732]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L733]   CALL        call success_s404 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2190]              __tmp__sum_allowance3[msgsender_MSG] := __tmp__sum_allowance3[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2191]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2192]              __tmp__sum_allowance3[msgsender_MSG] := __tmp__sum_allowance3[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2193]              success_s404 := true;
[L733]   RET         call success_s404 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L734]               assume revert || gas < 0;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:16:05,292 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:16:05,292 INFO  L82        PathProgramCache]: Analyzing trace with hash -1397217208, now seen corresponding path program 1 times
[2020-11-25 06:16:05,292 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:16:05,300 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:16:05,320 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:16:05,321 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:16:05,321 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 06:16:05,321 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:16:05,321 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 06:16:05,321 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 06:16:05,321 INFO  L87              Difference]: Start difference. First operand 2734 states and 2962 transitions. cyclomatic complexity: 232 Second operand 5 states.
[2020-11-25 06:16:05,582 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:16:05,582 INFO  L93              Difference]: Finished difference Result 3438 states and 3815 transitions.
[2020-11-25 06:16:05,582 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:16:05,582 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3438 states and 3815 transitions.
[2020-11-25 06:16:05,591 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 06:16:05,599 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3438 states to 2565 states and 2936 transitions.
[2020-11-25 06:16:05,599 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1324
[2020-11-25 06:16:05,600 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1324
[2020-11-25 06:16:05,600 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2565 states and 2936 transitions.
[2020-11-25 06:16:05,603 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:16:05,603 INFO  L728         BuchiCegarLoop]: Abstraction has 2565 states and 2936 transitions.
[2020-11-25 06:16:05,604 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2565 states and 2936 transitions.
[2020-11-25 06:16:05,617 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2565 to 1732.
[2020-11-25 06:16:05,617 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1732 states.
[2020-11-25 06:16:05,619 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1732 states to 1732 states and 1863 transitions.
[2020-11-25 06:16:05,619 INFO  L751         BuchiCegarLoop]: Abstraction has 1732 states and 1863 transitions.
[2020-11-25 06:16:05,619 INFO  L631         BuchiCegarLoop]: Abstraction has 1732 states and 1863 transitions.
[2020-11-25 06:16:05,619 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:16:05,619 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1732 states and 1863 transitions.
[2020-11-25 06:16:05,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:16:05,621 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:16:05,621 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:16:05,623 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:16:05,623 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3322]              assume null == 0;
[L3323]  CALL        call this := FreshRefGenerator__success();
[L1844]              havoc newRef;
[L1845]              assume Alloc[newRef] == false;
[L1846]              Alloc[newRef] := true;
[L1847]              assume newRef != null;
[L3323]  RET         call this := FreshRefGenerator__success();
[L3324]              assume now >= 0;
[L3325]              assume DType[this] == TokenERC20;
[L3326]              assume msgvalue_MSG == 0;
[L3327]              gas := gas - 53000;
[L3328]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L177]               havoc __exception;
[L178]               revert := false;
[L179]   COND FALSE  !(__exception)
[L207]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1960]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1919]              assume msgsender_MSG != null;
[L1920]              Balance[this] := 0;
[L1921]              name_TokenERC20[this] := 846149099;
[L1922]              symbol_TokenERC20[this] := 846149099;
[L1923]              decimals_TokenERC20[this] := 8;
[L1924]              owner_TokenERC20[this] := null;
[L1925]              totalSupply_TokenERC20[this] := 0;
[L1926]              lockIn_TokenERC20[this] := false;
[L1927]              whitelisted_TokenERC20[this] := zeroRefboolArr();
[L1928]              admin_TokenERC20[this] := zeroRefboolArr();
[L1929]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1930]              sum_balanceOf2[this] := 0;
[L1931]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1932]              sum_allowance3[this] := 0;
[L1934]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1935]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s130, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1936]              sum_balanceOf2[this] := sum_balanceOf2[this] - balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1937]              balanceOf_TokenERC20[this][crowdsaleOwner_s130] := totalSupply_TokenERC20[this];
[L1938]              sum_balanceOf2[this] := sum_balanceOf2[this] + balanceOf_TokenERC20[this][crowdsaleOwner_s130];
[L1939]              name_TokenERC20[this] := tokenName_s130;
[L1940]              symbol_TokenERC20[this] := tokenSymbol_s130;
[L1941]              lockIn_TokenERC20[this] := false;
[L1942]              admin_TokenERC20[this][msgsender_MSG] := true;
[L1943]              whitelisted_TokenERC20[this][msgsender_MSG] := true;
[L1944]              owner_TokenERC20[this] := crowdsaleOwner_s130;
[L1945]              admin_TokenERC20[this][crowdsaleOwner_s130] := true;
[L1960]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L1961]  COND FALSE  !(revert)
[L207]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L208]               assume !revert && gas >= 0;
[L3328]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s130, tokenName_s130, tokenSymbol_s130, crowdsaleOwner_s130);
[L3329]              assume !revert && gas >= 0;
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s404);
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L3332]  CALL        call CorralChoice_TokenERC20(this);
[L3140]              havoc msgsender_MSG;
[L3141]              havoc msgvalue_MSG;
[L3142]              havoc choice;
[L3143]              havoc __ret_0_name;
[L3144]              havoc __ret_0_symbol;
[L3145]              havoc __ret_0_decimals;
[L3146]              havoc __ret_0_owner;
[L3147]              havoc __ret_0_totalSupply;
[L3148]              havoc __ret_0_lockIn;
[L3149]              havoc arg536_s0;
[L3150]              havoc __ret_0_balanceOf;
[L3151]              havoc arg537_s0;
[L3152]              havoc arg538_s0;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc initialSupply_s130;
[L3155]              havoc tokenName_s130;
[L3156]              havoc tokenSymbol_s130;
[L3157]              havoc crowdsaleOwner_s130;
[L3158]              havoc newAddress_s165;
[L3159]              havoc oldaddress_s190;
[L3160]              havoc newAddress_s209;
[L3161]              havoc oldAddress_s234;
[L3162]              havoc _to_s336;
[L3163]              havoc _value_s336;
[L3164]              havoc _from_s376;
[L3165]              havoc _to_s376;
[L3166]              havoc _value_s376;
[L3167]              havoc success_s376;
[L3168]              havoc _spender_s404;
[L3169]              havoc _value_s404;
[L3170]              havoc success_s404;
[L3171]              havoc _spender_s442;
[L3172]              havoc _value_s442;
[L3173]              havoc _extraData_s442;
[L3174]              havoc success_s442;
[L3175]              havoc _value_s478;
[L3176]              havoc success_s478;
[L3177]              havoc _from_s533;
[L3178]              havoc _value_s533;
[L3179]              havoc success_s533;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != tokenRecipient;
[L3188]              assume DType[msgsender_MSG] != TokenERC20;
[L3189]              Alloc[msgsender_MSG] := true;
[L3190]  COND FALSE  !(choice == 19)
[L3196]  COND FALSE  !(choice == 18)
[L3202]  COND FALSE  !(choice == 17)
[L3208]  COND FALSE  !(choice == 16)
[L3214]  COND FALSE  !(choice == 15)
[L3220]  COND FALSE  !(choice == 14)
[L3226]  COND FALSE  !(choice == 13)
[L3232]  COND FALSE  !(choice == 12)
[L3238]  COND FALSE  !(choice == 11)
[L3244]  COND FALSE  !(choice == 10)
[L3250]  COND FALSE  !(choice == 9)
[L3256]  COND FALSE  !(choice == 8)
[L3262]  COND FALSE  !(choice == 7)
[L3268]  COND FALSE  !(choice == 6)
[L3275]  COND FALSE  !(choice == 5)
[L3282]  COND TRUE   choice == 4
[L3283]              gas := gas - 21000;
[L3284]  COND TRUE   gas >= 0
[L3285]              assume _value_s404 >= 0 && _value_s404 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3286]              assume msgvalue_MSG == 0;
[L3287]  CALL        call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s404;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L706]               havoc __exception;
[L707]               revert := false;
[L708]   COND FALSE  !(__exception)
[L736]   CALL        call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L2199]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2200]              allowance_TokenERC20[this][msgsender_MSG][_spender_s404] := _value_s404;
[L2201]              sum_allowance3[msgsender_MSG] := sum_allowance3[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s404];
[L2202]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2203]              success_s404 := true;
[L736]   RET         call success_s404 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L737]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s404 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s404] == _value_s404) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_TokenERC20[this] == old(owner_TokenERC20[this])) && lockIn_TokenERC20[this] == old(lockIn_TokenERC20[this])) && whitelisted_TokenERC20[this] == old(whitelisted_TokenERC20[this])) && admin_TokenERC20[this] == old(admin_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L3287]  RET         call success_s404 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s404, _value_s404);
[L3332]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:16:05,626 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:16:05,626 INFO  L82        PathProgramCache]: Analyzing trace with hash 298240666, now seen corresponding path program 1 times
[2020-11-25 06:16:05,626 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:16:05,649 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:16:05,710 INFO  L134       CoverageAnalysis]: Checked inductivity of 77 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 73 trivial. 0 not checked.
[2020-11-25 06:16:05,710 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:16:05,710 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:16:05,710 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:16:05,711 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:16:05,711 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:16:05,711 INFO  L87              Difference]: Start difference. First operand 1732 states and 1863 transitions. cyclomatic complexity: 134 Second operand 7 states.
[2020-11-25 06:16:05,891 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:16:05,891 INFO  L93              Difference]: Finished difference Result 921 states and 986 transitions.
[2020-11-25 06:16:05,891 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:16:05,891 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 921 states and 986 transitions.
[2020-11-25 06:16:05,893 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:16:05,893 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 921 states to 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 06:16:05,893 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 06:16:05,893 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:16:05,893 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 06:16:05,893 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 06:16:05,893 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:16:05,893 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 06:16:05,896 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:16:05 BasicIcfg
[2020-11-25 06:16:05,896 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:16:05,897 INFO  L168              Benchmark]: Toolchain (without parser) took 5820.43 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 508.0 MB). Free memory was 940.6 MB in the beginning and 961.9 MB in the end (delta: -21.4 MB). Peak memory consumption was 486.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,897 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,898 INFO  L168              Benchmark]: Boogie Preprocessor took 83.21 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,898 INFO  L168              Benchmark]: UtopiaSpecLang took 56.16 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,899 INFO  L168              Benchmark]: Boogie Printer took 12.83 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,899 INFO  L168              Benchmark]: RCFGBuilder took 693.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,899 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.83 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,899 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1131.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 829.6 MB in the beginning and 714.0 MB in the end (delta: 115.6 MB). Peak memory consumption was 175.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,899 INFO  L168              Benchmark]: BlockEncodingV2 took 207.20 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 140.5 MB). Free memory was 714.0 MB in the beginning and 1.1 GB in the end (delta: -416.9 MB). Peak memory consumption was 31.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,900 INFO  L168              Benchmark]: BuchiAutomizer took 3592.05 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 307.8 MB). Free memory was 1.1 GB in the beginning and 961.9 MB in the end (delta: 169.0 MB). Peak memory consumption was 476.8 MB. Max. memory is 15.3 GB.
[2020-11-25 06:16:05,902 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2966 locations, 4961 edges
  - StatisticsResult: Encoded RCFG
    2946 locations, 4912 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 83.21 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.16 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.83 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 693.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.83 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1131.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 829.6 MB in the beginning and 714.0 MB in the end (delta: 115.6 MB). Peak memory consumption was 175.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 207.20 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 140.5 MB). Free memory was 714.0 MB in the beginning and 1.1 GB in the end (delta: -416.9 MB). Peak memory consumption was 31.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3592.05 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 307.8 MB). Free memory was 1.1 GB in the beginning and 961.9 MB in the end (delta: 169.0 MB). Peak memory consumption was 476.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1294 locations, 1554 edges
  - StatisticsResult: BuchiProgram size
    2966 locations, 4961 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.5s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.8s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1680 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2734 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12691 SDtfs, 13881 SDslu, 17974 SDs, 0 SdLazy, 20904 SolverSat, 2369 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_TokenERC200) ==> ( <>(success_approve_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
