This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:22:22,650 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:22:22,651 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:22:22,662 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:22:22,662 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:22:22,662 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:22:22,663 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:22:22,665 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:22:22,666 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:22:22,667 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:22:22,668 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:22:22,668 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:22:22,668 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:22:22,669 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:22:22,670 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:22:22,670 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:22:22,671 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:22:22,672 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:22:22,674 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:22:22,675 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:22:22,676 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:22:22,676 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:22:22,678 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:22:22,678 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:22:22,678 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:22:22,679 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:22:22,679 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:22:22,680 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:22:22,680 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:22:22,680 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:22:22,680 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:22:22,681 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:22:22,681 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:22:22,682 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:22:22,682 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:22:22,683 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:22:22,683 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:22:22,683 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:22:22,683 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:22:22,684 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:22:22,684 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:22:22,685 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:22:22,692 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:22:22,692 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:22:22,693 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:22:22,693 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:22:22,693 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:22:22,693 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:22:22,694 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:22:22,694 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:22:22,694 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:22:22,695 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:22:22,695 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:22:22,696 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:22:22,718 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:22:22,733 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:22:22,735 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:22:22,736 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:22:22,737 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:22:22,737 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl
[2020-11-25 13:22:22,737 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl'
[2020-11-25 13:22:22,797 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:22:22,798 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:22:22,799 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:22:22,799 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:22:22,799 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:22:22,815 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,816 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,837 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,838 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,852 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,861 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,867 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,873 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:22:22,873 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:22:22,873 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:22:22,875 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:22:22,879 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/1) ...
[2020-11-25 13:22:22,891 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DATA1TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_DATA1TokenERC20[this][from] && value <= allowance_DATA1TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transferFrom(from, to, value), return == true && allowance_DATA1TokenERC20[this][from][msg.sender] == old(allowance_DATA1TokenERC20[this][from][msg.sender]) - value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:22:22,897 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DATA1TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_DATA1TokenERC20[this][from] && value <= allowance_DATA1TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transferFrom(from, to, value), return == true && allowance_DATA1TokenERC20[this][from][msg.sender] == old(allowance_DATA1TokenERC20[this][from][msg.sender]) - value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:22:22,904 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DATA1TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_DATA1TokenERC20[this][from] && value <= allowance_DATA1TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transferFrom(from, to, value), return == true && allowance_DATA1TokenERC20[this][from][msg.sender] == old(allowance_DATA1TokenERC20[this][from][msg.sender]) - value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:22:22,911 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s220 || p2!=msg.sender ) && _from_s220==_to_s220 ) && _value_s220<=balanceOf_DATA1TokenERC20[this][_from_s220] ) && _value_s220<=allowance_DATA1TokenERC20[this][_from_s220][msg.sender] ) && _value_s220>=0 ) && _value_s220<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_to_s220]>=0 ) && balanceOf_DATA1TokenERC20[this][_to_s220]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_from_s220]>=0 ) && balanceOf_DATA1TokenERC20[this][_from_s220]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_DATA1TokenERC20[this][_from_s220][msg.sender]>=0 ) && allowance_DATA1TokenERC20[this][_from_s220][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:22:22,913 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s220==true && allowance_DATA1TokenERC20[this][_from_s220][msg.sender]==( ( old(allowance_DATA1TokenERC20[this][_from_s220][msg.sender]) ) - _value_s220 ) ) && totalSupply_DATA1TokenERC20[this]==( old(totalSupply_DATA1TokenERC20[this]) ) ) && balanceOf_DATA1TokenERC20[this]==( old(balanceOf_DATA1TokenERC20[this]) ) ) && allowance_DATA1TokenERC20[this][p1][p2]==( old(allowance_DATA1TokenERC20[this][p1][p2]) ) ) && name_DATA1TokenERC20[this]==( old(name_DATA1TokenERC20[this]) ) ) && symbol_DATA1TokenERC20[this]==( old(symbol_DATA1TokenERC20[this]) ) ) && decimals_DATA1TokenERC20[this]==( old(decimals_DATA1TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s220,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_from_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]],IdentifierExpression[_value_s220,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DATA1TokenERC20>]]]]]]
[2020-11-25 13:22:22,917 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DATA1TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_DATA1TokenERC20[this][from] && value <= allowance_DATA1TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][from] >= 0 &&  balanceOf_DATA1TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_DATA1TokenERC20[this][from][msg.sender] >= 0 && allowance_DATA1TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transferFrom(from, to, value), return == true && allowance_DATA1TokenERC20[this][from][msg.sender] == old(allowance_DATA1TokenERC20[this][from][msg.sender]) - value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:22:22,918 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_DATA1TokenERC200) ==> ( <>AP(success_transferFrom_DATA1TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:22:22,923 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:22 PropertyContainer
[2020-11-25 13:22:22,923 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:22:22,923 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:22:22,923 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:22:22,923 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:22:22,924 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/2) ...
[2020-11-25 13:22:22,925 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:22:22,925 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:22:22,933 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:22" (2/2) ...
[2020-11-25 13:22:22,933 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:22:22,934 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:22:22,934 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:22:22,934 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:22:22,934 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/2) ...
[2020-11-25 13:22:22,986 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:22:22,986 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:22:22,986 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:22:22,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:22:22,986 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 13:22:22,986 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:22:22,987 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:22:22,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:22:22,989 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:22:22,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:22:22,991 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:22:22,992 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:22:22,992 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:22:22,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__success
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:22:22,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:22:22,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:22:22,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:22:22,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:22:23,141 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:23,208 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:23,208 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:23,209 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:22:23,414 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:22:23,414 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 13:22:23,416 INFO  L202        PluginConnector]: Adding new model DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:23 BoogieIcfgContainer
[2020-11-25 13:22:23,416 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:22" (2/2) ...
[2020-11-25 13:22:23,416 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:22:23,416 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4402e608 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:23, skipping insertion in model container
[2020-11-25 13:22:23,416 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:22:23,417 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:22:23,417 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:22:23,418 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:22:23,418 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/3) ...
[2020-11-25 13:22:23,419 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@172179b2 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:23, skipping insertion in model container
[2020-11-25 13:22:23,419 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:22" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:22:23,453 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:23 NWAContainer
[2020-11-25 13:22:23,454 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:22:23,454 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:22:23,454 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:22:23,455 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:22:23,456 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:23" (3/4) ...
[2020-11-25 13:22:23,456 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@569116e4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:23, skipping insertion in model container
[2020-11-25 13:22:23,456 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:23" (4/4) ...
[2020-11-25 13:22:23,459 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:22:23,461 INFO  L110   BuchiProductObserver]: Initial RCFG 695 locations, 841 edges
[2020-11-25 13:22:23,462 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:22:23,470 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:22:24,377 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:22:24,379 INFO  L110   BuchiProductObserver]: BuchiProgram size 1624 locations, 2708 edges
[2020-11-25 13:22:24,380 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:24 BoogieIcfgContainer
[2020-11-25 13:22:24,380 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:22:24,380 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:22:24,381 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:22:24,383 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:22:24,384 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:24" (1/1) ...
[2020-11-25 13:22:24,435 INFO  L313           BlockEncoder]: Initial Icfg 1624 locations, 2708 edges
[2020-11-25 13:22:24,435 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:22:24,436 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:22:24,436 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:22:24,437 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:22:24,445 INFO  L70    emoveInfeasibleEdges]: Removed 24 edges and 7 locations because of local infeasibility
[2020-11-25 13:22:24,450 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 13:22:24,456 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:22:24,458 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:22:24,460 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:22:24,461 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:22:24,463 INFO  L313           BlockEncoder]: Encoded RCFG 1608 locations, 2671 edges
[2020-11-25 13:22:24,464 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:22:24 BasicIcfg
[2020-11-25 13:22:24,464 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:22:24,464 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:22:24,464 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:22:24,467 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:22:24,467 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,467 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:22:22" (1/6) ...
[2020-11-25 13:22:24,469 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3d323974 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:24, skipping insertion in model container
[2020-11-25 13:22:24,469 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,469 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:22:22" (2/6) ...
[2020-11-25 13:22:24,469 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3d323974 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:24, skipping insertion in model container
[2020-11-25 13:22:24,469 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,469 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:22:23" (3/6) ...
[2020-11-25 13:22:24,470 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3d323974 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:22:24, skipping insertion in model container
[2020-11-25 13:22:24,470 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,470 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:22:23" (4/6) ...
[2020-11-25 13:22:24,470 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3d323974 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:22:24, skipping insertion in model container
[2020-11-25 13:22:24,470 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,470 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:22:24" (5/6) ...
[2020-11-25 13:22:24,470 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3d323974 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:22:24, skipping insertion in model container
[2020-11-25 13:22:24,470 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:22:24,470 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:22:24" (6/6) ...
[2020-11-25 13:22:24,472 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transferfrom-self.bpl_BEv2
[2020-11-25 13:22:24,510 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:22:24,510 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:22:24,510 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:22:24,510 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:22:24,510 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:22:24,510 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:22:24,510 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:22:24,511 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:22:24,511 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:22:24,531 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1608 states.
[2020-11-25 13:22:24,574 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:24,574 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:24,574 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:24,583 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:24,584 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:24,584 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:22:24,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1608 states.
[2020-11-25 13:22:24,596 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:24,596 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:24,596 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:24,598 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:24,598 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DATA1TokenERC200 := false;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND TRUE   choice == 10
[L1819]              gas := gas - 21000;
[L1820]  COND FALSE  !(gas >= 0)
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:24,616 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:24,616 INFO  L82        PathProgramCache]: Analyzing trace with hash 1815870051, now seen corresponding path program 1 times
[2020-11-25 13:22:24,620 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:24,649 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:24,692 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:24,694 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:24,694 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-25 13:22:24,698 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:24,806 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:22:24,807 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:22:24,810 INFO  L87              Difference]: Start difference. First operand 1608 states. Second operand 3 states.
[2020-11-25 13:22:24,956 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:24,957 INFO  L93              Difference]: Finished difference Result 1253 states and 1364 transitions.
[2020-11-25 13:22:24,957 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:22:24,958 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1253 states and 1364 transitions.
[2020-11-25 13:22:24,967 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:24,980 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1253 states to 1251 states and 1360 transitions.
[2020-11-25 13:22:24,982 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 13:22:24,984 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 573
[2020-11-25 13:22:24,985 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1251 states and 1360 transitions.
[2020-11-25 13:22:24,991 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:24,991 INFO  L728         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:22:25,008 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1251 states and 1360 transitions.
[2020-11-25 13:22:25,045 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1251 to 1251.
[2020-11-25 13:22:25,045 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1251 states.
[2020-11-25 13:22:25,049 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1251 states to 1251 states and 1360 transitions.
[2020-11-25 13:22:25,050 INFO  L751         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:22:25,050 INFO  L631         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:22:25,050 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:22:25,050 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1251 states and 1360 transitions.
[2020-11-25 13:22:25,056 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:25,056 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:25,056 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:25,058 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:25,059 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DATA1TokenERC200 := false;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1135]  COND TRUE   !(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1136]              revert := true;
[L273]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s220 == true && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] == old(allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) - _value_s220) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1135]  COND TRUE   !(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1136]              revert := true;
[L273]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s220 == true && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] == old(allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) - _value_s220) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:25,063 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:25,064 INFO  L82        PathProgramCache]: Analyzing trace with hash -557464310, now seen corresponding path program 1 times
[2020-11-25 13:22:25,065 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:25,080 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:25,108 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:25,108 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:25,108 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:22:25,110 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:25,110 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:22:25,110 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:22:25,110 INFO  L87              Difference]: Start difference. First operand 1251 states and 1360 transitions. cyclomatic complexity: 111 Second operand 3 states.
[2020-11-25 13:22:25,153 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:25,153 INFO  L93              Difference]: Finished difference Result 1609 states and 1790 transitions.
[2020-11-25 13:22:25,153 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:22:25,154 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1609 states and 1790 transitions.
[2020-11-25 13:22:25,164 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:22:25,173 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1609 states to 1553 states and 1724 transitions.
[2020-11-25 13:22:25,173 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 724
[2020-11-25 13:22:25,174 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 724
[2020-11-25 13:22:25,174 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1553 states and 1724 transitions.
[2020-11-25 13:22:25,177 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:25,178 INFO  L728         BuchiCegarLoop]: Abstraction has 1553 states and 1724 transitions.
[2020-11-25 13:22:25,179 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1553 states and 1724 transitions.
[2020-11-25 13:22:25,196 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1553 to 1255.
[2020-11-25 13:22:25,196 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1255 states.
[2020-11-25 13:22:25,200 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1255 states to 1255 states and 1350 transitions.
[2020-11-25 13:22:25,200 INFO  L751         BuchiCegarLoop]: Abstraction has 1255 states and 1350 transitions.
[2020-11-25 13:22:25,200 INFO  L631         BuchiCegarLoop]: Abstraction has 1255 states and 1350 transitions.
[2020-11-25 13:22:25,200 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:22:25,200 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1255 states and 1350 transitions.
[2020-11-25 13:22:25,204 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:25,205 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:25,205 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:25,207 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:25,207 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DATA1TokenERC200 := false;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND TRUE   !(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1119]              revert := true;
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND TRUE   !(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG])
[L1119]              revert := true;
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:25,211 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:25,211 INFO  L82        PathProgramCache]: Analyzing trace with hash 326799165, now seen corresponding path program 1 times
[2020-11-25 13:22:25,211 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:25,226 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:25,287 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:25,287 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:25,288 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 13:22:25,288 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:25,288 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 13:22:25,288 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 13:22:25,289 INFO  L87              Difference]: Start difference. First operand 1255 states and 1350 transitions. cyclomatic complexity: 97 Second operand 6 states.
[2020-11-25 13:22:25,724 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:25,724 INFO  L93              Difference]: Finished difference Result 1385 states and 1494 transitions.
[2020-11-25 13:22:25,724 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:22:25,724 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1385 states and 1494 transitions.
[2020-11-25 13:22:25,730 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:22:25,735 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1385 states to 1385 states and 1494 transitions.
[2020-11-25 13:22:25,735 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 638
[2020-11-25 13:22:25,736 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 638
[2020-11-25 13:22:25,736 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1385 states and 1494 transitions.
[2020-11-25 13:22:25,738 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:25,738 INFO  L728         BuchiCegarLoop]: Abstraction has 1385 states and 1494 transitions.
[2020-11-25 13:22:25,739 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1385 states and 1494 transitions.
[2020-11-25 13:22:25,752 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1385 to 1307.
[2020-11-25 13:22:25,752 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1307 states.
[2020-11-25 13:22:25,754 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1307 states to 1307 states and 1406 transitions.
[2020-11-25 13:22:25,754 INFO  L751         BuchiCegarLoop]: Abstraction has 1307 states and 1406 transitions.
[2020-11-25 13:22:25,754 INFO  L631         BuchiCegarLoop]: Abstraction has 1307 states and 1406 transitions.
[2020-11-25 13:22:25,754 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:22:25,754 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1307 states and 1406 transitions.
[2020-11-25 13:22:25,757 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:22:25,758 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:25,758 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:25,759 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:25,759 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DATA1TokenERC200 := false;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1135]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1139]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1140]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1142]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1072]              __var_2 := null;
[L1073]  COND FALSE  !(!(_to_s161 != null))
[L1077]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1081]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1085]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1086]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1087]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1089]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1090]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1092]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1093]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1142]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1143]  COND FALSE  !(revert)
[L1146]              success_s220 := true;
[L273]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s220 == true && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] == old(allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) - _value_s220) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1135]  COND FALSE  !(!(_value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1139]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] - allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1140]              allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              sum_allowance1[_from_s220] := sum_allowance1[_from_s220] + allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1142]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1072]              __var_2 := null;
[L1073]  COND FALSE  !(!(_to_s161 != null))
[L1077]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1081]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1085]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1086]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1087]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1089]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1090]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1092]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1093]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1142]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1143]  COND FALSE  !(revert)
[L1146]              success_s220 := true;
[L273]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s220 == true && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] == old(allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) - _value_s220) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:25,762 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:25,762 INFO  L82        PathProgramCache]: Analyzing trace with hash 1527579820, now seen corresponding path program 1 times
[2020-11-25 13:22:25,763 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:25,832 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:22:26,789 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:22:26,789 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:22:26,791 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [22] imperfect sequences [] total 22
[2020-11-25 13:22:26,792 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:22:26,792 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 23 interpolants.
[2020-11-25 13:22:26,792 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=68, Invalid=438, Unknown=0, NotChecked=0, Total=506
[2020-11-25 13:22:26,792 INFO  L87              Difference]: Start difference. First operand 1307 states and 1406 transitions. cyclomatic complexity: 101 Second operand 23 states.
[2020-11-25 13:22:29,741 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:22:29,741 INFO  L93              Difference]: Finished difference Result 1400 states and 1549 transitions.
[2020-11-25 13:22:29,742 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 13:22:29,742 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1400 states and 1549 transitions.
[2020-11-25 13:22:29,749 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 13:22:29,755 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1400 states to 1400 states and 1549 transitions.
[2020-11-25 13:22:29,755 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 643
[2020-11-25 13:22:29,755 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 643
[2020-11-25 13:22:29,755 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1400 states and 1549 transitions.
[2020-11-25 13:22:29,757 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:22:29,757 INFO  L728         BuchiCegarLoop]: Abstraction has 1400 states and 1549 transitions.
[2020-11-25 13:22:29,758 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1400 states and 1549 transitions.
[2020-11-25 13:22:29,769 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1400 to 1369.
[2020-11-25 13:22:29,769 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1369 states.
[2020-11-25 13:22:29,771 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1369 states to 1369 states and 1479 transitions.
[2020-11-25 13:22:29,771 INFO  L751         BuchiCegarLoop]: Abstraction has 1369 states and 1479 transitions.
[2020-11-25 13:22:29,771 INFO  L631         BuchiCegarLoop]: Abstraction has 1369 states and 1479 transitions.
[2020-11-25 13:22:29,771 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:22:29,772 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1369 states and 1479 transitions.
[2020-11-25 13:22:29,774 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:22:29,775 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:22:29,775 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:22:29,776 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:22:29,776 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DATA1TokenERC200 := false;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND FALSE  !(!(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1122]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] - __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1123]              __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (__tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1124]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] + __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1125]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1125]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1126]  COND TRUE   revert
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND TRUE   choice == 3
[L1862]              gas := gas - 21000;
[L1863]  COND TRUE   gas >= 0
[L1864]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1865]              assume msgvalue_MSG == 0;
[L1866]  CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND FALSE  !(!(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1122]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] - __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1123]              __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (__tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1124]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] + __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1125]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1125]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1126]  COND TRUE   revert
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:22:29,778 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:29,779 INFO  L82        PathProgramCache]: Analyzing trace with hash -2011603733, now seen corresponding path program 1 times
[2020-11-25 13:22:29,779 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:29,787 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:29,796 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:29,832 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:29,832 INFO  L82        PathProgramCache]: Analyzing trace with hash -70482301, now seen corresponding path program 1 times
[2020-11-25 13:22:29,833 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:29,836 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:29,840 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:29,850 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:22:29,850 INFO  L82        PathProgramCache]: Analyzing trace with hash 516542189, now seen corresponding path program 1 times
[2020-11-25 13:22:29,851 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:22:29,861 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:29,876 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 13:22:30,173 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 159
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
[2020-11-25 13:22:30,398 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 108
[2020-11-25 13:22:30,626 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification that was a NOOP. DAG size: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
[2020-11-25 13:22:31,408 WARN  L188               SmtUtils]: Spent 772.00 ms on a formula simplification. DAG size of input: 208 DAG size of output: 208
[2020-11-25 13:22:32,413 WARN  L188               SmtUtils]: Spent 1.00 s on a formula simplification. DAG size of input: 264 DAG size of output: 239
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-25 13:22:32,685 WARN  L188               SmtUtils]: Spent 242.00 ms on a formula simplification. DAG size of input: 150 DAG size of output: 144
[2020-11-25 13:22:32,883 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification that was a NOOP. DAG size: 279
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
[2020-11-25 13:22:33,373 WARN  L188               SmtUtils]: Spent 483.00 ms on a formula simplification. DAG size of input: 222 DAG size of output: 222
[2020-11-25 13:22:33,584 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification that was a NOOP. DAG size: 222
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 13:22:34,465 WARN  L188               SmtUtils]: Spent 871.00 ms on a formula simplification. DAG size of input: 157 DAG size of output: 152
[2020-11-25 13:22:34,475 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 13:22:34,945 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 159
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 13:22:35,108 WARN  L188               SmtUtils]: Spent 155.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 108
[2020-11-25 13:22:35,318 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification that was a NOOP. DAG size: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 13:22:36,106 WARN  L188               SmtUtils]: Spent 781.00 ms on a formula simplification. DAG size of input: 208 DAG size of output: 208
[2020-11-25 13:22:36,967 WARN  L188               SmtUtils]: Spent 858.00 ms on a formula simplification. DAG size of input: 263 DAG size of output: 239
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 13:22:37,210 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 143
[2020-11-25 13:22:37,443 WARN  L188               SmtUtils]: Spent 232.00 ms on a formula simplification that was a NOOP. DAG size: 278
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
[2020-11-25 13:22:38,077 WARN  L188               SmtUtils]: Spent 628.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 221
[2020-11-25 13:22:38,932 WARN  L188               SmtUtils]: Spent 852.00 ms on a formula simplification. DAG size of input: 397 DAG size of output: 389
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 13:22:39,683 WARN  L188               SmtUtils]: Spent 740.00 ms on a formula simplification. DAG size of input: 195 DAG size of output: 195
[2020-11-25 13:22:40,239 WARN  L188               SmtUtils]: Spent 543.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 13:22:40,898 WARN  L188               SmtUtils]: Spent 646.00 ms on a formula simplification. DAG size of input: 203 DAG size of output: 188
[2020-11-25 13:22:41,721 WARN  L188               SmtUtils]: Spent 822.00 ms on a formula simplification. DAG size of input: 283 DAG size of output: 282
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
[2020-11-25 13:22:42,857 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 281 DAG size of output: 276
[2020-11-25 13:22:42,876 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:42,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:22:42,902 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:22:42 BasicIcfg
[2020-11-25 13:22:42,902 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:22:42,903 INFO  L168              Benchmark]: Toolchain (without parser) took 20105.06 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 940.6 MB in the beginning and 949.9 MB in the end (delta: -9.3 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,903 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,903 INFO  L168              Benchmark]: Boogie Preprocessor took 74.61 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,904 INFO  L168              Benchmark]: UtopiaSpecLang took 49.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,904 INFO  L168              Benchmark]: Boogie Printer took 10.09 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,904 INFO  L168              Benchmark]: RCFGBuilder took 482.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,905 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.00 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,905 INFO  L168              Benchmark]: BÃ¼chi Program Product took 926.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.5 MB in the beginning and 917.9 MB in the end (delta: -45.3 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,905 INFO  L168              Benchmark]: BlockEncodingV2 took 83.23 ms. Allocated memory is still 1.1 GB. Free memory was 917.9 MB in the beginning and 890.0 MB in the end (delta: 27.8 MB). Peak memory consumption was 27.8 MB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,906 INFO  L168              Benchmark]: BuchiAutomizer took 18438.26 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 890.0 MB in the beginning and 949.9 MB in the end (delta: -59.8 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 13:22:42,909 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1624 locations, 2708 edges
  - StatisticsResult: Encoded RCFG
    1608 locations, 2671 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 74.61 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.09 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 482.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.00 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 926.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.5 MB in the beginning and 917.9 MB in the end (delta: -45.3 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 83.23 ms. Allocated memory is still 1.1 GB. Free memory was 917.9 MB in the beginning and 890.0 MB in the end (delta: 27.8 MB). Peak memory consumption was 27.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 18438.26 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 890.0 MB in the beginning and 949.9 MB in the end (delta: -59.8 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    695 locations, 841 edges
  - StatisticsResult: BuchiProgram size
    1624 locations, 2708 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 23 locations. The remainder module has 1369 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 18.3s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 14.3s. Construction of modules took 2.8s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 407 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1369 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5428 SDtfs, 4139 SDslu, 10315 SDs, 0 SdLazy, 16084 SolverSat, 933 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979012) = (new DATA1TokenERC20)({from : 3979016, initialSupply : 3979003, tokenName : 3979010, tokenSymbol : 3979008});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
DATA1TokenERC20(3979012).transferFrom~address~address~uint256.gas(3979002)({from : 3979017, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND FALSE  !(!(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1122]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] - __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1123]              __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (__tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1124]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] + __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1125]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1125]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1126]  COND TRUE   revert
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);

Loop:
DATA1TokenERC20(3979012).transferFrom~address~address~uint256.gas(3979001)({from : 3979014, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s220 || p2 != msgsender_MSG) && _from_s220 == _to_s220) && _value_s220 <= balanceOf_DATA1TokenERC20[this][_from_s220]) && _value_s220 <= allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]) && _value_s220 >= 0) && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_from_s220] >= 0) && balanceOf_DATA1TokenERC20[this][_from_s220] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] >= 0) && allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DATA1TokenERC200 := true;
[L3]                 call_transferFrom_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L265]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L266]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L267]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L268]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L269]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L270]   CALL        call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1118]  COND FALSE  !(!(_value_s220 <= __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG]))
[L1122]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] - __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1123]              __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] := (__tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG] - _value_s220) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1124]              __tmp__sum_allowance1[_from_s220] := __tmp__sum_allowance1[_from_s220] + __tmp__allowance_DATA1TokenERC20[this][_from_s220][msgsender_MSG];
[L1125]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1125]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L1126]  COND TRUE   revert
[L270]   RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);
[L271]               assume revert || gas < 0;
[L1866]  RET         call success_s220 := transferFrom~address~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s220, _to_s220, _value_s220);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
