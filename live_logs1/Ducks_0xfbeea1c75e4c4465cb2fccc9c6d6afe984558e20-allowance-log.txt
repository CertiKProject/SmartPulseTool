This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:27:20,621 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:27:20,622 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:27:20,633 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:27:20,633 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:27:20,634 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:27:20,635 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:27:20,636 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:27:20,638 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:27:20,638 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:27:20,639 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:27:20,639 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:27:20,640 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:27:20,640 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:27:20,641 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:27:20,642 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:27:20,642 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:27:20,643 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:27:20,645 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:27:20,646 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:27:20,646 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:27:20,647 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:27:20,649 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:27:20,649 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:27:20,649 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:27:20,650 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:27:20,650 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:27:20,650 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:27:20,651 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:27:20,651 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:27:20,651 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:27:20,652 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:27:20,652 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:27:20,653 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:27:20,653 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:27:20,653 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:27:20,654 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:27:20,654 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:27:20,654 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:27:20,655 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:27:20,655 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:27:20,655 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:27:20,663 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:27:20,663 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:27:20,664 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:27:20,664 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:27:20,664 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:27:20,664 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:27:20,664 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:27:20,664 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:27:20,665 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:27:20,665 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:27:20,665 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:27:20,666 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:27:20,666 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:27:20,688 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:27:20,702 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:27:20,705 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:27:20,706 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:27:20,706 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:27:20,707 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl
[2020-11-25 14:27:20,707 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl'
[2020-11-25 14:27:20,778 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:27:20,779 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:27:20,779 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:27:20,779 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:27:20,780 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:27:20,796 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,797 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,820 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,821 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,837 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,844 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,850 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,858 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:27:20,858 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:27:20,858 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:27:20,860 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:27:20,864 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/1) ...
[2020-11-25 14:27:20,879 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Ducks.allowance(owner, spender), allowed_Ducks[this][owner][spender] >= 0 && allowed_Ducks[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.allowance(owner, spender), return == allowed_Ducks[this][owner][spender] &&  _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && balances_Ducks[this] == old(balances_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-25 14:27:20,885 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Ducks.allowance(owner, spender), allowed_Ducks[this][owner][spender] >= 0 && allowed_Ducks[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.allowance(owner, spender), return == allowed_Ducks[this][owner][spender] &&  _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && balances_Ducks[this] == old(balances_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-25 14:27:20,892 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Ducks.allowance(owner, spender), allowed_Ducks[this][owner][spender] >= 0 && allowed_Ducks[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.allowance(owner, spender), return == allowed_Ducks[this][owner][spender] &&  _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && balances_Ducks[this] == old(balances_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-25 14:27:20,897 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_Ducks[this][tokenOwner_s263][spender_s263]>=0 && allowed_Ducks[this][tokenOwner_s263][spender_s263]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[tokenOwner_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[spender_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[tokenOwner_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[spender_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:27:20,900 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( remaining_s263==allowed_Ducks[this][tokenOwner_s263][spender_s263] && _totalSupply_Ducks[this]==( old(_totalSupply_Ducks[this]) ) ) && balances_Ducks[this]==( old(balances_Ducks[this]) ) ) && allowed_Ducks[this]==( old(allowed_Ducks[this]) ) ) && name_Ducks[this]==( old(name_Ducks[this]) ) ) && symbol_Ducks[this]==( old(symbol_Ducks[this]) ) ) && decimals_Ducks[this]==( old(decimals_Ducks[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[remaining_s263,<IMPLEMENTATION_OUTPARAM,allowance~address~address_Ducks>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[tokenOwner_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],[IdentifierExpression[spender_s263,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_Ducks>]]]]]]
[2020-11-25 14:27:20,904 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Ducks.allowance(owner, spender), allowed_Ducks[this][owner][spender] >= 0 && allowed_Ducks[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.allowance(owner, spender), return == allowed_Ducks[this][owner][spender] &&  _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && balances_Ducks[this] == old(balances_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-25 14:27:20,904 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_Ducks0) ==> ( <>AP(success_allowance_Ducks0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:27:20,910 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:27:20 PropertyContainer
[2020-11-25 14:27:20,910 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:27:20,910 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:27:20,910 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:27:20,910 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:27:20,911 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/2) ...
[2020-11-25 14:27:20,911 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:27:20,912 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:27:20,922 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:27:20" (2/2) ...
[2020-11-25 14:27:20,922 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:27:20,922 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:27:20,922 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:27:20,923 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:27:20,924 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/2) ...
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:27:20,975 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 14:27:20,975 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:27:20,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 14:27:20,976 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 14:27:20,976 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 14:27:20,977 INFO  L130     BoogieDeclarations]: Found specification of procedure Ducks_Ducks_NoBaseCtor__success
[2020-11-25 14:27:20,977 INFO  L130     BoogieDeclarations]: Found specification of procedure Ducks_Ducks
[2020-11-25 14:27:20,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ducks_Ducks
[2020-11-25 14:27:20,977 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks
[2020-11-25 14:27:20,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Ducks
[2020-11-25 14:27:20,978 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Ducks
[2020-11-25 14:27:20,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Ducks
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Ducks
[2020-11-25 14:27:20,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Ducks
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Ducks
[2020-11-25 14:27:20,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Ducks
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ducks
[2020-11-25 14:27:20,979 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,980 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure Ducks_Ducks_NoBaseCtor__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure Ducks_Ducks__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure Ducks_Ducks__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks__success
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks__fail
[2020-11-25 14:27:20,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Ducks__success
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Ducks__fail
[2020-11-25 14:27:20,982 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:27:20,983 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:27:20,983 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:27:20,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ducks_Ducks_NoBaseCtor__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ducks_Ducks_NoBaseCtor__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ducks_Ducks__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ducks_Ducks__success
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks__fail
[2020-11-25 14:27:20,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Ducks__fail
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Ducks__success
[2020-11-25 14:27:20,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Ducks__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Ducks__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Ducks__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Ducks__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Ducks__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Ducks__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:27:20,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ducks
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:27:20,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:27:20,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:27:21,432 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:27:21,433 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:27:21,433 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:27:21,507 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:27:21,507 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 14:27:21,509 INFO  L202        PluginConnector]: Adding new model Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:27:21 BoogieIcfgContainer
[2020-11-25 14:27:21,509 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:27:20" (2/2) ...
[2020-11-25 14:27:21,509 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:27:21,509 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4c81418d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:27:21, skipping insertion in model container
[2020-11-25 14:27:21,509 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:27:21,510 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:27:21,510 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:27:21,511 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:27:21,511 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/3) ...
[2020-11-25 14:27:21,512 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5794822f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:27:21, skipping insertion in model container
[2020-11-25 14:27:21,512 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:27:20" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:27:21,547 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:27:21 NWAContainer
[2020-11-25 14:27:21,547 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:27:21,547 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:27:21,547 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:27:21,548 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:27:21,549 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:27:21" (3/4) ...
[2020-11-25 14:27:21,549 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1a6565e1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:27:21, skipping insertion in model container
[2020-11-25 14:27:21,549 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:27:21" (4/4) ...
[2020-11-25 14:27:21,552 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:27:21,555 INFO  L110   BuchiProductObserver]: Initial RCFG 1049 locations, 1322 edges
[2020-11-25 14:27:21,555 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:27:21,565 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:27:22,521 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:27:22,524 INFO  L110   BuchiProductObserver]: BuchiProgram size 2488 locations, 4278 edges
[2020-11-25 14:27:22,525 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:27:22 BoogieIcfgContainer
[2020-11-25 14:27:22,525 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:27:22,525 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:27:22,525 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:27:22,526 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:27:22,527 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:27:22" (1/1) ...
[2020-11-25 14:27:22,593 INFO  L313           BlockEncoder]: Initial Icfg 2488 locations, 4278 edges
[2020-11-25 14:27:22,593 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:27:22,594 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:27:22,594 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:27:22,595 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:27:22,603 INFO  L70    emoveInfeasibleEdges]: Removed 66 edges and 9 locations because of local infeasibility
[2020-11-25 14:27:22,610 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 14:27:22,617 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:27:22,622 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:27:22,625 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:27:22,625 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:27:22,630 INFO  L313           BlockEncoder]: Encoded RCFG 2444 locations, 4160 edges
[2020-11-25 14:27:22,630 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:27:22 BasicIcfg
[2020-11-25 14:27:22,630 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:27:22,631 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:27:22,631 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:27:22,634 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:27:22,634 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,634 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:27:20" (1/6) ...
[2020-11-25 14:27:22,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@58faf681 and model type Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:27:22, skipping insertion in model container
[2020-11-25 14:27:22,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:27:20" (2/6) ...
[2020-11-25 14:27:22,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@58faf681 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:27:22, skipping insertion in model container
[2020-11-25 14:27:22,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:27:21" (3/6) ...
[2020-11-25 14:27:22,637 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@58faf681 and model type Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:27:22, skipping insertion in model container
[2020-11-25 14:27:22,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,637 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:27:21" (4/6) ...
[2020-11-25 14:27:22,637 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@58faf681 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:27:22, skipping insertion in model container
[2020-11-25 14:27:22,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,637 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:27:22" (5/6) ...
[2020-11-25 14:27:22,637 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@58faf681 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:27:22, skipping insertion in model container
[2020-11-25 14:27:22,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:27:22,638 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:27:22" (6/6) ...
[2020-11-25 14:27:22,639 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_allowance.bpl_BEv2
[2020-11-25 14:27:22,673 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:27:22,673 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:27:22,673 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:27:22,673 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:27:22,673 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:27:22,673 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:27:22,673 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:27:22,673 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:27:22,673 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:27:22,700 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2444 states.
[2020-11-25 14:27:22,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:27:22,746 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:27:22,746 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:27:22,756 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:22,756 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:22,756 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:27:22,756 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2444 states.
[2020-11-25 14:27:22,802 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:27:22,802 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:27:22,802 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:27:22,805 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:22,806 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Ducks0 := false;
[L2]                 call_allowance_Ducks0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == Ducks;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND TRUE   revert
[L421]   RET         call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;

Loop:
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND TRUE   choice == 14
[L2751]              gas := gas - 21000;
[L2752]  COND FALSE  !(gas >= 0)
[L2863]  RET         call CorralChoice_Ducks(this);

[2020-11-25 14:27:22,827 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:27:22,827 INFO  L82        PathProgramCache]: Analyzing trace with hash -690264259, now seen corresponding path program 1 times
[2020-11-25 14:27:22,832 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:27:22,851 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:27:22,889 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:27:22,890 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:27:22,890 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:27:22,893 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:27:22,902 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:27:22,902 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:27:22,903 INFO  L87              Difference]: Start difference. First operand 2444 states. Second operand 4 states.
[2020-11-25 14:27:23,296 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:27:23,296 INFO  L93              Difference]: Finished difference Result 1722 states and 1879 transitions.
[2020-11-25 14:27:23,297 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:27:23,298 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1722 states and 1879 transitions.
[2020-11-25 14:27:23,305 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:27:23,317 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1722 states to 1722 states and 1879 transitions.
[2020-11-25 14:27:23,318 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:27:23,319 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 597
[2020-11-25 14:27:23,320 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1722 states and 1879 transitions.
[2020-11-25 14:27:23,324 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:27:23,324 INFO  L728         BuchiCegarLoop]: Abstraction has 1722 states and 1879 transitions.
[2020-11-25 14:27:23,337 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1722 states and 1879 transitions.
[2020-11-25 14:27:23,371 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1722 to 1722.
[2020-11-25 14:27:23,372 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1722 states.
[2020-11-25 14:27:23,375 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1722 states to 1722 states and 1879 transitions.
[2020-11-25 14:27:23,376 INFO  L751         BuchiCegarLoop]: Abstraction has 1722 states and 1879 transitions.
[2020-11-25 14:27:23,376 INFO  L631         BuchiCegarLoop]: Abstraction has 1722 states and 1879 transitions.
[2020-11-25 14:27:23,376 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:27:23,376 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1722 states and 1879 transitions.
[2020-11-25 14:27:23,381 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:27:23,381 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:27:23,381 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:27:23,382 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:23,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Ducks0 := false;
[L2]                 call_allowance_Ducks0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == Ducks;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND TRUE   revert
[L421]   RET         call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L571]   CALL        call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1506]              remaining_s263 := allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L571]   RET         call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L572]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((remaining_s263 == allowed_Ducks[this][tokenOwner_s263][spender_s263] && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && balances_Ducks[this] == old(balances_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L2]                 revert := revert_hold;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

Loop:
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L571]   CALL        call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1506]              remaining_s263 := allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L571]   RET         call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L572]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((remaining_s263 == allowed_Ducks[this][tokenOwner_s263][spender_s263] && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && balances_Ducks[this] == old(balances_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L2]                 revert := revert_hold;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

[2020-11-25 14:27:23,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:27:23,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 1634551558, now seen corresponding path program 1 times
[2020-11-25 14:27:23,387 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:27:23,396 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:27:23,413 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:27:23,413 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:27:23,413 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:27:23,414 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:27:23,415 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:27:23,415 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:27:23,415 INFO  L87              Difference]: Start difference. First operand 1722 states and 1879 transitions. cyclomatic complexity: 159 Second operand 4 states.
[2020-11-25 14:27:23,699 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:27:23,700 INFO  L93              Difference]: Finished difference Result 2596 states and 2949 transitions.
[2020-11-25 14:27:23,700 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:27:23,700 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2596 states and 2949 transitions.
[2020-11-25 14:27:23,712 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 14:27:23,723 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2596 states to 2520 states and 2867 transitions.
[2020-11-25 14:27:23,723 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 833
[2020-11-25 14:27:23,724 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 838
[2020-11-25 14:27:23,724 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2520 states and 2867 transitions.
[2020-11-25 14:27:23,728 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:27:23,728 INFO  L728         BuchiCegarLoop]: Abstraction has 2520 states and 2867 transitions.
[2020-11-25 14:27:23,730 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2520 states and 2867 transitions.
[2020-11-25 14:27:23,763 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2520 to 1873.
[2020-11-25 14:27:23,763 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1873 states.
[2020-11-25 14:27:23,767 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1873 states to 1873 states and 2032 transitions.
[2020-11-25 14:27:23,767 INFO  L751         BuchiCegarLoop]: Abstraction has 1873 states and 2032 transitions.
[2020-11-25 14:27:23,768 INFO  L631         BuchiCegarLoop]: Abstraction has 1873 states and 2032 transitions.
[2020-11-25 14:27:23,768 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:27:23,768 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1873 states and 2032 transitions.
[2020-11-25 14:27:23,773 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:27:23,774 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:27:23,774 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:27:23,776 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:23,776 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Ducks0 := false;
[L2]                 call_allowance_Ducks0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == Ducks;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND FALSE  !(revert)
[L1460]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1313]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]              assume msgsender_MSG != null;
[L1299]              Balance[this] := 0;
[L1313]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  COND FALSE  !(revert)
[L1460]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1461]  COND FALSE  !(revert)
[L1464]  CALL        call Ducks_Ducks_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1417]              assume msgsender_MSG != null;
[L1418]              Balance[this] := 0;
[L1419]              name_Ducks[this] := 560717954;
[L1420]              symbol_Ducks[this] := 560717954;
[L1421]              decimals_Ducks[this] := 0;
[L1422]              _totalSupply_Ducks[this] := 0;
[L1423]              balances_Ducks[this] := zeroRefintArr();
[L1424]              sum_balances0[this] := 0;
[L1425]              allowed_Ducks[this] := zeroRefRefintArr();
[L1426]              sum_allowed1[this] := 0;
[L1428]              name_Ducks[this] := 1576131613;
[L1429]              symbol_Ducks[this] := -1943651461;
[L1430]              decimals_Ducks[this] := 18;
[L1431]              _totalSupply_Ducks[this] := 1500000000000000000000000;
[L1432]              sum_balances0[this] := sum_balances0[this] - balances_Ducks[this][msgsender_MSG];
[L1433]              balances_Ducks[this][msgsender_MSG] := _totalSupply_Ducks[this];
[L1434]              sum_balances0[this] := sum_balances0[this] + balances_Ducks[this][msgsender_MSG];
[L1435]              assert { :EventEmitted "Transfer_Ducks" } true;
[L1464]  RET         call Ducks_Ducks_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1465]  COND FALSE  !(revert)
[L421]   RET         call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L571]   CALL        call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1506]              remaining_s263 := allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L571]   RET         call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L572]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((remaining_s263 == allowed_Ducks[this][tokenOwner_s263][spender_s263] && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && balances_Ducks[this] == old(balances_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L2]                 revert := revert_hold;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

Loop:
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L571]   CALL        call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1506]              remaining_s263 := allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L571]   RET         call remaining_s263 := allowance~address~address_Ducks__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L572]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((remaining_s263 == allowed_Ducks[this][tokenOwner_s263][spender_s263] && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && balances_Ducks[this] == old(balances_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L2]                 revert := revert_hold;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

[2020-11-25 14:27:23,779 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:27:23,780 INFO  L82        PathProgramCache]: Analyzing trace with hash 1498048288, now seen corresponding path program 1 times
[2020-11-25 14:27:23,780 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:27:23,794 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:27:23,837 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:27:23,837 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:27:23,837 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:27:23,838 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:27:23,838 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:27:23,838 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:27:23,838 INFO  L87              Difference]: Start difference. First operand 1873 states and 2032 transitions. cyclomatic complexity: 161 Second operand 4 states.
[2020-11-25 14:27:23,888 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:27:23,889 INFO  L93              Difference]: Finished difference Result 1874 states and 2031 transitions.
[2020-11-25 14:27:23,889 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:27:23,889 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1874 states and 2031 transitions.
[2020-11-25 14:27:23,898 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:27:23,905 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1874 states to 1864 states and 2021 transitions.
[2020-11-25 14:27:23,906 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 668
[2020-11-25 14:27:23,906 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 668
[2020-11-25 14:27:23,906 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1864 states and 2021 transitions.
[2020-11-25 14:27:23,908 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:27:23,908 INFO  L728         BuchiCegarLoop]: Abstraction has 1864 states and 2021 transitions.
[2020-11-25 14:27:23,910 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1864 states and 2021 transitions.
[2020-11-25 14:27:23,927 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1864 to 1862.
[2020-11-25 14:27:23,927 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1862 states.
[2020-11-25 14:27:23,931 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1862 states to 1862 states and 2019 transitions.
[2020-11-25 14:27:23,931 INFO  L751         BuchiCegarLoop]: Abstraction has 1862 states and 2019 transitions.
[2020-11-25 14:27:23,931 INFO  L631         BuchiCegarLoop]: Abstraction has 1862 states and 2019 transitions.
[2020-11-25 14:27:23,931 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:27:23,931 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1862 states and 2019 transitions.
[2020-11-25 14:27:23,936 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:27:23,936 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:27:23,936 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:27:23,938 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:27:23,938 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_Ducks0 := false;
[L2]                 call_allowance_Ducks0 := false;
[L2]     CALL        call main();
[L2853]              assume null == 0;
[L2854]  CALL        call this := FreshRefGenerator__success();
[L1249]              havoc newRef;
[L1250]              assume Alloc[newRef] == false;
[L1251]              Alloc[newRef] := true;
[L1252]              assume newRef != null;
[L2854]  RET         call this := FreshRefGenerator__success();
[L2855]              assume now >= 0;
[L2856]              assume DType[this] == Ducks;
[L2857]              assume msgvalue_MSG == 0;
[L2858]              gas := gas - 53000;
[L2859]  CALL        call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L398]               havoc __exception;
[L399]               revert := false;
[L400]   COND FALSE  !(__exception)
[L421]   CALL        call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L1456]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1266]              assume msgsender_MSG != null;
[L1267]              Balance[this] := 0;
[L1281]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  COND FALSE  !(revert)
[L1456]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  COND FALSE  !(revert)
[L1460]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1313]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]              assume msgsender_MSG != null;
[L1299]              Balance[this] := 0;
[L1313]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  COND FALSE  !(revert)
[L1460]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1461]  COND FALSE  !(revert)
[L1464]  CALL        call Ducks_Ducks_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1417]              assume msgsender_MSG != null;
[L1418]              Balance[this] := 0;
[L1419]              name_Ducks[this] := 560717954;
[L1420]              symbol_Ducks[this] := 560717954;
[L1421]              decimals_Ducks[this] := 0;
[L1422]              _totalSupply_Ducks[this] := 0;
[L1423]              balances_Ducks[this] := zeroRefintArr();
[L1424]              sum_balances0[this] := 0;
[L1425]              allowed_Ducks[this] := zeroRefRefintArr();
[L1426]              sum_allowed1[this] := 0;
[L1428]              name_Ducks[this] := 1576131613;
[L1429]              symbol_Ducks[this] := -1943651461;
[L1430]              decimals_Ducks[this] := 18;
[L1431]              _totalSupply_Ducks[this] := 1500000000000000000000000;
[L1432]              sum_balances0[this] := sum_balances0[this] - balances_Ducks[this][msgsender_MSG];
[L1433]              balances_Ducks[this][msgsender_MSG] := _totalSupply_Ducks[this];
[L1434]              sum_balances0[this] := sum_balances0[this] + balances_Ducks[this][msgsender_MSG];
[L1435]              assert { :EventEmitted "Transfer_Ducks" } true;
[L1464]  RET         call Ducks_Ducks_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1465]  COND FALSE  !(revert)
[L421]   RET         call Ducks_Ducks__success(this, msgsender_MSG, msgvalue_MSG);
[L422]               assume !revert && gas >= 0;
[L2859]  RET         call Ducks_Ducks(this, msgsender_MSG, msgvalue_MSG);
[L2860]              assume !revert && gas >= 0;
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balances0 := sum_balances0;
[L557]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowed1 := sum_allowed1;
[L560]               __tmp__Length := Length;
[L561]               __tmp__now := now;
[L562]               __tmp__name_Ducks := name_Ducks;
[L563]               __tmp__symbol_Ducks := symbol_Ducks;
[L564]               __tmp__decimals_Ducks := decimals_Ducks;
[L565]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L566]               __tmp__balances_Ducks := balances_Ducks;
[L567]               __tmp__allowed_Ducks := allowed_Ducks;
[L568]   CALL        call remaining_s263 := allowance~address~address_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1500]              remaining_s263 := __tmp__allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L568]   RET         call remaining_s263 := allowance~address~address_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L569]               assume revert || gas < 0;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

Loop:
[L2863]  CALL        call CorralChoice_Ducks(this);
[L2704]              havoc msgsender_MSG;
[L2705]              havoc msgvalue_MSG;
[L2706]              havoc choice;
[L2707]              havoc __ret_0_totalSupply;
[L2708]              havoc tokenOwner_s247;
[L2709]              havoc balance_s247;
[L2710]              havoc tokenOwner_s263;
[L2711]              havoc spender_s263;
[L2712]              havoc remaining_s263;
[L2713]              havoc to_s334;
[L2714]              havoc tokens_s334;
[L2715]              havoc success_s334;
[L2716]              havoc spender_s291;
[L2717]              havoc tokens_s291;
[L2718]              havoc success_s291;
[L2719]              havoc from_s393;
[L2720]              havoc to_s393;
[L2721]              havoc tokens_s393;
[L2722]              havoc success_s393;
[L2723]              havoc a_s90;
[L2724]              havoc b_s90;
[L2725]              havoc c_s90;
[L2726]              havoc a_s112;
[L2727]              havoc b_s112;
[L2728]              havoc c_s112;
[L2729]              havoc a_s140;
[L2730]              havoc b_s140;
[L2731]              havoc c_s140;
[L2732]              havoc a_s162;
[L2733]              havoc b_s162;
[L2734]              havoc c_s162;
[L2735]              havoc __ret_0_name;
[L2736]              havoc __ret_0_symbol;
[L2737]              havoc __ret_0_decimals;
[L2738]              havoc __ret_0__totalSupply;
[L2739]              havoc tmpNow;
[L2740]              havoc gas;
[L2741]              assume gas > 4000000 && gas <= 8000000;
[L2742]              tmpNow := now;
[L2743]              havoc now;
[L2744]              assume now > tmpNow;
[L2745]              assume msgsender_MSG != null;
[L2746]              assume DType[msgsender_MSG] != ERC20Interface;
[L2747]              assume DType[msgsender_MSG] != SafeMath;
[L2748]              assume DType[msgsender_MSG] != Ducks;
[L2749]              Alloc[msgsender_MSG] := true;
[L2750]  COND FALSE  !(choice == 14)
[L2756]  COND FALSE  !(choice == 13)
[L2762]  COND TRUE   choice == 12
[L2763]              gas := gas - 21000;
[L2764]  COND TRUE   gas >= 0
[L2765]              assume msgvalue_MSG == 0;
[L2766]  CALL        call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_Ducks[this][tokenOwner_s263][spender_s263] >= 0 && allowed_Ducks[this][tokenOwner_s263][spender_s263] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_Ducks0 := true;
[L2]                 call_allowance_Ducks0 := false;
[L2]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balances0 := sum_balances0;
[L557]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowed1 := sum_allowed1;
[L560]               __tmp__Length := Length;
[L561]               __tmp__now := now;
[L562]               __tmp__name_Ducks := name_Ducks;
[L563]               __tmp__symbol_Ducks := symbol_Ducks;
[L564]               __tmp__decimals_Ducks := decimals_Ducks;
[L565]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L566]               __tmp__balances_Ducks := balances_Ducks;
[L567]               __tmp__allowed_Ducks := allowed_Ducks;
[L568]   CALL        call remaining_s263 := allowance~address~address_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L1500]              remaining_s263 := __tmp__allowed_Ducks[this][tokenOwner_s263][spender_s263];
[L568]   RET         call remaining_s263 := allowance~address~address_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L569]               assume revert || gas < 0;
[L2766]  RET         call remaining_s263 := allowance~address~address_Ducks(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s263, spender_s263);
[L2863]  RET         call CorralChoice_Ducks(this);

[2020-11-25 14:27:23,941 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:27:23,942 INFO  L82        PathProgramCache]: Analyzing trace with hash -1819482548, now seen corresponding path program 1 times
[2020-11-25 14:27:23,942 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:27:23,952 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:27:23,983 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:27:23,983 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:27:23,983 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 14:27:23,984 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:27:23,984 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 14:27:23,984 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 14:27:23,984 INFO  L87              Difference]: Start difference. First operand 1862 states and 2019 transitions. cyclomatic complexity: 159 Second operand 5 states.
[2020-11-25 14:27:24,221 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:27:24,222 INFO  L93              Difference]: Finished difference Result 1280 states and 1384 transitions.
[2020-11-25 14:27:24,222 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:27:24,222 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1280 states and 1384 transitions.
[2020-11-25 14:27:24,226 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:27:24,226 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1280 states to 0 states and 0 transitions.
[2020-11-25 14:27:24,226 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 14:27:24,226 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 14:27:24,226 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 14:27:24,227 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:27:24,227 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:27:24,227 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:27:24,227 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:27:24,227 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:27:24,227 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 14:27:24,227 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:27:24,227 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 14:27:24,231 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:27:24 BasicIcfg
[2020-11-25 14:27:24,231 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:27:24,231 INFO  L168              Benchmark]: Toolchain (without parser) took 3453.16 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 283.6 MB). Free memory was 940.6 MB in the beginning and 847.4 MB in the end (delta: 93.2 MB). Peak memory consumption was 376.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,232 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,233 INFO  L168              Benchmark]: Boogie Preprocessor took 78.56 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,233 INFO  L168              Benchmark]: UtopiaSpecLang took 52.00 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,233 INFO  L168              Benchmark]: Boogie Printer took 11.85 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,233 INFO  L168              Benchmark]: RCFGBuilder took 587.01 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.2 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,234 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.28 ms. Allocated memory is still 1.0 GB. Free memory was 849.2 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,234 INFO  L168              Benchmark]: BÃ¼chi Program Product took 977.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 845.7 MB in the beginning and 766.8 MB in the end (delta: 78.8 MB). Peak memory consumption was 136.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,234 INFO  L168              Benchmark]: BlockEncodingV2 took 105.56 ms. Allocated memory is still 1.1 GB. Free memory was 766.8 MB in the beginning and 720.7 MB in the end (delta: 46.2 MB). Peak memory consumption was 46.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,235 INFO  L168              Benchmark]: BuchiAutomizer took 1600.06 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 226.5 MB). Free memory was 720.7 MB in the beginning and 847.4 MB in the end (delta: -126.7 MB). Peak memory consumption was 99.8 MB. Max. memory is 15.3 GB.
[2020-11-25 14:27:24,238 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2488 locations, 4278 edges
  - StatisticsResult: Encoded RCFG
    2444 locations, 4160 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 78.56 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.00 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.85 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 587.01 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.2 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.28 ms. Allocated memory is still 1.0 GB. Free memory was 849.2 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 977.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 845.7 MB in the beginning and 766.8 MB in the end (delta: 78.8 MB). Peak memory consumption was 136.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 105.56 ms. Allocated memory is still 1.1 GB. Free memory was 766.8 MB in the beginning and 720.7 MB in the end (delta: 46.2 MB). Peak memory consumption was 46.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1600.06 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 226.5 MB). Free memory was 720.7 MB in the beginning and 847.4 MB in the end (delta: -126.7 MB). Peak memory consumption was 99.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1049 locations, 1322 edges
  - StatisticsResult: BuchiProgram size
    2488 locations, 4278 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.5s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 649 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1873 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7368 SDtfs, 6155 SDslu, 8999 SDs, 0 SdLazy, 1503 SolverSat, 1303 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_Ducks0) ==> ( <>(success_allowance_Ducks0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
