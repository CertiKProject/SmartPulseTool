This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:57:45,343 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:57:45,345 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:57:45,355 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:57:45,355 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:57:45,355 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:57:45,356 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:57:45,358 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:57:45,359 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:57:45,360 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:57:45,360 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:57:45,361 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:57:45,361 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:57:45,362 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:57:45,363 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:57:45,363 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:57:45,364 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:57:45,365 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:57:45,366 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:57:45,367 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:57:45,368 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:57:45,369 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:57:45,371 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:57:45,371 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:57:45,371 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:57:45,371 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:57:45,372 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:57:45,372 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:57:45,372 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:57:45,373 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:57:45,373 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:57:45,374 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:57:45,374 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:57:45,375 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:57:45,375 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:57:45,375 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:57:45,376 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:57:45,376 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:57:45,376 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:57:45,377 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:57:45,377 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:57:45,377 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:57:45,385 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:57:45,385 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:57:45,386 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:57:45,386 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:57:45,386 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:57:45,386 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:57:45,386 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:57:45,386 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:57:45,386 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:57:45,386 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:57:45,387 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:57:45,387 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:57:45,388 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:57:45,388 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:57:45,410 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:57:45,423 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:57:45,426 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:57:45,427 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:57:45,428 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:57:45,428 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl
[2020-11-25 16:57:45,428 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl'
[2020-11-25 16:57:45,524 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:57:45,525 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:57:45,525 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:57:45,525 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:57:45,525 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:57:45,536 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,537 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,565 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,565 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,584 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,593 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,601 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,611 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:57:45,612 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:57:45,612 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:57:45,614 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:57:45,617 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/1) ...
[2020-11-25 16:57:45,634 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(GEEQToken.transferFrom(from, to, value), from == to && (value > balances_GEEQToken[this][from] || value > allowed_GEEQToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][to] >= 0 && balances_GEEQToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][from] >= 0 &&  balances_GEEQToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_GEEQToken[this][from][msg.sender] >= 0 && allowed_GEEQToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(GEEQToken.transferFrom)))
[2020-11-25 16:57:45,639 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(GEEQToken.transferFrom(from, to, value), from == to && (value > balances_GEEQToken[this][from] || value > allowed_GEEQToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][to] >= 0 && balances_GEEQToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][from] >= 0 &&  balances_GEEQToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_GEEQToken[this][from][msg.sender] >= 0 && allowed_GEEQToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(GEEQToken.transferFrom)))
[2020-11-25 16:57:45,647 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(GEEQToken.transferFrom(from, to, value), from == to && (value > balances_GEEQToken[this][from] || value > allowed_GEEQToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][to] >= 0 && balances_GEEQToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][from] >= 0 &&  balances_GEEQToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_GEEQToken[this][from][msg.sender] >= 0 && allowed_GEEQToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(GEEQToken.transferFrom)))
[2020-11-25 16:57:45,655 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s747==to_s747 && ( tokens_s747>balances_GEEQToken[this][from_s747] || tokens_s747>allowed_GEEQToken[this][from_s747][msg.sender] ) ) && tokens_s747>=0 ) && tokens_s747<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_GEEQToken[this][to_s747]>=0 ) && balances_GEEQToken[this][to_s747]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_GEEQToken[this][from_s747]>=0 ) && balances_GEEQToken[this][from_s747]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_GEEQToken[this][from_s747][msg.sender]>=0 ) && allowed_GEEQToken[this][from_s747][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>],IdentifierExpression[to_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[tokens_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[to_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[to_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[from_s747,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_GEEQToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:57:45,660 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(GEEQToken.transferFrom(from, to, value), from == to && (value > balances_GEEQToken[this][from] || value > allowed_GEEQToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][to] >= 0 && balances_GEEQToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_GEEQToken[this][from] >= 0 &&  balances_GEEQToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_GEEQToken[this][from][msg.sender] >= 0 && allowed_GEEQToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(GEEQToken.transferFrom)))
[2020-11-25 16:57:45,660 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_GEEQToken0) ==> ( <>AP(fail_transferFrom_GEEQToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:57:45,670 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:57:45 PropertyContainer
[2020-11-25 16:57:45,670 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:57:45,670 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:57:45,670 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:57:45,670 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:57:45,671 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/2) ...
[2020-11-25 16:57:45,671 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:57:45,672 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:57:45,686 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:57:45" (2/2) ...
[2020-11-25 16:57:45,686 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:57:45,687 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:57:45,687 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:57:45,687 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:57:45,687 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/2) ...
[2020-11-25 16:57:45,738 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:57:45,738 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:57:45,738 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:57:45,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:57:45,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:57:45,739 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:57:45,740 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:57:45,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 16:57:45,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 16:57:45,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 16:57:45,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 16:57:45,741 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 16:57:45,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 16:57:45,742 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 16:57:45,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 16:57:45,742 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken_NoBaseCtor__success
[2020-11-25 16:57:45,742 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken
[2020-11-25 16:57:45,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken
[2020-11-25 16:57:45,742 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken
[2020-11-25 16:57:45,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken
[2020-11-25 16:57:45,742 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken
[2020-11-25 16:57:45,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken
[2020-11-25 16:57:45,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken
[2020-11-25 16:57:45,743 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken
[2020-11-25 16:57:45,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_GEEQToken__success
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken
[2020-11-25 16:57:45,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken
[2020-11-25 16:57:45,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken
[2020-11-25 16:57:45,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken
[2020-11-25 16:57:45,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken
[2020-11-25 16:57:45,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_GEEQToken__success
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken
[2020-11-25 16:57:45,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken
[2020-11-25 16:57:45,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken
[2020-11-25 16:57:45,745 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken
[2020-11-25 16:57:45,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken
[2020-11-25 16:57:45,746 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken
[2020-11-25 16:57:45,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken
[2020-11-25 16:57:45,746 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken
[2020-11-25 16:57:45,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken
[2020-11-25 16:57:45,746 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken
[2020-11-25 16:57:45,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken
[2020-11-25 16:57:45,746 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken
[2020-11-25 16:57:45,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:57:45,747 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GEEQToken
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,748 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 16:57:45,749 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken_NoBaseCtor__fail
[2020-11-25 16:57:45,750 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken__fail
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken__fail
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken__fail
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken__fail
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken__success
[2020-11-25 16:57:45,751 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken__fail
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken__success
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken__fail
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken__success
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken__fail
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken__success
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken__fail
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_GEEQToken__fail
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,752 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken__success
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken__fail
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,753 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken__success
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken__fail
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken__success
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken__fail
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_GEEQToken__fail
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken__success
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken__fail
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken__success
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken__fail
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken__success
[2020-11-25 16:57:45,754 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken__success
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken__success
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken__success
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken__success
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:57:45,755 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:57:45,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:57:45,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:57:45,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:57:45,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 16:57:45,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken_NoBaseCtor__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken_NoBaseCtor__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken__fail
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken__success
[2020-11-25 16:57:45,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken__fail
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken__success
[2020-11-25 16:57:45,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_GEEQToken__success
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken__fail
[2020-11-25 16:57:45,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken__success
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken__fail
[2020-11-25 16:57:45,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken__success
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 16:57:45,762 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GEEQToken
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:57:45,763 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:57:45,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:57:46,084 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:57:46,084 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:57:46,434 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:57:46,434 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:57:46,436 INFO  L202        PluginConnector]: Adding new model GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:57:46 BoogieIcfgContainer
[2020-11-25 16:57:46,436 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:57:45" (2/2) ...
[2020-11-25 16:57:46,437 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:57:46,437 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@447ff04d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:57:46, skipping insertion in model container
[2020-11-25 16:57:46,437 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:57:46,437 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:57:46,437 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:57:46,439 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:57:46,439 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/3) ...
[2020-11-25 16:57:46,439 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1b1db837 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:57:46, skipping insertion in model container
[2020-11-25 16:57:46,439 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:57:45" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:57:46,476 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:57:46 NWAContainer
[2020-11-25 16:57:46,476 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:57:46,476 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:57:46,476 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:57:46,477 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:57:46,478 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:57:46" (3/4) ...
[2020-11-25 16:57:46,479 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6551add and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:57:46, skipping insertion in model container
[2020-11-25 16:57:46,479 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:57:46" (4/4) ...
[2020-11-25 16:57:46,482 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:57:46,486 INFO  L110   BuchiProductObserver]: Initial RCFG 1987 locations, 2483 edges
[2020-11-25 16:57:46,486 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:57:46,497 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:57:47,760 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:57:47,766 INFO  L110   BuchiProductObserver]: BuchiProgram size 4716 locations, 8026 edges
[2020-11-25 16:57:47,766 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:57:47 BoogieIcfgContainer
[2020-11-25 16:57:47,766 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:57:47,766 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:57:47,766 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:57:47,768 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:57:47,768 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:57:47" (1/1) ...
[2020-11-25 16:57:47,863 INFO  L313           BlockEncoder]: Initial Icfg 4716 locations, 8026 edges
[2020-11-25 16:57:47,863 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:57:47,864 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:57:47,864 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:57:47,864 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:57:47,877 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-25 16:57:47,886 INFO  L70        RemoveSinkStates]: Removed 62 edges and 32 locations by removing sink states
[2020-11-25 16:57:47,898 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:57:47,903 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:57:47,907 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:57:47,907 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:57:47,913 INFO  L313           BlockEncoder]: Encoded RCFG 4639 locations, 7842 edges
[2020-11-25 16:57:47,913 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:57:47 BasicIcfg
[2020-11-25 16:57:47,913 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:57:47,914 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:57:47,914 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:57:47,916 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:57:47,916 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,916 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:57:45" (1/6) ...
[2020-11-25 16:57:47,918 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@29515c7a and model type GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:57:47, skipping insertion in model container
[2020-11-25 16:57:47,918 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,918 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:57:45" (2/6) ...
[2020-11-25 16:57:47,918 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@29515c7a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:57:47, skipping insertion in model container
[2020-11-25 16:57:47,918 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,918 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:57:46" (3/6) ...
[2020-11-25 16:57:47,918 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@29515c7a and model type GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:57:47, skipping insertion in model container
[2020-11-25 16:57:47,918 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,918 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:57:46" (4/6) ...
[2020-11-25 16:57:47,919 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@29515c7a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:57:47, skipping insertion in model container
[2020-11-25 16:57:47,919 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,919 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:57:47" (5/6) ...
[2020-11-25 16:57:47,919 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@29515c7a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:57:47, skipping insertion in model container
[2020-11-25 16:57:47,919 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:57:47,919 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:57:47" (6/6) ...
[2020-11-25 16:57:47,920 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_transferfrom-self-fail.bpl_BEv2
[2020-11-25 16:57:47,948 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:57:47,948 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:57:47,948 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:57:47,948 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:57:47,948 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:57:47,949 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:57:47,949 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:57:47,949 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:57:47,949 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:57:47,988 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4639 states.
[2020-11-25 16:57:48,038 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:48,038 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:48,038 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:48,045 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:48,045 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:48,045 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:57:48,045 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4639 states.
[2020-11-25 16:57:48,069 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:48,069 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:48,069 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:48,071 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:48,071 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND FALSE  !(__exception)
[L709]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3140]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2919]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]              assume msgsender_MSG != null;
[L2905]              Balance[this] := 0;
[L2919]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  COND FALSE  !(revert)
[L3140]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  COND TRUE   revert
[L709]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L710]               assume !revert && gas >= 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND TRUE   choice == 26
[L5180]              gas := gas - 21000;
[L5181]  COND FALSE  !(gas >= 0)
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:48,084 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:48,084 INFO  L82        PathProgramCache]: Analyzing trace with hash 719397506, now seen corresponding path program 1 times
[2020-11-25 16:57:48,088 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:48,111 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:48,154 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:57:48,156 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:57:48,157 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:57:48,447 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:48,459 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:57:48,460 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:57:48,461 INFO  L87              Difference]: Start difference. First operand 4639 states. Second operand 4 states.
[2020-11-25 16:57:48,961 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:48,961 INFO  L93              Difference]: Finished difference Result 3581 states and 3937 transitions.
[2020-11-25 16:57:48,961 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:57:48,963 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3581 states and 3937 transitions.
[2020-11-25 16:57:48,979 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:49,002 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3581 states to 3581 states and 3937 transitions.
[2020-11-25 16:57:49,003 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 16:57:49,005 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1052
[2020-11-25 16:57:49,006 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3581 states and 3937 transitions.
[2020-11-25 16:57:49,013 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:49,014 INFO  L728         BuchiCegarLoop]: Abstraction has 3581 states and 3937 transitions.
[2020-11-25 16:57:49,029 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3581 states and 3937 transitions.
[2020-11-25 16:57:49,076 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3581 to 3581.
[2020-11-25 16:57:49,077 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3581 states.
[2020-11-25 16:57:49,084 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3581 states to 3581 states and 3937 transitions.
[2020-11-25 16:57:49,084 INFO  L751         BuchiCegarLoop]: Abstraction has 3581 states and 3937 transitions.
[2020-11-25 16:57:49,084 INFO  L631         BuchiCegarLoop]: Abstraction has 3581 states and 3937 transitions.
[2020-11-25 16:57:49,085 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:57:49,085 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3581 states and 3937 transitions.
[2020-11-25 16:57:49,093 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:49,093 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:49,093 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:49,095 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:49,095 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND FALSE  !(__exception)
[L709]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3140]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2919]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]              assume msgsender_MSG != null;
[L2905]              Balance[this] := 0;
[L2919]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  COND FALSE  !(revert)
[L3140]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  COND TRUE   revert
[L709]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L710]               assume !revert && gas >= 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND TRUE   pauseOn_GEEQToken[this]
[L3600]              assert { :EventEmitted "ErrorEvent_GEEQToken" } true;
[L3601]              revert := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND TRUE   pauseOn_GEEQToken[this]
[L3600]              assert { :EventEmitted "ErrorEvent_GEEQToken" } true;
[L3601]              revert := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:49,099 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:49,100 INFO  L82        PathProgramCache]: Analyzing trace with hash -1709906062, now seen corresponding path program 1 times
[2020-11-25 16:57:49,101 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:49,109 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:49,127 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:57:49,127 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:57:49,127 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:57:49,128 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:49,129 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:57:49,129 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:57:49,129 INFO  L87              Difference]: Start difference. First operand 3581 states and 3937 transitions. cyclomatic complexity: 358 Second operand 4 states.
[2020-11-25 16:57:49,903 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:49,904 INFO  L93              Difference]: Finished difference Result 4564 states and 5056 transitions.
[2020-11-25 16:57:49,904 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:57:49,904 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4564 states and 5056 transitions.
[2020-11-25 16:57:49,922 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:57:49,938 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4564 states to 4356 states and 4820 transitions.
[2020-11-25 16:57:49,938 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1264
[2020-11-25 16:57:49,939 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1289
[2020-11-25 16:57:49,939 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4356 states and 4820 transitions.
[2020-11-25 16:57:49,946 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:49,946 INFO  L728         BuchiCegarLoop]: Abstraction has 4356 states and 4820 transitions.
[2020-11-25 16:57:49,949 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4356 states and 4820 transitions.
[2020-11-25 16:57:49,986 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4356 to 3870.
[2020-11-25 16:57:49,986 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3870 states.
[2020-11-25 16:57:49,989 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3870 states to 3870 states and 4205 transitions.
[2020-11-25 16:57:49,989 INFO  L751         BuchiCegarLoop]: Abstraction has 3870 states and 4205 transitions.
[2020-11-25 16:57:49,989 INFO  L631         BuchiCegarLoop]: Abstraction has 3870 states and 4205 transitions.
[2020-11-25 16:57:49,989 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:57:49,990 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3870 states and 4205 transitions.
[2020-11-25 16:57:49,996 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:57:49,997 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:49,997 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:49,998 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:49,999 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND FALSE  !(__exception)
[L709]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3140]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2919]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]              assume msgsender_MSG != null;
[L2905]              Balance[this] := 0;
[L2919]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  COND FALSE  !(revert)
[L3140]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  COND FALSE  !(revert)
[L3144]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2970]              assume msgsender_MSG != null;
[L2971]              Balance[this] := 0;
[L2972]              owner_Owned[this] := null;
[L2973]              newOwner_Owned[this] := null;
[L2987]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  COND FALSE  !(revert)
[L3144]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]  COND FALSE  !(revert)
[L3148]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3094]              assume msgsender_MSG != null;
[L3095]              Balance[this] := 0;
[L3096]              symbol_GEEQToken[this] := 1164884495;
[L3097]              name_GEEQToken[this] := 1164884495;
[L3098]              decimals_GEEQToken[this] := 0;
[L3099]              _totalSupply_GEEQToken[this] := 0;
[L3100]              _totalMinted_GEEQToken[this] := 0;
[L3101]              _maxMintable_GEEQToken[this] := 0;
[L3102]              pauseOn_GEEQToken[this] := false;
[L3103]              migrationOn_GEEQToken[this] := false;
[L3104]              balances_GEEQToken[this] := zeroRefintArr();
[L3105]              sum_balances0[this] := 0;
[L3106]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3107]              sum_allowed1[this] := 0;
[L3108]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3110]              symbol_GEEQToken[this] := -15460934;
[L3111]              name_GEEQToken[this] := -1182004402;
[L3112]              decimals_GEEQToken[this] := 18;
[L3113]              _totalMinted_GEEQToken[this] := 0;
[L3114]              _totalSupply_GEEQToken[this] := 0;
[L3115]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3116]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              owner_Owned[this] := msgsender_MSG;
[L3148]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3149]  COND FALSE  !(revert)
[L709]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L710]               assume !revert && gas >= 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:50,002 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:50,002 INFO  L82        PathProgramCache]: Analyzing trace with hash 1740266920, now seen corresponding path program 1 times
[2020-11-25 16:57:50,003 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:50,020 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:50,193 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 16:57:50,194 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:57:50,194 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:57:50,194 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:50,195 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:57:50,195 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:57:50,195 INFO  L87              Difference]: Start difference. First operand 3870 states and 4205 transitions. cyclomatic complexity: 337 Second operand 13 states.
[2020-11-25 16:57:52,031 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:52,032 INFO  L93              Difference]: Finished difference Result 3956 states and 4303 transitions.
[2020-11-25 16:57:52,032 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 16:57:52,032 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3956 states and 4303 transitions.
[2020-11-25 16:57:52,040 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:57:52,050 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3956 states to 3956 states and 4303 transitions.
[2020-11-25 16:57:52,050 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1217
[2020-11-25 16:57:52,051 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1217
[2020-11-25 16:57:52,051 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3956 states and 4303 transitions.
[2020-11-25 16:57:52,053 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:52,053 INFO  L728         BuchiCegarLoop]: Abstraction has 3956 states and 4303 transitions.
[2020-11-25 16:57:52,056 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3956 states and 4303 transitions.
[2020-11-25 16:57:52,078 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3956 to 3705.
[2020-11-25 16:57:52,078 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3705 states.
[2020-11-25 16:57:52,082 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3705 states to 3705 states and 3991 transitions.
[2020-11-25 16:57:52,082 INFO  L751         BuchiCegarLoop]: Abstraction has 3705 states and 3991 transitions.
[2020-11-25 16:57:52,082 INFO  L631         BuchiCegarLoop]: Abstraction has 3705 states and 3991 transitions.
[2020-11-25 16:57:52,082 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:57:52,082 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3705 states and 3991 transitions.
[2020-11-25 16:57:52,086 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:52,086 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:52,086 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:52,088 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:52,088 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND TRUE   __exception
[L681]               __tmp__Balance := Balance;
[L682]               __tmp__DType := DType;
[L683]               __tmp__Alloc := Alloc;
[L684]               __tmp__balance_ADDR := balance_ADDR;
[L685]               __tmp__M_Ref_int := M_Ref_int;
[L686]               __tmp__sum_balances0 := sum_balances0;
[L687]               __tmp__alloc_allowed_GEEQToken_lvl0 := alloc_allowed_GEEQToken_lvl0;
[L688]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L689]               __tmp__sum_allowed1 := sum_allowed1;
[L690]               __tmp__sum_geeqaddress2 := sum_geeqaddress2;
[L691]               __tmp__Length := Length;
[L692]               __tmp__now := now;
[L693]               __tmp__owner_Owned := owner_Owned;
[L694]               __tmp__newOwner_Owned := newOwner_Owned;
[L695]               __tmp__symbol_GEEQToken := symbol_GEEQToken;
[L696]               __tmp__name_GEEQToken := name_GEEQToken;
[L697]               __tmp__decimals_GEEQToken := decimals_GEEQToken;
[L698]               __tmp___totalSupply_GEEQToken := _totalSupply_GEEQToken;
[L699]               __tmp___totalMinted_GEEQToken := _totalMinted_GEEQToken;
[L700]               __tmp___maxMintable_GEEQToken := _maxMintable_GEEQToken;
[L701]               __tmp__pauseOn_GEEQToken := pauseOn_GEEQToken;
[L702]               __tmp__migrationOn_GEEQToken := migrationOn_GEEQToken;
[L703]               __tmp__balances_GEEQToken := balances_GEEQToken;
[L704]               __tmp__allowed_GEEQToken := allowed_GEEQToken;
[L705]               __tmp__geeqaddress_GEEQToken := geeqaddress_GEEQToken;
[L706]   CALL        call GEEQToken_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3123]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L2911]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2896]              assume msgsender_MSG != null;
[L2897]              __tmp__Balance[this] := 0;
[L2911]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2912]  COND FALSE  !(revert)
[L3123]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L3127]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2979]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2960]              assume msgsender_MSG != null;
[L2961]              __tmp__Balance[this] := 0;
[L2962]              __tmp__owner_Owned[this] := null;
[L2963]              __tmp__newOwner_Owned[this] := null;
[L2979]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2980]  COND FALSE  !(revert)
[L3127]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L3128]  COND FALSE  !(revert)
[L3131]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3064]              assume msgsender_MSG != null;
[L3065]              __tmp__Balance[this] := 0;
[L3066]              __tmp__symbol_GEEQToken[this] := 1164884495;
[L3067]              __tmp__name_GEEQToken[this] := 1164884495;
[L3068]              __tmp__decimals_GEEQToken[this] := 0;
[L3069]              __tmp___totalSupply_GEEQToken[this] := 0;
[L3070]              __tmp___totalMinted_GEEQToken[this] := 0;
[L3071]              __tmp___maxMintable_GEEQToken[this] := 0;
[L3072]              __tmp__pauseOn_GEEQToken[this] := false;
[L3073]              __tmp__migrationOn_GEEQToken[this] := false;
[L3074]              __tmp__balances_GEEQToken[this] := zeroRefintArr();
[L3075]              __tmp__sum_balances0[this] := 0;
[L3076]              __tmp__allowed_GEEQToken[this] := zeroRefRefintArr();
[L3077]              __tmp__sum_allowed1[this] := 0;
[L3078]              __tmp__geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3080]              __tmp__symbol_GEEQToken[this] := -15460934;
[L3081]              __tmp__name_GEEQToken[this] := -1182004402;
[L3082]              __tmp__decimals_GEEQToken[this] := 18;
[L3083]              __tmp___totalMinted_GEEQToken[this] := 0;
[L3084]              __tmp___totalSupply_GEEQToken[this] := 0;
[L3085]              __var_2 := __tmp__decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3086]              __tmp___maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, __tmp__decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3087]              __tmp__owner_Owned[this] := msgsender_MSG;
[L3131]  RET         call GEEQToken_GEEQToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L706]   RET         call GEEQToken_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L707]               assume revert || gas < 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND TRUE   choice == 26
[L5180]              gas := gas - 21000;
[L5181]  COND FALSE  !(gas >= 0)
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:52,091 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:52,091 INFO  L82        PathProgramCache]: Analyzing trace with hash 1596327106, now seen corresponding path program 1 times
[2020-11-25 16:57:52,091 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:52,100 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:52,141 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 16:57:52,141 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:57:52,141 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:57:52,142 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:52,142 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:57:52,142 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:57:52,142 INFO  L87              Difference]: Start difference. First operand 3705 states and 3991 transitions. cyclomatic complexity: 289 Second operand 4 states.
[2020-11-25 16:57:52,430 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:52,430 INFO  L93              Difference]: Finished difference Result 4643 states and 5189 transitions.
[2020-11-25 16:57:52,430 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:57:52,430 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4643 states and 5189 transitions.
[2020-11-25 16:57:52,440 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:57:52,451 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4643 states to 4549 states and 5095 transitions.
[2020-11-25 16:57:52,451 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1376
[2020-11-25 16:57:52,452 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1376
[2020-11-25 16:57:52,452 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4549 states and 5095 transitions.
[2020-11-25 16:57:52,456 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:52,456 INFO  L728         BuchiCegarLoop]: Abstraction has 4549 states and 5095 transitions.
[2020-11-25 16:57:52,459 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4549 states and 5095 transitions.
[2020-11-25 16:57:52,480 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4549 to 3611.
[2020-11-25 16:57:52,480 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3611 states.
[2020-11-25 16:57:52,483 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3611 states to 3611 states and 3896 transitions.
[2020-11-25 16:57:52,483 INFO  L751         BuchiCegarLoop]: Abstraction has 3611 states and 3896 transitions.
[2020-11-25 16:57:52,483 INFO  L631         BuchiCegarLoop]: Abstraction has 3611 states and 3896 transitions.
[2020-11-25 16:57:52,483 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:57:52,483 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3611 states and 3896 transitions.
[2020-11-25 16:57:52,487 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:52,487 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:52,487 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:52,488 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:52,488 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND FALSE  !(__exception)
[L709]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3140]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2919]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]              assume msgsender_MSG != null;
[L2905]              Balance[this] := 0;
[L2919]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  COND FALSE  !(revert)
[L3140]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  COND FALSE  !(revert)
[L3144]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2970]              assume msgsender_MSG != null;
[L2971]              Balance[this] := 0;
[L2972]              owner_Owned[this] := null;
[L2973]              newOwner_Owned[this] := null;
[L2987]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  COND FALSE  !(revert)
[L3144]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]  COND FALSE  !(revert)
[L3148]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3094]              assume msgsender_MSG != null;
[L3095]              Balance[this] := 0;
[L3096]              symbol_GEEQToken[this] := 1164884495;
[L3097]              name_GEEQToken[this] := 1164884495;
[L3098]              decimals_GEEQToken[this] := 0;
[L3099]              _totalSupply_GEEQToken[this] := 0;
[L3100]              _totalMinted_GEEQToken[this] := 0;
[L3101]              _maxMintable_GEEQToken[this] := 0;
[L3102]              pauseOn_GEEQToken[this] := false;
[L3103]              migrationOn_GEEQToken[this] := false;
[L3104]              balances_GEEQToken[this] := zeroRefintArr();
[L3105]              sum_balances0[this] := 0;
[L3106]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3107]              sum_allowed1[this] := 0;
[L3108]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3110]              symbol_GEEQToken[this] := -15460934;
[L3111]              name_GEEQToken[this] := -1182004402;
[L3112]              decimals_GEEQToken[this] := 18;
[L3113]              _totalMinted_GEEQToken[this] := 0;
[L3114]              _totalSupply_GEEQToken[this] := 0;
[L3115]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3116]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              owner_Owned[this] := msgsender_MSG;
[L3148]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3149]  COND FALSE  !(revert)
[L709]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L710]               assume !revert && gas >= 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND TRUE   choice == 22
[L5205]              gas := gas - 21000;
[L5206]  COND TRUE   gas >= 0
[L5207]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5208]              assume msgvalue_MSG == 0;
[L5209]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1494]              havoc __exception;
[L1495]              revert := false;
[L1496]  COND FALSE  !(__exception)
[L1525]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3551]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3552]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3553]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3554]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3555]              success_s675 := true;
[L1525]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1526]              assume !revert && gas >= 0;
[L5209]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5359]  RET         call CorralChoice_GEEQToken(this);
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:52,492 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:52,492 INFO  L82        PathProgramCache]: Analyzing trace with hash 794098211, now seen corresponding path program 1 times
[2020-11-25 16:57:52,493 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:52,505 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:52,578 INFO  L134       CoverageAnalysis]: Checked inductivity of 67 backedges. 0 proven. 4 refuted. 0 times theorem prover too weak. 63 trivial. 0 not checked.
[2020-11-25 16:57:52,579 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 16:57:52,579 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-25 16:57:52,579 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:52,579 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:57:52,579 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:57:52,579 INFO  L87              Difference]: Start difference. First operand 3611 states and 3896 transitions. cyclomatic complexity: 288 Second operand 13 states.
[2020-11-25 16:57:53,932 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:53,932 INFO  L93              Difference]: Finished difference Result 3698 states and 3994 transitions.
[2020-11-25 16:57:53,932 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 16:57:53,932 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3698 states and 3994 transitions.
[2020-11-25 16:57:53,938 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:53,946 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3698 states to 3698 states and 3994 transitions.
[2020-11-25 16:57:53,946 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1125
[2020-11-25 16:57:53,946 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1125
[2020-11-25 16:57:53,946 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3698 states and 3994 transitions.
[2020-11-25 16:57:53,949 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:53,949 INFO  L728         BuchiCegarLoop]: Abstraction has 3698 states and 3994 transitions.
[2020-11-25 16:57:53,952 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3698 states and 3994 transitions.
[2020-11-25 16:57:53,969 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3698 to 3640.
[2020-11-25 16:57:53,969 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3640 states.
[2020-11-25 16:57:53,972 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3640 states to 3640 states and 3935 transitions.
[2020-11-25 16:57:53,972 INFO  L751         BuchiCegarLoop]: Abstraction has 3640 states and 3935 transitions.
[2020-11-25 16:57:53,972 INFO  L631         BuchiCegarLoop]: Abstraction has 3640 states and 3935 transitions.
[2020-11-25 16:57:53,972 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:57:53,972 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3640 states and 3935 transitions.
[2020-11-25 16:57:53,975 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:57:53,975 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:57:53,975 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:57:53,977 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:57:53,977 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_GEEQToken0 := false;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]     CALL        call main();
[L5349]              assume null == 0;
[L5350]  CALL        call this := FreshRefGenerator__success();
[L2767]              havoc newRef;
[L2768]              assume Alloc[newRef] == false;
[L2769]              Alloc[newRef] := true;
[L2770]              assume newRef != null;
[L5350]  RET         call this := FreshRefGenerator__success();
[L5351]              assume now >= 0;
[L5352]              assume DType[this] == GEEQToken;
[L5353]              assume msgvalue_MSG == 0;
[L5354]              gas := gas - 53000;
[L5355]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L678]               havoc __exception;
[L679]               revert := false;
[L680]   COND FALSE  !(__exception)
[L709]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3140]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2919]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]              assume msgsender_MSG != null;
[L2905]              Balance[this] := 0;
[L2919]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  COND FALSE  !(revert)
[L3140]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  COND FALSE  !(revert)
[L3144]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2970]              assume msgsender_MSG != null;
[L2971]              Balance[this] := 0;
[L2972]              owner_Owned[this] := null;
[L2973]              newOwner_Owned[this] := null;
[L2987]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  COND FALSE  !(revert)
[L3144]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3145]  COND FALSE  !(revert)
[L3148]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3094]              assume msgsender_MSG != null;
[L3095]              Balance[this] := 0;
[L3096]              symbol_GEEQToken[this] := 1164884495;
[L3097]              name_GEEQToken[this] := 1164884495;
[L3098]              decimals_GEEQToken[this] := 0;
[L3099]              _totalSupply_GEEQToken[this] := 0;
[L3100]              _totalMinted_GEEQToken[this] := 0;
[L3101]              _maxMintable_GEEQToken[this] := 0;
[L3102]              pauseOn_GEEQToken[this] := false;
[L3103]              migrationOn_GEEQToken[this] := false;
[L3104]              balances_GEEQToken[this] := zeroRefintArr();
[L3105]              sum_balances0[this] := 0;
[L3106]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3107]              sum_allowed1[this] := 0;
[L3108]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3110]              symbol_GEEQToken[this] := -15460934;
[L3111]              name_GEEQToken[this] := -1182004402;
[L3112]              decimals_GEEQToken[this] := 18;
[L3113]              _totalMinted_GEEQToken[this] := 0;
[L3114]              _totalSupply_GEEQToken[this] := 0;
[L3115]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3116]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              owner_Owned[this] := msgsender_MSG;
[L3148]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3149]  COND FALSE  !(revert)
[L709]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L710]               assume !revert && gas >= 0;
[L5355]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5356]              assume !revert && gas >= 0;
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5359]  CALL        call CorralChoice_GEEQToken(this);
[L5124]              havoc msgsender_MSG;
[L5125]              havoc msgvalue_MSG;
[L5126]              havoc choice;
[L5127]              havoc __ret_0_totalSupply;
[L5128]              havoc tokenOwner_s591;
[L5129]              havoc balance_s591;
[L5130]              havoc tokenOwner_s763;
[L5131]              havoc spender_s763;
[L5132]              havoc remaining_s763;
[L5133]              havoc to_s647;
[L5134]              havoc tokens_s647;
[L5135]              havoc success_s647;
[L5136]              havoc spender_s675;
[L5137]              havoc tokens_s675;
[L5138]              havoc success_s675;
[L5139]              havoc from_s747;
[L5140]              havoc to_s747;
[L5141]              havoc tokens_s747;
[L5142]              havoc success_s747;
[L5143]              havoc __ret_0_owner;
[L5144]              havoc __ret_0_newOwner;
[L5145]              havoc _newOwner_s220;
[L5146]              havoc __ret_0_symbol;
[L5147]              havoc __ret_0_name;
[L5148]              havoc __ret_0_decimals;
[L5149]              havoc __ret_0_pauseOn;
[L5150]              havoc __ret_0_migrationOn;
[L5151]              havoc arg813_s0;
[L5152]              havoc __ret_0_balances;
[L5153]              havoc arg814_s0;
[L5154]              havoc __ret_0_geeqaddress;
[L5155]              havoc registeraddress_s387;
[L5156]              havoc tokenAddress_s407;
[L5157]              havoc tokens_s407;
[L5158]              havoc success_s407;
[L5159]              havoc __ret_0_totalMinted;
[L5160]              havoc receiver_s579;
[L5161]              havoc token_amt_s579;
[L5162]              havoc spender_s806;
[L5163]              havoc tokens_s806;
[L5164]              havoc data_s806;
[L5165]              havoc success_s806;
[L5166]              havoc tmpNow;
[L5167]              havoc gas;
[L5168]              assume gas > 4000000 && gas <= 8000000;
[L5169]              tmpNow := now;
[L5170]              havoc now;
[L5171]              assume now > tmpNow;
[L5172]              assume msgsender_MSG != null;
[L5173]              assume DType[msgsender_MSG] != SafeMath;
[L5174]              assume DType[msgsender_MSG] != ERC20Interface;
[L5175]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5176]              assume DType[msgsender_MSG] != Owned;
[L5177]              assume DType[msgsender_MSG] != GEEQToken;
[L5178]              Alloc[msgsender_MSG] := true;
[L5179]  COND FALSE  !(choice == 26)
[L5185]  COND FALSE  !(choice == 25)
[L5191]  COND FALSE  !(choice == 24)
[L5197]  COND FALSE  !(choice == 23)
[L5204]  COND FALSE  !(choice == 22)
[L5211]  COND TRUE   choice == 21
[L5212]              gas := gas - 21000;
[L5213]  COND TRUE   gas >= 0
[L5214]              assume tokens_s747 >= 0 && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5215]              assume msgvalue_MSG == 0;
[L5216]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s747 == to_s747 && (tokens_s747 > balances_GEEQToken[this][from_s747] || tokens_s747 > allowed_GEEQToken[this][from_s747][msgsender_MSG])) && tokens_s747 >= 0) && tokens_s747 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][to_s747] >= 0) && balances_GEEQToken[this][to_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_GEEQToken[this][from_s747] >= 0) && balances_GEEQToken[this][from_s747] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_GEEQToken[this][from_s747][msgsender_MSG] >= 0) && allowed_GEEQToken[this][from_s747][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_GEEQToken0 := true;
[L2]                 call_transferFrom_GEEQToken0 := false;
[L2]                 revert := revert_hold;
[L1564]              havoc __exception;
[L1565]              revert := false;
[L1566]  COND FALSE  !(__exception)
[L1595]  CALL        call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L3599]  COND FALSE  !(pauseOn_GEEQToken[this])
[L3604]  CALL        call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3604]  RET         call __var_17 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][from_s747], tokens_s747);
[L3605]  COND FALSE  !(revert)
[L3608]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][from_s747];
[L3609]              balances_GEEQToken[this][from_s747] := __var_17;
[L3610]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][from_s747];
[L3611]  CALL        call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L2840]  COND FALSE  !(!(b_s51 <= a_s51))
[L2844]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2845]              c_s51 := c_s51;
[L3611]  RET         call __var_18 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_GEEQToken[this][from_s747][msgsender_MSG], tokens_s747);
[L3612]  COND FALSE  !(revert)
[L3615]              sum_allowed1[from_s747] := sum_allowed1[from_s747] - allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3616]              allowed_GEEQToken[this][from_s747][msgsender_MSG] := __var_18;
[L3617]              sum_allowed1[from_s747] := sum_allowed1[from_s747] + allowed_GEEQToken[this][from_s747][msgsender_MSG];
[L3618]  CALL        call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L2818]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2819]  COND FALSE  !(!(c_s26 >= a_s26))
[L2823]              c_s26 := c_s26;
[L3618]  RET         call __var_19 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_GEEQToken[this][to_s747], tokens_s747);
[L3619]  COND FALSE  !(revert)
[L3622]              sum_balances0[this] := sum_balances0[this] - balances_GEEQToken[this][to_s747];
[L3623]              balances_GEEQToken[this][to_s747] := __var_19;
[L3624]              sum_balances0[this] := sum_balances0[this] + balances_GEEQToken[this][to_s747];
[L3625]              assert { :EventEmitted "Transfer_GEEQToken" } true;
[L3626]              success_s747 := true;
[L1595]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L1596]              assume !revert && gas >= 0;
[L5216]  RET         call success_s747 := transferFrom~address~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, from_s747, to_s747, tokens_s747);
[L5359]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:57:53,981 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:57:53,981 INFO  L82        PathProgramCache]: Analyzing trace with hash 1314325403, now seen corresponding path program 1 times
[2020-11-25 16:57:53,982 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:57:54,000 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:57:54,118 INFO  L134       CoverageAnalysis]: Checked inductivity of 82 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 82 trivial. 0 not checked.
[2020-11-25 16:57:54,118 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:57:54,118 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 16:57:54,119 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:57:54,119 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 16:57:54,119 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=53, Unknown=0, NotChecked=0, Total=72
[2020-11-25 16:57:54,119 INFO  L87              Difference]: Start difference. First operand 3640 states and 3935 transitions. cyclomatic complexity: 300 Second operand 9 states.
[2020-11-25 16:57:54,782 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:57:54,782 INFO  L93              Difference]: Finished difference Result 1993 states and 2151 transitions.
[2020-11-25 16:57:54,782 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 16:57:54,783 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1993 states and 2151 transitions.
[2020-11-25 16:57:54,786 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:57:54,786 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1993 states to 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:57:54,786 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:57:54,786 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:57:54,786 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 16:57:54,786 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:57:54,786 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:57:54,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:57:54,789 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:57:54 BasicIcfg
[2020-11-25 16:57:54,789 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:57:54,789 INFO  L168              Benchmark]: Toolchain (without parser) took 9264.88 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 797.4 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -296.2 MB). Peak memory consumption was 501.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,790 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,790 INFO  L168              Benchmark]: Boogie Preprocessor took 86.12 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,791 INFO  L168              Benchmark]: UtopiaSpecLang took 58.35 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,791 INFO  L168              Benchmark]: Boogie Printer took 16.21 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,791 INFO  L168              Benchmark]: RCFGBuilder took 750.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 774.1 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,792 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.10 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,792 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1289.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.2 MB). Free memory was 765.2 MB in the beginning and 853.5 MB in the end (delta: -88.3 MB). Peak memory consumption was 157.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,793 INFO  L168              Benchmark]: BlockEncodingV2 took 147.20 ms. Allocated memory is still 1.2 GB. Free memory was 853.5 MB in the beginning and 784.2 MB in the end (delta: 69.4 MB). Peak memory consumption was 69.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,793 INFO  L168              Benchmark]: BuchiAutomizer took 6875.20 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 587.2 MB). Free memory was 784.2 MB in the beginning and 1.2 GB in the end (delta: -452.6 MB). Peak memory consumption was 134.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:57:54,796 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4716 locations, 8026 edges
  - StatisticsResult: Encoded RCFG
    4639 locations, 7842 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 86.12 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.35 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.21 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 750.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 774.1 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.10 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1289.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.2 MB). Free memory was 765.2 MB in the beginning and 853.5 MB in the end (delta: -88.3 MB). Peak memory consumption was 157.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 147.20 ms. Allocated memory is still 1.2 GB. Free memory was 853.5 MB in the beginning and 784.2 MB in the end (delta: 69.4 MB). Peak memory consumption was 69.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6875.20 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 587.2 MB). Free memory was 784.2 MB in the beginning and 1.2 GB in the end (delta: -452.6 MB). Peak memory consumption was 134.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1987 locations, 2483 edges
  - StatisticsResult: BuchiProgram size
    4716 locations, 8026 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.8s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.8s. Construction of modules took 4.0s. BÃ¼chi inclusion checks took 1.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1733 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3870 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 21670 SDtfs, 20906 SDslu, 32898 SDs, 0 SdLazy, 69741 SolverSat, 2907 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_GEEQToken0) ==> ( <>(fail_transferFrom_GEEQToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
