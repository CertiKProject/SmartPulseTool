This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:54:40,784 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:54:40,785 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:54:40,792 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:54:40,792 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:54:40,792 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:54:40,793 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:54:40,794 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:54:40,795 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:54:40,795 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:54:40,796 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:54:40,796 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:54:40,797 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:54:40,797 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:54:40,798 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:54:40,798 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:54:40,799 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:54:40,799 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:54:40,800 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:54:40,801 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:54:40,802 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:54:40,802 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:54:40,803 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:54:40,804 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:54:40,804 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:54:40,804 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:54:40,804 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:54:40,805 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:54:40,805 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:54:40,805 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:54:40,805 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:54:40,806 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:54:40,806 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:54:40,806 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:54:40,807 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:54:40,807 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:54:40,807 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:54:40,807 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:54:40,808 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:54:40,808 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:54:40,808 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:54:40,809 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:54:40,814 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:54:40,814 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:54:40,815 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:54:40,815 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:54:40,815 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:54:40,815 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:54:40,816 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:54:40,816 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:54:40,816 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:54:40,817 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:54:40,834 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:54:40,846 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:54:40,848 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:54:40,849 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:54:40,849 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:54:40,850 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl
[2020-11-25 16:54:40,850 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl'
[2020-11-25 16:54:40,939 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:54:40,940 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:54:40,941 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:54:40,941 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:54:40,941 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:54:40,957 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:40,959 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:40,989 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:40,990 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:41,011 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:41,021 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:41,029 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:41,038 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:54:41,039 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:54:41,039 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:54:41,041 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:54:41,044 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/1) ...
[2020-11-25 16:54:41,062 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(GEEQToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(GEEQToken.approve(spender, value), return == true && allowed_GEEQToken[this][msg.sender][spender] == value &&  _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this]) && balances_GEEQToken[this] == old(balances_GEEQToken[this]) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2]) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this]) && name_GEEQToken[this] == old(name_GEEQToken[this]) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this]) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this]) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this]) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this]) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this]) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:54:41,068 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(GEEQToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(GEEQToken.approve(spender, value), return == true && allowed_GEEQToken[this][msg.sender][spender] == value &&  _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this]) && balances_GEEQToken[this] == old(balances_GEEQToken[this]) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2]) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this]) && name_GEEQToken[this] == old(name_GEEQToken[this]) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this]) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this]) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this]) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this]) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this]) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:54:41,075 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(GEEQToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(GEEQToken.approve(spender, value), return == true && allowed_GEEQToken[this][msg.sender][spender] == value &&  _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this]) && balances_GEEQToken[this] == old(balances_GEEQToken[this]) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2]) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this]) && name_GEEQToken[this] == old(name_GEEQToken[this]) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this]) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this]) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this]) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this]) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this]) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:54:41,082 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s675 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s675,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]
[2020-11-25 16:54:41,085 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s675==true && allowed_GEEQToken[this][msg.sender][spender_s675]==tokens_s675 ) && _totalSupply_GEEQToken[this]==( old(_totalSupply_GEEQToken[this]) ) ) && balances_GEEQToken[this]==( old(balances_GEEQToken[this]) ) ) && allowed_GEEQToken[this][p1][p2]==( old(allowed_GEEQToken[this][p1][p2]) ) ) && symbol_GEEQToken[this]==( old(symbol_GEEQToken[this]) ) ) && name_GEEQToken[this]==( old(name_GEEQToken[this]) ) ) && decimals_GEEQToken[this]==( old(decimals_GEEQToken[this]) ) ) && _totalMinted_GEEQToken[this]==( old(_totalMinted_GEEQToken[this]) ) ) && _maxMintable_GEEQToken[this]==( old(_maxMintable_GEEQToken[this]) ) ) && pauseOn_GEEQToken[this]==( old(pauseOn_GEEQToken[this]) ) ) && migrationOn_GEEQToken[this]==( old(migrationOn_GEEQToken[this]) ) ) && geeqaddress_GEEQToken[this]==( old(geeqaddress_GEEQToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s675,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_GEEQToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],[IdentifierExpression[spender_s675,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],IdentifierExpression[tokens_s675,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalMinted_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalMinted_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_maxMintable_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_maxMintable_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pauseOn_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pauseOn_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[migrationOn_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[migrationOn_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[geeqaddress_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[geeqaddress_GEEQToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_GEEQToken>]]]]]]
[2020-11-25 16:54:41,089 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(GEEQToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(GEEQToken.approve(spender, value), return == true && allowed_GEEQToken[this][msg.sender][spender] == value &&  _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this]) && balances_GEEQToken[this] == old(balances_GEEQToken[this]) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2]) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this]) && name_GEEQToken[this] == old(name_GEEQToken[this]) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this]) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this]) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this]) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this]) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this]) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:54:41,090 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_GEEQToken0) ==> ( <>AP(success_approve_GEEQToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:54:41,099 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:54:41 PropertyContainer
[2020-11-25 16:54:41,099 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:54:41,100 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:54:41,100 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:54:41,100 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:54:41,101 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/2) ...
[2020-11-25 16:54:41,101 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:54:41,101 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:54:41,116 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:54:41" (2/2) ...
[2020-11-25 16:54:41,117 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:54:41,117 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:54:41,118 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:54:41,118 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:54:41,118 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/2) ...
[2020-11-25 16:54:41,172 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:54:41,172 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:54:41,172 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:54:41,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:54:41,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 16:54:41,173 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:54:41,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 16:54:41,174 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:54:41,175 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 16:54:41,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 16:54:41,175 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 16:54:41,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 16:54:41,175 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 16:54:41,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 16:54:41,175 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 16:54:41,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 16:54:41,175 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 16:54:41,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken_NoBaseCtor__success
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken
[2020-11-25 16:54:41,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken
[2020-11-25 16:54:41,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken
[2020-11-25 16:54:41,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken
[2020-11-25 16:54:41,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken
[2020-11-25 16:54:41,176 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken
[2020-11-25 16:54:41,177 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken
[2020-11-25 16:54:41,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken
[2020-11-25 16:54:41,177 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken
[2020-11-25 16:54:41,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_GEEQToken__success
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken
[2020-11-25 16:54:41,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken
[2020-11-25 16:54:41,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken
[2020-11-25 16:54:41,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken
[2020-11-25 16:54:41,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_GEEQToken__success
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken
[2020-11-25 16:54:41,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken
[2020-11-25 16:54:41,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken
[2020-11-25 16:54:41,179 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken
[2020-11-25 16:54:41,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken
[2020-11-25 16:54:41,180 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken
[2020-11-25 16:54:41,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken
[2020-11-25 16:54:41,180 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken
[2020-11-25 16:54:41,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken
[2020-11-25 16:54:41,180 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken
[2020-11-25 16:54:41,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken
[2020-11-25 16:54:41,180 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken
[2020-11-25 16:54:41,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken
[2020-11-25 16:54:41,180 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:54:41,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GEEQToken
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,182 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 16:54:41,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 16:54:41,184 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken_NoBaseCtor__fail
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken__success
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure GEEQToken_GEEQToken__fail
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken__success
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure migrateGEEQ~bytes32_GEEQToken__fail
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,185 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken__success
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseEnable_GEEQToken__fail
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken__success
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseDisable_GEEQToken__fail
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken__success
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationEnable_GEEQToken__fail
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken__success
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationDisable_GEEQToken__fail
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken__success
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_GEEQToken__fail
[2020-11-25 16:54:41,186 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken__success
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure totalMinted_GEEQToken__fail
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_GEEQToken__fail
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken__success
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_GEEQToken__fail
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,187 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GEEQToken__fail
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken__success
[2020-11-25 16:54:41,188 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken__success
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken__success
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseOn_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken__success
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure migrationOn_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken__success
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken__success
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure geeqaddress~address_GEEQToken__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:54:41,189 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:54:41,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:54:41,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 16:54:41,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken_NoBaseCtor__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken_NoBaseCtor__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure GEEQToken_GEEQToken__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrateGEEQ~bytes32_GEEQToken__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken__fail
[2020-11-25 16:54:41,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseEnable_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseDisable_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationEnable_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationDisable_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalMinted_GEEQToken__success
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_GEEQToken__fail
[2020-11-25 16:54:41,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_GEEQToken__success
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken__fail
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_GEEQToken__success
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken__fail
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GEEQToken__success
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken__fail
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_GEEQToken__success
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken__fail
[2020-11-25 16:54:41,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_GEEQToken__success
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_GEEQToken__fail
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_GEEQToken__success
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken__fail
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GEEQToken__success
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken__fail
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GEEQToken__success
[2020-11-25 16:54:41,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken__fail
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GEEQToken__success
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken__fail
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseOn_GEEQToken__success
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken__fail
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure migrationOn_GEEQToken__success
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken__fail
[2020-11-25 16:54:41,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_GEEQToken__success
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken__fail
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure geeqaddress~address_GEEQToken__success
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:54:41,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 16:54:41,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:54:41,200 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:54:41,200 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 16:54:41,200 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 16:54:41,200 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GEEQToken
[2020-11-25 16:54:41,200 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:54:41,200 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:54:41,201 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:54:41,456 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:54:41,456 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:54:41,456 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:54:41,690 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:54:41,910 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:54:41,910 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:54:41,912 INFO  L202        PluginConnector]: Adding new model GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:54:41 BoogieIcfgContainer
[2020-11-25 16:54:41,912 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:54:41" (2/2) ...
[2020-11-25 16:54:41,912 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:54:41,912 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@67695882 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:54:41, skipping insertion in model container
[2020-11-25 16:54:41,912 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:54:41,913 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:54:41,913 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:54:41,914 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:54:41,914 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/3) ...
[2020-11-25 16:54:41,915 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@297b74c1 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:54:41, skipping insertion in model container
[2020-11-25 16:54:41,915 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:54:41" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:54:41,954 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:54:41 NWAContainer
[2020-11-25 16:54:41,955 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:54:41,955 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:54:41,955 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:54:41,956 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:54:41,956 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:54:41" (3/4) ...
[2020-11-25 16:54:41,957 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3b0743b4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:54:41, skipping insertion in model container
[2020-11-25 16:54:41,957 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:54:41" (4/4) ...
[2020-11-25 16:54:41,960 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:54:41,964 INFO  L110   BuchiProductObserver]: Initial RCFG 1990 locations, 2487 edges
[2020-11-25 16:54:41,964 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:54:41,975 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:54:43,360 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:54:43,366 INFO  L110   BuchiProductObserver]: BuchiProgram size 4722 locations, 8038 edges
[2020-11-25 16:54:43,366 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:54:43 BoogieIcfgContainer
[2020-11-25 16:54:43,366 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:54:43,366 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:54:43,366 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:54:43,368 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:54:43,368 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:54:43" (1/1) ...
[2020-11-25 16:54:43,465 INFO  L313           BlockEncoder]: Initial Icfg 4722 locations, 8038 edges
[2020-11-25 16:54:43,465 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:54:43,466 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:54:43,466 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:54:43,466 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:54:43,478 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-25 16:54:43,488 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 16:54:43,503 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:54:43,507 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:54:43,510 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:54:43,510 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:54:43,515 INFO  L313           BlockEncoder]: Encoded RCFG 4672 locations, 7908 edges
[2020-11-25 16:54:43,515 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:54:43 BasicIcfg
[2020-11-25 16:54:43,515 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:54:43,515 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:54:43,515 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:54:43,517 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:54:43,517 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,517 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:54:40" (1/6) ...
[2020-11-25 16:54:43,519 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ab67715 and model type GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:54:43, skipping insertion in model container
[2020-11-25 16:54:43,519 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,519 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:54:41" (2/6) ...
[2020-11-25 16:54:43,519 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ab67715 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:54:43, skipping insertion in model container
[2020-11-25 16:54:43,519 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,519 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:54:41" (3/6) ...
[2020-11-25 16:54:43,519 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ab67715 and model type GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:54:43, skipping insertion in model container
[2020-11-25 16:54:43,519 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:54:41" (4/6) ...
[2020-11-25 16:54:43,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ab67715 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:54:43, skipping insertion in model container
[2020-11-25 16:54:43,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:54:43" (5/6) ...
[2020-11-25 16:54:43,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2ab67715 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:54:43, skipping insertion in model container
[2020-11-25 16:54:43,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:54:43,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:54:43" (6/6) ...
[2020-11-25 16:54:43,521 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GEEQToken_0x6b9f031d718dded0d681c20cb754f97b3bb81b78_approve.bpl_BEv2
[2020-11-25 16:54:43,556 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:54:43,556 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:54:43,556 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:54:43,557 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:54:43,557 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:54:43,557 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:54:43,557 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:54:43,557 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:54:43,557 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:54:43,597 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4672 states.
[2020-11-25 16:54:43,658 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:54:43,658 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:43,658 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:43,665 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:43,666 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:43,666 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:54:43,666 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4672 states.
[2020-11-25 16:54:43,689 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:54:43,689 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:43,689 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:43,691 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:43,691 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_GEEQToken0 := false;
[L3]                 call_approve_GEEQToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5350]              assume null == 0;
[L5351]  CALL        call this := FreshRefGenerator__success();
[L2768]              havoc newRef;
[L2769]              assume Alloc[newRef] == false;
[L2770]              Alloc[newRef] := true;
[L2771]              assume newRef != null;
[L5351]  RET         call this := FreshRefGenerator__success();
[L5352]              assume now >= 0;
[L5353]              assume DType[this] == GEEQToken;
[L5354]              assume msgvalue_MSG == 0;
[L5355]              gas := gas - 53000;
[L5356]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L679]               havoc __exception;
[L680]               revert := false;
[L681]   COND FALSE  !(__exception)
[L710]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2905]              assume msgsender_MSG != null;
[L2906]              Balance[this] := 0;
[L2920]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2921]  COND FALSE  !(revert)
[L3141]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]  COND TRUE   revert
[L710]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L711]               assume !revert && gas >= 0;
[L5356]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5357]              assume !revert && gas >= 0;

Loop:
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND TRUE   choice == 26
[L5181]              gas := gas - 21000;
[L5182]  COND FALSE  !(gas >= 0)
[L5360]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:54:43,704 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:54:43,705 INFO  L82        PathProgramCache]: Analyzing trace with hash 27645274, now seen corresponding path program 1 times
[2020-11-25 16:54:43,709 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:54:43,734 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:54:43,772 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:54:43,775 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:54:43,775 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:54:44,058 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:54:44,067 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:54:44,068 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:54:44,069 INFO  L87              Difference]: Start difference. First operand 4672 states. Second operand 4 states.
[2020-11-25 16:54:44,533 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:54:44,533 INFO  L93              Difference]: Finished difference Result 3643 states and 4008 transitions.
[2020-11-25 16:54:44,533 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:54:44,535 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3643 states and 4008 transitions.
[2020-11-25 16:54:44,551 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:54:44,573 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3643 states to 3643 states and 4008 transitions.
[2020-11-25 16:54:44,574 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:54:44,576 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1061
[2020-11-25 16:54:44,576 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3643 states and 4008 transitions.
[2020-11-25 16:54:44,584 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:54:44,585 INFO  L728         BuchiCegarLoop]: Abstraction has 3643 states and 4008 transitions.
[2020-11-25 16:54:44,603 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3643 states and 4008 transitions.
[2020-11-25 16:54:44,658 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3643 to 3643.
[2020-11-25 16:54:44,659 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3643 states.
[2020-11-25 16:54:44,669 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3643 states to 3643 states and 4008 transitions.
[2020-11-25 16:54:44,670 INFO  L751         BuchiCegarLoop]: Abstraction has 3643 states and 4008 transitions.
[2020-11-25 16:54:44,670 INFO  L631         BuchiCegarLoop]: Abstraction has 3643 states and 4008 transitions.
[2020-11-25 16:54:44,670 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:54:44,670 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3643 states and 4008 transitions.
[2020-11-25 16:54:44,683 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:54:44,684 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:44,684 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:44,687 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:44,687 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_GEEQToken0 := false;
[L3]                 call_approve_GEEQToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5350]              assume null == 0;
[L5351]  CALL        call this := FreshRefGenerator__success();
[L2768]              havoc newRef;
[L2769]              assume Alloc[newRef] == false;
[L2770]              Alloc[newRef] := true;
[L2771]              assume newRef != null;
[L5351]  RET         call this := FreshRefGenerator__success();
[L5352]              assume now >= 0;
[L5353]              assume DType[this] == GEEQToken;
[L5354]              assume msgvalue_MSG == 0;
[L5355]              gas := gas - 53000;
[L5356]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L679]               havoc __exception;
[L680]               revert := false;
[L681]   COND FALSE  !(__exception)
[L710]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2905]              assume msgsender_MSG != null;
[L2906]              Balance[this] := 0;
[L2920]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2921]  COND FALSE  !(revert)
[L3141]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]  COND TRUE   revert
[L710]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L711]               assume !revert && gas >= 0;
[L5356]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5357]              assume !revert && gas >= 0;
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:54:44,692 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:54:44,692 INFO  L82        PathProgramCache]: Analyzing trace with hash 635822796, now seen corresponding path program 1 times
[2020-11-25 16:54:44,694 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:54:44,705 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:54:44,732 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:54:44,732 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:54:44,732 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:54:44,734 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:54:44,734 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:54:44,734 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:54:44,734 INFO  L87              Difference]: Start difference. First operand 3643 states and 4008 transitions. cyclomatic complexity: 367 Second operand 4 states.
[2020-11-25 16:54:45,555 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:54:45,555 INFO  L93              Difference]: Finished difference Result 5187 states and 5886 transitions.
[2020-11-25 16:54:45,555 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:54:45,555 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5187 states and 5886 transitions.
[2020-11-25 16:54:45,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:54:45,586 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5187 states to 4979 states and 5650 transitions.
[2020-11-25 16:54:45,586 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1396
[2020-11-25 16:54:45,587 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1425
[2020-11-25 16:54:45,588 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4979 states and 5650 transitions.
[2020-11-25 16:54:45,594 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:54:45,594 INFO  L728         BuchiCegarLoop]: Abstraction has 4979 states and 5650 transitions.
[2020-11-25 16:54:45,598 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4979 states and 5650 transitions.
[2020-11-25 16:54:45,639 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4979 to 3940.
[2020-11-25 16:54:45,639 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3940 states.
[2020-11-25 16:54:45,644 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3940 states to 3940 states and 4283 transitions.
[2020-11-25 16:54:45,644 INFO  L751         BuchiCegarLoop]: Abstraction has 3940 states and 4283 transitions.
[2020-11-25 16:54:45,644 INFO  L631         BuchiCegarLoop]: Abstraction has 3940 states and 4283 transitions.
[2020-11-25 16:54:45,644 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:54:45,644 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3940 states and 4283 transitions.
[2020-11-25 16:54:45,651 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:54:45,651 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:45,651 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:45,653 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:45,653 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_GEEQToken0 := false;
[L3]                 call_approve_GEEQToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5350]              assume null == 0;
[L5351]  CALL        call this := FreshRefGenerator__success();
[L2768]              havoc newRef;
[L2769]              assume Alloc[newRef] == false;
[L2770]              Alloc[newRef] := true;
[L2771]              assume newRef != null;
[L5351]  RET         call this := FreshRefGenerator__success();
[L5352]              assume now >= 0;
[L5353]              assume DType[this] == GEEQToken;
[L5354]              assume msgvalue_MSG == 0;
[L5355]              gas := gas - 53000;
[L5356]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L679]               havoc __exception;
[L680]               revert := false;
[L681]   COND FALSE  !(__exception)
[L710]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2905]              assume msgsender_MSG != null;
[L2906]              Balance[this] := 0;
[L2920]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2921]  COND FALSE  !(revert)
[L3141]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]  COND FALSE  !(revert)
[L3145]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]              assume msgsender_MSG != null;
[L2972]              Balance[this] := 0;
[L2973]              owner_Owned[this] := null;
[L2974]              newOwner_Owned[this] := null;
[L2988]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2989]  COND FALSE  !(revert)
[L3145]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]  COND FALSE  !(revert)
[L3149]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              symbol_GEEQToken[this] := 1164884495;
[L3098]              name_GEEQToken[this] := 1164884495;
[L3099]              decimals_GEEQToken[this] := 0;
[L3100]              _totalSupply_GEEQToken[this] := 0;
[L3101]              _totalMinted_GEEQToken[this] := 0;
[L3102]              _maxMintable_GEEQToken[this] := 0;
[L3103]              pauseOn_GEEQToken[this] := false;
[L3104]              migrationOn_GEEQToken[this] := false;
[L3105]              balances_GEEQToken[this] := zeroRefintArr();
[L3106]              sum_balances0[this] := 0;
[L3107]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3108]              sum_allowed1[this] := 0;
[L3109]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3111]              symbol_GEEQToken[this] := -15460934;
[L3112]              name_GEEQToken[this] := -1182004402;
[L3113]              decimals_GEEQToken[this] := 18;
[L3114]              _totalMinted_GEEQToken[this] := 0;
[L3115]              _totalSupply_GEEQToken[this] := 0;
[L3116]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3118]              owner_Owned[this] := msgsender_MSG;
[L3149]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3150]  COND FALSE  !(revert)
[L710]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L711]               assume !revert && gas >= 0;
[L5356]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5357]              assume !revert && gas >= 0;
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:54:45,656 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:54:45,656 INFO  L82        PathProgramCache]: Analyzing trace with hash 2016369628, now seen corresponding path program 1 times
[2020-11-25 16:54:45,657 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:54:45,691 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:54:45,841 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:54:45,841 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:54:45,841 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:54:45,842 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:54:45,842 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:54:45,842 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:54:45,842 INFO  L87              Difference]: Start difference. First operand 3940 states and 4283 transitions. cyclomatic complexity: 345 Second operand 13 states.
[2020-11-25 16:54:47,563 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:54:47,563 INFO  L93              Difference]: Finished difference Result 4073 states and 4449 transitions.
[2020-11-25 16:54:47,564 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 16:54:47,564 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4073 states and 4449 transitions.
[2020-11-25 16:54:47,574 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 16:54:47,588 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4073 states to 4073 states and 4449 transitions.
[2020-11-25 16:54:47,588 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1286
[2020-11-25 16:54:47,589 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1286
[2020-11-25 16:54:47,589 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4073 states and 4449 transitions.
[2020-11-25 16:54:47,593 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:54:47,593 INFO  L728         BuchiCegarLoop]: Abstraction has 4073 states and 4449 transitions.
[2020-11-25 16:54:47,596 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4073 states and 4449 transitions.
[2020-11-25 16:54:47,629 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4073 to 4034.
[2020-11-25 16:54:47,629 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4034 states.
[2020-11-25 16:54:47,634 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4034 states to 4034 states and 4396 transitions.
[2020-11-25 16:54:47,634 INFO  L751         BuchiCegarLoop]: Abstraction has 4034 states and 4396 transitions.
[2020-11-25 16:54:47,634 INFO  L631         BuchiCegarLoop]: Abstraction has 4034 states and 4396 transitions.
[2020-11-25 16:54:47,634 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:54:47,635 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4034 states and 4396 transitions.
[2020-11-25 16:54:47,640 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 16:54:47,641 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:47,641 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:47,642 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:47,642 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_GEEQToken0 := false;
[L3]                 call_approve_GEEQToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5350]              assume null == 0;
[L5351]  CALL        call this := FreshRefGenerator__success();
[L2768]              havoc newRef;
[L2769]              assume Alloc[newRef] == false;
[L2770]              Alloc[newRef] := true;
[L2771]              assume newRef != null;
[L5351]  RET         call this := FreshRefGenerator__success();
[L5352]              assume now >= 0;
[L5353]              assume DType[this] == GEEQToken;
[L5354]              assume msgvalue_MSG == 0;
[L5355]              gas := gas - 53000;
[L5356]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L679]               havoc __exception;
[L680]               revert := false;
[L681]   COND FALSE  !(__exception)
[L710]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2905]              assume msgsender_MSG != null;
[L2906]              Balance[this] := 0;
[L2920]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2921]  COND FALSE  !(revert)
[L3141]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]  COND FALSE  !(revert)
[L3145]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]              assume msgsender_MSG != null;
[L2972]              Balance[this] := 0;
[L2973]              owner_Owned[this] := null;
[L2974]              newOwner_Owned[this] := null;
[L2988]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2989]  COND FALSE  !(revert)
[L3145]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]  COND FALSE  !(revert)
[L3149]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              symbol_GEEQToken[this] := 1164884495;
[L3098]              name_GEEQToken[this] := 1164884495;
[L3099]              decimals_GEEQToken[this] := 0;
[L3100]              _totalSupply_GEEQToken[this] := 0;
[L3101]              _totalMinted_GEEQToken[this] := 0;
[L3102]              _maxMintable_GEEQToken[this] := 0;
[L3103]              pauseOn_GEEQToken[this] := false;
[L3104]              migrationOn_GEEQToken[this] := false;
[L3105]              balances_GEEQToken[this] := zeroRefintArr();
[L3106]              sum_balances0[this] := 0;
[L3107]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3108]              sum_allowed1[this] := 0;
[L3109]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3111]              symbol_GEEQToken[this] := -15460934;
[L3112]              name_GEEQToken[this] := -1182004402;
[L3113]              decimals_GEEQToken[this] := 18;
[L3114]              _totalMinted_GEEQToken[this] := 0;
[L3115]              _totalSupply_GEEQToken[this] := 0;
[L3116]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3118]              owner_Owned[this] := msgsender_MSG;
[L3149]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3150]  COND FALSE  !(revert)
[L710]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L711]               assume !revert && gas >= 0;
[L5356]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5357]              assume !revert && gas >= 0;
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND TRUE   __exception
[L1498]              __tmp__Balance := Balance;
[L1499]              __tmp__DType := DType;
[L1500]              __tmp__Alloc := Alloc;
[L1501]              __tmp__balance_ADDR := balance_ADDR;
[L1502]              __tmp__M_Ref_int := M_Ref_int;
[L1503]              __tmp__sum_balances0 := sum_balances0;
[L1504]              __tmp__alloc_allowed_GEEQToken_lvl0 := alloc_allowed_GEEQToken_lvl0;
[L1505]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1506]              __tmp__sum_allowed1 := sum_allowed1;
[L1507]              __tmp__sum_geeqaddress2 := sum_geeqaddress2;
[L1508]              __tmp__Length := Length;
[L1509]              __tmp__now := now;
[L1510]              __tmp__owner_Owned := owner_Owned;
[L1511]              __tmp__newOwner_Owned := newOwner_Owned;
[L1512]              __tmp__symbol_GEEQToken := symbol_GEEQToken;
[L1513]              __tmp__name_GEEQToken := name_GEEQToken;
[L1514]              __tmp__decimals_GEEQToken := decimals_GEEQToken;
[L1515]              __tmp___totalSupply_GEEQToken := _totalSupply_GEEQToken;
[L1516]              __tmp___totalMinted_GEEQToken := _totalMinted_GEEQToken;
[L1517]              __tmp___maxMintable_GEEQToken := _maxMintable_GEEQToken;
[L1518]              __tmp__pauseOn_GEEQToken := pauseOn_GEEQToken;
[L1519]              __tmp__migrationOn_GEEQToken := migrationOn_GEEQToken;
[L1520]              __tmp__balances_GEEQToken := balances_GEEQToken;
[L1521]              __tmp__allowed_GEEQToken := allowed_GEEQToken;
[L1522]              __tmp__geeqaddress_GEEQToken := geeqaddress_GEEQToken;
[L1523]  CALL        call success_s675 := approve~address~uint256_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3543]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3544]              __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3545]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3546]              success_s675 := true;
[L1523]  RET         call success_s675 := approve~address~uint256_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1524]              assume revert || gas < 0;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND TRUE   __exception
[L1498]              __tmp__Balance := Balance;
[L1499]              __tmp__DType := DType;
[L1500]              __tmp__Alloc := Alloc;
[L1501]              __tmp__balance_ADDR := balance_ADDR;
[L1502]              __tmp__M_Ref_int := M_Ref_int;
[L1503]              __tmp__sum_balances0 := sum_balances0;
[L1504]              __tmp__alloc_allowed_GEEQToken_lvl0 := alloc_allowed_GEEQToken_lvl0;
[L1505]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1506]              __tmp__sum_allowed1 := sum_allowed1;
[L1507]              __tmp__sum_geeqaddress2 := sum_geeqaddress2;
[L1508]              __tmp__Length := Length;
[L1509]              __tmp__now := now;
[L1510]              __tmp__owner_Owned := owner_Owned;
[L1511]              __tmp__newOwner_Owned := newOwner_Owned;
[L1512]              __tmp__symbol_GEEQToken := symbol_GEEQToken;
[L1513]              __tmp__name_GEEQToken := name_GEEQToken;
[L1514]              __tmp__decimals_GEEQToken := decimals_GEEQToken;
[L1515]              __tmp___totalSupply_GEEQToken := _totalSupply_GEEQToken;
[L1516]              __tmp___totalMinted_GEEQToken := _totalMinted_GEEQToken;
[L1517]              __tmp___maxMintable_GEEQToken := _maxMintable_GEEQToken;
[L1518]              __tmp__pauseOn_GEEQToken := pauseOn_GEEQToken;
[L1519]              __tmp__migrationOn_GEEQToken := migrationOn_GEEQToken;
[L1520]              __tmp__balances_GEEQToken := balances_GEEQToken;
[L1521]              __tmp__allowed_GEEQToken := allowed_GEEQToken;
[L1522]              __tmp__geeqaddress_GEEQToken := geeqaddress_GEEQToken;
[L1523]  CALL        call success_s675 := approve~address~uint256_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3543]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3544]              __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3545]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3546]              success_s675 := true;
[L1523]  RET         call success_s675 := approve~address~uint256_GEEQToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1524]              assume revert || gas < 0;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:54:47,645 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:54:47,646 INFO  L82        PathProgramCache]: Analyzing trace with hash -1103620250, now seen corresponding path program 1 times
[2020-11-25 16:54:47,646 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:54:47,656 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:54:47,705 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:54:47,705 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:54:47,705 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 16:54:47,705 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:54:47,706 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 16:54:47,706 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 16:54:47,706 INFO  L87              Difference]: Start difference. First operand 4034 states and 4396 transitions. cyclomatic complexity: 366 Second operand 5 states.
[2020-11-25 16:54:48,169 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:54:48,170 INFO  L93              Difference]: Finished difference Result 4888 states and 5431 transitions.
[2020-11-25 16:54:48,170 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:54:48,170 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4888 states and 5431 transitions.
[2020-11-25 16:54:48,182 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 16:54:48,194 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4888 states to 3604 states and 4141 transitions.
[2020-11-25 16:54:48,195 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 791
[2020-11-25 16:54:48,195 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 791
[2020-11-25 16:54:48,195 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3604 states and 4141 transitions.
[2020-11-25 16:54:48,198 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:54:48,198 INFO  L728         BuchiCegarLoop]: Abstraction has 3604 states and 4141 transitions.
[2020-11-25 16:54:48,201 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3604 states and 4141 transitions.
[2020-11-25 16:54:48,219 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3604 to 2598.
[2020-11-25 16:54:48,219 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2598 states.
[2020-11-25 16:54:48,222 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2598 states to 2598 states and 2835 transitions.
[2020-11-25 16:54:48,222 INFO  L751         BuchiCegarLoop]: Abstraction has 2598 states and 2835 transitions.
[2020-11-25 16:54:48,222 INFO  L631         BuchiCegarLoop]: Abstraction has 2598 states and 2835 transitions.
[2020-11-25 16:54:48,222 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:54:48,222 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2598 states and 2835 transitions.
[2020-11-25 16:54:48,225 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:54:48,225 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:54:48,225 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:54:48,226 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:54:48,226 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_GEEQToken0 := false;
[L3]                 call_approve_GEEQToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5350]              assume null == 0;
[L5351]  CALL        call this := FreshRefGenerator__success();
[L2768]              havoc newRef;
[L2769]              assume Alloc[newRef] == false;
[L2770]              Alloc[newRef] := true;
[L2771]              assume newRef != null;
[L5351]  RET         call this := FreshRefGenerator__success();
[L5352]              assume now >= 0;
[L5353]              assume DType[this] == GEEQToken;
[L5354]              assume msgvalue_MSG == 0;
[L5355]              gas := gas - 53000;
[L5356]  CALL        call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L679]               havoc __exception;
[L680]               revert := false;
[L681]   COND FALSE  !(__exception)
[L710]   CALL        call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3141]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2920]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2905]              assume msgsender_MSG != null;
[L2906]              Balance[this] := 0;
[L2920]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2921]  COND FALSE  !(revert)
[L3141]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]  COND FALSE  !(revert)
[L3145]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2988]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]              assume msgsender_MSG != null;
[L2972]              Balance[this] := 0;
[L2973]              owner_Owned[this] := null;
[L2974]              newOwner_Owned[this] := null;
[L2988]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2989]  COND FALSE  !(revert)
[L3145]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]  COND FALSE  !(revert)
[L3149]  CALL        call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              symbol_GEEQToken[this] := 1164884495;
[L3098]              name_GEEQToken[this] := 1164884495;
[L3099]              decimals_GEEQToken[this] := 0;
[L3100]              _totalSupply_GEEQToken[this] := 0;
[L3101]              _totalMinted_GEEQToken[this] := 0;
[L3102]              _maxMintable_GEEQToken[this] := 0;
[L3103]              pauseOn_GEEQToken[this] := false;
[L3104]              migrationOn_GEEQToken[this] := false;
[L3105]              balances_GEEQToken[this] := zeroRefintArr();
[L3106]              sum_balances0[this] := 0;
[L3107]              allowed_GEEQToken[this] := zeroRefRefintArr();
[L3108]              sum_allowed1[this] := 0;
[L3109]              geeqaddress_GEEQToken[this] := zeroRefintArr();
[L3111]              symbol_GEEQToken[this] := -15460934;
[L3112]              name_GEEQToken[this] := -1182004402;
[L3113]              decimals_GEEQToken[this] := 18;
[L3114]              _totalMinted_GEEQToken[this] := 0;
[L3115]              _totalSupply_GEEQToken[this] := 0;
[L3116]              __var_2 := decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3117]              _maxMintable_GEEQToken[this] := 100000000 * (nonlinearPow(10, decimals_GEEQToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3118]              owner_Owned[this] := msgsender_MSG;
[L3149]  RET         call GEEQToken_GEEQToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3150]  COND FALSE  !(revert)
[L710]   RET         call GEEQToken_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG);
[L711]               assume !revert && gas >= 0;
[L5356]  RET         call GEEQToken_GEEQToken(this, msgsender_MSG, msgvalue_MSG);
[L5357]              assume !revert && gas >= 0;
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s675);
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND FALSE  !(choice == 26)
[L5186]  COND FALSE  !(choice == 25)
[L5192]  COND FALSE  !(choice == 24)
[L5198]  COND FALSE  !(choice == 23)
[L5205]  COND TRUE   choice == 22
[L5206]              gas := gas - 21000;
[L5207]  COND TRUE   gas >= 0
[L5208]              assume tokens_s675 >= 0 && tokens_s675 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5209]              assume msgvalue_MSG == 0;
[L5210]  CALL        call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s675;
[L3]                 call_approve_GEEQToken0 := true;
[L3]                 call_approve_GEEQToken0 := false;
[L3]                 revert := revert_hold;
[L1495]              havoc __exception;
[L1496]              revert := false;
[L1497]  COND FALSE  !(__exception)
[L1526]  CALL        call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L3552]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3553]              allowed_GEEQToken[this][msgsender_MSG][spender_s675] := tokens_s675;
[L3554]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_GEEQToken[this][msgsender_MSG][spender_s675];
[L3555]              assert { :EventEmitted "Approval_GEEQToken" } true;
[L3556]              success_s675 := true;
[L1526]  RET         call success_s675 := approve~address~uint256_GEEQToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L1527]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((success_s675 == true && allowed_GEEQToken[this][msgsender_MSG][spender_s675] == tokens_s675) && _totalSupply_GEEQToken[this] == old(_totalSupply_GEEQToken[this])) && balances_GEEQToken[this] == old(balances_GEEQToken[this])) && allowed_GEEQToken[this][p1][p2] == old(allowed_GEEQToken[this][p1][p2])) && symbol_GEEQToken[this] == old(symbol_GEEQToken[this])) && name_GEEQToken[this] == old(name_GEEQToken[this])) && decimals_GEEQToken[this] == old(decimals_GEEQToken[this])) && _totalMinted_GEEQToken[this] == old(_totalMinted_GEEQToken[this])) && _maxMintable_GEEQToken[this] == old(_maxMintable_GEEQToken[this])) && pauseOn_GEEQToken[this] == old(pauseOn_GEEQToken[this])) && migrationOn_GEEQToken[this] == old(migrationOn_GEEQToken[this])) && geeqaddress_GEEQToken[this] == old(geeqaddress_GEEQToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L5210]  RET         call success_s675 := approve~address~uint256_GEEQToken(this, msgsender_MSG, msgvalue_MSG, spender_s675, tokens_s675);
[L5360]  RET         call CorralChoice_GEEQToken(this);

Loop:
[L5360]  CALL        call CorralChoice_GEEQToken(this);
[L5125]              havoc msgsender_MSG;
[L5126]              havoc msgvalue_MSG;
[L5127]              havoc choice;
[L5128]              havoc __ret_0_totalSupply;
[L5129]              havoc tokenOwner_s591;
[L5130]              havoc balance_s591;
[L5131]              havoc tokenOwner_s763;
[L5132]              havoc spender_s763;
[L5133]              havoc remaining_s763;
[L5134]              havoc to_s647;
[L5135]              havoc tokens_s647;
[L5136]              havoc success_s647;
[L5137]              havoc spender_s675;
[L5138]              havoc tokens_s675;
[L5139]              havoc success_s675;
[L5140]              havoc from_s747;
[L5141]              havoc to_s747;
[L5142]              havoc tokens_s747;
[L5143]              havoc success_s747;
[L5144]              havoc __ret_0_owner;
[L5145]              havoc __ret_0_newOwner;
[L5146]              havoc _newOwner_s220;
[L5147]              havoc __ret_0_symbol;
[L5148]              havoc __ret_0_name;
[L5149]              havoc __ret_0_decimals;
[L5150]              havoc __ret_0_pauseOn;
[L5151]              havoc __ret_0_migrationOn;
[L5152]              havoc arg813_s0;
[L5153]              havoc __ret_0_balances;
[L5154]              havoc arg814_s0;
[L5155]              havoc __ret_0_geeqaddress;
[L5156]              havoc registeraddress_s387;
[L5157]              havoc tokenAddress_s407;
[L5158]              havoc tokens_s407;
[L5159]              havoc success_s407;
[L5160]              havoc __ret_0_totalMinted;
[L5161]              havoc receiver_s579;
[L5162]              havoc token_amt_s579;
[L5163]              havoc spender_s806;
[L5164]              havoc tokens_s806;
[L5165]              havoc data_s806;
[L5166]              havoc success_s806;
[L5167]              havoc tmpNow;
[L5168]              havoc gas;
[L5169]              assume gas > 4000000 && gas <= 8000000;
[L5170]              tmpNow := now;
[L5171]              havoc now;
[L5172]              assume now > tmpNow;
[L5173]              assume msgsender_MSG != null;
[L5174]              assume DType[msgsender_MSG] != SafeMath;
[L5175]              assume DType[msgsender_MSG] != ERC20Interface;
[L5176]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L5177]              assume DType[msgsender_MSG] != Owned;
[L5178]              assume DType[msgsender_MSG] != GEEQToken;
[L5179]              Alloc[msgsender_MSG] := true;
[L5180]  COND TRUE   choice == 26
[L5181]              gas := gas - 21000;
[L5182]  COND FALSE  !(gas >= 0)
[L5360]  RET         call CorralChoice_GEEQToken(this);

[2020-11-25 16:54:48,229 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:54:48,229 INFO  L82        PathProgramCache]: Analyzing trace with hash 611593959, now seen corresponding path program 1 times
[2020-11-25 16:54:48,230 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:54:48,247 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:54:48,310 INFO  L134       CoverageAnalysis]: Checked inductivity of 71 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 67 trivial. 0 not checked.
[2020-11-25 16:54:48,310 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:54:48,310 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:54:48,310 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:54:48,311 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:54:48,311 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:54:48,311 INFO  L87              Difference]: Start difference. First operand 2598 states and 2835 transitions. cyclomatic complexity: 240 Second operand 7 states.
[2020-11-25 16:54:48,654 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:54:48,654 INFO  L93              Difference]: Finished difference Result 1366 states and 1484 transitions.
[2020-11-25 16:54:48,654 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:54:48,654 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1366 states and 1484 transitions.
[2020-11-25 16:54:48,656 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:54:48,656 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1366 states to 0 states and 0 transitions.
[2020-11-25 16:54:48,656 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:54:48,656 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:54:48,656 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:54:48,657 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:54:48,657 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:54:48,657 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:54:48,657 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:54:48,657 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:54:48,657 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:54:48,657 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:54:48,657 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:54:48,660 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:54:48 BasicIcfg
[2020-11-25 16:54:48,660 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:54:48,660 INFO  L168              Benchmark]: Toolchain (without parser) took 7720.65 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 625.0 MB). Free memory was 935.2 MB in the beginning and 969.3 MB in the end (delta: -34.1 MB). Peak memory consumption was 590.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,661 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,661 INFO  L168              Benchmark]: Boogie Preprocessor took 97.76 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,661 INFO  L168              Benchmark]: UtopiaSpecLang took 60.80 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,662 INFO  L168              Benchmark]: Boogie Printer took 17.55 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,662 INFO  L168              Benchmark]: RCFGBuilder took 795.07 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,662 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.99 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.6 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,663 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1411.22 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 770.6 MB in the beginning and 893.5 MB in the end (delta: -122.9 MB). Peak memory consumption was 173.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,663 INFO  L168              Benchmark]: BlockEncodingV2 took 148.77 ms. Allocated memory is still 1.3 GB. Free memory was 893.5 MB in the beginning and 816.9 MB in the end (delta: 76.5 MB). Peak memory consumption was 76.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,663 INFO  L168              Benchmark]: BuchiAutomizer took 5144.62 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 403.7 MB). Free memory was 816.9 MB in the beginning and 969.3 MB in the end (delta: -152.4 MB). Peak memory consumption was 251.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:54:48,666 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4722 locations, 8038 edges
  - StatisticsResult: Encoded RCFG
    4672 locations, 7908 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 97.76 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.80 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.55 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 795.07 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.99 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.6 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1411.22 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 770.6 MB in the beginning and 893.5 MB in the end (delta: -122.9 MB). Peak memory consumption was 173.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 148.77 ms. Allocated memory is still 1.3 GB. Free memory was 893.5 MB in the beginning and 816.9 MB in the end (delta: 76.5 MB). Peak memory consumption was 76.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5144.62 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 403.7 MB). Free memory was 816.9 MB in the beginning and 969.3 MB in the end (delta: -152.4 MB). Peak memory consumption was 251.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1990 locations, 2487 edges
  - StatisticsResult: BuchiProgram size
    4722 locations, 8038 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.1s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.7s. Construction of modules took 2.9s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 2084 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4034 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18470 SDtfs, 20485 SDslu, 22104 SDs, 0 SdLazy, 35404 SolverSat, 3730 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_GEEQToken0) ==> ( <>(success_approve_GEEQToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
