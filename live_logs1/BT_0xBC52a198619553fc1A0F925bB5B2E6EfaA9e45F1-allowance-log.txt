This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:15:53,709 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:15:53,709 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:15:53,717 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:15:53,717 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:15:53,717 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:15:53,718 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:15:53,719 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:15:53,720 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:15:53,721 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:15:53,721 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:15:53,721 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:15:53,722 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:15:53,722 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:15:53,723 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:15:53,723 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:15:53,724 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:15:53,725 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:15:53,725 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:15:53,726 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:15:53,727 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:15:53,727 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:15:53,728 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:15:53,728 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:15:53,729 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:15:53,729 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:15:53,729 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:15:53,730 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:15:53,730 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:15:53,730 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:15:53,730 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:15:53,731 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:15:53,731 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:15:53,731 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:15:53,732 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:15:53,732 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:15:53,732 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:15:53,732 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:15:53,733 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:15:53,733 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:15:53,733 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:15:53,734 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:15:53,739 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:15:53,739 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:15:53,740 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:15:53,740 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:15:53,740 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:15:53,740 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:15:53,741 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:15:53,741 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:15:53,741 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:15:53,742 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:15:53,759 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:15:53,772 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:15:53,775 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:15:53,776 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:15:53,777 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:15:53,777 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl
[2020-11-25 01:15:53,777 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl'
[2020-11-25 01:15:53,846 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:15:53,846 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:15:53,847 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:15:53,847 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:15:53,847 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:15:53,858 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,859 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,882 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,883 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,899 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,907 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,913 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,922 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:15:53,922 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:15:53,922 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:15:53,924 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:15:53,928 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/1) ...
[2020-11-25 01:15:53,940 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]))))
[2020-11-25 01:15:53,944 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]))))
[2020-11-25 01:15:53,949 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]))))
[2020-11-25 01:15:53,953 INFO  L636   opiaSpecLangObserver]: Parsed ( _allowed_ERC20[this][owner_s247][spender_s247]>=0 && _allowed_ERC20[this][owner_s247][spender_s247]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:15:53,955 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( __ret_0_==_allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s247,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]]
[2020-11-25 01:15:53,959 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]))))
[2020-11-25 01:15:53,959 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_ERC200) ==> ( <>AP(success_allowance_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:15:53,967 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:15:53 PropertyContainer
[2020-11-25 01:15:53,967 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:15:53,967 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:15:53,967 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:15:53,967 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:15:53,968 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/2) ...
[2020-11-25 01:15:53,968 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:15:53,969 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:15:53,979 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:15:53" (2/2) ...
[2020-11-25 01:15:53,979 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:15:53,979 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:15:53,979 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:15:53,979 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:15:53,980 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/2) ...
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:15:54,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:15:54,018 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:15:54,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:15:54,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:15:54,019 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:15:54,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:15:54,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:15:54,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:15:54,021 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BT
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:15:54,022 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:15:54,023 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__success
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__fail
[2020-11-25 01:15:54,024 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__success
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__success
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__success
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:15:54,025 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:15:54,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:15:54,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:15:54,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:15:54,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:15:54,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:15:54,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:15:54,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:15:54,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__success
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__fail
[2020-11-25 01:15:54,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__success
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:15:54,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BT
[2020-11-25 01:15:54,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:15:54,031 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:15:54,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:15:54,353 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:15:54,353 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:15:54,353 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:15:54,546 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:15:54,546 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:15:54,548 INFO  L202        PluginConnector]: Adding new model BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:15:54 BoogieIcfgContainer
[2020-11-25 01:15:54,548 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:15:53" (2/2) ...
[2020-11-25 01:15:54,548 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:15:54,548 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@55ed2ce5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:15:54, skipping insertion in model container
[2020-11-25 01:15:54,548 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:15:54,548 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:15:54,548 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:15:54,549 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:15:54,549 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/3) ...
[2020-11-25 01:15:54,550 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5a402a40 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:15:54, skipping insertion in model container
[2020-11-25 01:15:54,550 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:15:53" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:15:54,579 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:15:54 NWAContainer
[2020-11-25 01:15:54,579 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:15:54,579 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:15:54,579 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:15:54,580 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:15:54,581 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:15:54" (3/4) ...
[2020-11-25 01:15:54,581 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7302e58c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:15:54, skipping insertion in model container
[2020-11-25 01:15:54,581 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:15:54" (4/4) ...
[2020-11-25 01:15:54,583 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:15:54,586 INFO  L110   BuchiProductObserver]: Initial RCFG 1240 locations, 1626 edges
[2020-11-25 01:15:54,586 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:15:54,593 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:15:55,745 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:15:55,751 INFO  L110   BuchiProductObserver]: BuchiProgram size 3022 locations, 5301 edges
[2020-11-25 01:15:55,751 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:15:55 BoogieIcfgContainer
[2020-11-25 01:15:55,751 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:15:55,751 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:15:55,751 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:15:55,753 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:15:55,754 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:15:55" (1/1) ...
[2020-11-25 01:15:55,830 INFO  L313           BlockEncoder]: Initial Icfg 3022 locations, 5301 edges
[2020-11-25 01:15:55,830 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:15:55,831 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:15:55,831 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:15:55,832 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:15:55,844 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 11 locations because of local infeasibility
[2020-11-25 01:15:55,851 INFO  L70        RemoveSinkStates]: Removed 26 edges and 17 locations by removing sink states
[2020-11-25 01:15:55,861 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:15:55,866 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:15:55,870 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:15:55,870 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:15:55,875 INFO  L313           BlockEncoder]: Encoded RCFG 2972 locations, 5168 edges
[2020-11-25 01:15:55,875 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:15:55 BasicIcfg
[2020-11-25 01:15:55,875 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:15:55,876 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:15:55,876 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:15:55,878 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:15:55,878 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,879 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:15:53" (1/6) ...
[2020-11-25 01:15:55,880 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@600020de and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:15:55, skipping insertion in model container
[2020-11-25 01:15:55,880 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,880 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:15:53" (2/6) ...
[2020-11-25 01:15:55,881 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@600020de and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:15:55, skipping insertion in model container
[2020-11-25 01:15:55,881 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,881 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:15:54" (3/6) ...
[2020-11-25 01:15:55,881 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@600020de and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:15:55, skipping insertion in model container
[2020-11-25 01:15:55,881 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,881 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:15:54" (4/6) ...
[2020-11-25 01:15:55,881 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@600020de and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:15:55, skipping insertion in model container
[2020-11-25 01:15:55,881 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,882 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:15:55" (5/6) ...
[2020-11-25 01:15:55,882 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@600020de and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:15:55, skipping insertion in model container
[2020-11-25 01:15:55,882 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:15:55,882 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:15:55" (6/6) ...
[2020-11-25 01:15:55,883 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_allowance.bpl_BEv2
[2020-11-25 01:15:55,922 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:15:55,923 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:15:55,923 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:15:55,923 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:15:55,923 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:15:55,923 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:15:55,923 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:15:55,923 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:15:55,924 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:15:55,955 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2972 states.
[2020-11-25 01:15:56,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:56,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:56,006 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:56,015 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:56,015 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:56,015 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:15:56,015 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2972 states.
[2020-11-25 01:15:56,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:56,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:56,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:56,034 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:56,035 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND TRUE   choice == 14
[L3365]              gas := gas - 21000;
[L3366]  COND FALSE  !(gas >= 0)
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:56,051 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:56,051 INFO  L82        PathProgramCache]: Analyzing trace with hash 592403543, now seen corresponding path program 1 times
[2020-11-25 01:15:56,056 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:56,080 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:56,125 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:15:56,127 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:15:56,128 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:15:56,131 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:56,257 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:15:56,257 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:15:56,259 INFO  L87              Difference]: Start difference. First operand 2972 states. Second operand 3 states.
[2020-11-25 01:15:56,430 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:56,431 INFO  L93              Difference]: Finished difference Result 3020 states and 4902 transitions.
[2020-11-25 01:15:56,431 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:15:56,432 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3020 states and 4902 transitions.
[2020-11-25 01:15:56,460 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:15:56,498 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3020 states to 3020 states and 4902 transitions.
[2020-11-25 01:15:56,499 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 01:15:56,503 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 817
[2020-11-25 01:15:56,503 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3020 states and 4902 transitions.
[2020-11-25 01:15:56,517 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:56,517 INFO  L728         BuchiCegarLoop]: Abstraction has 3020 states and 4902 transitions.
[2020-11-25 01:15:56,535 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3020 states and 4902 transitions.
[2020-11-25 01:15:56,597 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3020 to 2500.
[2020-11-25 01:15:56,598 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2500 states.
[2020-11-25 01:15:56,610 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2500 states to 2500 states and 4007 transitions.
[2020-11-25 01:15:56,611 INFO  L751         BuchiCegarLoop]: Abstraction has 2500 states and 4007 transitions.
[2020-11-25 01:15:56,611 INFO  L631         BuchiCegarLoop]: Abstraction has 2500 states and 4007 transitions.
[2020-11-25 01:15:56,611 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:15:56,611 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2500 states and 4007 transitions.
[2020-11-25 01:15:56,620 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:56,620 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:56,621 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:56,622 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:56,622 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND TRUE   !(account_s571 != null)
[L2078]              revert := true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND TRUE   revert
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND TRUE   choice == 14
[L3365]              gas := gas - 21000;
[L3366]  COND FALSE  !(gas >= 0)
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:56,626 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:56,626 INFO  L82        PathProgramCache]: Analyzing trace with hash 144097580, now seen corresponding path program 1 times
[2020-11-25 01:15:56,627 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:56,635 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:56,653 INFO  L134       CoverageAnalysis]: Checked inductivity of 9 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 01:15:56,653 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:15:56,653 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:15:56,654 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:56,655 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:15:56,655 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:15:56,655 INFO  L87              Difference]: Start difference. First operand 2500 states and 4007 transitions. cyclomatic complexity: 1509 Second operand 4 states.
[2020-11-25 01:15:56,857 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:56,857 INFO  L93              Difference]: Finished difference Result 2279 states and 2582 transitions.
[2020-11-25 01:15:56,857 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:15:56,858 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2279 states and 2582 transitions.
[2020-11-25 01:15:56,867 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:56,876 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2279 states to 2279 states and 2582 transitions.
[2020-11-25 01:15:56,877 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 589
[2020-11-25 01:15:56,877 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 589
[2020-11-25 01:15:56,877 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2279 states and 2582 transitions.
[2020-11-25 01:15:56,879 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:56,879 INFO  L728         BuchiCegarLoop]: Abstraction has 2279 states and 2582 transitions.
[2020-11-25 01:15:56,881 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2279 states and 2582 transitions.
[2020-11-25 01:15:56,896 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2279 to 2279.
[2020-11-25 01:15:56,897 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2279 states.
[2020-11-25 01:15:56,902 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2279 states to 2279 states and 2582 transitions.
[2020-11-25 01:15:56,902 INFO  L751         BuchiCegarLoop]: Abstraction has 2279 states and 2582 transitions.
[2020-11-25 01:15:56,903 INFO  L631         BuchiCegarLoop]: Abstraction has 2279 states and 2582 transitions.
[2020-11-25 01:15:56,903 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:15:56,903 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2279 states and 2582 transitions.
[2020-11-25 01:15:56,910 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:56,910 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:56,910 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:56,912 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:56,913 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND TRUE   !(account_s571 != null)
[L2078]              revert := true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND TRUE   revert
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:56,921 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:56,922 INFO  L82        PathProgramCache]: Analyzing trace with hash 1664553309, now seen corresponding path program 1 times
[2020-11-25 01:15:56,924 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:56,938 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:56,972 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 3 trivial. 0 not checked.
[2020-11-25 01:15:56,972 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:15:56,972 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:15:56,972 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:56,973 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:15:56,973 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:15:56,973 INFO  L87              Difference]: Start difference. First operand 2279 states and 2582 transitions. cyclomatic complexity: 305 Second operand 7 states.
[2020-11-25 01:15:57,001 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:57,001 INFO  L93              Difference]: Finished difference Result 2287 states and 2589 transitions.
[2020-11-25 01:15:57,001 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:15:57,002 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2287 states and 2589 transitions.
[2020-11-25 01:15:57,008 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:57,016 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2287 states to 2278 states and 2580 transitions.
[2020-11-25 01:15:57,017 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 589
[2020-11-25 01:15:57,017 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 589
[2020-11-25 01:15:57,017 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2278 states and 2580 transitions.
[2020-11-25 01:15:57,019 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:57,019 INFO  L728         BuchiCegarLoop]: Abstraction has 2278 states and 2580 transitions.
[2020-11-25 01:15:57,021 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2278 states and 2580 transitions.
[2020-11-25 01:15:57,039 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2278 to 2278.
[2020-11-25 01:15:57,039 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2278 states.
[2020-11-25 01:15:57,043 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2278 states to 2278 states and 2580 transitions.
[2020-11-25 01:15:57,043 INFO  L751         BuchiCegarLoop]: Abstraction has 2278 states and 2580 transitions.
[2020-11-25 01:15:57,043 INFO  L631         BuchiCegarLoop]: Abstraction has 2278 states and 2580 transitions.
[2020-11-25 01:15:57,043 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:15:57,043 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2278 states and 2580 transitions.
[2020-11-25 01:15:57,047 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:15:57,047 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:57,047 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:57,048 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:57,049 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND TRUE   !(c_s173 >= a_s173)
[L1667]              revert := true;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND TRUE   revert
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND TRUE   revert
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:57,051 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:57,051 INFO  L82        PathProgramCache]: Analyzing trace with hash -327376013, now seen corresponding path program 1 times
[2020-11-25 01:15:57,052 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:57,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:57,088 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 01:15:57,088 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:15:57,088 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:15:57,088 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:57,088 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:15:57,088 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:15:57,089 INFO  L87              Difference]: Start difference. First operand 2278 states and 2580 transitions. cyclomatic complexity: 304 Second operand 3 states.
[2020-11-25 01:15:57,129 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:57,129 INFO  L93              Difference]: Finished difference Result 2780 states and 3106 transitions.
[2020-11-25 01:15:57,130 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:15:57,130 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2780 states and 3106 transitions.
[2020-11-25 01:15:57,141 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:15:57,153 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2780 states to 2589 states and 2880 transitions.
[2020-11-25 01:15:57,153 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 666
[2020-11-25 01:15:57,153 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 682
[2020-11-25 01:15:57,153 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2589 states and 2880 transitions.
[2020-11-25 01:15:57,156 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:57,156 INFO  L728         BuchiCegarLoop]: Abstraction has 2589 states and 2880 transitions.
[2020-11-25 01:15:57,159 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2589 states and 2880 transitions.
[2020-11-25 01:15:57,177 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2589 to 2295.
[2020-11-25 01:15:57,178 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2295 states.
[2020-11-25 01:15:57,182 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2295 states to 2295 states and 2512 transitions.
[2020-11-25 01:15:57,182 INFO  L751         BuchiCegarLoop]: Abstraction has 2295 states and 2512 transitions.
[2020-11-25 01:15:57,182 INFO  L631         BuchiCegarLoop]: Abstraction has 2295 states and 2512 transitions.
[2020-11-25 01:15:57,182 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:15:57,182 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2295 states and 2512 transitions.
[2020-11-25 01:15:57,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:15:57,186 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:57,186 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:57,187 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:57,187 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND FALSE  !(revert)
[L2085]              _totalSupply_ERC20[this] := __var_14;
[L2086]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2086]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2087]  COND FALSE  !(revert)
[L2090]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2091]              _balances_ERC20[this][account_s571] := __var_15;
[L2092]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2093]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND FALSE  !(revert)
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND FALSE  !(__exception)
[L385]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1776]              __ret_0_ := _allowed_ERC20[this][owner_s247][spender_s247];
[L385]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L386]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == _allowed_ERC20[this][owner_s247][spender_s247] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this]));
[L2]                 revert := revert_hold;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:57,190 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:57,190 INFO  L82        PathProgramCache]: Analyzing trace with hash 1087302978, now seen corresponding path program 1 times
[2020-11-25 01:15:57,191 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:57,201 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:57,241 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:15:57,242 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:15:57,242 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:15:57,242 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:57,242 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:15:57,242 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:15:57,242 INFO  L87              Difference]: Start difference. First operand 2295 states and 2512 transitions. cyclomatic complexity: 219 Second operand 4 states.
[2020-11-25 01:15:57,287 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:57,287 INFO  L93              Difference]: Finished difference Result 2296 states and 2511 transitions.
[2020-11-25 01:15:57,287 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:15:57,288 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2296 states and 2511 transitions.
[2020-11-25 01:15:57,295 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:15:57,315 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2296 states to 2286 states and 2501 transitions.
[2020-11-25 01:15:57,315 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 630
[2020-11-25 01:15:57,316 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 630
[2020-11-25 01:15:57,316 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2286 states and 2501 transitions.
[2020-11-25 01:15:57,318 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:57,318 INFO  L728         BuchiCegarLoop]: Abstraction has 2286 states and 2501 transitions.
[2020-11-25 01:15:57,321 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2286 states and 2501 transitions.
[2020-11-25 01:15:57,336 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2286 to 2284.
[2020-11-25 01:15:57,336 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2284 states.
[2020-11-25 01:15:57,340 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2284 states to 2284 states and 2499 transitions.
[2020-11-25 01:15:57,340 INFO  L751         BuchiCegarLoop]: Abstraction has 2284 states and 2499 transitions.
[2020-11-25 01:15:57,340 INFO  L631         BuchiCegarLoop]: Abstraction has 2284 states and 2499 transitions.
[2020-11-25 01:15:57,340 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:15:57,340 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2284 states and 2499 transitions.
[2020-11-25 01:15:57,343 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:15:57,343 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:15:57,343 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:15:57,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:15:57,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND FALSE  !(revert)
[L2085]              _totalSupply_ERC20[this] := __var_14;
[L2086]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2086]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2087]  COND FALSE  !(revert)
[L2090]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2091]              _balances_ERC20[this][account_s571] := __var_15;
[L2092]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2093]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND FALSE  !(revert)
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND TRUE   __exception
[L364]               __tmp__Balance := Balance;
[L365]               __tmp__DType := DType;
[L366]               __tmp__Alloc := Alloc;
[L367]               __tmp__balance_ADDR := balance_ADDR;
[L368]               __tmp__M_Ref_int := M_Ref_int;
[L369]               __tmp__sum__balances0 := sum__balances0;
[L370]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L371]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L372]               __tmp__sum__allowed1 := sum__allowed1;
[L373]               __tmp__Length := Length;
[L374]               __tmp__now := now;
[L375]               __tmp___balances_ERC20 := _balances_ERC20;
[L376]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L377]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L378]               __tmp__name_BT := name_BT;
[L379]               __tmp__symbol_BT := symbol_BT;
[L380]               __tmp__decimals_BT := decimals_BT;
[L381]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L382]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1770]              __ret_0_ := __tmp___allowed_ERC20[this][owner_s247][spender_s247];
[L382]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L383]               assume revert || gas < 0;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND TRUE   choice == 12
[L3377]              gas := gas - 21000;
[L3378]  COND TRUE   gas >= 0
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s247][spender_s247] >= 0 && _allowed_ERC20[this][owner_s247][spender_s247] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L361]               havoc __exception;
[L362]               revert := false;
[L363]   COND TRUE   __exception
[L364]               __tmp__Balance := Balance;
[L365]               __tmp__DType := DType;
[L366]               __tmp__Alloc := Alloc;
[L367]               __tmp__balance_ADDR := balance_ADDR;
[L368]               __tmp__M_Ref_int := M_Ref_int;
[L369]               __tmp__sum__balances0 := sum__balances0;
[L370]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L371]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L372]               __tmp__sum__allowed1 := sum__allowed1;
[L373]               __tmp__Length := Length;
[L374]               __tmp__now := now;
[L375]               __tmp___balances_ERC20 := _balances_ERC20;
[L376]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L377]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L378]               __tmp__name_BT := name_BT;
[L379]               __tmp__symbol_BT := symbol_BT;
[L380]               __tmp__decimals_BT := decimals_BT;
[L381]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L382]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L1770]              __ret_0_ := __tmp___allowed_ERC20[this][owner_s247][spender_s247];
[L382]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L383]               assume revert || gas < 0;
[L3380]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s247, spender_s247);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:15:57,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:15:57,348 INFO  L82        PathProgramCache]: Analyzing trace with hash 497044668, now seen corresponding path program 1 times
[2020-11-25 01:15:57,348 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:15:57,356 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:15:57,379 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:15:57,380 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:15:57,380 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:15:57,380 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:15:57,380 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:15:57,380 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:15:57,380 INFO  L87              Difference]: Start difference. First operand 2284 states and 2499 transitions. cyclomatic complexity: 217 Second operand 5 states.
[2020-11-25 01:15:57,512 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:15:57,512 INFO  L93              Difference]: Finished difference Result 1520 states and 1655 transitions.
[2020-11-25 01:15:57,512 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:15:57,512 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1520 states and 1655 transitions.
[2020-11-25 01:15:57,515 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:15:57,515 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1520 states to 0 states and 0 transitions.
[2020-11-25 01:15:57,515 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:15:57,515 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:15:57,515 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:15:57,515 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:15:57,515 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:15:57,515 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:15:57,515 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:15:57,515 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 01:15:57,516 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:15:57,516 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:15:57,516 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:15:57,521 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:15:57 BasicIcfg
[2020-11-25 01:15:57,521 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:15:57,522 INFO  L168              Benchmark]: Toolchain (without parser) took 3675.46 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 358.6 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -220.4 MB). Peak memory consumption was 138.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,524 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,525 INFO  L168              Benchmark]: Boogie Preprocessor took 75.17 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,526 INFO  L168              Benchmark]: UtopiaSpecLang took 44.95 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,527 INFO  L168              Benchmark]: Boogie Printer took 11.76 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,528 INFO  L168              Benchmark]: RCFGBuilder took 568.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,529 INFO  L168              Benchmark]: UtopiaLTL2Aut took 31.04 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 818.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,529 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1171.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.7 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -313.1 MB). Peak memory consumption was 186.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,530 INFO  L168              Benchmark]: BlockEncodingV2 took 124.21 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 60.1 MB). Peak memory consumption was 60.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,531 INFO  L168              Benchmark]: BuchiAutomizer took 1645.17 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 180.9 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -89.1 MB). Peak memory consumption was 91.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:15:57,534 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3022 locations, 5301 edges
  - StatisticsResult: Encoded RCFG
    2972 locations, 5168 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.17 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.95 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.76 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 568.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 31.04 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 818.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1171.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.7 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -313.1 MB). Peak memory consumption was 186.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 124.21 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 60.1 MB). Peak memory consumption was 60.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1645.17 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 180.9 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -89.1 MB). Peak memory consumption was 91.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1240 locations, 1626 edges
  - StatisticsResult: BuchiProgram size
    3022 locations, 5301 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 816 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2500 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15017 SDtfs, 8583 SDslu, 22922 SDs, 0 SdLazy, 1814 SolverSat, 1917 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_ERC200) ==> ( <>(success_allowance_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
