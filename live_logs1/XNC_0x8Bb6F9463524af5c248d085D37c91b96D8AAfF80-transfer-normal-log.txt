This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:25:14,497 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:25:14,499 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:25:14,510 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:25:14,510 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:25:14,510 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:25:14,511 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:25:14,513 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:25:14,514 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:25:14,515 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:25:14,516 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:25:14,516 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:25:14,517 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:25:14,517 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:25:14,518 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:25:14,519 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:25:14,520 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:25:14,521 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:25:14,522 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:25:14,523 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:25:14,524 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:25:14,525 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:25:14,527 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:25:14,527 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:25:14,527 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:25:14,528 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:25:14,528 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:25:14,529 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:25:14,529 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:25:14,529 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:25:14,530 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:25:14,530 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:25:14,531 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:25:14,531 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:25:14,532 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:25:14,532 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:25:14,533 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:25:14,533 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:25:14,533 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:25:14,534 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:25:14,534 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:25:14,535 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:25:14,543 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:25:14,543 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:25:14,544 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:25:14,544 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:25:14,544 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:25:14,544 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:25:14,544 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:25:14,544 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:25:14,545 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:25:14,545 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:25:14,545 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:25:14,546 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:25:14,546 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:25:14,572 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:25:14,586 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:25:14,589 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:25:14,590 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:25:14,590 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:25:14,591 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl
[2020-11-25 09:25:14,591 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl'
[2020-11-25 09:25:14,690 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:25:14,692 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:25:14,692 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:25:14,692 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:25:14,692 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:25:14,709 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,711 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,760 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,761 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,789 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,803 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,814 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,828 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:25:14,829 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:25:14,830 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:25:14,834 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:25:14,839 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/1) ...
[2020-11-25 09:25:14,857 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_BasicToken[this][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && balances_BasicToken[this][msg.sender] == old(balances_BasicToken[this][msg.sender]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && name_XNC[this] == old(name_XNC[this]) && symbol_XNC[this] == old(symbol_XNC[this]) && decimals_XNC[this] == old(decimals_XNC[this]) && cap_CappedToken[this] == old(cap_CappedToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 09:25:14,863 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_BasicToken[this][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && balances_BasicToken[this][msg.sender] == old(balances_BasicToken[this][msg.sender]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && name_XNC[this] == old(name_XNC[this]) && symbol_XNC[this] == old(symbol_XNC[this]) && decimals_XNC[this] == old(decimals_XNC[this]) && cap_CappedToken[this] == old(cap_CappedToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 09:25:14,871 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_BasicToken[this][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && balances_BasicToken[this][msg.sender] == old(balances_BasicToken[this][msg.sender]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && name_XNC[this] == old(name_XNC[this]) && symbol_XNC[this] == old(symbol_XNC[this]) && decimals_XNC[this] == old(decimals_XNC[this]) && cap_CappedToken[this] == old(cap_CappedToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 09:25:14,879 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s326 ) && msg.sender!=_to_s326 ) && _value_s326<=balances_BasicToken[this][msg.sender] ) && ( balances_BasicToken[this][_to_s326] + _value_s326 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s326>=0 ) && _value_s326<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s326]>=0 ) && balances_BasicToken[this][_to_s326]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:25:14,882 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_BasicToken[this][msg.sender]==( ( old(balances_BasicToken[this][msg.sender]) ) - _value_s326 ) ) && balances_BasicToken[this][_to_s326]==( ( old(balances_BasicToken[this][_to_s326]) ) + _value_s326 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && balances_BasicToken[this][p1]==( old(balances_BasicToken[this][p1]) ) ) && name_XNC[this]==( old(name_XNC[this]) ) ) && symbol_XNC[this]==( old(symbol_XNC[this]) ) ) && decimals_XNC[this]==( old(decimals_XNC[this]) ) ) && cap_CappedToken[this]==( old(cap_CappedToken[this]) ) ) && mintingFinished_MintableToken[this]==( old(mintingFinished_MintableToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_BasicToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]],IdentifierExpression[_value_s326,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_XNC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[cap_CappedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[cap_CappedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]]
[2020-11-25 09:25:14,889 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_BasicToken[this][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && balances_BasicToken[this][msg.sender] == old(balances_BasicToken[this][msg.sender]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && name_XNC[this] == old(name_XNC[this]) && symbol_XNC[this] == old(symbol_XNC[this]) && decimals_XNC[this] == old(decimals_XNC[this]) && cap_CappedToken[this] == old(cap_CappedToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 09:25:14,889 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BasicToken0) ==> ( <>AP(success_transfer_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:25:14,902 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:25:14 PropertyContainer
[2020-11-25 09:25:14,902 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:25:14,903 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:25:14,903 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:25:14,903 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:25:14,904 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/2) ...
[2020-11-25 09:25:14,904 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:25:14,904 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:25:14,923 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:25:14" (2/2) ...
[2020-11-25 09:25:14,924 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:25:14,924 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:25:14,924 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:25:14,924 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:25:14,925 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/2) ...
[2020-11-25 09:25:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:25:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:25:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:25:14,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:25:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 09:25:14,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable
[2020-11-25 09:25:14,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 09:25:14,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 09:25:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 09:25:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 09:25:14,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 09:25:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 09:25:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 09:25:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 09:25:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 09:25:14,984 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 09:25:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 09:25:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 09:25:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 09:25:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 09:25:14,985 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 09:25:14,986 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 09:25:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 09:25:14,986 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 09:25:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 09:25:14,986 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 09:25:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 09:25:14,986 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 09:25:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 09:25:14,986 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 09:25:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 09:25:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken
[2020-11-25 09:25:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken
[2020-11-25 09:25:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken
[2020-11-25 09:25:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken
[2020-11-25 09:25:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken
[2020-11-25 09:25:14,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure CappedToken_CappedToken_NoBaseCtor__success
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure CappedToken_CappedToken
[2020-11-25 09:25:14,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure CappedToken_CappedToken
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_CappedToken
[2020-11-25 09:25:14,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_CappedToken
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_CappedToken
[2020-11-25 09:25:14,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_CappedToken
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure XNC_XNC_NoBaseCtor__success
[2020-11-25 09:25:14,988 INFO  L130     BoogieDeclarations]: Found specification of procedure XNC_XNC
[2020-11-25 09:25:14,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure XNC_XNC
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XNC
[2020-11-25 09:25:14,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XNC
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XNC
[2020-11-25 09:25:14,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XNC
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XNC
[2020-11-25 09:25:14,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XNC
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:25:14,989 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__success
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 09:25:14,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintableToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MintableToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CappedToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_CappedToken
[2020-11-25 09:25:14,991 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_XNC
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,992 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__success
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 09:25:14,993 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 09:25:14,994 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 09:25:14,995 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CappedToken_CappedToken_NoBaseCtor__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CappedToken_CappedToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CappedToken_CappedToken__fail
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_CappedToken__success
[2020-11-25 09:25:14,996 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_CappedToken__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_CappedToken__success
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_CappedToken__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure XNC_XNC_NoBaseCtor__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure XNC_XNC__success
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure XNC_XNC__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XNC__success
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XNC__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XNC__success
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XNC__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XNC__success
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XNC__fail
[2020-11-25 09:25:14,997 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:25:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:25:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:25:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 09:25:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 09:25:14,998 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__fail
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:25:14,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 09:25:14,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__success
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 09:25:15,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 09:25:15,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 09:25:15,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__fail
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__success
[2020-11-25 09:25:15,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CappedToken_CappedToken_NoBaseCtor__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CappedToken_CappedToken_NoBaseCtor__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CappedToken_CappedToken__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CappedToken_CappedToken__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_CappedToken__fail
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_CappedToken__success
[2020-11-25 09:25:15,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_CappedToken__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_CappedToken__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure XNC_XNC_NoBaseCtor__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure XNC_XNC_NoBaseCtor__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure XNC_XNC__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure XNC_XNC__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XNC__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XNC__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XNC__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XNC__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XNC__fail
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XNC__success
[2020-11-25 09:25:15,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__fail
[2020-11-25 09:25:15,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__success
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 09:25:15,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintableToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MintableToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CappedToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_CappedToken
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_XNC
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:25:15,008 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:25:15,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:25:15,577 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:25:15,604 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:25:15,604 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:25:15,604 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:25:16,064 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:25:16,064 INFO  L286             CfgBuilder]: Removed 9 assue(true) statements.
[2020-11-25 09:25:16,067 INFO  L202        PluginConnector]: Adding new model XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:25:16 BoogieIcfgContainer
[2020-11-25 09:25:16,067 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:25:14" (2/2) ...
[2020-11-25 09:25:16,067 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:25:16,067 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@16e67ed6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:25:16, skipping insertion in model container
[2020-11-25 09:25:16,068 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:25:16,068 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:25:16,068 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:25:16,069 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:25:16,070 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/3) ...
[2020-11-25 09:25:16,070 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@349d946f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:25:16, skipping insertion in model container
[2020-11-25 09:25:16,070 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:25:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:25:16,105 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:25:16 NWAContainer
[2020-11-25 09:25:16,105 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:25:16,105 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:25:16,106 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:25:16,106 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:25:16,107 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:25:16" (3/4) ...
[2020-11-25 09:25:16,108 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7a529f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:25:16, skipping insertion in model container
[2020-11-25 09:25:16,108 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:25:16" (4/4) ...
[2020-11-25 09:25:16,111 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:25:16,116 INFO  L110   BuchiProductObserver]: Initial RCFG 2303 locations, 3216 edges
[2020-11-25 09:25:16,116 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:25:16,128 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:25:18,004 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:25:18,012 INFO  L110   BuchiProductObserver]: BuchiProgram size 5818 locations, 10623 edges
[2020-11-25 09:25:18,012 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:25:18 BoogieIcfgContainer
[2020-11-25 09:25:18,012 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:25:18,013 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:25:18,013 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:25:18,014 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:25:18,014 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:25:18" (1/1) ...
[2020-11-25 09:25:18,140 INFO  L313           BlockEncoder]: Initial Icfg 5818 locations, 10623 edges
[2020-11-25 09:25:18,141 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:25:18,141 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:25:18,141 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:25:18,142 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:25:18,156 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 21 locations because of local infeasibility
[2020-11-25 09:25:18,168 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 09:25:18,183 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:25:18,188 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:25:18,193 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:25:18,193 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:25:18,197 INFO  L313           BlockEncoder]: Encoded RCFG 5750 locations, 10451 edges
[2020-11-25 09:25:18,197 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:25:18 BasicIcfg
[2020-11-25 09:25:18,198 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:25:18,198 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:25:18,198 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:25:18,200 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:25:18,200 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,200 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:25:14" (1/6) ...
[2020-11-25 09:25:18,201 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3955b6df and model type XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:25:18, skipping insertion in model container
[2020-11-25 09:25:18,201 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:25:14" (2/6) ...
[2020-11-25 09:25:18,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3955b6df and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:25:18, skipping insertion in model container
[2020-11-25 09:25:18,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:25:16" (3/6) ...
[2020-11-25 09:25:18,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3955b6df and model type XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:25:18, skipping insertion in model container
[2020-11-25 09:25:18,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:25:16" (4/6) ...
[2020-11-25 09:25:18,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3955b6df and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:25:18, skipping insertion in model container
[2020-11-25 09:25:18,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,203 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:25:18" (5/6) ...
[2020-11-25 09:25:18,203 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3955b6df and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:25:18, skipping insertion in model container
[2020-11-25 09:25:18,203 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:25:18,203 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:25:18" (6/6) ...
[2020-11-25 09:25:18,204 INFO  L404   chiAutomizerObserver]: Analyzing ICFG XNC_0x8Bb6F9463524af5c248d085D37c91b96D8AAfF80_transfer-normal.bpl_BEv2
[2020-11-25 09:25:18,230 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:25:18,231 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:25:18,231 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:25:18,231 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:25:18,231 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:25:18,231 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:25:18,231 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:25:18,231 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:25:18,231 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:25:18,271 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5750 states.
[2020-11-25 09:25:18,315 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:18,315 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:25:18,315 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:25:18,322 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:18,322 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:18,322 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:25:18,323 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5750 states.
[2020-11-25 09:25:18,342 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:18,342 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:25:18,342 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:25:18,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:18,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_BasicToken0 := false;
[L3]                 call_transfer_BasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6512]              assume null == 0;
[L6513]  CALL        call this := FreshRefGenerator__success();
[L2510]              havoc newRef;
[L2511]              assume Alloc[newRef] == false;
[L2512]              Alloc[newRef] := true;
[L2513]              assume newRef != null;
[L6513]  RET         call this := FreshRefGenerator__success();
[L6514]              assume now >= 0;
[L6515]              assume DType[this] == XNC;
[L6516]              assume msgvalue_MSG == 0;
[L6517]              gas := gas - 53000;
[L6518]  CALL        call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1532]              havoc __exception;
[L1533]              revert := false;
[L1534]  COND FALSE  !(__exception)
[L1558]  CALL        call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3627]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3627]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3628]  COND TRUE   revert
[L1558]  RET         call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1559]              assume !revert && gas >= 0;
[L6518]  RET         call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L6519]              assume !revert && gas >= 0;

Loop:
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND TRUE   choice == 18
[L6390]              gas := gas - 21000;
[L6391]  COND FALSE  !(gas >= 0)
[L6522]  RET         call CorralChoice_XNC(this);

[2020-11-25 09:25:18,357 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:18,357 INFO  L82        PathProgramCache]: Analyzing trace with hash -716295025, now seen corresponding path program 1 times
[2020-11-25 09:25:18,361 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:18,388 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:25:18,431 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:25:18,432 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:25:18,433 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:25:18,809 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:25:18,821 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:25:18,821 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:25:18,823 INFO  L87              Difference]: Start difference. First operand 5750 states. Second operand 4 states.
[2020-11-25 09:25:19,303 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:25:19,303 INFO  L93              Difference]: Finished difference Result 2947 states and 3370 transitions.
[2020-11-25 09:25:19,303 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:25:19,304 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2947 states and 3370 transitions.
[2020-11-25 09:25:19,321 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:19,344 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2947 states to 2943 states and 3362 transitions.
[2020-11-25 09:25:19,345 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 09:25:19,348 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 743
[2020-11-25 09:25:19,348 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2943 states and 3362 transitions.
[2020-11-25 09:25:19,356 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:25:19,356 INFO  L728         BuchiCegarLoop]: Abstraction has 2943 states and 3362 transitions.
[2020-11-25 09:25:19,373 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2943 states and 3362 transitions.
[2020-11-25 09:25:19,420 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2943 to 2943.
[2020-11-25 09:25:19,421 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2943 states.
[2020-11-25 09:25:19,425 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2943 states to 2943 states and 3362 transitions.
[2020-11-25 09:25:19,426 INFO  L751         BuchiCegarLoop]: Abstraction has 2943 states and 3362 transitions.
[2020-11-25 09:25:19,426 INFO  L631         BuchiCegarLoop]: Abstraction has 2943 states and 3362 transitions.
[2020-11-25 09:25:19,426 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:25:19,426 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2943 states and 3362 transitions.
[2020-11-25 09:25:19,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:19,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:25:19,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:25:19,434 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:19,434 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_BasicToken0 := false;
[L3]                 call_transfer_BasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6512]              assume null == 0;
[L6513]  CALL        call this := FreshRefGenerator__success();
[L2510]              havoc newRef;
[L2511]              assume Alloc[newRef] == false;
[L2512]              Alloc[newRef] := true;
[L2513]              assume newRef != null;
[L6513]  RET         call this := FreshRefGenerator__success();
[L6514]              assume now >= 0;
[L6515]              assume DType[this] == XNC;
[L6516]              assume msgvalue_MSG == 0;
[L6517]              gas := gas - 53000;
[L6518]  CALL        call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1532]              havoc __exception;
[L1533]              revert := false;
[L1534]  COND FALSE  !(__exception)
[L1558]  CALL        call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3627]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND TRUE   revert
[L3627]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3628]  COND TRUE   revert
[L1558]  RET         call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1559]              assume !revert && gas >= 0;
[L6518]  RET         call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L6519]              assume !revert && gas >= 0;
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2934]  COND TRUE   !(_value_s326 <= balances_BasicToken[this][msgsender_MSG])
[L2935]              revert := true;
[L644]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_BasicToken[this][msgsender_MSG] == old(balances_BasicToken[this][msgsender_MSG]) - _value_s326) && balances_BasicToken[this][_to_s326] == old(balances_BasicToken[this][_to_s326]) + _value_s326) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && name_XNC[this] == old(name_XNC[this])) && symbol_XNC[this] == old(symbol_XNC[this])) && decimals_XNC[this] == old(decimals_XNC[this])) && cap_CappedToken[this] == old(cap_CappedToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

Loop:
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2934]  COND TRUE   !(_value_s326 <= balances_BasicToken[this][msgsender_MSG])
[L2935]              revert := true;
[L644]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_BasicToken[this][msgsender_MSG] == old(balances_BasicToken[this][msgsender_MSG]) - _value_s326) && balances_BasicToken[this][_to_s326] == old(balances_BasicToken[this][_to_s326]) + _value_s326) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && name_XNC[this] == old(name_XNC[this])) && symbol_XNC[this] == old(symbol_XNC[this])) && decimals_XNC[this] == old(decimals_XNC[this])) && cap_CappedToken[this] == old(cap_CappedToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

[2020-11-25 09:25:19,437 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:19,437 INFO  L82        PathProgramCache]: Analyzing trace with hash -47785545, now seen corresponding path program 1 times
[2020-11-25 09:25:19,438 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:19,446 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:25:19,468 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:25:19,468 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:25:19,468 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 09:25:19,469 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:25:19,469 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 09:25:19,469 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 09:25:19,469 INFO  L87              Difference]: Start difference. First operand 2943 states and 3362 transitions. cyclomatic complexity: 421 Second operand 3 states.
[2020-11-25 09:25:19,541 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:25:19,541 INFO  L93              Difference]: Finished difference Result 3815 states and 4410 transitions.
[2020-11-25 09:25:19,542 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 09:25:19,542 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3815 states and 4410 transitions.
[2020-11-25 09:25:19,555 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:25:19,566 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3815 states to 3521 states and 3960 transitions.
[2020-11-25 09:25:19,567 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 901
[2020-11-25 09:25:19,568 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 916
[2020-11-25 09:25:19,568 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3521 states and 3960 transitions.
[2020-11-25 09:25:19,573 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:25:19,573 INFO  L728         BuchiCegarLoop]: Abstraction has 3521 states and 3960 transitions.
[2020-11-25 09:25:19,576 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3521 states and 3960 transitions.
[2020-11-25 09:25:19,602 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3521 to 2989.
[2020-11-25 09:25:19,602 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2989 states.
[2020-11-25 09:25:19,606 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2989 states to 2989 states and 3294 transitions.
[2020-11-25 09:25:19,607 INFO  L751         BuchiCegarLoop]: Abstraction has 2989 states and 3294 transitions.
[2020-11-25 09:25:19,607 INFO  L631         BuchiCegarLoop]: Abstraction has 2989 states and 3294 transitions.
[2020-11-25 09:25:19,607 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:25:19,607 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2989 states and 3294 transitions.
[2020-11-25 09:25:19,612 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:19,612 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:25:19,612 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:25:19,617 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [24, 24, 24, 24, 24, 24, 24, 24, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:19,617 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_BasicToken0 := false;
[L3]                 call_transfer_BasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6512]              assume null == 0;
[L6513]  CALL        call this := FreshRefGenerator__success();
[L2510]              havoc newRef;
[L2511]              assume Alloc[newRef] == false;
[L2512]              Alloc[newRef] := true;
[L2513]              assume newRef != null;
[L6513]  RET         call this := FreshRefGenerator__success();
[L6514]              assume now >= 0;
[L6515]              assume DType[this] == XNC;
[L6516]              assume msgvalue_MSG == 0;
[L6517]              gas := gas - 53000;
[L6518]  CALL        call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1532]              havoc __exception;
[L1533]              revert := false;
[L1534]  COND FALSE  !(__exception)
[L1558]  CALL        call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3627]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3627]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3628]  COND FALSE  !(revert)
[L3631]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3631]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3632]  COND FALSE  !(revert)
[L3635]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3635]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3636]  COND FALSE  !(revert)
[L3639]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3639]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND FALSE  !(revert)
[L3643]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3643]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3644]  COND FALSE  !(revert)
[L3647]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3647]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3648]  COND FALSE  !(revert)
[L3651]  CALL        call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3465]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3465]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3466]  COND FALSE  !(revert)
[L3469]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3469]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3470]  COND FALSE  !(revert)
[L3473]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3473]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3474]  COND FALSE  !(revert)
[L3477]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3477]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3478]  COND FALSE  !(revert)
[L3481]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3481]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3482]  COND FALSE  !(revert)
[L3485]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3485]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3486]  COND FALSE  !(revert)
[L3489]  CALL        call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3420]              assume msgsender_MSG != null;
[L3421]              Balance[this] := 0;
[L3422]              cap_CappedToken[this] := 0;
[L3424]  COND FALSE  !(!(_cap_s704 > 0))
[L3428]              cap_CappedToken[this] := _cap_s704;
[L3489]  RET         call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3490]  COND FALSE  !(revert)
[L3651]  RET         call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3652]  COND FALSE  !(revert)
[L3655]  CALL        call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3581]              assume msgsender_MSG != null;
[L3582]              Balance[this] := 0;
[L3583]              name_XNC[this] := 410647391;
[L3584]              symbol_XNC[this] := 1087999494;
[L3585]              decimals_XNC[this] := 18;
[L3655]  RET         call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3656]  COND FALSE  !(revert)
[L1558]  RET         call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1559]              assume !revert && gas >= 0;
[L6518]  RET         call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L6519]              assume !revert && gas >= 0;
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND TRUE   !(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG])
[L2903]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

Loop:
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND TRUE   !(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG])
[L2903]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

[2020-11-25 09:25:19,626 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:19,626 INFO  L82        PathProgramCache]: Analyzing trace with hash -726902170, now seen corresponding path program 1 times
[2020-11-25 09:25:19,627 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:19,656 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:25:19,967 INFO  L134       CoverageAnalysis]: Checked inductivity of 3875 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 3875 trivial. 0 not checked.
[2020-11-25 09:25:19,967 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:25:19,967 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 09:25:19,968 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:25:19,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 09:25:19,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 09:25:19,969 INFO  L87              Difference]: Start difference. First operand 2989 states and 3294 transitions. cyclomatic complexity: 307 Second operand 6 states.
[2020-11-25 09:25:20,624 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:25:20,624 INFO  L93              Difference]: Finished difference Result 3193 states and 3515 transitions.
[2020-11-25 09:25:20,625 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:25:20,625 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3193 states and 3515 transitions.
[2020-11-25 09:25:20,634 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 09:25:20,646 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3193 states to 3193 states and 3515 transitions.
[2020-11-25 09:25:20,646 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 848
[2020-11-25 09:25:20,647 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 848
[2020-11-25 09:25:20,647 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3193 states and 3515 transitions.
[2020-11-25 09:25:20,650 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:25:20,650 INFO  L728         BuchiCegarLoop]: Abstraction has 3193 states and 3515 transitions.
[2020-11-25 09:25:20,653 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3193 states and 3515 transitions.
[2020-11-25 09:25:20,677 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3193 to 3047.
[2020-11-25 09:25:20,677 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3047 states.
[2020-11-25 09:25:20,680 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3047 states to 3047 states and 3356 transitions.
[2020-11-25 09:25:20,680 INFO  L751         BuchiCegarLoop]: Abstraction has 3047 states and 3356 transitions.
[2020-11-25 09:25:20,680 INFO  L631         BuchiCegarLoop]: Abstraction has 3047 states and 3356 transitions.
[2020-11-25 09:25:20,680 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:25:20,680 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3047 states and 3356 transitions.
[2020-11-25 09:25:20,684 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:25:20,684 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:25:20,684 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:25:20,687 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [24, 24, 24, 24, 24, 24, 24, 24, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:25:20,687 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_BasicToken0 := false;
[L3]                 call_transfer_BasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6512]              assume null == 0;
[L6513]  CALL        call this := FreshRefGenerator__success();
[L2510]              havoc newRef;
[L2511]              assume Alloc[newRef] == false;
[L2512]              Alloc[newRef] := true;
[L2513]              assume newRef != null;
[L6513]  RET         call this := FreshRefGenerator__success();
[L6514]              assume now >= 0;
[L6515]              assume DType[this] == XNC;
[L6516]              assume msgvalue_MSG == 0;
[L6517]              gas := gas - 53000;
[L6518]  CALL        call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1532]              havoc __exception;
[L1533]              revert := false;
[L1534]  COND FALSE  !(__exception)
[L1558]  CALL        call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3627]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3627]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3628]  COND FALSE  !(revert)
[L3631]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3631]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3632]  COND FALSE  !(revert)
[L3635]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3635]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3636]  COND FALSE  !(revert)
[L3639]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3639]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND FALSE  !(revert)
[L3643]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3643]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3644]  COND FALSE  !(revert)
[L3647]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3647]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3648]  COND FALSE  !(revert)
[L3651]  CALL        call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3465]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3465]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3466]  COND FALSE  !(revert)
[L3469]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3469]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3470]  COND FALSE  !(revert)
[L3473]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3473]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3474]  COND FALSE  !(revert)
[L3477]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3477]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3478]  COND FALSE  !(revert)
[L3481]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3481]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3482]  COND FALSE  !(revert)
[L3485]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3485]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3486]  COND FALSE  !(revert)
[L3489]  CALL        call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3420]              assume msgsender_MSG != null;
[L3421]              Balance[this] := 0;
[L3422]              cap_CappedToken[this] := 0;
[L3424]  COND FALSE  !(!(_cap_s704 > 0))
[L3428]              cap_CappedToken[this] := _cap_s704;
[L3489]  RET         call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3490]  COND FALSE  !(revert)
[L3651]  RET         call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3652]  COND FALSE  !(revert)
[L3655]  CALL        call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3581]              assume msgsender_MSG != null;
[L3582]              Balance[this] := 0;
[L3583]              name_XNC[this] := 410647391;
[L3584]              symbol_XNC[this] := 1087999494;
[L3585]              decimals_XNC[this] := 18;
[L3655]  RET         call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3656]  COND FALSE  !(revert)
[L1558]  RET         call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1559]              assume !revert && gas >= 0;
[L6518]  RET         call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L6519]              assume !revert && gas >= 0;
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND FALSE  !(!(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG]))
[L2906]              __var_3 := null;
[L2907]  COND TRUE   !(_to_s326 != null)
[L2908]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

Loop:
[L6522]  CALL        call CorralChoice_XNC(this);
[L6334]              havoc msgsender_MSG;
[L6335]              havoc msgvalue_MSG;
[L6336]              havoc choice;
[L6337]              havoc __ret_0_owner;
[L6338]              havoc _newOwner_s153;
[L6339]              havoc __ret_0_totalSupply;
[L6340]              havoc _owner_s338;
[L6341]              havoc __ret_0_balanceOf;
[L6342]              havoc _to_s326;
[L6343]              havoc _value_s326;
[L6344]              havoc __ret_0_transfer;
[L6345]              havoc _owner_s479;
[L6346]              havoc _spender_s479;
[L6347]              havoc __ret_0_allowance;
[L6348]              havoc _from_s435;
[L6349]              havoc _to_s435;
[L6350]              havoc _value_s435;
[L6351]              havoc __ret_0_transferFrom;
[L6352]              havoc _spender_s463;
[L6353]              havoc _value_s463;
[L6354]              havoc __ret_0_approve;
[L6355]              havoc _spender_s521;
[L6356]              havoc _addedValue_s521;
[L6357]              havoc __ret_0_increaseApproval;
[L6358]              havoc _spender_s581;
[L6359]              havoc _subtractedValue_s581;
[L6360]              havoc __ret_0_decreaseApproval;
[L6361]              havoc __ret_0_mintingFinished;
[L6362]              havoc _to_s729;
[L6363]              havoc _amount_s729;
[L6364]              havoc __ret_0_mint;
[L6365]              havoc __ret_0_finishMinting;
[L6366]              havoc __ret_0_cap;
[L6367]              havoc _cap_s704;
[L6368]              havoc __ret_0_name;
[L6369]              havoc __ret_0_symbol;
[L6370]              havoc __ret_0_decimals;
[L6371]              havoc _cap_s750;
[L6372]              havoc tmpNow;
[L6373]              havoc gas;
[L6374]              assume gas > 4000000 && gas <= 8000000;
[L6375]              tmpNow := now;
[L6376]              havoc now;
[L6377]              assume now > tmpNow;
[L6378]              assume msgsender_MSG != null;
[L6379]              assume DType[msgsender_MSG] != SafeMath;
[L6380]              assume DType[msgsender_MSG] != Ownable;
[L6381]              assume DType[msgsender_MSG] != ERC20Basic;
[L6382]              assume DType[msgsender_MSG] != ERC20;
[L6383]              assume DType[msgsender_MSG] != BasicToken;
[L6384]              assume DType[msgsender_MSG] != StandardToken;
[L6385]              assume DType[msgsender_MSG] != MintableToken;
[L6386]              assume DType[msgsender_MSG] != CappedToken;
[L6387]              assume DType[msgsender_MSG] != XNC;
[L6388]              Alloc[msgsender_MSG] := true;
[L6389]  COND FALSE  !(choice == 18)
[L6395]  COND FALSE  !(choice == 17)
[L6401]  COND FALSE  !(choice == 16)
[L6407]  COND FALSE  !(choice == 15)
[L6413]  COND FALSE  !(choice == 14)
[L6419]  COND TRUE   choice == 13
[L6420]              gas := gas - 21000;
[L6421]  COND TRUE   gas >= 0
[L6422]              assume _value_s326 >= 0 && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6423]              assume msgvalue_MSG == 0;
[L6424]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND FALSE  !(!(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG]))
[L2906]              __var_3 := null;
[L2907]  COND TRUE   !(_to_s326 != null)
[L2908]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L6522]  RET         call CorralChoice_XNC(this);

[2020-11-25 09:25:20,694 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:20,694 INFO  L82        PathProgramCache]: Analyzing trace with hash -1349078426, now seen corresponding path program 1 times
[2020-11-25 09:25:20,694 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:20,721 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:20,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:20,930 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:20,931 INFO  L82        PathProgramCache]: Analyzing trace with hash 784986962, now seen corresponding path program 1 times
[2020-11-25 09:25:20,931 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:20,936 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:20,940 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:20,949 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:25:20,949 INFO  L82        PathProgramCache]: Analyzing trace with hash -1423492489, now seen corresponding path program 1 times
[2020-11-25 09:25:20,950 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:25:20,977 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:21,009 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 09:25:21,266 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 140
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 09:25:21,490 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 244
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 09:25:21,670 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification that was a NOOP. DAG size: 196
[2020-11-25 09:25:22,019 WARN  L188               SmtUtils]: Spent 346.00 ms on a formula simplification. DAG size of input: 267 DAG size of output: 246
Garbage collection #1: 97 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
[2020-11-25 09:25:22,158 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification. DAG size of input: 154 DAG size of output: 150
[2020-11-25 09:25:22,331 WARN  L188               SmtUtils]: Spent 171.00 ms on a formula simplification that was a NOOP. DAG size: 312
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 09:25:22,450 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 253
[2020-11-25 09:25:22,564 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 09:25:22,631 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-25 09:25:23,353 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 192
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-25 09:25:23,635 WARN  L188               SmtUtils]: Spent 254.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 261
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 09:25:24,033 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 194
[2020-11-25 09:25:24,344 WARN  L188               SmtUtils]: Spent 308.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 244
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 09:25:24,581 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 310
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 09:25:24,686 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 251
[2020-11-25 09:25:25,190 WARN  L188               SmtUtils]: Spent 502.00 ms on a formula simplification. DAG size of input: 439 DAG size of output: 430
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 09:25:25,584 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 286
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 09:25:25,673 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:25,698 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:25:25,711 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:25:25 BasicIcfg
[2020-11-25 09:25:25,712 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:25:25,712 INFO  L168              Benchmark]: Toolchain (without parser) took 11021.17 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -420.3 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,713 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,713 INFO  L168              Benchmark]: Boogie Preprocessor took 136.55 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,713 INFO  L168              Benchmark]: UtopiaSpecLang took 72.98 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,714 INFO  L168              Benchmark]: Boogie Printer took 21.32 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.2 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,714 INFO  L168              Benchmark]: RCFGBuilder took 1143.44 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 908.2 MB in the beginning and 1.0 GB in the end (delta: -102.2 MB). Peak memory consumption was 196.0 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,715 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.56 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 7.5 MB). Peak memory consumption was 7.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,715 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1907.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 159.4 MB). Free memory was 1.0 GB in the beginning and 890.5 MB in the end (delta: 112.5 MB). Peak memory consumption was 509.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,715 INFO  L168              Benchmark]: BlockEncodingV2 took 184.87 ms. Allocated memory is still 1.3 GB. Free memory was 890.5 MB in the beginning and 797.1 MB in the end (delta: 93.4 MB). Peak memory consumption was 93.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,716 INFO  L168              Benchmark]: BuchiAutomizer took 7513.79 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 857.2 MB). Free memory was 797.1 MB in the beginning and 1.4 GB in the end (delta: -558.4 MB). Peak memory consumption was 659.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:25:25,719 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5818 locations, 10623 edges
  - StatisticsResult: Encoded RCFG
    5750 locations, 10451 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 136.55 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 72.98 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.32 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.2 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1143.44 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 908.2 MB in the beginning and 1.0 GB in the end (delta: -102.2 MB). Peak memory consumption was 196.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.56 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 7.5 MB). Peak memory consumption was 7.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1907.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 159.4 MB). Free memory was 1.0 GB in the beginning and 890.5 MB in the end (delta: 112.5 MB). Peak memory consumption was 509.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 184.87 ms. Allocated memory is still 1.3 GB. Free memory was 890.5 MB in the beginning and 797.1 MB in the end (delta: 93.4 MB). Peak memory consumption was 93.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7513.79 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 857.2 MB). Free memory was 797.1 MB in the beginning and 1.4 GB in the end (delta: -558.4 MB). Peak memory consumption was 659.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2303 locations, 3216 edges
  - StatisticsResult: BuchiProgram size
    5818 locations, 10623 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 3047 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.4s and 4 iterations.  TraceHistogramMax:24. Analysis of lassos took 5.8s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 678 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3047 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10106 SDtfs, 6574 SDslu, 12034 SDs, 0 SdLazy, 5405 SolverSat, 2081 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1087999509) = (new XNC)({from : 1087999512, _cap : 1});
[L1532]              havoc __exception;
[L1533]              revert := false;
[L1534]  COND FALSE  !(__exception)
[L1558]  CALL        call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3627]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3627]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3628]  COND FALSE  !(revert)
[L3631]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3631]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3632]  COND FALSE  !(revert)
[L3635]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3635]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3636]  COND FALSE  !(revert)
[L3639]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3639]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND FALSE  !(revert)
[L3643]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3643]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3644]  COND FALSE  !(revert)
[L3647]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3647]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3648]  COND FALSE  !(revert)
[L3651]  CALL        call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3465]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3465]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3466]  COND FALSE  !(revert)
[L3469]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3469]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3470]  COND FALSE  !(revert)
[L3473]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3473]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3474]  COND FALSE  !(revert)
[L3477]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3477]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3478]  COND FALSE  !(revert)
[L3481]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3481]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3482]  COND FALSE  !(revert)
[L3485]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3276]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3276]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3277]  COND FALSE  !(revert)
[L3280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3281]  COND FALSE  !(revert)
[L3284]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3284]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3285]  COND FALSE  !(revert)
[L3288]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3016]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L3016]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3017]  COND FALSE  !(revert)
[L3020]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2829]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2829]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2830]  COND FALSE  !(revert)
[L2833]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2810]              assume msgsender_MSG != null;
[L2811]              Balance[this] := 0;
[L2833]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2834]  COND FALSE  !(revert)
[L3020]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3021]  COND FALSE  !(revert)
[L3024]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2875]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2793]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2875]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2876]  COND FALSE  !(revert)
[L2879]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2853]              assume msgsender_MSG != null;
[L2854]              Balance[this] := 0;
[L2855]              balances_BasicToken[this] := zeroRefintArr();
[L2856]              sum_balances0[this] := 0;
[L2857]              totalSupply__BasicToken[this] := 0;
[L2879]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2880]  COND FALSE  !(revert)
[L3024]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3025]  COND FALSE  !(revert)
[L3028]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2987]              assume msgsender_MSG != null;
[L2988]              Balance[this] := 0;
[L2989]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2990]              sum_allowed1[this] := 0;
[L3028]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3288]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]  COND FALSE  !(revert)
[L3292]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2641]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]              assume msgsender_MSG != null;
[L2625]              Balance[this] := 0;
[L2626]              owner_Ownable[this] := null;
[L2628]              owner_Ownable[this] := msgsender_MSG;
[L2641]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2642]  COND FALSE  !(revert)
[L3292]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3293]  COND FALSE  !(revert)
[L3296]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3240]              assume msgsender_MSG != null;
[L3241]              Balance[this] := 0;
[L3242]              mintingFinished_MintableToken[this] := false;
[L3296]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3297]  COND FALSE  !(revert)
[L3485]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3486]  COND FALSE  !(revert)
[L3489]  CALL        call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3420]              assume msgsender_MSG != null;
[L3421]              Balance[this] := 0;
[L3422]              cap_CappedToken[this] := 0;
[L3424]  COND FALSE  !(!(_cap_s704 > 0))
[L3428]              cap_CappedToken[this] := _cap_s704;
[L3489]  RET         call CappedToken_CappedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s704);
[L3490]  COND FALSE  !(revert)
[L3651]  RET         call CappedToken_CappedToken__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3652]  COND FALSE  !(revert)
[L3655]  CALL        call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3581]              assume msgsender_MSG != null;
[L3582]              Balance[this] := 0;
[L3583]              name_XNC[this] := 410647391;
[L3584]              symbol_XNC[this] := 1087999494;
[L3585]              decimals_XNC[this] := 18;
[L3655]  RET         call XNC_XNC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L3656]  COND FALSE  !(revert)
[L1558]  RET         call XNC_XNC__success(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
[L1559]              assume !revert && gas >= 0;
[L6518]  RET         call XNC_XNC(this, msgsender_MSG, msgvalue_MSG, _cap_s750);
BasicToken(1087999509).transfer~address~uint256.gas(3979002)({from : 1087999500, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND FALSE  !(!(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG]))
[L2906]              __var_3 := null;
[L2907]  COND TRUE   !(_to_s326 != null)
[L2908]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);

Loop:
BasicToken(1087999509).transfer~address~uint256.gas(3979001)({from : 1087999496, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s326) && msgsender_MSG != _to_s326) && _value_s326 <= balances_BasicToken[this][msgsender_MSG]) && balances_BasicToken[this][_to_s326] + _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s326 >= 0) && _value_s326 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s326] >= 0) && balances_BasicToken[this][_to_s326] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_BasicToken0 := true;
[L3]                 call_transfer_BasicToken0 := false;
[L3]                 revert := revert_hold;
[L618]               havoc __exception;
[L619]               revert := false;
[L620]   COND TRUE   __exception
[L621]               __tmp__Balance := Balance;
[L622]               __tmp__DType := DType;
[L623]               __tmp__Alloc := Alloc;
[L624]               __tmp__balance_ADDR := balance_ADDR;
[L625]               __tmp__M_Ref_int := M_Ref_int;
[L626]               __tmp__sum_balances0 := sum_balances0;
[L627]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L628]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L629]               __tmp__sum_allowed1 := sum_allowed1;
[L630]               __tmp__Length := Length;
[L631]               __tmp__now := now;
[L632]               __tmp__owner_Ownable := owner_Ownable;
[L633]               __tmp__balances_BasicToken := balances_BasicToken;
[L634]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L635]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L636]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L637]               __tmp__cap_CappedToken := cap_CappedToken;
[L638]               __tmp__name_XNC := name_XNC;
[L639]               __tmp__symbol_XNC := symbol_XNC;
[L640]               __tmp__decimals_XNC := decimals_XNC;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L2902]  COND FALSE  !(!(_value_s326 <= __tmp__balances_BasicToken[this][msgsender_MSG]))
[L2906]              __var_3 := null;
[L2907]  COND TRUE   !(_to_s326 != null)
[L2908]              revert := true;
[L641]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);
[L642]               assume revert || gas < 0;
[L6424]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s326, _value_s326);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
