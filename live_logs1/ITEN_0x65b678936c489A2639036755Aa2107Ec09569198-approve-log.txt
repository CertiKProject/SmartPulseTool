This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:41:58,190 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:41:58,190 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:41:58,198 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:41:58,198 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:41:58,199 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:41:58,200 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:41:58,201 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:41:58,203 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:41:58,203 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:41:58,204 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:41:58,204 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:41:58,205 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:41:58,206 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:41:58,207 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:41:58,207 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:41:58,208 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:41:58,209 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:41:58,211 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:41:58,214 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:41:58,215 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:41:58,216 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:41:58,219 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:41:58,219 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:41:58,219 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:41:58,220 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:41:58,220 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:41:58,221 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:41:58,221 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:41:58,222 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:41:58,222 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:41:58,223 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:41:58,224 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:41:58,224 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:41:58,225 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:41:58,225 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:41:58,226 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:41:58,226 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:41:58,227 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:41:58,227 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:41:58,228 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:41:58,228 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:41:58,236 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:41:58,236 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:41:58,237 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:41:58,237 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:41:58,237 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:41:58,237 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:41:58,238 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:41:58,238 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:41:58,239 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:41:58,239 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:41:58,239 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:41:58,239 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:41:58,239 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:41:58,262 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:41:58,274 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:41:58,277 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:41:58,278 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:41:58,279 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:41:58,279 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl
[2020-11-25 18:41:58,280 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl'
[2020-11-25 18:41:58,365 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:41:58,366 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:41:58,367 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:41:58,367 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:41:58,367 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:41:58,383 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,385 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,422 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,423 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,443 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,453 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,461 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,472 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:41:58,473 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:41:58,473 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:41:58,476 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:41:58,481 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/1) ...
[2020-11-25 18:41:58,501 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:41:58,506 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:41:58,513 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:41:58,520 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s417 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s417,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-25 18:41:58,524 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s417==true && allowance_TokenERC20[this][msg.sender][_spender_s417]==_value_s417 ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && frozenAccount_ITEN[this]==( old(frozenAccount_ITEN[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && released_TokenERC20[this]==( old(released_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s417,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[_spender_s417,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s417,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_ITEN,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_ITEN,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-25 18:41:58,531 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 18:41:58,531 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:41:58,539 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:58 PropertyContainer
[2020-11-25 18:41:58,540 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:41:58,540 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:41:58,540 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:41:58,540 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:41:58,541 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/2) ...
[2020-11-25 18:41:58,541 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:41:58,541 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:41:58,555 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:58" (2/2) ...
[2020-11-25 18:41:58,555 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:41:58,556 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:41:58,556 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:41:58,556 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:41:58,556 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/2) ...
[2020-11-25 18:41:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:41:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:41:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 18:41:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 18:41:58,608 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 18:41:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 18:41:58,608 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 18:41:58,609 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 18:41:58,609 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 18:41:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 18:41:58,609 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20
[2020-11-25 18:41:58,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 18:41:58,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 18:41:58,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 18:41:58,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 18:41:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 18:41:58,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 18:41:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 18:41:58,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 18:41:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 18:41:58,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 18:41:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 18:41:58,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 18:41:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 18:41:58,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 18:41:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 18:41:58,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 18:41:58,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20
[2020-11-25 18:41:58,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 18:41:58,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 18:41:58,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN_NoBaseCtor__success
[2020-11-25 18:41:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN
[2020-11-25 18:41:58,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ITEN__success
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN
[2020-11-25 18:41:58,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN
[2020-11-25 18:41:58,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN
[2020-11-25 18:41:58,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:41:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__success
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 18:41:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ITEN
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 18:41:58,616 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,617 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 18:41:58,618 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN_NoBaseCtor__fail
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN__success
[2020-11-25 18:41:58,619 INFO  L130     BoogieDeclarations]: Found specification of procedure ITEN_ITEN__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ITEN__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN__success
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ITEN__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN__success
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ITEN__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN__success
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ITEN__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:41:58,620 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 18:41:58,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 18:41:58,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 18:41:58,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN_NoBaseCtor__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN_NoBaseCtor__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITEN_ITEN__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ITEN__fail
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ITEN__success
[2020-11-25 18:41:58,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ITEN__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ITEN__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ITEN__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:41:58,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__fail
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__success
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 18:41:58,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 18:41:58,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ITEN
[2020-11-25 18:41:58,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:41:58,629 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:41:58,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:41:59,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:59,235 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:59,235 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:59,236 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:59,384 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:41:59,384 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 18:41:59,387 INFO  L202        PluginConnector]: Adding new model ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:59 BoogieIcfgContainer
[2020-11-25 18:41:59,387 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:58" (2/2) ...
[2020-11-25 18:41:59,387 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:41:59,388 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@155941a5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:59, skipping insertion in model container
[2020-11-25 18:41:59,388 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:41:59,388 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:41:59,388 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:41:59,390 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:41:59,390 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/3) ...
[2020-11-25 18:41:59,390 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2582697 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:59, skipping insertion in model container
[2020-11-25 18:41:59,390 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:58" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:41:59,433 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:59 NWAContainer
[2020-11-25 18:41:59,433 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:41:59,433 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:41:59,433 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:41:59,434 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:41:59,435 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:59" (3/4) ...
[2020-11-25 18:41:59,436 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4ea1626d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:41:59, skipping insertion in model container
[2020-11-25 18:41:59,436 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:59" (4/4) ...
[2020-11-25 18:41:59,440 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:41:59,445 INFO  L110   BuchiProductObserver]: Initial RCFG 1829 locations, 2458 edges
[2020-11-25 18:41:59,445 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:41:59,457 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:42:00,722 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:42:00,728 INFO  L110   BuchiProductObserver]: BuchiProgram size 4504 locations, 8011 edges
[2020-11-25 18:42:00,728 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:42:00 BoogieIcfgContainer
[2020-11-25 18:42:00,728 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:42:00,728 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:42:00,728 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:42:00,730 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:42:00,731 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:42:00" (1/1) ...
[2020-11-25 18:42:00,825 INFO  L313           BlockEncoder]: Initial Icfg 4504 locations, 8011 edges
[2020-11-25 18:42:00,825 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:42:00,826 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:42:00,826 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:42:00,826 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:42:00,839 INFO  L70    emoveInfeasibleEdges]: Removed 78 edges and 13 locations because of local infeasibility
[2020-11-25 18:42:00,849 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 18:42:00,872 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:42:00,877 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:42:00,882 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:42:00,883 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:42:00,891 INFO  L313           BlockEncoder]: Encoded RCFG 4452 locations, 7875 edges
[2020-11-25 18:42:00,891 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:42:00 BasicIcfg
[2020-11-25 18:42:00,891 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:42:00,891 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:42:00,891 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:42:00,894 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:42:00,894 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,894 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:58" (1/6) ...
[2020-11-25 18:42:00,896 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4a7d5123 and model type ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:42:00, skipping insertion in model container
[2020-11-25 18:42:00,896 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,896 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:58" (2/6) ...
[2020-11-25 18:42:00,897 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4a7d5123 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:42:00, skipping insertion in model container
[2020-11-25 18:42:00,897 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,897 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:59" (3/6) ...
[2020-11-25 18:42:00,897 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4a7d5123 and model type ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:42:00, skipping insertion in model container
[2020-11-25 18:42:00,897 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,897 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:59" (4/6) ...
[2020-11-25 18:42:00,897 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4a7d5123 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:42:00, skipping insertion in model container
[2020-11-25 18:42:00,897 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,897 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:42:00" (5/6) ...
[2020-11-25 18:42:00,898 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4a7d5123 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:42:00, skipping insertion in model container
[2020-11-25 18:42:00,898 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:42:00,898 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:42:00" (6/6) ...
[2020-11-25 18:42:00,899 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ITEN_0x65b678936c489A2639036755Aa2107Ec09569198_approve.bpl_BEv2
[2020-11-25 18:42:00,938 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:42:00,939 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:42:00,939 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:42:00,939 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:42:00,939 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:42:00,939 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:42:00,939 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:42:00,939 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:42:00,939 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:42:00,990 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 18:42:01,058 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:42:01,059 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:01,059 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:01,069 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:01,069 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:01,069 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:42:01,069 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 18:42:01,099 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:42:01,100 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:01,100 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:01,102 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:01,102 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND FALSE  !(gas >= 0)
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:42:01,120 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:01,120 INFO  L82        PathProgramCache]: Analyzing trace with hash 620604713, now seen corresponding path program 1 times
[2020-11-25 18:42:01,125 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:01,150 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:42:01,187 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:42:01,189 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:42:01,190 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:42:01,471 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:42:01,480 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:42:01,481 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:42:01,482 INFO  L87              Difference]: Start difference. First operand 4452 states. Second operand 4 states.
[2020-11-25 18:42:01,870 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:42:01,871 INFO  L93              Difference]: Finished difference Result 3104 states and 3565 transitions.
[2020-11-25 18:42:01,871 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:42:01,872 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3104 states and 3565 transitions.
[2020-11-25 18:42:01,887 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:42:01,909 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3104 states to 3102 states and 3561 transitions.
[2020-11-25 18:42:01,910 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 18:42:01,912 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 711
[2020-11-25 18:42:01,912 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3102 states and 3561 transitions.
[2020-11-25 18:42:01,920 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:42:01,920 INFO  L728         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:42:01,935 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3102 states and 3561 transitions.
[2020-11-25 18:42:01,979 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3102 to 3102.
[2020-11-25 18:42:01,979 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3102 states.
[2020-11-25 18:42:01,984 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3102 states to 3102 states and 3561 transitions.
[2020-11-25 18:42:01,985 INFO  L751         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:42:01,985 INFO  L631         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 18:42:01,985 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:42:01,985 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3102 states and 3561 transitions.
[2020-11-25 18:42:01,992 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:42:01,992 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:01,992 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:01,995 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:01,995 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND FALSE  !(__exception)
[L580]   CALL        call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2648]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2648]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  COND TRUE   revert
[L580]   RET         call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L581]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s417 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s417] == _value_s417) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND FALSE  !(__exception)
[L580]   CALL        call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2648]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2648]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  COND TRUE   revert
[L580]   RET         call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L581]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s417 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s417] == _value_s417) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:42:01,999 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:01,999 INFO  L82        PathProgramCache]: Analyzing trace with hash -954942554, now seen corresponding path program 1 times
[2020-11-25 18:42:02,000 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:02,010 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:42:02,035 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:42:02,035 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:42:02,035 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:42:02,037 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:42:02,038 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:42:02,038 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:42:02,038 INFO  L87              Difference]: Start difference. First operand 3102 states and 3561 transitions. cyclomatic complexity: 461 Second operand 4 states.
[2020-11-25 18:42:02,849 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:42:02,849 INFO  L93              Difference]: Finished difference Result 4524 states and 5227 transitions.
[2020-11-25 18:42:02,849 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:42:02,849 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4524 states and 5227 transitions.
[2020-11-25 18:42:02,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 18:42:02,883 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4524 states to 4254 states and 4887 transitions.
[2020-11-25 18:42:02,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 953
[2020-11-25 18:42:02,885 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 999
[2020-11-25 18:42:02,885 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4254 states and 4887 transitions.
[2020-11-25 18:42:02,891 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:42:02,891 INFO  L728         BuchiCegarLoop]: Abstraction has 4254 states and 4887 transitions.
[2020-11-25 18:42:02,895 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4254 states and 4887 transitions.
[2020-11-25 18:42:02,944 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4254 to 3220.
[2020-11-25 18:42:02,945 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3220 states.
[2020-11-25 18:42:02,950 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3220 states to 3220 states and 3553 transitions.
[2020-11-25 18:42:02,951 INFO  L751         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 18:42:02,951 INFO  L631         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 18:42:02,951 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:42:02,951 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3220 states and 3553 transitions.
[2020-11-25 18:42:02,961 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:42:02,961 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:02,961 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:02,964 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:02,964 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND FALSE  !(__exception)
[L580]   CALL        call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2648]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2648]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  COND FALSE  !(revert)
[L2652]              __var_6 := null;
[L2653]  COND FALSE  !(!(_spender_s417 != null))
[L2657]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s417];
[L2658]              allowance_TokenERC20[this][msgsender_MSG][_spender_s417] := _value_s417;
[L2659]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s417];
[L2660]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2661]              success_s417 := true;
[L580]   RET         call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L581]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s417 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s417] == _value_s417) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND FALSE  !(__exception)
[L580]   CALL        call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2648]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2648]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  COND FALSE  !(revert)
[L2652]              __var_6 := null;
[L2653]  COND FALSE  !(!(_spender_s417 != null))
[L2657]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s417];
[L2658]              allowance_TokenERC20[this][msgsender_MSG][_spender_s417] := _value_s417;
[L2659]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s417];
[L2660]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2661]              success_s417 := true;
[L580]   RET         call success_s417 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L581]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s417 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s417] == _value_s417) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ITEN[this] == old(frozenAccount_ITEN[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:42:02,969 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:02,969 INFO  L82        PathProgramCache]: Analyzing trace with hash -2070602410, now seen corresponding path program 1 times
[2020-11-25 18:42:02,971 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:03,017 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:42:03,219 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 18:42:03,219 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:42:03,219 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 18:42:03,220 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:42:03,220 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 18:42:03,220 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 18:42:03,220 INFO  L87              Difference]: Start difference. First operand 3220 states and 3553 transitions. cyclomatic complexity: 335 Second operand 14 states.
[2020-11-25 18:42:04,968 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:42:04,969 INFO  L93              Difference]: Finished difference Result 3349 states and 3706 transitions.
[2020-11-25 18:42:04,969 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 18:42:04,969 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3349 states and 3706 transitions.
[2020-11-25 18:42:04,977 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 18:42:04,990 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3349 states to 3349 states and 3706 transitions.
[2020-11-25 18:42:04,990 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 812
[2020-11-25 18:42:04,991 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 812
[2020-11-25 18:42:04,991 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3349 states and 3706 transitions.
[2020-11-25 18:42:04,996 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:42:04,996 INFO  L728         BuchiCegarLoop]: Abstraction has 3349 states and 3706 transitions.
[2020-11-25 18:42:04,998 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3349 states and 3706 transitions.
[2020-11-25 18:42:05,028 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3349 to 3315.
[2020-11-25 18:42:05,028 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3315 states.
[2020-11-25 18:42:05,033 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3315 states to 3315 states and 3662 transitions.
[2020-11-25 18:42:05,033 INFO  L751         BuchiCegarLoop]: Abstraction has 3315 states and 3662 transitions.
[2020-11-25 18:42:05,033 INFO  L631         BuchiCegarLoop]: Abstraction has 3315 states and 3662 transitions.
[2020-11-25 18:42:05,033 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:42:05,033 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3315 states and 3662 transitions.
[2020-11-25 18:42:05,037 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 18:42:05,037 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:05,037 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:05,039 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:05,039 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND TRUE   revert
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND TRUE   revert
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:42:05,042 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:05,042 INFO  L82        PathProgramCache]: Analyzing trace with hash -2057772226, now seen corresponding path program 1 times
[2020-11-25 18:42:05,043 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:05,052 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:42:05,106 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 18:42:05,106 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:42:05,107 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 18:42:05,107 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:42:05,107 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 18:42:05,107 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-25 18:42:05,107 INFO  L87              Difference]: Start difference. First operand 3315 states and 3662 transitions. cyclomatic complexity: 351 Second operand 13 states.
[2020-11-25 18:42:07,133 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:42:07,134 INFO  L93              Difference]: Finished difference Result 5476 states and 6166 transitions.
[2020-11-25 18:42:07,134 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 18:42:07,134 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5476 states and 6166 transitions.
[2020-11-25 18:42:07,146 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-25 18:42:07,163 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5476 states to 5476 states and 6166 transitions.
[2020-11-25 18:42:07,163 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1347
[2020-11-25 18:42:07,164 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1347
[2020-11-25 18:42:07,164 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5476 states and 6166 transitions.
[2020-11-25 18:42:07,171 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:42:07,171 INFO  L728         BuchiCegarLoop]: Abstraction has 5476 states and 6166 transitions.
[2020-11-25 18:42:07,174 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5476 states and 6166 transitions.
[2020-11-25 18:42:07,219 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5476 to 4719.
[2020-11-25 18:42:07,219 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4719 states.
[2020-11-25 18:42:07,227 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4719 states to 4719 states and 5379 transitions.
[2020-11-25 18:42:07,227 INFO  L751         BuchiCegarLoop]: Abstraction has 4719 states and 5379 transitions.
[2020-11-25 18:42:07,227 INFO  L631         BuchiCegarLoop]: Abstraction has 4719 states and 5379 transitions.
[2020-11-25 18:42:07,227 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:42:07,227 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4719 states and 5379 transitions.
[2020-11-25 18:42:07,236 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 18:42:07,237 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:42:07,237 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:42:07,238 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:42:07,238 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == ITEN;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND FALSE  !(revert)
[L2633]              __var_6 := null;
[L2634]  COND TRUE   !(_spender_s417 != null)
[L2635]              revert := true;
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

Loop:
[L4942]  CALL        call CorralChoice_ITEN(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s417;
[L4760]              havoc _value_s417;
[L4761]              havoc success_s417;
[L4762]              havoc _spender_s457;
[L4763]              havoc _value_s457;
[L4764]              havoc _extraData_s457;
[L4765]              havoc success_s457;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s812;
[L4784]              havoc mintedAmount_s812;
[L4785]              havoc target_s833;
[L4786]              havoc freeze_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != ITEN;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s417 >= 0 && _value_s417 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND FALSE  !(revert)
[L2633]              __var_6 := null;
[L2634]  COND TRUE   !(_spender_s417 != null)
[L2635]              revert := true;
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L4942]  RET         call CorralChoice_ITEN(this);

[2020-11-25 18:42:07,242 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:07,242 INFO  L82        PathProgramCache]: Analyzing trace with hash -663103225, now seen corresponding path program 1 times
[2020-11-25 18:42:07,243 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:07,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:07,265 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:07,319 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:07,319 INFO  L82        PathProgramCache]: Analyzing trace with hash 406491090, now seen corresponding path program 1 times
[2020-11-25 18:42:07,320 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:07,325 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:07,330 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:07,346 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:42:07,346 INFO  L82        PathProgramCache]: Analyzing trace with hash -671403764, now seen corresponding path program 1 times
[2020-11-25 18:42:07,347 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:42:07,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:07,380 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 18:42:07,572 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification. DAG size of input: 139 DAG size of output: 134
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
[2020-11-25 18:42:07,713 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification. DAG size of input: 99 DAG size of output: 93
[2020-11-25 18:42:07,873 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 18:42:08,206 WARN  L188               SmtUtils]: Spent 321.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 199
[2020-11-25 18:42:08,745 WARN  L188               SmtUtils]: Spent 536.00 ms on a formula simplification. DAG size of input: 275 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.003s / 0.007s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 18:42:08,908 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 139
[2020-11-25 18:42:09,113 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 18:42:09,474 WARN  L188               SmtUtils]: Spent 353.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 252
[2020-11-25 18:42:09,632 WARN  L188               SmtUtils]: Spent 157.00 ms on a formula simplification that was a NOOP. DAG size: 252
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 18:42:09,742 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 18:42:10,776 WARN  L188               SmtUtils]: Spent 291.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 199
[2020-11-25 18:42:11,344 WARN  L188               SmtUtils]: Spent 566.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 18:42:11,457 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 139
[2020-11-25 18:42:11,616 WARN  L188               SmtUtils]: Spent 157.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 18:42:11,921 WARN  L188               SmtUtils]: Spent 299.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 252
[2020-11-25 18:42:12,707 WARN  L188               SmtUtils]: Spent 783.00 ms on a formula simplification. DAG size of input: 467 DAG size of output: 463
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 18:42:13,016 WARN  L188               SmtUtils]: Spent 276.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 189
[2020-11-25 18:42:13,245 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification that was a NOOP. DAG size: 303
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 18:42:13,598 WARN  L188               SmtUtils]: Spent 344.00 ms on a formula simplification. DAG size of input: 212 DAG size of output: 204
[2020-11-25 18:42:14,110 WARN  L188               SmtUtils]: Spent 510.00 ms on a formula simplification. DAG size of input: 320 DAG size of output: 319
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #9: 28099 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 28099 to 56197
[2020-11-25 18:42:15,146 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification. DAG size of input: 329 DAG size of output: 314
[2020-11-25 18:42:15,157 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:15,172 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:42:15,179 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:42:15 BasicIcfg
[2020-11-25 18:42:15,179 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:42:15,179 INFO  L168              Benchmark]: Toolchain (without parser) took 16813.65 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -167.3 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,180 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,180 INFO  L168              Benchmark]: Boogie Preprocessor took 105.90 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,180 INFO  L168              Benchmark]: UtopiaSpecLang took 66.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,181 INFO  L168              Benchmark]: Boogie Printer took 15.35 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,181 INFO  L168              Benchmark]: RCFGBuilder took 832.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.4 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,181 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.72 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,181 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1295.16 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 194.5 MB). Free memory was 775.9 MB in the beginning and 893.5 MB in the end (delta: -117.6 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,181 INFO  L168              Benchmark]: BlockEncodingV2 took 162.65 ms. Allocated memory is still 1.2 GB. Free memory was 890.5 MB in the beginning and 821.2 MB in the end (delta: 69.2 MB). Peak memory consumption was 69.2 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,182 INFO  L168              Benchmark]: BuchiAutomizer took 14287.71 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 995.1 MB). Free memory was 821.2 MB in the beginning and 1.1 GB in the end (delta: -281.3 MB). Peak memory consumption was 816.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:42:15,184 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4504 locations, 8011 edges
  - StatisticsResult: Encoded RCFG
    4452 locations, 7875 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 105.90 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 66.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.35 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 832.41 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.4 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.72 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1295.16 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 194.5 MB). Free memory was 775.9 MB in the beginning and 893.5 MB in the end (delta: -117.6 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 162.65 ms. Allocated memory is still 1.2 GB. Free memory was 890.5 MB in the beginning and 821.2 MB in the end (delta: 69.2 MB). Peak memory consumption was 69.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14287.71 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 995.1 MB). Free memory was 821.2 MB in the beginning and 1.1 GB in the end (delta: -281.3 MB). Peak memory consumption was 816.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1829 locations, 2458 edges
  - StatisticsResult: BuchiProgram size
    4504 locations, 8011 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 4719 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.2s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 8.6s. Construction of modules took 3.7s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1825 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4719 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15462 SDtfs, 17283 SDslu, 23699 SDs, 0 SdLazy, 66122 SolverSat, 3460 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(500000000000000000000000016) = (new ITEN)({from : 500000000000000000000000015, initialSupply : 500000000000000000000000017, tokenName : 500000000000000000000000011, tokenSymbol : 500000000000000000000000005});
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := 484439318;
[L2456]              symbol_TokenERC20[this] := 484439318;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 500000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := 484439318;
[L2471]              symbol_TokenERC20[this] := 484439318;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_ITEN[this] := zeroRefboolArr();
[L3113]  RET         call ITEN_ITEN_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call ITEN_ITEN__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call ITEN_ITEN(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
TokenERC20(500000000000000000000000016).approve~address~uint256.gas(3979002)({from : 500000000000000000000000009, _spender : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND FALSE  !(revert)
[L2633]              __var_6 := null;
[L2634]  COND TRUE   !(_spender_s417 != null)
[L2635]              revert := true;
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);

Loop:
TokenERC20(500000000000000000000000016).approve~address~uint256.gas(3979001)({from : 500000000000000000000000007, _spender : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s417;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L552]               havoc __exception;
[L553]               revert := false;
[L554]   COND TRUE   __exception
[L555]               __tmp__Balance := Balance;
[L556]               __tmp__DType := DType;
[L557]               __tmp__Alloc := Alloc;
[L558]               __tmp__balance_ADDR := balance_ADDR;
[L559]               __tmp__M_Ref_int := M_Ref_int;
[L560]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L561]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L562]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L563]               __tmp__sum_allowance1 := sum_allowance1;
[L564]               __tmp__M_Ref_bool := M_Ref_bool;
[L565]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L566]               __tmp__Length := Length;
[L567]               __tmp__now := now;
[L568]               __tmp__owner_owned := owner_owned;
[L569]               __tmp__name_TokenERC20 := name_TokenERC20;
[L570]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L571]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L572]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L573]               __tmp__released_TokenERC20 := released_TokenERC20;
[L574]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L575]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L576]               __tmp__frozenAccount_ITEN := frozenAccount_ITEN;
[L577]   CALL        call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L2629]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2629]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2630]  COND FALSE  !(revert)
[L2633]              __var_6 := null;
[L2634]  COND TRUE   !(_spender_s417 != null)
[L2635]              revert := true;
[L577]   RET         call success_s417 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);
[L578]               assume revert || gas < 0;
[L4865]  RET         call success_s417 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s417, _value_s417);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
