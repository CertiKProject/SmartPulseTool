This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:13:31,417 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:13:31,419 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:13:31,429 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:13:31,429 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:13:31,430 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:13:31,431 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:13:31,433 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:13:31,434 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:13:31,435 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:13:31,436 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:13:31,436 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:13:31,436 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:13:31,437 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:13:31,438 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:13:31,438 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:13:31,439 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:13:31,440 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:13:31,441 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:13:31,443 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:13:31,444 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:13:31,444 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:13:31,446 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:13:31,446 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:13:31,446 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:13:31,447 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:13:31,447 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:13:31,447 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:13:31,448 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:13:31,448 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:13:31,448 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:13:31,449 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:13:31,449 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:13:31,450 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:13:31,450 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:13:31,451 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:13:31,451 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:13:31,451 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:13:31,451 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:13:31,452 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:13:31,452 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:13:31,453 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:13:31,460 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:13:31,460 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:13:31,461 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:13:31,461 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:13:31,461 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:13:31,461 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:13:31,461 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:13:31,461 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:13:31,462 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:13:31,462 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:13:31,462 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:13:31,463 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:13:31,463 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:13:31,487 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:13:31,501 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:13:31,503 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:13:31,504 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:13:31,505 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:13:31,505 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl
[2020-11-24 20:13:31,505 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl'
[2020-11-24 20:13:31,592 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:13:31,593 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:13:31,593 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:13:31,593 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:13:31,593 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:13:31,609 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,611 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,641 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,642 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,662 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,672 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,680 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,689 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:13:31,690 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:13:31,690 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:13:31,692 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:13:31,696 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/1) ...
[2020-11-24 20:13:31,716 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 20:13:31,721 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 20:13:31,728 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 20:13:31,734 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s409 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]
[2020-11-24 20:13:31,737 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][msg.sender][_spender_s409]==_value_s409 ) && totalSupply_ERC20Basic[this]==( old(totalSupply_ERC20Basic[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[_spender_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],IdentifierExpression[_value_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]]
[2020-11-24 20:13:31,743 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 20:13:31,743 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_StandardToken0) ==> ( <>AP(success_approve_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:13:31,753 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:13:31 PropertyContainer
[2020-11-24 20:13:31,753 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:13:31,754 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:13:31,754 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:13:31,754 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:13:31,755 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/2) ...
[2020-11-24 20:13:31,755 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:13:31,755 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:13:31,770 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:13:31" (2/2) ...
[2020-11-24 20:13:31,770 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:13:31,771 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:13:31,771 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:13:31,771 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:13:31,772 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/2) ...
[2020-11-24 20:13:31,824 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:13:31,825 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:13:31,825 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:13:31,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:13:31,825 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 20:13:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 20:13:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 20:13:31,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 20:13:31,826 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 20:13:31,827 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic
[2020-11-24 20:13:31,827 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 20:13:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 20:13:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 20:13:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:13:31,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:13:31,828 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:13:31,829 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~bytes_tokenRecipient
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure KriosToken_KriosToken_NoBaseCtor__success
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure KriosToken_KriosToken
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure KriosToken_KriosToken
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KriosToken
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KriosToken
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~address~uint256_KriosToken
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~address~uint256_KriosToken
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure name_KriosToken
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_KriosToken
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_KriosToken
[2020-11-24 20:13:31,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_KriosToken
[2020-11-24 20:13:31,830 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_KriosToken
[2020-11-24 20:13:31,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_KriosToken
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_KriosToken
[2020-11-24 20:13:31,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_KriosToken
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 20:13:31,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KriosToken
[2020-11-24 20:13:31,832 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:13:31,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__success
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 20:13:31,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 20:13:31,835 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 20:13:31,836 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KriosToken_KriosToken_NoBaseCtor__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KriosToken_KriosToken__success
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KriosToken_KriosToken__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KriosToken__success
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KriosToken__fail
[2020-11-24 20:13:31,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~address~uint256_KriosToken__success
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~address~uint256_KriosToken__fail
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure name_KriosToken__success
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure name_KriosToken__fail
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_KriosToken__success
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_KriosToken__fail
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_KriosToken__success
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_KriosToken__fail
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_KriosToken__success
[2020-11-24 20:13:31,838 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_KriosToken__fail
[2020-11-24 20:13:31,839 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:13:31,839 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:13:31,839 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:13:31,839 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:13:31,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:13:31,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:13:31,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:13:31,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:13:31,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:13:31,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 20:13:31,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__success
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:13:31,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:13:31,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KriosToken_KriosToken_NoBaseCtor__fail
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KriosToken_KriosToken_NoBaseCtor__success
[2020-11-24 20:13:31,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KriosToken_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure KriosToken_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~address~uint256_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~address~uint256_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_KriosToken__fail
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_KriosToken__success
[2020-11-24 20:13:31,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_KriosToken__fail
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_KriosToken__success
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:13:31,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:13:31,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:13:31,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KriosToken
[2020-11-24 20:13:31,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:13:31,848 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:13:31,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:13:32,308 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:13:32,363 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:13:32,364 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:13:32,364 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:13:32,562 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:13:32,562 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:13:32,564 INFO  L202        PluginConnector]: Adding new model KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:13:32 BoogieIcfgContainer
[2020-11-24 20:13:32,564 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:13:31" (2/2) ...
[2020-11-24 20:13:32,565 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:13:32,565 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7a95744 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:13:32, skipping insertion in model container
[2020-11-24 20:13:32,565 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:13:32,565 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:13:32,565 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:13:32,567 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:13:32,567 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/3) ...
[2020-11-24 20:13:32,567 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@bb96973 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:13:32, skipping insertion in model container
[2020-11-24 20:13:32,567 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:13:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:13:32,604 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:13:32 NWAContainer
[2020-11-24 20:13:32,604 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:13:32,604 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:13:32,604 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:13:32,605 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:13:32,606 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:13:32" (3/4) ...
[2020-11-24 20:13:32,606 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2271ae2b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:13:32, skipping insertion in model container
[2020-11-24 20:13:32,607 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:13:32" (4/4) ...
[2020-11-24 20:13:32,610 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:13:32,614 INFO  L110   BuchiProductObserver]: Initial RCFG 1676 locations, 2189 edges
[2020-11-24 20:13:32,614 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:13:32,624 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:13:34,094 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:13:34,099 INFO  L110   BuchiProductObserver]: BuchiProgram size 4092 locations, 7170 edges
[2020-11-24 20:13:34,100 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:13:34 BoogieIcfgContainer
[2020-11-24 20:13:34,100 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:13:34,100 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:13:34,100 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:13:34,102 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:13:34,102 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:13:34" (1/1) ...
[2020-11-24 20:13:34,195 INFO  L313           BlockEncoder]: Initial Icfg 4092 locations, 7170 edges
[2020-11-24 20:13:34,196 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:13:34,196 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:13:34,196 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:13:34,197 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:13:34,209 INFO  L70    emoveInfeasibleEdges]: Removed 87 edges and 19 locations because of local infeasibility
[2020-11-24 20:13:34,221 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 20:13:34,241 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:13:34,247 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:13:34,252 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:13:34,253 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:13:34,260 INFO  L313           BlockEncoder]: Encoded RCFG 4034 locations, 7025 edges
[2020-11-24 20:13:34,260 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:13:34 BasicIcfg
[2020-11-24 20:13:34,261 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:13:34,261 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:13:34,261 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:13:34,264 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:13:34,264 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,264 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:13:31" (1/6) ...
[2020-11-24 20:13:34,266 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@781ab295 and model type KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:13:34, skipping insertion in model container
[2020-11-24 20:13:34,266 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,266 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:13:31" (2/6) ...
[2020-11-24 20:13:34,266 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@781ab295 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:13:34, skipping insertion in model container
[2020-11-24 20:13:34,266 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,266 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:13:32" (3/6) ...
[2020-11-24 20:13:34,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@781ab295 and model type KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:13:34, skipping insertion in model container
[2020-11-24 20:13:34,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,267 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:13:32" (4/6) ...
[2020-11-24 20:13:34,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@781ab295 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:13:34, skipping insertion in model container
[2020-11-24 20:13:34,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,267 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:13:34" (5/6) ...
[2020-11-24 20:13:34,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@781ab295 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:13:34, skipping insertion in model container
[2020-11-24 20:13:34,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:13:34,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:13:34" (6/6) ...
[2020-11-24 20:13:34,269 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KriosToken_0x42566cfefc853c232117eba4413e45782a72715d_approve.bpl_BEv2
[2020-11-24 20:13:34,310 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:13:34,310 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:13:34,311 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:13:34,311 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:13:34,311 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:13:34,311 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:13:34,311 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:13:34,311 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:13:34,311 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:13:34,356 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4034 states.
[2020-11-24 20:13:34,411 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:34,412 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:34,412 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:34,421 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:34,421 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:34,421 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:13:34,422 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4034 states.
[2020-11-24 20:13:34,446 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:34,446 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:34,446 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:34,448 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:34,449 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4798]              assume null == 0;
[L4799]  CALL        call this := FreshRefGenerator__success();
[L2081]              havoc newRef;
[L2082]              assume Alloc[newRef] == false;
[L2083]              Alloc[newRef] := true;
[L2084]              assume newRef != null;
[L4799]  RET         call this := FreshRefGenerator__success();
[L4800]              assume now >= 0;
[L4801]              assume DType[this] == KriosToken;
[L4802]              assume msgvalue_MSG == 0;
[L4803]              gas := gas - 53000;
[L4804]  CALL        call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L1076]              havoc __exception;
[L1077]              revert := false;
[L1078]  COND FALSE  !(__exception)
[L1101]  CALL        call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2811]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2811]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND TRUE   revert
[L1101]  RET         call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1102]              assume !revert && gas >= 0;
[L4804]  RET         call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L4805]              assume !revert && gas >= 0;

Loop:
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND TRUE   choice == 16
[L4688]              gas := gas - 21000;
[L4689]  COND FALSE  !(gas >= 0)
[L4808]  RET         call CorralChoice_KriosToken(this);

[2020-11-24 20:13:34,466 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:13:34,466 INFO  L82        PathProgramCache]: Analyzing trace with hash -386850752, now seen corresponding path program 1 times
[2020-11-24 20:13:34,472 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:13:34,507 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:13:34,547 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:13:34,550 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:13:34,550 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:13:34,778 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:13:34,790 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:13:34,791 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:13:34,792 INFO  L87              Difference]: Start difference. First operand 4034 states. Second operand 4 states.
[2020-11-24 20:13:35,488 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:13:35,488 INFO  L93              Difference]: Finished difference Result 3572 states and 5730 transitions.
[2020-11-24 20:13:35,488 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:13:35,489 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3572 states and 5730 transitions.
[2020-11-24 20:13:35,514 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:13:35,549 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3572 states to 3504 states and 5619 transitions.
[2020-11-24 20:13:35,550 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-24 20:13:35,554 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 960
[2020-11-24 20:13:35,555 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3504 states and 5619 transitions.
[2020-11-24 20:13:35,568 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:13:35,569 INFO  L728         BuchiCegarLoop]: Abstraction has 3504 states and 5619 transitions.
[2020-11-24 20:13:35,583 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3504 states and 5619 transitions.
[2020-11-24 20:13:35,633 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3504 to 2670.
[2020-11-24 20:13:35,633 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2670 states.
[2020-11-24 20:13:35,639 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2670 states to 2670 states and 4077 transitions.
[2020-11-24 20:13:35,640 INFO  L751         BuchiCegarLoop]: Abstraction has 2670 states and 4077 transitions.
[2020-11-24 20:13:35,640 INFO  L631         BuchiCegarLoop]: Abstraction has 2670 states and 4077 transitions.
[2020-11-24 20:13:35,640 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:13:35,640 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2670 states and 4077 transitions.
[2020-11-24 20:13:35,646 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:35,646 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:35,646 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:35,648 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:35,648 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4798]              assume null == 0;
[L4799]  CALL        call this := FreshRefGenerator__success();
[L2081]              havoc newRef;
[L2082]              assume Alloc[newRef] == false;
[L2083]              Alloc[newRef] := true;
[L2084]              assume newRef != null;
[L4799]  RET         call this := FreshRefGenerator__success();
[L4800]              assume now >= 0;
[L4801]              assume DType[this] == KriosToken;
[L4802]              assume msgvalue_MSG == 0;
[L4803]              gas := gas - 53000;
[L4804]  CALL        call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L1076]              havoc __exception;
[L1077]              revert := false;
[L1078]  COND FALSE  !(__exception)
[L1101]  CALL        call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2811]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2811]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L2815]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2815]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND FALSE  !(revert)
[L2819]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2819]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2820]  COND FALSE  !(revert)
[L2823]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2506]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2507]  COND FALSE  !(revert)
[L2510]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2510]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2511]  COND FALSE  !(revert)
[L2514]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2514]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2515]  COND FALSE  !(revert)
[L2518]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              Balance[this] := 0;
[L2479]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2480]              sum_allowed1[this] := 0;
[L2518]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2519]  COND FALSE  !(revert)
[L2823]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2824]  COND FALSE  !(revert)
[L2827]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume msgsender_MSG != null;
[L2196]              Balance[this] := 0;
[L2197]              owner_Ownable[this] := null;
[L2199]              owner_Ownable[this] := msgsender_MSG;
[L2212]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2827]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2828]  COND FALSE  !(revert)
[L2831]  CALL        call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              assume msgsender_MSG != null;
[L2765]              Balance[this] := 0;
[L2766]              name_KriosToken[this] := -1479146443;
[L2767]              symbol_KriosToken[this] := -372438969;
[L2768]              decimals_KriosToken[this] := 18;
[L2769]              __var_13 := decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2770]              initialSupply_KriosToken[this] := 500000000 * (nonlinearPow(10, decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2772]              totalSupply_ERC20Basic[this] := initialSupply_KriosToken[this];
[L2773]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2774]              balances_BasicToken[this][msgsender_MSG] := initialSupply_KriosToken[this];
[L2775]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2776]              assert { :EventEmitted "Transfer_KriosToken" } true;
[L2831]  RET         call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2832]  COND FALSE  !(revert)
[L1101]  RET         call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1102]              assume !revert && gas >= 0;
[L4804]  RET         call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L4805]              assume !revert && gas >= 0;

Loop:
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND TRUE   choice == 16
[L4688]              gas := gas - 21000;
[L4689]  COND FALSE  !(gas >= 0)
[L4808]  RET         call CorralChoice_KriosToken(this);

[2020-11-24 20:13:35,653 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:13:35,653 INFO  L82        PathProgramCache]: Analyzing trace with hash 726840910, now seen corresponding path program 1 times
[2020-11-24 20:13:35,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:13:35,662 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:13:35,694 INFO  L134       CoverageAnalysis]: Checked inductivity of 108 backedges. 0 proven. 11 refuted. 0 times theorem prover too weak. 97 trivial. 0 not checked.
[2020-11-24 20:13:35,694 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:13:35,694 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-24 20:13:35,696 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:13:35,696 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:13:35,696 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:13:35,696 INFO  L87              Difference]: Start difference. First operand 2670 states and 4077 transitions. cyclomatic complexity: 1409 Second operand 4 states.
[2020-11-24 20:13:36,055 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:13:36,055 INFO  L93              Difference]: Finished difference Result 2386 states and 2579 transitions.
[2020-11-24 20:13:36,055 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:13:36,055 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2386 states and 2579 transitions.
[2020-11-24 20:13:36,063 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:36,070 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2386 states to 2386 states and 2579 transitions.
[2020-11-24 20:13:36,070 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 652
[2020-11-24 20:13:36,071 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 652
[2020-11-24 20:13:36,071 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2386 states and 2579 transitions.
[2020-11-24 20:13:36,073 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:13:36,073 INFO  L728         BuchiCegarLoop]: Abstraction has 2386 states and 2579 transitions.
[2020-11-24 20:13:36,075 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2386 states and 2579 transitions.
[2020-11-24 20:13:36,091 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2386 to 2386.
[2020-11-24 20:13:36,091 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2386 states.
[2020-11-24 20:13:36,093 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2386 states to 2386 states and 2579 transitions.
[2020-11-24 20:13:36,094 INFO  L751         BuchiCegarLoop]: Abstraction has 2386 states and 2579 transitions.
[2020-11-24 20:13:36,094 INFO  L631         BuchiCegarLoop]: Abstraction has 2386 states and 2579 transitions.
[2020-11-24 20:13:36,094 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:13:36,094 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2386 states and 2579 transitions.
[2020-11-24 20:13:36,098 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:36,098 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:36,098 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:36,100 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:36,101 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4798]              assume null == 0;
[L4799]  CALL        call this := FreshRefGenerator__success();
[L2081]              havoc newRef;
[L2082]              assume Alloc[newRef] == false;
[L2083]              Alloc[newRef] := true;
[L2084]              assume newRef != null;
[L4799]  RET         call this := FreshRefGenerator__success();
[L4800]              assume now >= 0;
[L4801]              assume DType[this] == KriosToken;
[L4802]              assume msgvalue_MSG == 0;
[L4803]              gas := gas - 53000;
[L4804]  CALL        call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L1076]              havoc __exception;
[L1077]              revert := false;
[L1078]  COND FALSE  !(__exception)
[L1101]  CALL        call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2811]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2811]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L2815]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2815]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND FALSE  !(revert)
[L2819]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2819]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2820]  COND FALSE  !(revert)
[L2823]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2506]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2507]  COND FALSE  !(revert)
[L2510]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2510]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2511]  COND FALSE  !(revert)
[L2514]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2514]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2515]  COND FALSE  !(revert)
[L2518]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              Balance[this] := 0;
[L2479]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2480]              sum_allowed1[this] := 0;
[L2518]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2519]  COND FALSE  !(revert)
[L2823]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2824]  COND FALSE  !(revert)
[L2827]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume msgsender_MSG != null;
[L2196]              Balance[this] := 0;
[L2197]              owner_Ownable[this] := null;
[L2199]              owner_Ownable[this] := msgsender_MSG;
[L2212]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2827]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2828]  COND FALSE  !(revert)
[L2831]  CALL        call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              assume msgsender_MSG != null;
[L2765]              Balance[this] := 0;
[L2766]              name_KriosToken[this] := -1479146443;
[L2767]              symbol_KriosToken[this] := -372438969;
[L2768]              decimals_KriosToken[this] := 18;
[L2769]              __var_13 := decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2770]              initialSupply_KriosToken[this] := 500000000 * (nonlinearPow(10, decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2772]              totalSupply_ERC20Basic[this] := initialSupply_KriosToken[this];
[L2773]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2774]              balances_BasicToken[this][msgsender_MSG] := initialSupply_KriosToken[this];
[L2775]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2776]              assert { :EventEmitted "Transfer_KriosToken" } true;
[L2831]  RET         call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2832]  COND FALSE  !(revert)
[L1101]  RET         call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1102]              assume !revert && gas >= 0;
[L4804]  RET         call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L4805]              assume !revert && gas >= 0;
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2616]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2617]              allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2618]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2619]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2620]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L800]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s409] == _value_s409) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

Loop:
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2616]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2617]              allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2618]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2619]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2620]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L800]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s409] == _value_s409) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

[2020-11-24 20:13:36,105 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:13:36,105 INFO  L82        PathProgramCache]: Analyzing trace with hash 886286336, now seen corresponding path program 1 times
[2020-11-24 20:13:36,106 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:13:36,138 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:13:36,314 INFO  L134       CoverageAnalysis]: Checked inductivity of 195 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 195 trivial. 0 not checked.
[2020-11-24 20:13:36,314 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:13:36,315 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 20:13:36,315 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:13:36,315 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 20:13:36,315 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-24 20:13:36,315 INFO  L87              Difference]: Start difference. First operand 2386 states and 2579 transitions. cyclomatic complexity: 195 Second operand 14 states.
[2020-11-24 20:13:37,878 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:13:37,878 INFO  L93              Difference]: Finished difference Result 2515 states and 2730 transitions.
[2020-11-24 20:13:37,878 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 20:13:37,878 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2515 states and 2730 transitions.
[2020-11-24 20:13:37,884 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 20:13:37,891 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2515 states to 2515 states and 2730 transitions.
[2020-11-24 20:13:37,891 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 713
[2020-11-24 20:13:37,892 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 713
[2020-11-24 20:13:37,892 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2515 states and 2730 transitions.
[2020-11-24 20:13:37,894 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:13:37,894 INFO  L728         BuchiCegarLoop]: Abstraction has 2515 states and 2730 transitions.
[2020-11-24 20:13:37,896 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2515 states and 2730 transitions.
[2020-11-24 20:13:37,917 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2515 to 2484.
[2020-11-24 20:13:37,917 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2484 states.
[2020-11-24 20:13:37,919 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2484 states to 2484 states and 2690 transitions.
[2020-11-24 20:13:37,919 INFO  L751         BuchiCegarLoop]: Abstraction has 2484 states and 2690 transitions.
[2020-11-24 20:13:37,919 INFO  L631         BuchiCegarLoop]: Abstraction has 2484 states and 2690 transitions.
[2020-11-24 20:13:37,919 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:13:37,920 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2484 states and 2690 transitions.
[2020-11-24 20:13:37,923 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:13:37,923 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:37,923 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:37,925 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:37,925 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4798]              assume null == 0;
[L4799]  CALL        call this := FreshRefGenerator__success();
[L2081]              havoc newRef;
[L2082]              assume Alloc[newRef] == false;
[L2083]              Alloc[newRef] := true;
[L2084]              assume newRef != null;
[L4799]  RET         call this := FreshRefGenerator__success();
[L4800]              assume now >= 0;
[L4801]              assume DType[this] == KriosToken;
[L4802]              assume msgvalue_MSG == 0;
[L4803]              gas := gas - 53000;
[L4804]  CALL        call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L1076]              havoc __exception;
[L1077]              revert := false;
[L1078]  COND FALSE  !(__exception)
[L1101]  CALL        call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2811]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2811]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L2815]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2815]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND FALSE  !(revert)
[L2819]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2819]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2820]  COND FALSE  !(revert)
[L2823]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2506]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2507]  COND FALSE  !(revert)
[L2510]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2510]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2511]  COND FALSE  !(revert)
[L2514]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2514]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2515]  COND FALSE  !(revert)
[L2518]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              Balance[this] := 0;
[L2479]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2480]              sum_allowed1[this] := 0;
[L2518]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2519]  COND FALSE  !(revert)
[L2823]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2824]  COND FALSE  !(revert)
[L2827]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume msgsender_MSG != null;
[L2196]              Balance[this] := 0;
[L2197]              owner_Ownable[this] := null;
[L2199]              owner_Ownable[this] := msgsender_MSG;
[L2212]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2827]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2828]  COND FALSE  !(revert)
[L2831]  CALL        call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              assume msgsender_MSG != null;
[L2765]              Balance[this] := 0;
[L2766]              name_KriosToken[this] := -1479146443;
[L2767]              symbol_KriosToken[this] := -372438969;
[L2768]              decimals_KriosToken[this] := 18;
[L2769]              __var_13 := decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2770]              initialSupply_KriosToken[this] := 500000000 * (nonlinearPow(10, decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2772]              totalSupply_ERC20Basic[this] := initialSupply_KriosToken[this];
[L2773]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2774]              balances_BasicToken[this][msgsender_MSG] := initialSupply_KriosToken[this];
[L2775]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2776]              assert { :EventEmitted "Transfer_KriosToken" } true;
[L2831]  RET         call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2832]  COND FALSE  !(revert)
[L1101]  RET         call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1102]              assume !revert && gas >= 0;
[L4804]  RET         call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L4805]              assume !revert && gas >= 0;
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND TRUE   __exception
[L777]               __tmp__Balance := Balance;
[L778]               __tmp__DType := DType;
[L779]               __tmp__Alloc := Alloc;
[L780]               __tmp__balance_ADDR := balance_ADDR;
[L781]               __tmp__M_Ref_int := M_Ref_int;
[L782]               __tmp__sum_balances0 := sum_balances0;
[L783]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L784]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L785]               __tmp__sum_allowed1 := sum_allowed1;
[L786]               __tmp__Length := Length;
[L787]               __tmp__now := now;
[L788]               __tmp__owner_Ownable := owner_Ownable;
[L789]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L790]               __tmp__balances_BasicToken := balances_BasicToken;
[L791]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L792]               __tmp__name_KriosToken := name_KriosToken;
[L793]               __tmp__symbol_KriosToken := symbol_KriosToken;
[L794]               __tmp__decimals_KriosToken := decimals_KriosToken;
[L795]               __tmp__initialSupply_KriosToken := initialSupply_KriosToken;
[L796]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2607]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2608]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2609]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2610]              __ret_0_ := true;
[L796]   RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L797]               assume revert || gas < 0;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

Loop:
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND TRUE   __exception
[L777]               __tmp__Balance := Balance;
[L778]               __tmp__DType := DType;
[L779]               __tmp__Alloc := Alloc;
[L780]               __tmp__balance_ADDR := balance_ADDR;
[L781]               __tmp__M_Ref_int := M_Ref_int;
[L782]               __tmp__sum_balances0 := sum_balances0;
[L783]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L784]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L785]               __tmp__sum_allowed1 := sum_allowed1;
[L786]               __tmp__Length := Length;
[L787]               __tmp__now := now;
[L788]               __tmp__owner_Ownable := owner_Ownable;
[L789]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L790]               __tmp__balances_BasicToken := balances_BasicToken;
[L791]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L792]               __tmp__name_KriosToken := name_KriosToken;
[L793]               __tmp__symbol_KriosToken := symbol_KriosToken;
[L794]               __tmp__decimals_KriosToken := decimals_KriosToken;
[L795]               __tmp__initialSupply_KriosToken := initialSupply_KriosToken;
[L796]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2607]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2608]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2609]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2610]              __ret_0_ := true;
[L796]   RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L797]               assume revert || gas < 0;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

[2020-11-24 20:13:37,929 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:13:37,929 INFO  L82        PathProgramCache]: Analyzing trace with hash 2102484783, now seen corresponding path program 1 times
[2020-11-24 20:13:37,930 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:13:37,940 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:13:38,020 INFO  L134       CoverageAnalysis]: Checked inductivity of 195 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 195 trivial. 0 not checked.
[2020-11-24 20:13:38,021 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:13:38,021 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:13:38,021 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:13:38,021 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:13:38,021 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:13:38,022 INFO  L87              Difference]: Start difference. First operand 2484 states and 2690 transitions. cyclomatic complexity: 210 Second operand 5 states.
[2020-11-24 20:13:38,264 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:13:38,265 INFO  L93              Difference]: Finished difference Result 3080 states and 3409 transitions.
[2020-11-24 20:13:38,265 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:13:38,265 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3080 states and 3409 transitions.
[2020-11-24 20:13:38,273 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-24 20:13:38,279 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3080 states to 2087 states and 2385 transitions.
[2020-11-24 20:13:38,280 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 449
[2020-11-24 20:13:38,280 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 560
[2020-11-24 20:13:38,280 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2087 states and 2385 transitions.
[2020-11-24 20:13:38,282 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:13:38,282 INFO  L728         BuchiCegarLoop]: Abstraction has 2087 states and 2385 transitions.
[2020-11-24 20:13:38,284 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2087 states and 2385 transitions.
[2020-11-24 20:13:38,295 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2087 to 1486.
[2020-11-24 20:13:38,295 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1486 states.
[2020-11-24 20:13:38,296 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1486 states to 1486 states and 1622 transitions.
[2020-11-24 20:13:38,296 INFO  L751         BuchiCegarLoop]: Abstraction has 1486 states and 1622 transitions.
[2020-11-24 20:13:38,297 INFO  L631         BuchiCegarLoop]: Abstraction has 1486 states and 1622 transitions.
[2020-11-24 20:13:38,297 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:13:38,297 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1486 states and 1622 transitions.
[2020-11-24 20:13:38,298 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:13:38,298 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:13:38,298 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:13:38,300 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:13:38,300 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4798]              assume null == 0;
[L4799]  CALL        call this := FreshRefGenerator__success();
[L2081]              havoc newRef;
[L2082]              assume Alloc[newRef] == false;
[L2083]              Alloc[newRef] := true;
[L2084]              assume newRef != null;
[L4799]  RET         call this := FreshRefGenerator__success();
[L4800]              assume now >= 0;
[L4801]              assume DType[this] == KriosToken;
[L4802]              assume msgvalue_MSG == 0;
[L4803]              gas := gas - 53000;
[L4804]  CALL        call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L1076]              havoc __exception;
[L1077]              revert := false;
[L1078]  COND FALSE  !(__exception)
[L1101]  CALL        call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2811]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2811]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L2815]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2815]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2816]  COND FALSE  !(revert)
[L2819]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2819]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2820]  COND FALSE  !(revert)
[L2823]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2506]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2507]  COND FALSE  !(revert)
[L2510]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2454]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2454]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2455]  COND FALSE  !(revert)
[L2458]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2435]              assume msgsender_MSG != null;
[L2436]              Balance[this] := 0;
[L2458]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]  COND FALSE  !(revert)
[L2510]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2511]  COND FALSE  !(revert)
[L2514]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2341]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2273]              assume msgsender_MSG != null;
[L2274]              Balance[this] := 0;
[L2275]              totalSupply_ERC20Basic[this] := 0;
[L2289]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2290]  COND FALSE  !(revert)
[L2341]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2342]  COND FALSE  !(revert)
[L2345]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2320]              assume msgsender_MSG != null;
[L2321]              Balance[this] := 0;
[L2322]              balances_BasicToken[this] := zeroRefintArr();
[L2323]              sum_balances0[this] := 0;
[L2345]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2346]  COND FALSE  !(revert)
[L2514]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2515]  COND FALSE  !(revert)
[L2518]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2477]              assume msgsender_MSG != null;
[L2478]              Balance[this] := 0;
[L2479]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2480]              sum_allowed1[this] := 0;
[L2518]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2519]  COND FALSE  !(revert)
[L2823]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2824]  COND FALSE  !(revert)
[L2827]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume msgsender_MSG != null;
[L2196]              Balance[this] := 0;
[L2197]              owner_Ownable[this] := null;
[L2199]              owner_Ownable[this] := msgsender_MSG;
[L2212]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2827]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2828]  COND FALSE  !(revert)
[L2831]  CALL        call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              assume msgsender_MSG != null;
[L2765]              Balance[this] := 0;
[L2766]              name_KriosToken[this] := -1479146443;
[L2767]              symbol_KriosToken[this] := -372438969;
[L2768]              decimals_KriosToken[this] := 18;
[L2769]              __var_13 := decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2770]              initialSupply_KriosToken[this] := 500000000 * (nonlinearPow(10, decimals_KriosToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2772]              totalSupply_ERC20Basic[this] := initialSupply_KriosToken[this];
[L2773]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2774]              balances_BasicToken[this][msgsender_MSG] := initialSupply_KriosToken[this];
[L2775]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2776]              assert { :EventEmitted "Transfer_KriosToken" } true;
[L2831]  RET         call KriosToken_KriosToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2832]  COND FALSE  !(revert)
[L1101]  RET         call KriosToken_KriosToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1102]              assume !revert && gas >= 0;
[L4804]  RET         call KriosToken_KriosToken(this, msgsender_MSG, msgvalue_MSG);
[L4805]              assume !revert && gas >= 0;
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND FALSE  !(choice == 9)
[L4738]  COND FALSE  !(choice == 8)
[L4745]  COND TRUE   choice == 7
[L4746]              gas := gas - 21000;
[L4747]  COND TRUE   gas >= 0
[L4748]              assume _subtractedValue_s526 >= 0 && _subtractedValue_s526 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4749]              assume msgvalue_MSG == 0;
[L4750]  CALL        call success_s526 := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s526, _subtractedValue_s526);
[L940]               havoc __exception;
[L941]               revert := false;
[L942]   COND FALSE  !(__exception)
[L965]   CALL        call success_s526 := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s526, _subtractedValue_s526);
[L2691]              oldValue_s526 := allowed_StandardToken[this][msgsender_MSG][_spender_s526];
[L2692]  COND TRUE   _subtractedValue_s526 > oldValue_s526
[L2693]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s526];
[L2694]              allowed_StandardToken[this][msgsender_MSG][_spender_s526] := 0;
[L2695]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s526];
[L2705]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2706]              success_s526 := true;
[L965]   RET         call success_s526 := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s526, _subtractedValue_s526);
[L966]               assume !revert && gas >= 0;
[L4750]  RET         call success_s526 := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s526, _subtractedValue_s526);
[L4808]  RET         call CorralChoice_KriosToken(this);
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2616]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2617]              allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2618]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2619]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2620]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L800]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s409] == _value_s409) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

Loop:
[L4808]  CALL        call CorralChoice_KriosToken(this);
[L4633]              havoc msgsender_MSG;
[L4634]              havoc msgvalue_MSG;
[L4635]              havoc choice;
[L4636]              havoc __ret_0_owner;
[L4637]              havoc newOwner_s147;
[L4638]              havoc __ret_0_totalSupply;
[L4639]              havoc _owner_s253;
[L4640]              havoc balance_s253;
[L4641]              havoc _to_s241;
[L4642]              havoc _value_s241;
[L4643]              havoc __ret_0_transfer;
[L4644]              havoc _owner_s425;
[L4645]              havoc _spender_s425;
[L4646]              havoc remaining_s425;
[L4647]              havoc _from_s381;
[L4648]              havoc _to_s381;
[L4649]              havoc _value_s381;
[L4650]              havoc __ret_0_transferFrom;
[L4651]              havoc _spender_s409;
[L4652]              havoc _value_s409;
[L4653]              havoc __ret_0_approve;
[L4654]              havoc _spender_s466;
[L4655]              havoc _addedValue_s466;
[L4656]              havoc success_s466;
[L4657]              havoc _spender_s526;
[L4658]              havoc _subtractedValue_s526;
[L4659]              havoc success_s526;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc __ret_0_initialSupply;
[L4664]              havoc _spender_s619;
[L4665]              havoc _value_s619;
[L4666]              havoc _extraData_s619;
[L4667]              havoc success_s619;
[L4668]              havoc _tokenAddress_s639;
[L4669]              havoc _to_s639;
[L4670]              havoc _amount_s639;
[L4671]              havoc tmpNow;
[L4672]              havoc gas;
[L4673]              assume gas > 4000000 && gas <= 8000000;
[L4674]              tmpNow := now;
[L4675]              havoc now;
[L4676]              assume now > tmpNow;
[L4677]              assume msgsender_MSG != null;
[L4678]              assume DType[msgsender_MSG] != SafeMath;
[L4679]              assume DType[msgsender_MSG] != Ownable;
[L4680]              assume DType[msgsender_MSG] != ERC20Basic;
[L4681]              assume DType[msgsender_MSG] != BasicToken;
[L4682]              assume DType[msgsender_MSG] != ERC20;
[L4683]              assume DType[msgsender_MSG] != StandardToken;
[L4684]              assume DType[msgsender_MSG] != tokenRecipient;
[L4685]              assume DType[msgsender_MSG] != KriosToken;
[L4686]              Alloc[msgsender_MSG] := true;
[L4687]  COND FALSE  !(choice == 16)
[L4693]  COND FALSE  !(choice == 15)
[L4699]  COND FALSE  !(choice == 14)
[L4705]  COND FALSE  !(choice == 13)
[L4711]  COND FALSE  !(choice == 12)
[L4718]  COND FALSE  !(choice == 11)
[L4724]  COND FALSE  !(choice == 10)
[L4731]  COND TRUE   choice == 9
[L4732]              gas := gas - 21000;
[L4733]  COND TRUE   gas >= 0
[L4734]              assume _value_s409 >= 0 && _value_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4735]              assume msgvalue_MSG == 0;
[L4736]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s409;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L774]               havoc __exception;
[L775]               revert := false;
[L776]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L2616]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2617]              allowed_StandardToken[this][msgsender_MSG][_spender_s409] := _value_s409;
[L2618]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s409];
[L2619]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2620]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L800]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s409] == _value_s409) && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4736]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s409, _value_s409);
[L4808]  RET         call CorralChoice_KriosToken(this);

[2020-11-24 20:13:38,303 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:13:38,304 INFO  L82        PathProgramCache]: Analyzing trace with hash 654014087, now seen corresponding path program 1 times
[2020-11-24 20:13:38,304 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:13:38,323 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:13:38,407 INFO  L134       CoverageAnalysis]: Checked inductivity of 259 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 259 trivial. 0 not checked.
[2020-11-24 20:13:38,407 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:13:38,407 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 20:13:38,408 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:13:38,408 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:13:38,408 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:13:38,408 INFO  L87              Difference]: Start difference. First operand 1486 states and 1622 transitions. cyclomatic complexity: 139 Second operand 7 states.
[2020-11-24 20:13:38,597 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:13:38,597 INFO  L93              Difference]: Finished difference Result 838 states and 908 transitions.
[2020-11-24 20:13:38,597 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:13:38,597 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 838 states and 908 transitions.
[2020-11-24 20:13:38,599 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:13:38,599 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 838 states to 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:13:38,599 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:13:38,599 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:13:38,599 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:13:38,599 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:13:38,599 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:13:38,599 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:13:38,602 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:13:38 BasicIcfg
[2020-11-24 20:13:38,602 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:13:38,602 INFO  L168              Benchmark]: Toolchain (without parser) took 7010.18 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 599.8 MB). Free memory was 940.6 MB in the beginning and 937.7 MB in the end (delta: 2.9 MB). Peak memory consumption was 602.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,603 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,603 INFO  L168              Benchmark]: Boogie Preprocessor took 96.38 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,604 INFO  L168              Benchmark]: UtopiaSpecLang took 63.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,604 INFO  L168              Benchmark]: Boogie Printer took 16.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,604 INFO  L168              Benchmark]: RCFGBuilder took 794.45 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 774.1 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,605 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.75 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,605 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1495.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.8 MB). Free memory was 770.6 MB in the beginning and 865.0 MB in the end (delta: -94.4 MB). Peak memory consumption was 155.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,605 INFO  L168              Benchmark]: BlockEncodingV2 took 160.49 ms. Allocated memory is still 1.2 GB. Free memory was 865.0 MB in the beginning and 788.5 MB in the end (delta: 76.5 MB). Peak memory consumption was 76.5 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,605 INFO  L168              Benchmark]: BuchiAutomizer took 4341.03 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 389.0 MB). Free memory was 788.5 MB in the beginning and 937.7 MB in the end (delta: -149.2 MB). Peak memory consumption was 239.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:13:38,608 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4092 locations, 7170 edges
  - StatisticsResult: Encoded RCFG
    4034 locations, 7025 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.38 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 794.45 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 774.1 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.75 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1495.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.8 MB). Free memory was 770.6 MB in the beginning and 865.0 MB in the end (delta: -94.4 MB). Peak memory consumption was 155.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 160.49 ms. Allocated memory is still 1.2 GB. Free memory was 865.0 MB in the beginning and 788.5 MB in the end (delta: 76.5 MB). Peak memory consumption was 76.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4341.03 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 389.0 MB). Free memory was 788.5 MB in the beginning and 937.7 MB in the end (delta: -149.2 MB). Peak memory consumption was 239.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1676 locations, 2189 edges
  - StatisticsResult: BuchiProgram size
    4092 locations, 7170 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.3s and 6 iterations.  TraceHistogramMax:6. Analysis of lassos took 0.7s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1466 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2670 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13259 SDtfs, 14544 SDslu, 20520 SDs, 0 SdLazy, 24303 SolverSat, 2568 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_StandardToken0) ==> ( <>(success_approve_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
