This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:06:39,992 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:06:39,994 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:06:40,006 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:06:40,006 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:06:40,007 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:06:40,008 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:06:40,009 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:06:40,011 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:06:40,011 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:06:40,012 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:06:40,012 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:06:40,013 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:06:40,014 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:06:40,015 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:06:40,015 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:06:40,016 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:06:40,017 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:06:40,019 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:06:40,020 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:06:40,021 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:06:40,021 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:06:40,023 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:06:40,023 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:06:40,023 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:06:40,024 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:06:40,024 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:06:40,025 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:06:40,025 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:06:40,025 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:06:40,026 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:06:40,026 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:06:40,027 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:06:40,027 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:06:40,028 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:06:40,028 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:06:40,029 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:06:40,029 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:06:40,029 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:06:40,030 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:06:40,030 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:06:40,030 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:06:40,038 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:06:40,038 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:06:40,039 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:06:40,039 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:06:40,039 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:06:40,040 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:06:40,040 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:06:40,040 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:06:40,041 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:06:40,041 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:06:40,042 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:06:40,042 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:06:40,042 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:06:40,042 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:06:40,042 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:06:40,063 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:06:40,072 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:06:40,075 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:06:40,077 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:06:40,077 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:06:40,078 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl
[2020-11-25 09:06:40,078 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl'
[2020-11-25 09:06:40,140 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:06:40,141 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:06:40,141 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:06:40,141 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:06:40,141 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:06:40,158 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,160 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,182 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,183 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,198 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,204 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,208 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,214 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:06:40,215 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:06:40,215 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:06:40,218 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:06:40,222 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/1) ...
[2020-11-25 09:06:40,235 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WXB.transferFrom(from, to, value), from == to && (value > holders_WXB[this][from] || value > approach_WXB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][from] >= 0 &&  holders_WXB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approach_WXB[this][from][msg.sender] >= 0 && approach_WXB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(WXB.transferFrom)))
[2020-11-25 09:06:40,240 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WXB.transferFrom(from, to, value), from == to && (value > holders_WXB[this][from] || value > approach_WXB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][from] >= 0 &&  holders_WXB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approach_WXB[this][from][msg.sender] >= 0 && approach_WXB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(WXB.transferFrom)))
[2020-11-25 09:06:40,247 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WXB.transferFrom(from, to, value), from == to && (value > holders_WXB[this][from] || value > approach_WXB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][from] >= 0 &&  holders_WXB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approach_WXB[this][from][msg.sender] >= 0 && approach_WXB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(WXB.transferFrom)))
[2020-11-25 09:06:40,253 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s315==_to_s315 && ( _val_s315>holders_WXB[this][_from_s315] || _val_s315>approach_WXB[this][_from_s315][msg.sender] ) ) && _val_s315>=0 ) && _val_s315<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][_to_s315]>=0 ) && holders_WXB[this][_to_s315]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][_from_s315]>=0 ) && holders_WXB[this][_from_s315]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && approach_WXB[this][_from_s315][msg.sender]>=0 ) && approach_WXB[this][_from_s315][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>],IdentifierExpression[_to_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_val_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]]],BinaryExpression[COMPGT,IdentifierExpression[_val_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_val_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_val_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_to_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_to_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[_from_s315,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:06:40,257 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WXB.transferFrom(from, to, value), from == to && (value > holders_WXB[this][from] || value > approach_WXB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][from] >= 0 &&  holders_WXB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approach_WXB[this][from][msg.sender] >= 0 && approach_WXB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(WXB.transferFrom)))
[2020-11-25 09:06:40,257 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_WXB0) ==> ( <>AP(fail_transferFrom_WXB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:06:40,261 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:06:40 PropertyContainer
[2020-11-25 09:06:40,261 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:06:40,262 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:06:40,262 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:06:40,262 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:06:40,262 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/2) ...
[2020-11-25 09:06:40,263 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:06:40,263 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:06:40,271 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:06:40" (2/2) ...
[2020-11-25 09:06:40,271 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:06:40,271 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:06:40,272 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:06:40,272 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:06:40,272 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/2) ...
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 09:06:40,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 09:06:40,326 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB
[2020-11-25 09:06:40,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__success
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB
[2020-11-25 09:06:40,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB
[2020-11-25 09:06:40,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 09:06:40,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 09:06:40,327 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB
[2020-11-25 09:06:40,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:06:40,328 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WXB
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__success
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__fail
[2020-11-25 09:06:40,329 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__success
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__fail
[2020-11-25 09:06:40,330 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__success
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__fail
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__success
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__fail
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__success
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__fail
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:06:40,331 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:06:40,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:06:40,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:06:40,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:06:40,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:06:40,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__success
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 09:06:40,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__success
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__fail
[2020-11-25 09:06:40,333 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__success
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WXB
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:06:40,334 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:06:40,334 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:06:40,690 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:06:40,690 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:06:40,813 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:06:40,813 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 09:06:40,815 INFO  L202        PluginConnector]: Adding new model WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:06:40 BoogieIcfgContainer
[2020-11-25 09:06:40,815 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:06:40" (2/2) ...
[2020-11-25 09:06:40,815 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:06:40,815 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@19bd1ced and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:06:40, skipping insertion in model container
[2020-11-25 09:06:40,815 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:06:40,816 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:06:40,816 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:06:40,817 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:06:40,818 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/3) ...
[2020-11-25 09:06:40,818 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6450cdd3 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:06:40, skipping insertion in model container
[2020-11-25 09:06:40,818 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:06:40" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:06:40,861 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:06:40 NWAContainer
[2020-11-25 09:06:40,861 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:06:40,862 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:06:40,862 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:06:40,863 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:06:40,864 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:06:40" (3/4) ...
[2020-11-25 09:06:40,864 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6097e9b3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:06:40, skipping insertion in model container
[2020-11-25 09:06:40,864 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:06:40" (4/4) ...
[2020-11-25 09:06:40,868 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:06:40,870 INFO  L110   BuchiProductObserver]: Initial RCFG 656 locations, 783 edges
[2020-11-25 09:06:40,871 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:06:40,883 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:06:41,771 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:06:41,774 INFO  L110   BuchiProductObserver]: BuchiProgram size 1520 locations, 2534 edges
[2020-11-25 09:06:41,774 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:06:41 BoogieIcfgContainer
[2020-11-25 09:06:41,774 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:06:41,775 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:06:41,775 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:06:41,777 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:06:41,777 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:06:41" (1/1) ...
[2020-11-25 09:06:41,822 INFO  L313           BlockEncoder]: Initial Icfg 1520 locations, 2534 edges
[2020-11-25 09:06:41,822 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:06:41,823 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:06:41,823 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:06:41,824 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:06:41,832 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 09:06:41,836 INFO  L70        RemoveSinkStates]: Removed 40 edges and 20 locations by removing sink states
[2020-11-25 09:06:41,841 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:06:41,843 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:06:41,845 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:06:41,845 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:06:41,848 INFO  L313           BlockEncoder]: Encoded RCFG 1483 locations, 2453 edges
[2020-11-25 09:06:41,848 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:06:41 BasicIcfg
[2020-11-25 09:06:41,848 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:06:41,849 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:06:41,849 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:06:41,851 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:06:41,851 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,851 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:06:40" (1/6) ...
[2020-11-25 09:06:41,853 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6413db8 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:06:41, skipping insertion in model container
[2020-11-25 09:06:41,853 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,853 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:06:40" (2/6) ...
[2020-11-25 09:06:41,853 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6413db8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:06:41, skipping insertion in model container
[2020-11-25 09:06:41,853 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,853 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:06:40" (3/6) ...
[2020-11-25 09:06:41,854 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6413db8 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:06:41, skipping insertion in model container
[2020-11-25 09:06:41,854 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,854 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:06:40" (4/6) ...
[2020-11-25 09:06:41,854 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6413db8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:06:41, skipping insertion in model container
[2020-11-25 09:06:41,854 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,854 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:06:41" (5/6) ...
[2020-11-25 09:06:41,854 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6413db8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:06:41, skipping insertion in model container
[2020-11-25 09:06:41,855 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:06:41,855 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:06:41" (6/6) ...
[2020-11-25 09:06:41,856 INFO  L404   chiAutomizerObserver]: Analyzing ICFG WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transferfrom-self-fail.bpl_BEv2
[2020-11-25 09:06:41,892 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:06:41,893 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:06:41,893 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:06:41,893 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:06:41,893 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:06:41,893 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:06:41,893 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:06:41,893 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:06:41,893 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:06:41,913 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1483 states.
[2020-11-25 09:06:41,952 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:41,952 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:41,952 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:41,961 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:41,961 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:41,961 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:06:41,961 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1483 states.
[2020-11-25 09:06:41,972 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:41,972 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:41,972 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:41,974 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:41,974 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_WXB0 := false;
[L2]                 call_transferFrom_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 09:06:41,991 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:06:41,991 INFO  L82        PathProgramCache]: Analyzing trace with hash 442973471, now seen corresponding path program 1 times
[2020-11-25 09:06:41,995 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:06:42,015 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:06:42,061 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:06:42,063 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:06:42,064 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:06:42,067 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:06:42,155 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:06:42,155 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:06:42,157 INFO  L87              Difference]: Start difference. First operand 1483 states. Second operand 4 states.
[2020-11-25 09:06:42,361 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:06:42,361 INFO  L93              Difference]: Finished difference Result 1103 states and 1196 transitions.
[2020-11-25 09:06:42,361 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:06:42,363 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1103 states and 1196 transitions.
[2020-11-25 09:06:42,370 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:42,381 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1103 states to 1093 states and 1176 transitions.
[2020-11-25 09:06:42,382 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 09:06:42,384 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 460
[2020-11-25 09:06:42,384 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1093 states and 1176 transitions.
[2020-11-25 09:06:42,389 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:06:42,390 INFO  L728         BuchiCegarLoop]: Abstraction has 1093 states and 1176 transitions.
[2020-11-25 09:06:42,405 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1093 states and 1176 transitions.
[2020-11-25 09:06:42,432 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1093 to 1093.
[2020-11-25 09:06:42,433 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1093 states.
[2020-11-25 09:06:42,436 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1093 states to 1093 states and 1176 transitions.
[2020-11-25 09:06:42,437 INFO  L751         BuchiCegarLoop]: Abstraction has 1093 states and 1176 transitions.
[2020-11-25 09:06:42,437 INFO  L631         BuchiCegarLoop]: Abstraction has 1093 states and 1176 transitions.
[2020-11-25 09:06:42,437 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:06:42,437 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1093 states and 1176 transitions.
[2020-11-25 09:06:42,442 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:42,442 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:42,442 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:42,443 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:42,444 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_WXB0 := false;
[L2]                 call_transferFrom_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND TRUE   !(holders_WXB[this][_from_s315] >= _val_s315)
[L1088]              revert := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND TRUE   !(holders_WXB[this][_from_s315] >= _val_s315)
[L1088]              revert := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 09:06:42,448 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:06:42,448 INFO  L82        PathProgramCache]: Analyzing trace with hash 466634639, now seen corresponding path program 1 times
[2020-11-25 09:06:42,449 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:06:42,459 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:06:42,479 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:06:42,479 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:06:42,479 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:06:42,481 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:06:42,481 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:06:42,481 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:06:42,481 INFO  L87              Difference]: Start difference. First operand 1093 states and 1176 transitions. cyclomatic complexity: 85 Second operand 4 states.
[2020-11-25 09:06:42,647 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:06:42,647 INFO  L93              Difference]: Finished difference Result 1491 states and 1665 transitions.
[2020-11-25 09:06:42,647 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:06:42,648 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1491 states and 1665 transitions.
[2020-11-25 09:06:42,658 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:06:42,666 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1491 states to 1457 states and 1627 transitions.
[2020-11-25 09:06:42,667 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 581
[2020-11-25 09:06:42,667 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 581
[2020-11-25 09:06:42,668 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1457 states and 1627 transitions.
[2020-11-25 09:06:42,670 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:06:42,670 INFO  L728         BuchiCegarLoop]: Abstraction has 1457 states and 1627 transitions.
[2020-11-25 09:06:42,672 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1457 states and 1627 transitions.
[2020-11-25 09:06:42,689 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1457 to 1161.
[2020-11-25 09:06:42,689 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1161 states.
[2020-11-25 09:06:42,692 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1161 states to 1161 states and 1248 transitions.
[2020-11-25 09:06:42,692 INFO  L751         BuchiCegarLoop]: Abstraction has 1161 states and 1248 transitions.
[2020-11-25 09:06:42,692 INFO  L631         BuchiCegarLoop]: Abstraction has 1161 states and 1248 transitions.
[2020-11-25 09:06:42,692 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:06:42,692 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1161 states and 1248 transitions.
[2020-11-25 09:06:42,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:06:42,696 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:42,696 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:42,698 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:42,698 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_WXB0 := false;
[L2]                 call_transferFrom_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND FALSE  !(!(holders_WXB[this][_from_s315] >= _val_s315))
[L1091]  COND FALSE  !(!(approach_WXB[this][_from_s315][msgsender_MSG] >= _val_s315))
[L1095]              assert _val_s315 <= holders_WXB[this][_from_s315];
[L1096]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_from_s315];
[L1097]              holders_WXB[this][_from_s315] := (holders_WXB[this][_from_s315] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1098]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_from_s315];
[L1099]              assert _val_s315 <= approach_WXB[this][_from_s315][msgsender_MSG];
[L1100]              sum_approach0[_from_s315] := sum_approach0[_from_s315] - approach_WXB[this][_from_s315][msgsender_MSG];
[L1101]              approach_WXB[this][_from_s315][msgsender_MSG] := (approach_WXB[this][_from_s315][msgsender_MSG] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1102]              sum_approach0[_from_s315] := sum_approach0[_from_s315] + approach_WXB[this][_from_s315][msgsender_MSG];
[L1103]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s315];
[L1104]              holders_WXB[this][_to_s315] := (holders_WXB[this][_to_s315] + _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1105]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s315];
[L1106]              assert holders_WXB[this][_to_s315] >= _val_s315;
[L1107]              assert { :EventEmitted "Transfer_WXB" } true;
[L1108]              __ret_0_ := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND FALSE  !(!(holders_WXB[this][_from_s315] >= _val_s315))
[L1091]  COND FALSE  !(!(approach_WXB[this][_from_s315][msgsender_MSG] >= _val_s315))
[L1095]              assert _val_s315 <= holders_WXB[this][_from_s315];
[L1096]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_from_s315];
[L1097]              holders_WXB[this][_from_s315] := (holders_WXB[this][_from_s315] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1098]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_from_s315];
[L1099]              assert _val_s315 <= approach_WXB[this][_from_s315][msgsender_MSG];
[L1100]              sum_approach0[_from_s315] := sum_approach0[_from_s315] - approach_WXB[this][_from_s315][msgsender_MSG];
[L1101]              approach_WXB[this][_from_s315][msgsender_MSG] := (approach_WXB[this][_from_s315][msgsender_MSG] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1102]              sum_approach0[_from_s315] := sum_approach0[_from_s315] + approach_WXB[this][_from_s315][msgsender_MSG];
[L1103]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s315];
[L1104]              holders_WXB[this][_to_s315] := (holders_WXB[this][_to_s315] + _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1105]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s315];
[L1106]              assert holders_WXB[this][_to_s315] >= _val_s315;
[L1107]              assert { :EventEmitted "Transfer_WXB" } true;
[L1108]              __ret_0_ := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 09:06:42,702 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:06:42,702 INFO  L82        PathProgramCache]: Analyzing trace with hash -306330929, now seen corresponding path program 1 times
[2020-11-25 09:06:42,703 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:06:42,724 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:06:42,832 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:06:42,832 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:06:42,832 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 09:06:42,833 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:06:42,833 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 09:06:42,833 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-25 09:06:42,833 INFO  L87              Difference]: Start difference. First operand 1161 states and 1248 transitions. cyclomatic complexity: 89 Second operand 12 states.
[2020-11-25 09:06:43,727 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:06:43,727 INFO  L93              Difference]: Finished difference Result 1233 states and 1332 transitions.
[2020-11-25 09:06:43,727 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 09:06:43,727 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1233 states and 1332 transitions.
[2020-11-25 09:06:43,731 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:06:43,735 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1233 states to 1233 states and 1332 transitions.
[2020-11-25 09:06:43,735 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 550
[2020-11-25 09:06:43,736 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 550
[2020-11-25 09:06:43,737 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1233 states and 1332 transitions.
[2020-11-25 09:06:43,738 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:06:43,738 INFO  L728         BuchiCegarLoop]: Abstraction has 1233 states and 1332 transitions.
[2020-11-25 09:06:43,739 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1233 states and 1332 transitions.
[2020-11-25 09:06:43,747 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1233 to 1121.
[2020-11-25 09:06:43,748 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1121 states.
[2020-11-25 09:06:43,750 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1121 states to 1121 states and 1193 transitions.
[2020-11-25 09:06:43,750 INFO  L751         BuchiCegarLoop]: Abstraction has 1121 states and 1193 transitions.
[2020-11-25 09:06:43,750 INFO  L631         BuchiCegarLoop]: Abstraction has 1121 states and 1193 transitions.
[2020-11-25 09:06:43,750 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:06:43,750 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1121 states and 1193 transitions.
[2020-11-25 09:06:43,752 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:43,752 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:43,752 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:43,753 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:43,753 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_WXB0 := false;
[L2]                 call_transferFrom_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND TRUE   __exception
[L146]               __tmp__Balance := Balance;
[L147]               __tmp__DType := DType;
[L148]               __tmp__Alloc := Alloc;
[L149]               __tmp__balance_ADDR := balance_ADDR;
[L150]               __tmp__M_Ref_int := M_Ref_int;
[L151]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L152]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L153]               __tmp__sum_approach0 := sum_approach0;
[L154]               __tmp__sum_holders1 := sum_holders1;
[L155]               __tmp__Length := Length;
[L156]               __tmp__now := now;
[L157]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L158]               __tmp__decimals_WXB := decimals_WXB;
[L159]               __tmp__symbol_WXB := symbol_WXB;
[L160]               __tmp__name_WXB := name_WXB;
[L161]               __tmp__approach_WXB := approach_WXB;
[L162]               __tmp__holders_WXB := holders_WXB;
[L163]   CALL        call WXB_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L972]   CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L905]   CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L890]               assume msgsender_MSG != null;
[L891]               __tmp__Balance[this] := 0;
[L905]   RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L906]   COND FALSE  !(revert)
[L972]   RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L973]   COND FALSE  !(revert)
[L976]   CALL        call WXB_WXB_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L923]               assume msgsender_MSG != null;
[L924]               __tmp__Balance[this] := 0;
[L925]               __tmp__totalSupply_WXB[this] := 0;
[L926]               __tmp__decimals_WXB[this] := 0;
[L927]               __tmp__symbol_WXB[this] := 1199276259;
[L928]               __tmp__name_WXB[this] := 1199276259;
[L929]               __tmp__approach_WXB[this] := zeroRefRefintArr();
[L930]               __tmp__sum_approach0[this] := 0;
[L931]               __tmp__holders_WXB[this] := zeroRefintArr();
[L932]               __tmp__sum_holders1[this] := 0;
[L934]               __tmp__name_WXB[this] := -1225396598;
[L935]               __tmp__symbol_WXB[this] := 397088534;
[L936]               __tmp__decimals_WXB[this] := 18;
[L937]               __var_1 := __tmp__decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L938]               __tmp__totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, __tmp__decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L939]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] - __tmp__holders_WXB[this][msgsender_MSG];
[L940]               __tmp__holders_WXB[this][msgsender_MSG] := __tmp__totalSupply_WXB[this];
[L941]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] + __tmp__holders_WXB[this][msgsender_MSG];
[L976]   RET         call WXB_WXB_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L977]   COND FALSE  !(revert)
[L163]   RET         call WXB_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume revert || gas < 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND FALSE  !(!(holders_WXB[this][_from_s315] >= _val_s315))
[L1091]  COND FALSE  !(!(approach_WXB[this][_from_s315][msgsender_MSG] >= _val_s315))
[L1095]              assert _val_s315 <= holders_WXB[this][_from_s315];
[L1096]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_from_s315];
[L1097]              holders_WXB[this][_from_s315] := (holders_WXB[this][_from_s315] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1098]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_from_s315];
[L1099]              assert _val_s315 <= approach_WXB[this][_from_s315][msgsender_MSG];
[L1100]              sum_approach0[_from_s315] := sum_approach0[_from_s315] - approach_WXB[this][_from_s315][msgsender_MSG];
[L1101]              approach_WXB[this][_from_s315][msgsender_MSG] := (approach_WXB[this][_from_s315][msgsender_MSG] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1102]              sum_approach0[_from_s315] := sum_approach0[_from_s315] + approach_WXB[this][_from_s315][msgsender_MSG];
[L1103]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s315];
[L1104]              holders_WXB[this][_to_s315] := (holders_WXB[this][_to_s315] + _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1105]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s315];
[L1106]              assert holders_WXB[this][_to_s315] >= _val_s315;
[L1107]              assert { :EventEmitted "Transfer_WXB" } true;
[L1108]              __ret_0_ := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 09:06:43,756 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:06:43,756 INFO  L82        PathProgramCache]: Analyzing trace with hash 252663872, now seen corresponding path program 1 times
[2020-11-25 09:06:43,756 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:06:43,763 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:06:43,782 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:06:43,783 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:06:43,783 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:06:43,783 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:06:43,783 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:06:43,784 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:06:43,784 INFO  L87              Difference]: Start difference. First operand 1121 states and 1193 transitions. cyclomatic complexity: 75 Second operand 4 states.
[2020-11-25 09:06:43,859 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:06:43,859 INFO  L93              Difference]: Finished difference Result 1480 states and 1659 transitions.
[2020-11-25 09:06:43,859 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:06:43,859 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1480 states and 1659 transitions.
[2020-11-25 09:06:43,865 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:06:43,871 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1480 states to 1415 states and 1594 transitions.
[2020-11-25 09:06:43,871 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 646
[2020-11-25 09:06:43,871 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 646
[2020-11-25 09:06:43,872 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1415 states and 1594 transitions.
[2020-11-25 09:06:43,873 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:06:43,874 INFO  L728         BuchiCegarLoop]: Abstraction has 1415 states and 1594 transitions.
[2020-11-25 09:06:43,875 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1415 states and 1594 transitions.
[2020-11-25 09:06:43,885 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1415 to 1056.
[2020-11-25 09:06:43,885 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1056 states.
[2020-11-25 09:06:43,886 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1056 states to 1056 states and 1127 transitions.
[2020-11-25 09:06:43,887 INFO  L751         BuchiCegarLoop]: Abstraction has 1056 states and 1127 transitions.
[2020-11-25 09:06:43,887 INFO  L631         BuchiCegarLoop]: Abstraction has 1056 states and 1127 transitions.
[2020-11-25 09:06:43,887 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:06:43,887 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1056 states and 1127 transitions.
[2020-11-25 09:06:43,889 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:06:43,889 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:06:43,889 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:06:43,890 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:06:43,890 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_WXB0 := false;
[L2]                 call_transferFrom_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND TRUE   choice == 5
[L1721]              gas := gas - 21000;
[L1722]  COND TRUE   gas >= 0
[L1723]              assume _val_s352 >= 0 && _val_s352 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1724]              assume msgvalue_MSG == 0;
[L1725]  CALL        call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L353]               havoc __exception;
[L354]               revert := false;
[L355]   COND FALSE  !(__exception)
[L376]   CALL        call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1127]  COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s352))
[L1131]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] - approach_WXB[this][msgsender_MSG][_spender_s352];
[L1132]              approach_WXB[this][msgsender_MSG][_spender_s352] := _val_s352;
[L1133]              sum_approach0[msgsender_MSG] := sum_approach0[msgsender_MSG] + approach_WXB[this][msgsender_MSG][_spender_s352];
[L1134]              assert { :EventEmitted "Approval_WXB" } true;
[L1135]              __ret_0_ := true;
[L376]   RET         call __ret_0_ := approve~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L377]               assume !revert && gas >= 0;
[L1725]  RET         call __ret_0_approve := approve~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _spender_s352, _val_s352);
[L1769]  RET         call CorralChoice_WXB(this);
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s315 == _to_s315 && (_val_s315 > holders_WXB[this][_from_s315] || _val_s315 > approach_WXB[this][_from_s315][msgsender_MSG])) && _val_s315 >= 0) && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s315] >= 0) && holders_WXB[this][_to_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_from_s315] >= 0) && holders_WXB[this][_from_s315] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approach_WXB[this][_from_s315][msgsender_MSG] >= 0) && approach_WXB[this][_from_s315][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_WXB0 := true;
[L2]                 call_transferFrom_WXB0 := false;
[L2]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND FALSE  !(!(holders_WXB[this][_from_s315] >= _val_s315))
[L1091]  COND FALSE  !(!(approach_WXB[this][_from_s315][msgsender_MSG] >= _val_s315))
[L1095]              assert _val_s315 <= holders_WXB[this][_from_s315];
[L1096]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_from_s315];
[L1097]              holders_WXB[this][_from_s315] := (holders_WXB[this][_from_s315] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1098]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_from_s315];
[L1099]              assert _val_s315 <= approach_WXB[this][_from_s315][msgsender_MSG];
[L1100]              sum_approach0[_from_s315] := sum_approach0[_from_s315] - approach_WXB[this][_from_s315][msgsender_MSG];
[L1101]              approach_WXB[this][_from_s315][msgsender_MSG] := (approach_WXB[this][_from_s315][msgsender_MSG] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1102]              sum_approach0[_from_s315] := sum_approach0[_from_s315] + approach_WXB[this][_from_s315][msgsender_MSG];
[L1103]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s315];
[L1104]              holders_WXB[this][_to_s315] := (holders_WXB[this][_to_s315] + _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1105]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s315];
[L1106]              assert holders_WXB[this][_to_s315] >= _val_s315;
[L1107]              assert { :EventEmitted "Transfer_WXB" } true;
[L1108]              __ret_0_ := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 09:06:43,892 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:06:43,892 INFO  L82        PathProgramCache]: Analyzing trace with hash -469197890, now seen corresponding path program 1 times
[2020-11-25 09:06:43,893 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:06:43,906 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:06:43,984 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 09:06:43,985 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:06:43,985 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 09:06:43,985 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:06:43,985 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 09:06:43,985 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=37, Unknown=0, NotChecked=0, Total=56
[2020-11-25 09:06:43,986 INFO  L87              Difference]: Start difference. First operand 1056 states and 1127 transitions. cyclomatic complexity: 74 Second operand 8 states.
[2020-11-25 09:06:44,288 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:06:44,288 INFO  L93              Difference]: Finished difference Result 639 states and 677 transitions.
[2020-11-25 09:06:44,288 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 09:06:44,288 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 639 states and 677 transitions.
[2020-11-25 09:06:44,290 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:06:44,290 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 639 states to 0 states and 0 transitions.
[2020-11-25 09:06:44,290 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:06:44,290 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:06:44,291 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:06:44,291 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:06:44,291 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:06:44,291 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:06:44,291 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:06:44,291 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 09:06:44,291 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:06:44,291 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:06:44,291 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:06:44,294 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:06:44 BasicIcfg
[2020-11-25 09:06:44,294 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:06:44,294 INFO  L168              Benchmark]: Toolchain (without parser) took 4154.35 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 278.4 MB). Free memory was 945.9 MB in the beginning and 859.6 MB in the end (delta: 86.3 MB). Peak memory consumption was 364.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,295 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,295 INFO  L168              Benchmark]: Boogie Preprocessor took 73.68 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,296 INFO  L168              Benchmark]: UtopiaSpecLang took 46.35 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,296 INFO  L168              Benchmark]: Boogie Printer took 9.66 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,296 INFO  L168              Benchmark]: RCFGBuilder took 544.17 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,297 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.80 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,297 INFO  L168              Benchmark]: BÃ¼chi Program Product took 912.79 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 877.9 MB in the beginning and 953.6 MB in the end (delta: -75.7 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,298 INFO  L168              Benchmark]: BlockEncodingV2 took 73.43 ms. Allocated memory is still 1.1 GB. Free memory was 953.6 MB in the beginning and 915.4 MB in the end (delta: 38.2 MB). Peak memory consumption was 38.2 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,298 INFO  L168              Benchmark]: BuchiAutomizer took 2445.41 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 915.4 MB in the beginning and 859.6 MB in the end (delta: 55.8 MB). Peak memory consumption was 277.1 MB. Max. memory is 15.3 GB.
[2020-11-25 09:06:44,302 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1520 locations, 2534 edges
  - StatisticsResult: Encoded RCFG
    1483 locations, 2453 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 73.68 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 46.35 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.66 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 544.17 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.80 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 912.79 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 877.9 MB in the beginning and 953.6 MB in the end (delta: -75.7 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 73.43 ms. Allocated memory is still 1.1 GB. Free memory was 953.6 MB in the beginning and 915.4 MB in the end (delta: 38.2 MB). Peak memory consumption was 38.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2445.41 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 915.4 MB in the beginning and 859.6 MB in the end (delta: 55.8 MB). Peak memory consumption was 277.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    656 locations, 783 edges
  - StatisticsResult: BuchiProgram size
    1520 locations, 2534 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 12 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 767 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1161 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5588 SDtfs, 5328 SDslu, 8115 SDs, 0 SdLazy, 9898 SolverSat, 837 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_WX(fail_transferFrom_WXB0)0) ==> ( <>(fail_transferFrom_WXB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
