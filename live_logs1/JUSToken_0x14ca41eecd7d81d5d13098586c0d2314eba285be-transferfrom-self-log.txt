This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:01:33,931 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:01:33,933 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:01:33,945 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:01:33,945 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:01:33,946 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:01:33,947 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:01:33,948 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:01:33,950 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:01:33,951 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:01:33,952 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:01:33,952 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:01:33,953 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:01:33,954 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:01:33,955 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:01:33,956 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:01:33,957 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:01:33,958 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:01:33,959 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:01:33,961 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:01:33,961 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:01:33,962 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:01:33,964 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:01:33,965 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:01:33,965 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:01:33,965 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:01:33,966 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:01:33,966 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:01:33,967 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:01:33,967 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:01:33,967 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:01:33,968 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:01:33,968 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:01:33,969 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:01:33,970 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:01:33,970 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:01:33,970 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:01:33,971 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:01:33,971 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:01:33,971 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:01:33,972 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:01:33,972 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:01:33,980 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:01:33,980 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:01:33,981 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:01:33,981 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:01:33,981 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:01:33,981 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:01:33,981 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:01:33,982 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:01:33,982 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:01:33,982 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:01:33,983 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:01:33,983 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:01:34,004 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:01:34,015 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:01:34,018 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:01:34,019 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:01:34,020 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:01:34,020 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl
[2020-11-24 20:01:34,020 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl'
[2020-11-24 20:01:34,090 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:01:34,092 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:01:34,092 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:01:34,092 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:01:34,092 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:01:34,109 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,111 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,137 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,137 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,156 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,163 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,168 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,177 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:01:34,178 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:01:34,178 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:01:34,180 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:01:34,184 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/1) ...
[2020-11-24 20:01:34,197 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(JUSToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_JUSToken[this][from] && value <= allowance_JUSToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(JUSToken.transferFrom(from, to, value), return == true && allowance_JUSToken[this][from][msg.sender] == old(allowance_JUSToken[this][from][msg.sender]) - value && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this]) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this]) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2]) && name_JUSToken[this] == old(name_JUSToken[this]) && symbol_JUSToken[this] == old(symbol_JUSToken[this]) && decimals_JUSToken[this] == old(decimals_JUSToken[this]))))
[2020-11-24 20:01:34,203 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(JUSToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_JUSToken[this][from] && value <= allowance_JUSToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(JUSToken.transferFrom(from, to, value), return == true && allowance_JUSToken[this][from][msg.sender] == old(allowance_JUSToken[this][from][msg.sender]) - value && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this]) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this]) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2]) && name_JUSToken[this] == old(name_JUSToken[this]) && symbol_JUSToken[this] == old(symbol_JUSToken[this]) && decimals_JUSToken[this] == old(decimals_JUSToken[this]))))
[2020-11-24 20:01:34,211 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(JUSToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_JUSToken[this][from] && value <= allowance_JUSToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(JUSToken.transferFrom(from, to, value), return == true && allowance_JUSToken[this][from][msg.sender] == old(allowance_JUSToken[this][from][msg.sender]) - value && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this]) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this]) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2]) && name_JUSToken[this] == old(name_JUSToken[this]) && symbol_JUSToken[this] == old(symbol_JUSToken[this]) && decimals_JUSToken[this] == old(decimals_JUSToken[this]))))
[2020-11-24 20:01:34,217 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s199 || p2!=msg.sender ) && _from_s199==_to_s199 ) && _value_s199<=balanceOf_JUSToken[this][_from_s199] ) && _value_s199<=allowance_JUSToken[this][_from_s199][msg.sender] ) && _value_s199>=0 ) && _value_s199<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_JUSToken[this][_to_s199]>=0 ) && balanceOf_JUSToken[this][_to_s199]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_JUSToken[this][_from_s199]>=0 ) && balanceOf_JUSToken[this][_from_s199]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_JUSToken[this][_from_s199][msg.sender]>=0 ) && allowance_JUSToken[this][_from_s199][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:01:34,220 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s199==true && allowance_JUSToken[this][_from_s199][msg.sender]==( ( old(allowance_JUSToken[this][_from_s199][msg.sender]) ) - _value_s199 ) ) && totalSupply_JUSToken[this]==( old(totalSupply_JUSToken[this]) ) ) && balanceOf_JUSToken[this]==( old(balanceOf_JUSToken[this]) ) ) && allowance_JUSToken[this][p1][p2]==( old(allowance_JUSToken[this][p1][p2]) ) ) && name_JUSToken[this]==( old(name_JUSToken[this]) ) ) && symbol_JUSToken[this]==( old(symbol_JUSToken[this]) ) ) && decimals_JUSToken[this]==( old(decimals_JUSToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s199,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_JUSToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]],IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]]]
[2020-11-24 20:01:34,225 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(JUSToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_JUSToken[this][from] && value <= allowance_JUSToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(JUSToken.transferFrom(from, to, value), return == true && allowance_JUSToken[this][from][msg.sender] == old(allowance_JUSToken[this][from][msg.sender]) - value && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this]) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this]) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2]) && name_JUSToken[this] == old(name_JUSToken[this]) && symbol_JUSToken[this] == old(symbol_JUSToken[this]) && decimals_JUSToken[this] == old(decimals_JUSToken[this]))))
[2020-11-24 20:01:34,226 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_JUSToken0) ==> ( <>AP(success_transferFrom_JUSToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:01:34,232 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:34 PropertyContainer
[2020-11-24 20:01:34,232 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:01:34,232 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:01:34,232 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:01:34,232 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:01:34,233 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/2) ...
[2020-11-24 20:01:34,233 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:01:34,233 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:01:34,243 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:34" (2/2) ...
[2020-11-24 20:01:34,243 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:01:34,244 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:01:34,244 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:01:34,244 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:01:34,245 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/2) ...
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:01:34,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken_NoBaseCtor__success
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken
[2020-11-24 20:01:34,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken
[2020-11-24 20:01:34,300 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_JUSToken__success
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken
[2020-11-24 20:01:34,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken
[2020-11-24 20:01:34,301 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken
[2020-11-24 20:01:34,302 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken
[2020-11-24 20:01:34,302 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken
[2020-11-24 20:01:34,302 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken
[2020-11-24 20:01:34,302 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken
[2020-11-24 20:01:34,302 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken
[2020-11-24 20:01:34,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken
[2020-11-24 20:01:34,303 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_JUSToken
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:01:34,303 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken_NoBaseCtor__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken__success
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken__success
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken__success
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken__success
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken__success
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken__fail
[2020-11-24 20:01:34,304 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken__fail
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken__success
[2020-11-24 20:01:34,305 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken__fail
[2020-11-24 20:01:34,306 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken__success
[2020-11-24 20:01:34,306 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken__fail
[2020-11-24 20:01:34,306 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:01:34,306 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:01:34,306 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken_NoBaseCtor__fail
[2020-11-24 20:01:34,306 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken_NoBaseCtor__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_JUSToken__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken__success
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken__fail
[2020-11-24 20:01:34,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken__fail
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken__success
[2020-11-24 20:01:34,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken__fail
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken__success
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken__fail
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken__success
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:01:34,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_JUSToken
[2020-11-24 20:01:34,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:01:34,310 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:01:34,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:01:34,539 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:34,835 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:34,835 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:34,836 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:34,874 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:01:34,874 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 20:01:34,875 INFO  L202        PluginConnector]: Adding new model JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:34 BoogieIcfgContainer
[2020-11-24 20:01:34,876 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:34" (2/2) ...
[2020-11-24 20:01:34,876 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:01:34,876 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@183fd807 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:34, skipping insertion in model container
[2020-11-24 20:01:34,876 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:01:34,876 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:01:34,877 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:01:34,878 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:01:34,878 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/3) ...
[2020-11-24 20:01:34,879 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1b99c6af and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:34, skipping insertion in model container
[2020-11-24 20:01:34,879 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:01:34,917 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:34 NWAContainer
[2020-11-24 20:01:34,917 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:01:34,917 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:01:34,918 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:01:34,919 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:01:34,919 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:34" (3/4) ...
[2020-11-24 20:01:34,920 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5ae8643f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:34, skipping insertion in model container
[2020-11-24 20:01:34,921 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:34" (4/4) ...
[2020-11-24 20:01:34,924 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:01:34,927 INFO  L110   BuchiProductObserver]: Initial RCFG 802 locations, 974 edges
[2020-11-24 20:01:34,927 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:01:34,938 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:01:35,884 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:01:35,887 INFO  L110   BuchiProductObserver]: BuchiProgram size 1870 locations, 3134 edges
[2020-11-24 20:01:35,887 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:35 BoogieIcfgContainer
[2020-11-24 20:01:35,887 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:01:35,887 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:01:35,887 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:01:35,889 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:01:35,889 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:35" (1/1) ...
[2020-11-24 20:01:35,932 INFO  L313           BlockEncoder]: Initial Icfg 1870 locations, 3134 edges
[2020-11-24 20:01:35,932 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:01:35,933 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:01:35,933 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:01:35,933 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:01:35,939 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-24 20:01:35,943 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 20:01:35,948 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:01:35,950 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:01:35,952 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:01:35,952 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:01:35,954 INFO  L313           BlockEncoder]: Encoded RCFG 1852 locations, 3091 edges
[2020-11-24 20:01:35,955 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:01:35 BasicIcfg
[2020-11-24 20:01:35,955 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:01:35,955 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:01:35,955 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:01:35,957 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:01:35,957 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,957 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:34" (1/6) ...
[2020-11-24 20:01:35,959 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70d336cc and model type JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:35, skipping insertion in model container
[2020-11-24 20:01:35,959 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,959 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:34" (2/6) ...
[2020-11-24 20:01:35,959 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70d336cc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:35, skipping insertion in model container
[2020-11-24 20:01:35,959 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,959 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:34" (3/6) ...
[2020-11-24 20:01:35,959 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70d336cc and model type JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:01:35, skipping insertion in model container
[2020-11-24 20:01:35,959 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,959 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:34" (4/6) ...
[2020-11-24 20:01:35,960 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70d336cc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:35, skipping insertion in model container
[2020-11-24 20:01:35,960 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,960 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:35" (5/6) ...
[2020-11-24 20:01:35,961 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70d336cc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:01:35, skipping insertion in model container
[2020-11-24 20:01:35,961 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:35,961 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:01:35" (6/6) ...
[2020-11-24 20:01:35,964 INFO  L404   chiAutomizerObserver]: Analyzing ICFG JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-self.bpl_BEv2
[2020-11-24 20:01:36,008 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:01:36,008 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:01:36,008 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:01:36,008 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:01:36,008 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:01:36,009 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:01:36,009 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:01:36,009 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:01:36,009 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:01:36,032 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1852 states.
[2020-11-24 20:01:36,075 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:36,075 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:36,075 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:36,083 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:36,083 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:36,083 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:01:36,083 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1852 states.
[2020-11-24 20:01:36,094 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:36,094 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:36,094 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:36,096 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:36,096 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_JUSToken0 := false;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2141]              assume null == 0;
[L2142]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2142]  RET         call this := FreshRefGenerator__success();
[L2143]              assume now >= 0;
[L2144]              assume DType[this] == JUSToken;
[L2145]              assume msgvalue_MSG == 0;
[L2146]              gas := gas - 53000;
[L2147]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2148]              assume !revert && gas >= 0;

Loop:
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND TRUE   choice == 12
[L2056]              gas := gas - 21000;
[L2057]  COND FALSE  !(gas >= 0)
[L2151]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:36,110 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:36,110 INFO  L82        PathProgramCache]: Analyzing trace with hash 1058575946, now seen corresponding path program 1 times
[2020-11-24 20:01:36,114 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:36,141 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:36,184 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:36,186 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:36,186 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:01:36,190 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:36,309 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:01:36,309 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:01:36,311 INFO  L87              Difference]: Start difference. First operand 1852 states. Second operand 4 states.
[2020-11-24 20:01:36,565 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:36,565 INFO  L93              Difference]: Finished difference Result 1489 states and 1624 transitions.
[2020-11-24 20:01:36,566 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:01:36,567 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1489 states and 1624 transitions.
[2020-11-24 20:01:36,577 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:36,592 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1489 states to 1487 states and 1620 transitions.
[2020-11-24 20:01:36,593 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:01:36,595 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 695
[2020-11-24 20:01:36,595 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1487 states and 1620 transitions.
[2020-11-24 20:01:36,601 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:36,601 INFO  L728         BuchiCegarLoop]: Abstraction has 1487 states and 1620 transitions.
[2020-11-24 20:01:36,617 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1487 states and 1620 transitions.
[2020-11-24 20:01:36,651 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1487 to 1487.
[2020-11-24 20:01:36,652 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1487 states.
[2020-11-24 20:01:36,656 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1487 states to 1487 states and 1620 transitions.
[2020-11-24 20:01:36,656 INFO  L751         BuchiCegarLoop]: Abstraction has 1487 states and 1620 transitions.
[2020-11-24 20:01:36,657 INFO  L631         BuchiCegarLoop]: Abstraction has 1487 states and 1620 transitions.
[2020-11-24 20:01:36,657 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:01:36,657 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1487 states and 1620 transitions.
[2020-11-24 20:01:36,663 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:36,663 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:36,663 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:36,666 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:36,666 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_JUSToken0 := false;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2141]              assume null == 0;
[L2142]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2142]  RET         call this := FreshRefGenerator__success();
[L2143]              assume now >= 0;
[L2144]              assume DType[this] == JUSToken;
[L2145]              assume msgvalue_MSG == 0;
[L2146]              gas := gas - 53000;
[L2147]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2148]              assume !revert && gas >= 0;
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1257]  COND TRUE   !(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1258]              revert := true;
[L273]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s199 == true && allowance_JUSToken[this][_from_s199][msgsender_MSG] == old(allowance_JUSToken[this][_from_s199][msgsender_MSG]) - _value_s199) && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this])) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this])) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2])) && name_JUSToken[this] == old(name_JUSToken[this])) && symbol_JUSToken[this] == old(symbol_JUSToken[this])) && decimals_JUSToken[this] == old(decimals_JUSToken[this]));
[L3]                 revert := revert_hold;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1257]  COND TRUE   !(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1258]              revert := true;
[L273]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s199 == true && allowance_JUSToken[this][_from_s199][msgsender_MSG] == old(allowance_JUSToken[this][_from_s199][msgsender_MSG]) - _value_s199) && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this])) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this])) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2])) && name_JUSToken[this] == old(name_JUSToken[this])) && symbol_JUSToken[this] == old(symbol_JUSToken[this])) && decimals_JUSToken[this] == old(decimals_JUSToken[this]));
[L3]                 revert := revert_hold;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:36,671 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:36,671 INFO  L82        PathProgramCache]: Analyzing trace with hash -1605548166, now seen corresponding path program 1 times
[2020-11-24 20:01:36,672 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:36,687 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:36,713 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:36,713 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:36,713 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:01:36,715 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:36,715 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:01:36,715 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:01:36,715 INFO  L87              Difference]: Start difference. First operand 1487 states and 1620 transitions. cyclomatic complexity: 135 Second operand 3 states.
[2020-11-24 20:01:36,765 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:36,765 INFO  L93              Difference]: Finished difference Result 1927 states and 2144 transitions.
[2020-11-24 20:01:36,765 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:01:36,766 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1927 states and 2144 transitions.
[2020-11-24 20:01:36,778 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:01:36,790 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1927 states to 1849 states and 2054 transitions.
[2020-11-24 20:01:36,790 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 876
[2020-11-24 20:01:36,792 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 876
[2020-11-24 20:01:36,792 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1849 states and 2054 transitions.
[2020-11-24 20:01:36,796 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:36,796 INFO  L728         BuchiCegarLoop]: Abstraction has 1849 states and 2054 transitions.
[2020-11-24 20:01:36,798 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1849 states and 2054 transitions.
[2020-11-24 20:01:36,819 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1849 to 1485.
[2020-11-24 20:01:36,819 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1485 states.
[2020-11-24 20:01:36,822 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1485 states to 1485 states and 1598 transitions.
[2020-11-24 20:01:36,823 INFO  L751         BuchiCegarLoop]: Abstraction has 1485 states and 1598 transitions.
[2020-11-24 20:01:36,823 INFO  L631         BuchiCegarLoop]: Abstraction has 1485 states and 1598 transitions.
[2020-11-24 20:01:36,823 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:01:36,823 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1485 states and 1598 transitions.
[2020-11-24 20:01:36,828 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:36,828 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:36,828 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:36,830 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:36,830 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_JUSToken0 := false;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2141]              assume null == 0;
[L2142]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2142]  RET         call this := FreshRefGenerator__success();
[L2143]              assume now >= 0;
[L2144]              assume DType[this] == JUSToken;
[L2145]              assume msgvalue_MSG == 0;
[L2146]              gas := gas - 53000;
[L2147]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2148]              assume !revert && gas >= 0;
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND TRUE   !(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1241]              revert := true;
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND TRUE   !(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1241]              revert := true;
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:36,833 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:36,834 INFO  L82        PathProgramCache]: Analyzing trace with hash -1937972312, now seen corresponding path program 1 times
[2020-11-24 20:01:36,834 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:36,849 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:36,963 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:36,964 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:36,964 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 20:01:36,964 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:36,964 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 20:01:36,965 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-24 20:01:36,965 INFO  L87              Difference]: Start difference. First operand 1485 states and 1598 transitions. cyclomatic complexity: 115 Second operand 13 states.
[2020-11-24 20:01:38,129 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:38,129 INFO  L93              Difference]: Finished difference Result 1659 states and 1819 transitions.
[2020-11-24 20:01:38,129 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 20:01:38,129 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1659 states and 1819 transitions.
[2020-11-24 20:01:38,137 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 20:01:38,144 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1659 states to 1659 states and 1819 transitions.
[2020-11-24 20:01:38,144 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 778
[2020-11-24 20:01:38,145 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 778
[2020-11-24 20:01:38,145 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1659 states and 1819 transitions.
[2020-11-24 20:01:38,148 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:38,148 INFO  L728         BuchiCegarLoop]: Abstraction has 1659 states and 1819 transitions.
[2020-11-24 20:01:38,149 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1659 states and 1819 transitions.
[2020-11-24 20:01:38,166 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1659 to 1613.
[2020-11-24 20:01:38,166 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1613 states.
[2020-11-24 20:01:38,169 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1613 states to 1613 states and 1743 transitions.
[2020-11-24 20:01:38,169 INFO  L751         BuchiCegarLoop]: Abstraction has 1613 states and 1743 transitions.
[2020-11-24 20:01:38,170 INFO  L631         BuchiCegarLoop]: Abstraction has 1613 states and 1743 transitions.
[2020-11-24 20:01:38,170 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:01:38,170 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1613 states and 1743 transitions.
[2020-11-24 20:01:38,175 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:01:38,175 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:38,175 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:38,177 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:38,177 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_JUSToken0 := false;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2141]              assume null == 0;
[L2142]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2142]  RET         call this := FreshRefGenerator__success();
[L2143]              assume now >= 0;
[L2144]              assume DType[this] == JUSToken;
[L2145]              assume msgvalue_MSG == 0;
[L2146]              gas := gas - 53000;
[L2147]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2148]              assume !revert && gas >= 0;
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1257]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1261]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1262]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1263]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1264]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1198]              __var_1 := null;
[L1199]  COND FALSE  !(!(_to_s144 != null))
[L1203]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1207]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1211]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1212]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1213]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1215]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1216]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1217]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1218]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1219]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1264]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1265]  COND FALSE  !(revert)
[L1268]              success_s199 := true;
[L273]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s199 == true && allowance_JUSToken[this][_from_s199][msgsender_MSG] == old(allowance_JUSToken[this][_from_s199][msgsender_MSG]) - _value_s199) && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this])) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this])) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2])) && name_JUSToken[this] == old(name_JUSToken[this])) && symbol_JUSToken[this] == old(symbol_JUSToken[this])) && decimals_JUSToken[this] == old(decimals_JUSToken[this]));
[L3]                 revert := revert_hold;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1257]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1261]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1262]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1263]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1264]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1198]              __var_1 := null;
[L1199]  COND FALSE  !(!(_to_s144 != null))
[L1203]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1207]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1211]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1212]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1213]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1215]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1216]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1217]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1218]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1219]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1264]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1265]  COND FALSE  !(revert)
[L1268]              success_s199 := true;
[L273]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s199 == true && allowance_JUSToken[this][_from_s199][msgsender_MSG] == old(allowance_JUSToken[this][_from_s199][msgsender_MSG]) - _value_s199) && totalSupply_JUSToken[this] == old(totalSupply_JUSToken[this])) && balanceOf_JUSToken[this] == old(balanceOf_JUSToken[this])) && allowance_JUSToken[this][p1][p2] == old(allowance_JUSToken[this][p1][p2])) && name_JUSToken[this] == old(name_JUSToken[this])) && symbol_JUSToken[this] == old(symbol_JUSToken[this])) && decimals_JUSToken[this] == old(decimals_JUSToken[this]));
[L3]                 revert := revert_hold;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:38,180 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:38,180 INFO  L82        PathProgramCache]: Analyzing trace with hash 1455545923, now seen corresponding path program 1 times
[2020-11-24 20:01:38,181 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:38,194 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:38,294 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:38,294 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:38,294 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-24 20:01:38,295 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:38,295 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 20:01:38,295 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=234, Unknown=0, NotChecked=0, Total=272
[2020-11-24 20:01:38,295 INFO  L87              Difference]: Start difference. First operand 1613 states and 1743 transitions. cyclomatic complexity: 134 Second operand 17 states.
[2020-11-24 20:01:39,466 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:39,466 INFO  L93              Difference]: Finished difference Result 1669 states and 1853 transitions.
[2020-11-24 20:01:39,466 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 20:01:39,466 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1669 states and 1853 transitions.
[2020-11-24 20:01:39,472 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-24 20:01:39,477 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1669 states to 1669 states and 1853 transitions.
[2020-11-24 20:01:39,477 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 793
[2020-11-24 20:01:39,478 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 793
[2020-11-24 20:01:39,478 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1669 states and 1853 transitions.
[2020-11-24 20:01:39,480 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:39,480 INFO  L728         BuchiCegarLoop]: Abstraction has 1669 states and 1853 transitions.
[2020-11-24 20:01:39,481 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1669 states and 1853 transitions.
[2020-11-24 20:01:39,494 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1669 to 1629.
[2020-11-24 20:01:39,494 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1629 states.
[2020-11-24 20:01:39,496 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1629 states to 1629 states and 1759 transitions.
[2020-11-24 20:01:39,496 INFO  L751         BuchiCegarLoop]: Abstraction has 1629 states and 1759 transitions.
[2020-11-24 20:01:39,496 INFO  L631         BuchiCegarLoop]: Abstraction has 1629 states and 1759 transitions.
[2020-11-24 20:01:39,496 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:01:39,496 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1629 states and 1759 transitions.
[2020-11-24 20:01:39,499 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:01:39,499 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:39,499 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:39,500 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:39,500 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_JUSToken0 := false;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2141]              assume null == 0;
[L2142]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2142]  RET         call this := FreshRefGenerator__success();
[L2143]              assume now >= 0;
[L2144]              assume DType[this] == JUSToken;
[L2145]              assume msgvalue_MSG == 0;
[L2146]              gas := gas - 53000;
[L2147]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2148]              assume !revert && gas >= 0;
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND FALSE  !(!(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1244]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] - __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1245]              __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] := (__tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1246]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] + __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1247]  CALL        call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1172]              __var_1 := null;
[L1173]  COND TRUE   !(_to_s144 != null)
[L1174]              revert := true;
[L1247]  RET         call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1248]  COND TRUE   revert
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2151]  CALL        call CorralChoice_JUSToken(this);
[L2015]              havoc msgsender_MSG;
[L2016]              havoc msgvalue_MSG;
[L2017]              havoc choice;
[L2018]              havoc __ret_0_name;
[L2019]              havoc __ret_0_symbol;
[L2020]              havoc __ret_0_decimals;
[L2021]              havoc __ret_0_totalSupply;
[L2022]              havoc arg352_s0;
[L2023]              havoc __ret_0_balanceOf;
[L2024]              havoc arg353_s0;
[L2025]              havoc arg354_s0;
[L2026]              havoc __ret_0_allowance;
[L2027]              havoc _to_s159;
[L2028]              havoc _value_s159;
[L2029]              havoc _from_s199;
[L2030]              havoc _to_s199;
[L2031]              havoc _value_s199;
[L2032]              havoc success_s199;
[L2033]              havoc _spender_s220;
[L2034]              havoc _value_s220;
[L2035]              havoc success_s220;
[L2036]              havoc _spender_s258;
[L2037]              havoc _value_s258;
[L2038]              havoc _extraData_s258;
[L2039]              havoc success_s258;
[L2040]              havoc _value_s294;
[L2041]              havoc success_s294;
[L2042]              havoc _from_s349;
[L2043]              havoc _value_s349;
[L2044]              havoc success_s349;
[L2045]              havoc tmpNow;
[L2046]              havoc gas;
[L2047]              assume gas > 4000000 && gas <= 8000000;
[L2048]              tmpNow := now;
[L2049]              havoc now;
[L2050]              assume now > tmpNow;
[L2051]              assume msgsender_MSG != null;
[L2052]              assume DType[msgsender_MSG] != tokenRecipient;
[L2053]              assume DType[msgsender_MSG] != JUSToken;
[L2054]              Alloc[msgsender_MSG] := true;
[L2055]  COND FALSE  !(choice == 12)
[L2061]  COND FALSE  !(choice == 11)
[L2067]  COND FALSE  !(choice == 10)
[L2073]  COND FALSE  !(choice == 9)
[L2079]  COND FALSE  !(choice == 8)
[L2085]  COND FALSE  !(choice == 7)
[L2091]  COND FALSE  !(choice == 6)
[L2098]  COND TRUE   choice == 5
[L2099]              gas := gas - 21000;
[L2100]  COND TRUE   gas >= 0
[L2101]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2102]              assume msgvalue_MSG == 0;
[L2103]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND FALSE  !(!(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1244]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] - __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1245]              __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] := (__tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1246]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] + __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1247]  CALL        call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1172]              __var_1 := null;
[L1173]  COND TRUE   !(_to_s144 != null)
[L1174]              revert := true;
[L1247]  RET         call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1248]  COND TRUE   revert
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2151]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:39,503 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:39,503 INFO  L82        PathProgramCache]: Analyzing trace with hash 700517945, now seen corresponding path program 1 times
[2020-11-24 20:01:39,503 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:39,511 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:39,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:39,579 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:39,579 INFO  L82        PathProgramCache]: Analyzing trace with hash -1034024928, now seen corresponding path program 1 times
[2020-11-24 20:01:39,579 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:39,583 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:39,587 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:39,596 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:39,596 INFO  L82        PathProgramCache]: Analyzing trace with hash -803404056, now seen corresponding path program 1 times
[2020-11-24 20:01:39,597 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:39,610 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:39,623 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 20:01:39,935 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 159
Garbage collection #1: 59 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-24 20:01:40,147 WARN  L188               SmtUtils]: Spent 178.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 108
[2020-11-24 20:01:40,339 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-24 20:01:41,227 WARN  L188               SmtUtils]: Spent 875.00 ms on a formula simplification. DAG size of input: 208 DAG size of output: 208
[2020-11-24 20:01:42,413 WARN  L188               SmtUtils]: Spent 1.18 s on a formula simplification. DAG size of input: 264 DAG size of output: 239
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-24 20:01:42,649 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 143
[2020-11-24 20:01:42,882 WARN  L188               SmtUtils]: Spent 231.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6661 to 13313
[2020-11-24 20:01:43,412 WARN  L188               SmtUtils]: Spent 521.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 225
[2020-11-24 20:01:43,648 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification that was a NOOP. DAG size: 225
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 20:01:43,872 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification. DAG size of input: 134 DAG size of output: 134
[2020-11-24 20:01:43,896 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 20:01:44,420 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 158
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 20:01:44,555 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-24 20:01:44,714 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 20:01:45,390 WARN  L188               SmtUtils]: Spent 669.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-24 20:01:46,232 WARN  L188               SmtUtils]: Spent 839.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 238
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:01:47,144 WARN  L188               SmtUtils]: Spent 896.00 ms on a formula simplification. DAG size of input: 180 DAG size of output: 163
[2020-11-24 20:01:47,779 WARN  L188               SmtUtils]: Spent 633.00 ms on a formula simplification that was a NOOP. DAG size: 302
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-24 20:01:49,244 WARN  L188               SmtUtils]: Spent 1.44 s on a formula simplification. DAG size of input: 257 DAG size of output: 245
[2020-11-24 20:01:50,831 WARN  L188               SmtUtils]: Spent 1.59 s on a formula simplification. DAG size of input: 415 DAG size of output: 404
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-24 20:01:51,452 WARN  L188               SmtUtils]: Spent 595.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 187
[2020-11-24 20:01:51,775 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:01:52,234 WARN  L188               SmtUtils]: Spent 450.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 181
[2020-11-24 20:01:52,765 WARN  L188               SmtUtils]: Spent 528.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 275
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-24 20:01:54,800 WARN  L188               SmtUtils]: Spent 2.03 s on a formula simplification. DAG size of input: 319 DAG size of output: 284
[2020-11-24 20:01:54,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:54,857 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:01:54,865 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:01:54 BasicIcfg
[2020-11-24 20:01:54,866 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:01:54,866 INFO  L168              Benchmark]: Toolchain (without parser) took 20775.19 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 945.9 MB in the beginning and 832.3 MB in the end (delta: 113.7 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,867 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,867 INFO  L168              Benchmark]: Boogie Preprocessor took 85.38 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,867 INFO  L168              Benchmark]: UtopiaSpecLang took 54.38 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,868 INFO  L168              Benchmark]: Boogie Printer took 11.42 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,868 INFO  L168              Benchmark]: RCFGBuilder took 632.46 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,868 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.88 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 861.8 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,869 INFO  L168              Benchmark]: BÃ¼chi Program Product took 969.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Free memory was 861.8 MB in the beginning and 873.7 MB in the end (delta: -11.9 MB). Peak memory consumption was 145.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,869 INFO  L168              Benchmark]: BlockEncodingV2 took 67.25 ms. Allocated memory is still 1.1 GB. Free memory was 873.7 MB in the beginning and 839.4 MB in the end (delta: 34.3 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,870 INFO  L168              Benchmark]: BuchiAutomizer took 18910.69 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 839.4 MB in the beginning and 832.3 MB in the end (delta: 7.1 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-24 20:01:54,874 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1870 locations, 3134 edges
  - StatisticsResult: Encoded RCFG
    1852 locations, 3091 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 85.38 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.38 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.42 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 632.46 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.88 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 861.8 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 969.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Free memory was 861.8 MB in the beginning and 873.7 MB in the end (delta: -11.9 MB). Peak memory consumption was 145.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 67.25 ms. Allocated memory is still 1.1 GB. Free memory was 873.7 MB in the beginning and 839.4 MB in the end (delta: 34.3 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 18910.69 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 839.4 MB in the beginning and 832.3 MB in the end (delta: 7.1 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    802 locations, 974 edges
  - StatisticsResult: BuchiProgram size
    1870 locations, 3134 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 1629 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 18.8s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 15.7s. Construction of modules took 1.9s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 450 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1629 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6384 SDtfs, 7379 SDslu, 13896 SDs, 0 SdLazy, 24170 SolverSat, 1528 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(400000011) = (new JUSToken)({from : 400000006});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1136]              assume msgsender_MSG != null;
[L1137]              Balance[this] := 0;
[L1138]              name_JUSToken[this] := 34996628;
[L1139]              symbol_JUSToken[this] := -1545090883;
[L1140]              decimals_JUSToken[this] := 18;
[L1141]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1142]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1143]              sum_balanceOf0[this] := 0;
[L1144]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1145]              sum_allowance1[this] := 0;
[L1147]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1148]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1149]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1162]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1163]  COND FALSE  !(revert)
[L163]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume !revert && gas >= 0;
[L2147]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
JUSToken(400000011).transferFrom~address~address~uint256.gas(3979002)({from : 400000010, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND FALSE  !(!(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1244]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] - __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1245]              __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] := (__tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1246]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] + __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1247]  CALL        call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1172]              __var_1 := null;
[L1173]  COND TRUE   !(_to_s144 != null)
[L1174]              revert := true;
[L1247]  RET         call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1248]  COND TRUE   revert
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);

Loop:
JUSToken(400000011).transferFrom~address~address~uint256.gas(3979001)({from : 400000008, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s199 || p2 != msgsender_MSG) && _from_s199 == _to_s199) && _value_s199 <= balanceOf_JUSToken[this][_from_s199]) && _value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_JUSToken0 := true;
[L3]                 call_transferFrom_JUSToken0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_JUSToken := name_JUSToken;
[L265]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L266]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L267]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L268]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L269]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L270]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1240]  COND FALSE  !(!(_value_s199 <= __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1244]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] - __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1245]              __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] := (__tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1246]              __tmp__sum_allowance1[_from_s199] := __tmp__sum_allowance1[_from_s199] + __tmp__allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1247]  CALL        call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1172]              __var_1 := null;
[L1173]  COND TRUE   !(_to_s144 != null)
[L1174]              revert := true;
[L1247]  RET         call _transfer~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1248]  COND TRUE   revert
[L270]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L271]               assume revert || gas < 0;
[L2103]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
